//This file was generated by genGLFL.py. Do not edit.

#ifndef GLFL_GL_H
#define GLFL_GL_H 1

#define __gl_h_ 1

#include <stddef.h>

#include <KHR/khrplatform.h>

#ifndef GLEXT_64_TYPES_DEFINED
/* This code block is duplicated in glxext.h, so must be protected */
#define GLEXT_64_TYPES_DEFINED
/* Define int32_t, int64_t, and uint64_t types for UST/MSC */
/* (as used in the GL_EXT_timer_query extension). */
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
#include <inttypes.h>
#elif defined(__sun__) || defined(__digital__)
#include <inttypes.h>
#if defined(__STDC__)
#if defined(__arch64__) || defined(_LP64)
typedef long int int64_t;
typedef unsigned long int uint64_t;
#else
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#endif /* __arch64__ */
#endif /* __STDC__ */
#elif defined( __VMS ) || defined(__sgi)
#include <inttypes.h>
#elif defined(__SCO__) || defined(__USLC__)
#include <stdint.h>
#elif defined(__UNIXOS2__) || defined(__SOL64__)
typedef long int int32_t;
typedef long long int int64_t;
typedef unsigned long long int uint64_t;
#elif defined(_WIN32) && defined(__GNUC__)
#include <stdint.h>
#elif defined(_WIN32)
typedef __int32 int32_t;
typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#else
/* Fallback if nothing above works */
#include <inttypes.h>
#endif
#endif

#ifndef GLenum_DEFINED
#define GLenum_DEFINED
typedef unsigned int GLenum;
#endif

#ifndef GLboolean_DEFINED
#define GLboolean_DEFINED
typedef unsigned char GLboolean;
#endif

#ifndef GLbitfield_DEFINED
#define GLbitfield_DEFINED
typedef unsigned int GLbitfield;
#endif

#ifndef GLvoid_DEFINED
#define GLvoid_DEFINED
typedef void GLvoid;
#endif

#ifndef GLbyte_DEFINED
#define GLbyte_DEFINED
typedef signed char GLbyte;
#endif

#ifndef GLshort_DEFINED
#define GLshort_DEFINED
typedef short GLshort;
#endif

#ifndef GLint_DEFINED
#define GLint_DEFINED
typedef int GLint;
#endif

#ifndef GLclampx_DEFINED
#define GLclampx_DEFINED
typedef int GLclampx;
#endif

#ifndef GLubyte_DEFINED
#define GLubyte_DEFINED
typedef unsigned char GLubyte;
#endif

#ifndef GLushort_DEFINED
#define GLushort_DEFINED
typedef unsigned short GLushort;
#endif

#ifndef GLuint_DEFINED
#define GLuint_DEFINED
typedef unsigned int GLuint;
#endif

#ifndef GLsizei_DEFINED
#define GLsizei_DEFINED
typedef int GLsizei;
#endif

#ifndef GLfloat_DEFINED
#define GLfloat_DEFINED
typedef float GLfloat;
#endif

#ifndef GLclampf_DEFINED
#define GLclampf_DEFINED
typedef float GLclampf;
#endif

#ifndef GLdouble_DEFINED
#define GLdouble_DEFINED
typedef double GLdouble;
#endif

#ifndef GLclampd_DEFINED
#define GLclampd_DEFINED
typedef double GLclampd;
#endif

#ifndef GLeglImageOES_DEFINED
#define GLeglImageOES_DEFINED
typedef void *GLeglImageOES;
#endif

#ifndef GLchar_DEFINED
#define GLchar_DEFINED
typedef char GLchar;
#endif

#ifndef GLcharARB_DEFINED
#define GLcharARB_DEFINED
typedef char GLcharARB;
#endif

#ifndef GLhandleARB_DEFINED
#define GLhandleARB_DEFINED
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
#endif

#ifndef GLhalfARB_DEFINED
#define GLhalfARB_DEFINED
typedef unsigned short GLhalfARB;
#endif

#ifndef GLhalf_DEFINED
#define GLhalf_DEFINED
typedef unsigned short GLhalf;
#endif

#ifndef GLfixed_DEFINED
#define GLfixed_DEFINED
typedef GLint GLfixed;
#endif

#ifndef GLintptr_DEFINED
#define GLintptr_DEFINED
typedef ptrdiff_t GLintptr;
#endif

#ifndef GLsizeiptr_DEFINED
#define GLsizeiptr_DEFINED
typedef ptrdiff_t GLsizeiptr;
#endif

#ifndef GLint64_DEFINED
#define GLint64_DEFINED
typedef int64_t GLint64;
#endif

#ifndef GLuint64_DEFINED
#define GLuint64_DEFINED
typedef uint64_t GLuint64;
#endif

#ifndef GLintptrARB_DEFINED
#define GLintptrARB_DEFINED
typedef ptrdiff_t GLintptrARB;
#endif

#ifndef GLsizeiptrARB_DEFINED
#define GLsizeiptrARB_DEFINED
typedef ptrdiff_t GLsizeiptrARB;
#endif

#ifndef GLint64EXT_DEFINED
#define GLint64EXT_DEFINED
typedef int64_t GLint64EXT;
#endif

#ifndef GLuint64EXT_DEFINED
#define GLuint64EXT_DEFINED
typedef uint64_t GLuint64EXT;
#endif

#ifndef GLsync_DEFINED
#define GLsync_DEFINED
typedef struct __GLsync *GLsync;
#endif

#ifndef GLDEBUGPROC_DEFINED
#define GLDEBUGPROC_DEFINED
typedef void ( *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
#endif

#ifndef GLDEBUGPROCARB_DEFINED
#define GLDEBUGPROCARB_DEFINED
typedef void ( *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
#endif

#ifndef GLDEBUGPROCKHR_DEFINED
#define GLDEBUGPROCKHR_DEFINED
typedef void ( *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
#endif

#ifndef GLclampx_DEFINED
#define GLclampx_DEFINED
typedef khronos_int32_t GLclampx;
#endif

#ifndef GLbyte_DEFINED
#define GLbyte_DEFINED
typedef khronos_int8_t GLbyte;
#endif

#ifndef GLubyte_DEFINED
#define GLubyte_DEFINED
typedef khronos_uint8_t GLubyte;
#endif

#ifndef GLfloat_DEFINED
#define GLfloat_DEFINED
typedef khronos_float_t GLfloat;
#endif

#ifndef GLclampf_DEFINED
#define GLclampf_DEFINED
typedef khronos_float_t GLclampf;
#endif

#ifndef GLfixed_DEFINED
#define GLfixed_DEFINED
typedef khronos_int32_t GLfixed;
#endif

#ifndef GLint64_DEFINED
#define GLint64_DEFINED
typedef khronos_int64_t GLint64;
#endif

#ifndef GLuint64_DEFINED
#define GLuint64_DEFINED
typedef khronos_uint64_t GLuint64;
#endif

#ifndef GLintptr_DEFINED
#define GLintptr_DEFINED
typedef khronos_intptr_t GLintptr;
#endif

#ifndef GLsizeiptr_DEFINED
#define GLsizeiptr_DEFINED
typedef khronos_ssize_t GLsizeiptr;
#endif

#ifndef GLbyte_DEFINED
#define GLbyte_DEFINED
typedef khronos_int8_t GLbyte;
#endif

#ifndef GLubyte_DEFINED
#define GLubyte_DEFINED
typedef khronos_uint8_t GLubyte;
#endif

#ifndef GLfloat_DEFINED
#define GLfloat_DEFINED
typedef khronos_float_t GLfloat;
#endif

#ifndef GLclampf_DEFINED
#define GLclampf_DEFINED
typedef khronos_float_t GLclampf;
#endif

#ifndef GLfixed_DEFINED
#define GLfixed_DEFINED
typedef khronos_int32_t GLfixed;
#endif

#ifndef GLint64_DEFINED
#define GLint64_DEFINED
typedef khronos_int64_t GLint64;
#endif

#ifndef GLuint64_DEFINED
#define GLuint64_DEFINED
typedef khronos_uint64_t GLuint64;
#endif

#ifndef GLint64EXT_DEFINED
#define GLint64EXT_DEFINED
typedef khronos_int64_t GLint64EXT;
#endif

#ifndef GLuint64EXT_DEFINED
#define GLuint64EXT_DEFINED
typedef khronos_uint64_t GLuint64EXT;
#endif

#ifndef GLintptr_DEFINED
#define GLintptr_DEFINED
typedef khronos_intptr_t GLintptr;
#endif

#ifndef GLsizeiptr_DEFINED
#define GLsizeiptr_DEFINED
typedef khronos_ssize_t GLsizeiptr;
#endif

#ifndef GLDEBUGPROCAMD_DEFINED
#define GLDEBUGPROCAMD_DEFINED
typedef void ( *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
#endif

#ifndef GLhalfNV_DEFINED
#define GLhalfNV_DEFINED
typedef unsigned short GLhalfNV;
#endif

#ifndef GLvdpauSurfaceNV_DEFINED
#define GLvdpauSurfaceNV_DEFINED
typedef GLintptr GLvdpauSurfaceNV;
#endif

#ifndef GL_VERSION_1_0
#define GL_VERSION_1_0 1
#endif

#ifdef glCullFace
#undef glCullFace
#endif
#ifdef PFNGLCULLFACEPROC
#undef PFNGLCULLFACEPROC
#endif
typedef void  (*PFNGLCULLFACEPROC)(GLenum mode);

#ifdef glFrontFace
#undef glFrontFace
#endif
#ifdef PFNGLFRONTFACEPROC
#undef PFNGLFRONTFACEPROC
#endif
typedef void  (*PFNGLFRONTFACEPROC)(GLenum mode);

#ifdef glHint
#undef glHint
#endif
#ifdef PFNGLHINTPROC
#undef PFNGLHINTPROC
#endif
typedef void  (*PFNGLHINTPROC)(GLenum target, GLenum mode);

#ifdef glLineWidth
#undef glLineWidth
#endif
#ifdef PFNGLLINEWIDTHPROC
#undef PFNGLLINEWIDTHPROC
#endif
typedef void  (*PFNGLLINEWIDTHPROC)(GLfloat width);

#ifdef glPointSize
#undef glPointSize
#endif
#ifdef PFNGLPOINTSIZEPROC
#undef PFNGLPOINTSIZEPROC
#endif
typedef void  (*PFNGLPOINTSIZEPROC)(GLfloat size);

#ifdef glPolygonMode
#undef glPolygonMode
#endif
#ifdef PFNGLPOLYGONMODEPROC
#undef PFNGLPOLYGONMODEPROC
#endif
typedef void  (*PFNGLPOLYGONMODEPROC)(GLenum face, GLenum mode);

#ifdef glScissor
#undef glScissor
#endif
#ifdef PFNGLSCISSORPROC
#undef PFNGLSCISSORPROC
#endif
typedef void  (*PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glTexParameterf
#undef glTexParameterf
#endif
#ifdef PFNGLTEXPARAMETERFPROC
#undef PFNGLTEXPARAMETERFPROC
#endif
typedef void  (*PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);

#ifdef glTexParameterfv
#undef glTexParameterfv
#endif
#ifdef PFNGLTEXPARAMETERFVPROC
#undef PFNGLTEXPARAMETERFVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glTexParameteri
#undef glTexParameteri
#endif
#ifdef PFNGLTEXPARAMETERIPROC
#undef PFNGLTEXPARAMETERIPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glTexParameteriv
#undef glTexParameteriv
#endif
#ifdef PFNGLTEXPARAMETERIVPROC
#undef PFNGLTEXPARAMETERIVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexImage1D
#undef glTexImage1D
#endif
#ifdef PFNGLTEXIMAGE1DPROC
#undef PFNGLTEXIMAGE1DPROC
#endif
typedef void  (*PFNGLTEXIMAGE1DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTexImage2D
#undef glTexImage2D
#endif
#ifdef PFNGLTEXIMAGE2DPROC
#undef PFNGLTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glDrawBuffer
#undef glDrawBuffer
#endif
#ifdef PFNGLDRAWBUFFERPROC
#undef PFNGLDRAWBUFFERPROC
#endif
typedef void  (*PFNGLDRAWBUFFERPROC)(GLenum buf);

#ifdef glClear
#undef glClear
#endif
#ifdef PFNGLCLEARPROC
#undef PFNGLCLEARPROC
#endif
typedef void  (*PFNGLCLEARPROC)(GLbitfield mask);

#ifdef glClearColor
#undef glClearColor
#endif
#ifdef PFNGLCLEARCOLORPROC
#undef PFNGLCLEARCOLORPROC
#endif
typedef void  (*PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glClearStencil
#undef glClearStencil
#endif
#ifdef PFNGLCLEARSTENCILPROC
#undef PFNGLCLEARSTENCILPROC
#endif
typedef void  (*PFNGLCLEARSTENCILPROC)(GLint s);

#ifdef glClearDepth
#undef glClearDepth
#endif
#ifdef PFNGLCLEARDEPTHPROC
#undef PFNGLCLEARDEPTHPROC
#endif
typedef void  (*PFNGLCLEARDEPTHPROC)(GLdouble depth);

#ifdef glStencilMask
#undef glStencilMask
#endif
#ifdef PFNGLSTENCILMASKPROC
#undef PFNGLSTENCILMASKPROC
#endif
typedef void  (*PFNGLSTENCILMASKPROC)(GLuint mask);

#ifdef glColorMask
#undef glColorMask
#endif
#ifdef PFNGLCOLORMASKPROC
#undef PFNGLCOLORMASKPROC
#endif
typedef void  (*PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);

#ifdef glDepthMask
#undef glDepthMask
#endif
#ifdef PFNGLDEPTHMASKPROC
#undef PFNGLDEPTHMASKPROC
#endif
typedef void  (*PFNGLDEPTHMASKPROC)(GLboolean flag);

#ifdef glDisable
#undef glDisable
#endif
#ifdef PFNGLDISABLEPROC
#undef PFNGLDISABLEPROC
#endif
typedef void  (*PFNGLDISABLEPROC)(GLenum cap);

#ifdef glEnable
#undef glEnable
#endif
#ifdef PFNGLENABLEPROC
#undef PFNGLENABLEPROC
#endif
typedef void  (*PFNGLENABLEPROC)(GLenum cap);

#ifdef glFinish
#undef glFinish
#endif
#ifdef PFNGLFINISHPROC
#undef PFNGLFINISHPROC
#endif
typedef void  (*PFNGLFINISHPROC)(void);

#ifdef glFlush
#undef glFlush
#endif
#ifdef PFNGLFLUSHPROC
#undef PFNGLFLUSHPROC
#endif
typedef void  (*PFNGLFLUSHPROC)(void);

#ifdef glBlendFunc
#undef glBlendFunc
#endif
#ifdef PFNGLBLENDFUNCPROC
#undef PFNGLBLENDFUNCPROC
#endif
typedef void  (*PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);

#ifdef glLogicOp
#undef glLogicOp
#endif
#ifdef PFNGLLOGICOPPROC
#undef PFNGLLOGICOPPROC
#endif
typedef void  (*PFNGLLOGICOPPROC)(GLenum opcode);

#ifdef glStencilFunc
#undef glStencilFunc
#endif
#ifdef PFNGLSTENCILFUNCPROC
#undef PFNGLSTENCILFUNCPROC
#endif
typedef void  (*PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);

#ifdef glStencilOp
#undef glStencilOp
#endif
#ifdef PFNGLSTENCILOPPROC
#undef PFNGLSTENCILOPPROC
#endif
typedef void  (*PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);

#ifdef glDepthFunc
#undef glDepthFunc
#endif
#ifdef PFNGLDEPTHFUNCPROC
#undef PFNGLDEPTHFUNCPROC
#endif
typedef void  (*PFNGLDEPTHFUNCPROC)(GLenum func);

#ifdef glPixelStoref
#undef glPixelStoref
#endif
#ifdef PFNGLPIXELSTOREFPROC
#undef PFNGLPIXELSTOREFPROC
#endif
typedef void  (*PFNGLPIXELSTOREFPROC)(GLenum pname, GLfloat param);

#ifdef glPixelStorei
#undef glPixelStorei
#endif
#ifdef PFNGLPIXELSTOREIPROC
#undef PFNGLPIXELSTOREIPROC
#endif
typedef void  (*PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);

#ifdef glReadBuffer
#undef glReadBuffer
#endif
#ifdef PFNGLREADBUFFERPROC
#undef PFNGLREADBUFFERPROC
#endif
typedef void  (*PFNGLREADBUFFERPROC)(GLenum src);

#ifdef glReadPixels
#undef glReadPixels
#endif
#ifdef PFNGLREADPIXELSPROC
#undef PFNGLREADPIXELSPROC
#endif
typedef void  (*PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);

#ifdef glGetBooleanv
#undef glGetBooleanv
#endif
#ifdef PFNGLGETBOOLEANVPROC
#undef PFNGLGETBOOLEANVPROC
#endif
typedef void  (*PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean *data);

#ifdef glGetDoublev
#undef glGetDoublev
#endif
#ifdef PFNGLGETDOUBLEVPROC
#undef PFNGLGETDOUBLEVPROC
#endif
typedef void  (*PFNGLGETDOUBLEVPROC)(GLenum pname, GLdouble *data);

#ifdef glGetError
#undef glGetError
#endif
#ifdef PFNGLGETERRORPROC
#undef PFNGLGETERRORPROC
#endif
typedef GLenum  (*PFNGLGETERRORPROC)(void);

#ifdef glGetFloatv
#undef glGetFloatv
#endif
#ifdef PFNGLGETFLOATVPROC
#undef PFNGLGETFLOATVPROC
#endif
typedef void  (*PFNGLGETFLOATVPROC)(GLenum pname, GLfloat *data);

#ifdef glGetIntegerv
#undef glGetIntegerv
#endif
#ifdef PFNGLGETINTEGERVPROC
#undef PFNGLGETINTEGERVPROC
#endif
typedef void  (*PFNGLGETINTEGERVPROC)(GLenum pname, GLint *data);

#ifdef glGetString
#undef glGetString
#endif
#ifdef PFNGLGETSTRINGPROC
#undef PFNGLGETSTRINGPROC
#endif
typedef const GLubyte * (*PFNGLGETSTRINGPROC)(GLenum name);

#ifdef glGetTexImage
#undef glGetTexImage
#endif
#ifdef PFNGLGETTEXIMAGEPROC
#undef PFNGLGETTEXIMAGEPROC
#endif
typedef void  (*PFNGLGETTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);

#ifdef glGetTexParameterfv
#undef glGetTexParameterfv
#endif
#ifdef PFNGLGETTEXPARAMETERFVPROC
#undef PFNGLGETTEXPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetTexParameteriv
#undef glGetTexParameteriv
#endif
#ifdef PFNGLGETTEXPARAMETERIVPROC
#undef PFNGLGETTEXPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetTexLevelParameterfv
#undef glGetTexLevelParameterfv
#endif
#ifdef PFNGLGETTEXLEVELPARAMETERFVPROC
#undef PFNGLGETTEXLEVELPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat *params);

#ifdef glGetTexLevelParameteriv
#undef glGetTexLevelParameteriv
#endif
#ifdef PFNGLGETTEXLEVELPARAMETERIVPROC
#undef PFNGLGETTEXLEVELPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint *params);

#ifdef glIsEnabled
#undef glIsEnabled
#endif
#ifdef PFNGLISENABLEDPROC
#undef PFNGLISENABLEDPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDPROC)(GLenum cap);

#ifdef glDepthRange
#undef glDepthRange
#endif
#ifdef PFNGLDEPTHRANGEPROC
#undef PFNGLDEPTHRANGEPROC
#endif
typedef void  (*PFNGLDEPTHRANGEPROC)(GLdouble near, GLdouble far);

#ifdef glViewport
#undef glViewport
#endif
#ifdef PFNGLVIEWPORTPROC
#undef PFNGLVIEWPORTPROC
#endif
typedef void  (*PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glNewList
#undef glNewList
#endif
#ifdef PFNGLNEWLISTPROC
#undef PFNGLNEWLISTPROC
#endif
typedef void  (*PFNGLNEWLISTPROC)(GLuint list, GLenum mode);

#ifdef glEndList
#undef glEndList
#endif
#ifdef PFNGLENDLISTPROC
#undef PFNGLENDLISTPROC
#endif
typedef void  (*PFNGLENDLISTPROC)(void);

#ifdef glCallList
#undef glCallList
#endif
#ifdef PFNGLCALLLISTPROC
#undef PFNGLCALLLISTPROC
#endif
typedef void  (*PFNGLCALLLISTPROC)(GLuint list);

#ifdef glCallLists
#undef glCallLists
#endif
#ifdef PFNGLCALLLISTSPROC
#undef PFNGLCALLLISTSPROC
#endif
typedef void  (*PFNGLCALLLISTSPROC)(GLsizei n, GLenum type, const void *lists);

#ifdef glDeleteLists
#undef glDeleteLists
#endif
#ifdef PFNGLDELETELISTSPROC
#undef PFNGLDELETELISTSPROC
#endif
typedef void  (*PFNGLDELETELISTSPROC)(GLuint list, GLsizei range);

#ifdef glGenLists
#undef glGenLists
#endif
#ifdef PFNGLGENLISTSPROC
#undef PFNGLGENLISTSPROC
#endif
typedef GLuint  (*PFNGLGENLISTSPROC)(GLsizei range);

#ifdef glListBase
#undef glListBase
#endif
#ifdef PFNGLLISTBASEPROC
#undef PFNGLLISTBASEPROC
#endif
typedef void  (*PFNGLLISTBASEPROC)(GLuint base);

#ifdef glBegin
#undef glBegin
#endif
#ifdef PFNGLBEGINPROC
#undef PFNGLBEGINPROC
#endif
typedef void  (*PFNGLBEGINPROC)(GLenum mode);

#ifdef glBitmap
#undef glBitmap
#endif
#ifdef PFNGLBITMAPPROC
#undef PFNGLBITMAPPROC
#endif
typedef void  (*PFNGLBITMAPPROC)(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);

#ifdef glColor3b
#undef glColor3b
#endif
#ifdef PFNGLCOLOR3BPROC
#undef PFNGLCOLOR3BPROC
#endif
typedef void  (*PFNGLCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);

#ifdef glColor3bv
#undef glColor3bv
#endif
#ifdef PFNGLCOLOR3BVPROC
#undef PFNGLCOLOR3BVPROC
#endif
typedef void  (*PFNGLCOLOR3BVPROC)(const GLbyte *v);

#ifdef glColor3d
#undef glColor3d
#endif
#ifdef PFNGLCOLOR3DPROC
#undef PFNGLCOLOR3DPROC
#endif
typedef void  (*PFNGLCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);

#ifdef glColor3dv
#undef glColor3dv
#endif
#ifdef PFNGLCOLOR3DVPROC
#undef PFNGLCOLOR3DVPROC
#endif
typedef void  (*PFNGLCOLOR3DVPROC)(const GLdouble *v);

#ifdef glColor3f
#undef glColor3f
#endif
#ifdef PFNGLCOLOR3FPROC
#undef PFNGLCOLOR3FPROC
#endif
typedef void  (*PFNGLCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);

#ifdef glColor3fv
#undef glColor3fv
#endif
#ifdef PFNGLCOLOR3FVPROC
#undef PFNGLCOLOR3FVPROC
#endif
typedef void  (*PFNGLCOLOR3FVPROC)(const GLfloat *v);

#ifdef glColor3i
#undef glColor3i
#endif
#ifdef PFNGLCOLOR3IPROC
#undef PFNGLCOLOR3IPROC
#endif
typedef void  (*PFNGLCOLOR3IPROC)(GLint red, GLint green, GLint blue);

#ifdef glColor3iv
#undef glColor3iv
#endif
#ifdef PFNGLCOLOR3IVPROC
#undef PFNGLCOLOR3IVPROC
#endif
typedef void  (*PFNGLCOLOR3IVPROC)(const GLint *v);

#ifdef glColor3s
#undef glColor3s
#endif
#ifdef PFNGLCOLOR3SPROC
#undef PFNGLCOLOR3SPROC
#endif
typedef void  (*PFNGLCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);

#ifdef glColor3sv
#undef glColor3sv
#endif
#ifdef PFNGLCOLOR3SVPROC
#undef PFNGLCOLOR3SVPROC
#endif
typedef void  (*PFNGLCOLOR3SVPROC)(const GLshort *v);

#ifdef glColor3ub
#undef glColor3ub
#endif
#ifdef PFNGLCOLOR3UBPROC
#undef PFNGLCOLOR3UBPROC
#endif
typedef void  (*PFNGLCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);

#ifdef glColor3ubv
#undef glColor3ubv
#endif
#ifdef PFNGLCOLOR3UBVPROC
#undef PFNGLCOLOR3UBVPROC
#endif
typedef void  (*PFNGLCOLOR3UBVPROC)(const GLubyte *v);

#ifdef glColor3ui
#undef glColor3ui
#endif
#ifdef PFNGLCOLOR3UIPROC
#undef PFNGLCOLOR3UIPROC
#endif
typedef void  (*PFNGLCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);

#ifdef glColor3uiv
#undef glColor3uiv
#endif
#ifdef PFNGLCOLOR3UIVPROC
#undef PFNGLCOLOR3UIVPROC
#endif
typedef void  (*PFNGLCOLOR3UIVPROC)(const GLuint *v);

#ifdef glColor3us
#undef glColor3us
#endif
#ifdef PFNGLCOLOR3USPROC
#undef PFNGLCOLOR3USPROC
#endif
typedef void  (*PFNGLCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);

#ifdef glColor3usv
#undef glColor3usv
#endif
#ifdef PFNGLCOLOR3USVPROC
#undef PFNGLCOLOR3USVPROC
#endif
typedef void  (*PFNGLCOLOR3USVPROC)(const GLushort *v);

#ifdef glColor4b
#undef glColor4b
#endif
#ifdef PFNGLCOLOR4BPROC
#undef PFNGLCOLOR4BPROC
#endif
typedef void  (*PFNGLCOLOR4BPROC)(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);

#ifdef glColor4bv
#undef glColor4bv
#endif
#ifdef PFNGLCOLOR4BVPROC
#undef PFNGLCOLOR4BVPROC
#endif
typedef void  (*PFNGLCOLOR4BVPROC)(const GLbyte *v);

#ifdef glColor4d
#undef glColor4d
#endif
#ifdef PFNGLCOLOR4DPROC
#undef PFNGLCOLOR4DPROC
#endif
typedef void  (*PFNGLCOLOR4DPROC)(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);

#ifdef glColor4dv
#undef glColor4dv
#endif
#ifdef PFNGLCOLOR4DVPROC
#undef PFNGLCOLOR4DVPROC
#endif
typedef void  (*PFNGLCOLOR4DVPROC)(const GLdouble *v);

#ifdef glColor4f
#undef glColor4f
#endif
#ifdef PFNGLCOLOR4FPROC
#undef PFNGLCOLOR4FPROC
#endif
typedef void  (*PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glColor4fv
#undef glColor4fv
#endif
#ifdef PFNGLCOLOR4FVPROC
#undef PFNGLCOLOR4FVPROC
#endif
typedef void  (*PFNGLCOLOR4FVPROC)(const GLfloat *v);

#ifdef glColor4i
#undef glColor4i
#endif
#ifdef PFNGLCOLOR4IPROC
#undef PFNGLCOLOR4IPROC
#endif
typedef void  (*PFNGLCOLOR4IPROC)(GLint red, GLint green, GLint blue, GLint alpha);

#ifdef glColor4iv
#undef glColor4iv
#endif
#ifdef PFNGLCOLOR4IVPROC
#undef PFNGLCOLOR4IVPROC
#endif
typedef void  (*PFNGLCOLOR4IVPROC)(const GLint *v);

#ifdef glColor4s
#undef glColor4s
#endif
#ifdef PFNGLCOLOR4SPROC
#undef PFNGLCOLOR4SPROC
#endif
typedef void  (*PFNGLCOLOR4SPROC)(GLshort red, GLshort green, GLshort blue, GLshort alpha);

#ifdef glColor4sv
#undef glColor4sv
#endif
#ifdef PFNGLCOLOR4SVPROC
#undef PFNGLCOLOR4SVPROC
#endif
typedef void  (*PFNGLCOLOR4SVPROC)(const GLshort *v);

#ifdef glColor4ub
#undef glColor4ub
#endif
#ifdef PFNGLCOLOR4UBPROC
#undef PFNGLCOLOR4UBPROC
#endif
typedef void  (*PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);

#ifdef glColor4ubv
#undef glColor4ubv
#endif
#ifdef PFNGLCOLOR4UBVPROC
#undef PFNGLCOLOR4UBVPROC
#endif
typedef void  (*PFNGLCOLOR4UBVPROC)(const GLubyte *v);

#ifdef glColor4ui
#undef glColor4ui
#endif
#ifdef PFNGLCOLOR4UIPROC
#undef PFNGLCOLOR4UIPROC
#endif
typedef void  (*PFNGLCOLOR4UIPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);

#ifdef glColor4uiv
#undef glColor4uiv
#endif
#ifdef PFNGLCOLOR4UIVPROC
#undef PFNGLCOLOR4UIVPROC
#endif
typedef void  (*PFNGLCOLOR4UIVPROC)(const GLuint *v);

#ifdef glColor4us
#undef glColor4us
#endif
#ifdef PFNGLCOLOR4USPROC
#undef PFNGLCOLOR4USPROC
#endif
typedef void  (*PFNGLCOLOR4USPROC)(GLushort red, GLushort green, GLushort blue, GLushort alpha);

#ifdef glColor4usv
#undef glColor4usv
#endif
#ifdef PFNGLCOLOR4USVPROC
#undef PFNGLCOLOR4USVPROC
#endif
typedef void  (*PFNGLCOLOR4USVPROC)(const GLushort *v);

#ifdef glEdgeFlag
#undef glEdgeFlag
#endif
#ifdef PFNGLEDGEFLAGPROC
#undef PFNGLEDGEFLAGPROC
#endif
typedef void  (*PFNGLEDGEFLAGPROC)(GLboolean flag);

#ifdef glEdgeFlagv
#undef glEdgeFlagv
#endif
#ifdef PFNGLEDGEFLAGVPROC
#undef PFNGLEDGEFLAGVPROC
#endif
typedef void  (*PFNGLEDGEFLAGVPROC)(const GLboolean *flag);

#ifdef glEnd
#undef glEnd
#endif
#ifdef PFNGLENDPROC
#undef PFNGLENDPROC
#endif
typedef void  (*PFNGLENDPROC)(void);

#ifdef glIndexd
#undef glIndexd
#endif
#ifdef PFNGLINDEXDPROC
#undef PFNGLINDEXDPROC
#endif
typedef void  (*PFNGLINDEXDPROC)(GLdouble c);

#ifdef glIndexdv
#undef glIndexdv
#endif
#ifdef PFNGLINDEXDVPROC
#undef PFNGLINDEXDVPROC
#endif
typedef void  (*PFNGLINDEXDVPROC)(const GLdouble *c);

#ifdef glIndexf
#undef glIndexf
#endif
#ifdef PFNGLINDEXFPROC
#undef PFNGLINDEXFPROC
#endif
typedef void  (*PFNGLINDEXFPROC)(GLfloat c);

#ifdef glIndexfv
#undef glIndexfv
#endif
#ifdef PFNGLINDEXFVPROC
#undef PFNGLINDEXFVPROC
#endif
typedef void  (*PFNGLINDEXFVPROC)(const GLfloat *c);

#ifdef glIndexi
#undef glIndexi
#endif
#ifdef PFNGLINDEXIPROC
#undef PFNGLINDEXIPROC
#endif
typedef void  (*PFNGLINDEXIPROC)(GLint c);

#ifdef glIndexiv
#undef glIndexiv
#endif
#ifdef PFNGLINDEXIVPROC
#undef PFNGLINDEXIVPROC
#endif
typedef void  (*PFNGLINDEXIVPROC)(const GLint *c);

#ifdef glIndexs
#undef glIndexs
#endif
#ifdef PFNGLINDEXSPROC
#undef PFNGLINDEXSPROC
#endif
typedef void  (*PFNGLINDEXSPROC)(GLshort c);

#ifdef glIndexsv
#undef glIndexsv
#endif
#ifdef PFNGLINDEXSVPROC
#undef PFNGLINDEXSVPROC
#endif
typedef void  (*PFNGLINDEXSVPROC)(const GLshort *c);

#ifdef glNormal3b
#undef glNormal3b
#endif
#ifdef PFNGLNORMAL3BPROC
#undef PFNGLNORMAL3BPROC
#endif
typedef void  (*PFNGLNORMAL3BPROC)(GLbyte nx, GLbyte ny, GLbyte nz);

#ifdef glNormal3bv
#undef glNormal3bv
#endif
#ifdef PFNGLNORMAL3BVPROC
#undef PFNGLNORMAL3BVPROC
#endif
typedef void  (*PFNGLNORMAL3BVPROC)(const GLbyte *v);

#ifdef glNormal3d
#undef glNormal3d
#endif
#ifdef PFNGLNORMAL3DPROC
#undef PFNGLNORMAL3DPROC
#endif
typedef void  (*PFNGLNORMAL3DPROC)(GLdouble nx, GLdouble ny, GLdouble nz);

#ifdef glNormal3dv
#undef glNormal3dv
#endif
#ifdef PFNGLNORMAL3DVPROC
#undef PFNGLNORMAL3DVPROC
#endif
typedef void  (*PFNGLNORMAL3DVPROC)(const GLdouble *v);

#ifdef glNormal3f
#undef glNormal3f
#endif
#ifdef PFNGLNORMAL3FPROC
#undef PFNGLNORMAL3FPROC
#endif
typedef void  (*PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);

#ifdef glNormal3fv
#undef glNormal3fv
#endif
#ifdef PFNGLNORMAL3FVPROC
#undef PFNGLNORMAL3FVPROC
#endif
typedef void  (*PFNGLNORMAL3FVPROC)(const GLfloat *v);

#ifdef glNormal3i
#undef glNormal3i
#endif
#ifdef PFNGLNORMAL3IPROC
#undef PFNGLNORMAL3IPROC
#endif
typedef void  (*PFNGLNORMAL3IPROC)(GLint nx, GLint ny, GLint nz);

#ifdef glNormal3iv
#undef glNormal3iv
#endif
#ifdef PFNGLNORMAL3IVPROC
#undef PFNGLNORMAL3IVPROC
#endif
typedef void  (*PFNGLNORMAL3IVPROC)(const GLint *v);

#ifdef glNormal3s
#undef glNormal3s
#endif
#ifdef PFNGLNORMAL3SPROC
#undef PFNGLNORMAL3SPROC
#endif
typedef void  (*PFNGLNORMAL3SPROC)(GLshort nx, GLshort ny, GLshort nz);

#ifdef glNormal3sv
#undef glNormal3sv
#endif
#ifdef PFNGLNORMAL3SVPROC
#undef PFNGLNORMAL3SVPROC
#endif
typedef void  (*PFNGLNORMAL3SVPROC)(const GLshort *v);

#ifdef glRasterPos2d
#undef glRasterPos2d
#endif
#ifdef PFNGLRASTERPOS2DPROC
#undef PFNGLRASTERPOS2DPROC
#endif
typedef void  (*PFNGLRASTERPOS2DPROC)(GLdouble x, GLdouble y);

#ifdef glRasterPos2dv
#undef glRasterPos2dv
#endif
#ifdef PFNGLRASTERPOS2DVPROC
#undef PFNGLRASTERPOS2DVPROC
#endif
typedef void  (*PFNGLRASTERPOS2DVPROC)(const GLdouble *v);

#ifdef glRasterPos2f
#undef glRasterPos2f
#endif
#ifdef PFNGLRASTERPOS2FPROC
#undef PFNGLRASTERPOS2FPROC
#endif
typedef void  (*PFNGLRASTERPOS2FPROC)(GLfloat x, GLfloat y);

#ifdef glRasterPos2fv
#undef glRasterPos2fv
#endif
#ifdef PFNGLRASTERPOS2FVPROC
#undef PFNGLRASTERPOS2FVPROC
#endif
typedef void  (*PFNGLRASTERPOS2FVPROC)(const GLfloat *v);

#ifdef glRasterPos2i
#undef glRasterPos2i
#endif
#ifdef PFNGLRASTERPOS2IPROC
#undef PFNGLRASTERPOS2IPROC
#endif
typedef void  (*PFNGLRASTERPOS2IPROC)(GLint x, GLint y);

#ifdef glRasterPos2iv
#undef glRasterPos2iv
#endif
#ifdef PFNGLRASTERPOS2IVPROC
#undef PFNGLRASTERPOS2IVPROC
#endif
typedef void  (*PFNGLRASTERPOS2IVPROC)(const GLint *v);

#ifdef glRasterPos2s
#undef glRasterPos2s
#endif
#ifdef PFNGLRASTERPOS2SPROC
#undef PFNGLRASTERPOS2SPROC
#endif
typedef void  (*PFNGLRASTERPOS2SPROC)(GLshort x, GLshort y);

#ifdef glRasterPos2sv
#undef glRasterPos2sv
#endif
#ifdef PFNGLRASTERPOS2SVPROC
#undef PFNGLRASTERPOS2SVPROC
#endif
typedef void  (*PFNGLRASTERPOS2SVPROC)(const GLshort *v);

#ifdef glRasterPos3d
#undef glRasterPos3d
#endif
#ifdef PFNGLRASTERPOS3DPROC
#undef PFNGLRASTERPOS3DPROC
#endif
typedef void  (*PFNGLRASTERPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);

#ifdef glRasterPos3dv
#undef glRasterPos3dv
#endif
#ifdef PFNGLRASTERPOS3DVPROC
#undef PFNGLRASTERPOS3DVPROC
#endif
typedef void  (*PFNGLRASTERPOS3DVPROC)(const GLdouble *v);

#ifdef glRasterPos3f
#undef glRasterPos3f
#endif
#ifdef PFNGLRASTERPOS3FPROC
#undef PFNGLRASTERPOS3FPROC
#endif
typedef void  (*PFNGLRASTERPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifdef glRasterPos3fv
#undef glRasterPos3fv
#endif
#ifdef PFNGLRASTERPOS3FVPROC
#undef PFNGLRASTERPOS3FVPROC
#endif
typedef void  (*PFNGLRASTERPOS3FVPROC)(const GLfloat *v);

#ifdef glRasterPos3i
#undef glRasterPos3i
#endif
#ifdef PFNGLRASTERPOS3IPROC
#undef PFNGLRASTERPOS3IPROC
#endif
typedef void  (*PFNGLRASTERPOS3IPROC)(GLint x, GLint y, GLint z);

#ifdef glRasterPos3iv
#undef glRasterPos3iv
#endif
#ifdef PFNGLRASTERPOS3IVPROC
#undef PFNGLRASTERPOS3IVPROC
#endif
typedef void  (*PFNGLRASTERPOS3IVPROC)(const GLint *v);

#ifdef glRasterPos3s
#undef glRasterPos3s
#endif
#ifdef PFNGLRASTERPOS3SPROC
#undef PFNGLRASTERPOS3SPROC
#endif
typedef void  (*PFNGLRASTERPOS3SPROC)(GLshort x, GLshort y, GLshort z);

#ifdef glRasterPos3sv
#undef glRasterPos3sv
#endif
#ifdef PFNGLRASTERPOS3SVPROC
#undef PFNGLRASTERPOS3SVPROC
#endif
typedef void  (*PFNGLRASTERPOS3SVPROC)(const GLshort *v);

#ifdef glRasterPos4d
#undef glRasterPos4d
#endif
#ifdef PFNGLRASTERPOS4DPROC
#undef PFNGLRASTERPOS4DPROC
#endif
typedef void  (*PFNGLRASTERPOS4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glRasterPos4dv
#undef glRasterPos4dv
#endif
#ifdef PFNGLRASTERPOS4DVPROC
#undef PFNGLRASTERPOS4DVPROC
#endif
typedef void  (*PFNGLRASTERPOS4DVPROC)(const GLdouble *v);

#ifdef glRasterPos4f
#undef glRasterPos4f
#endif
#ifdef PFNGLRASTERPOS4FPROC
#undef PFNGLRASTERPOS4FPROC
#endif
typedef void  (*PFNGLRASTERPOS4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glRasterPos4fv
#undef glRasterPos4fv
#endif
#ifdef PFNGLRASTERPOS4FVPROC
#undef PFNGLRASTERPOS4FVPROC
#endif
typedef void  (*PFNGLRASTERPOS4FVPROC)(const GLfloat *v);

#ifdef glRasterPos4i
#undef glRasterPos4i
#endif
#ifdef PFNGLRASTERPOS4IPROC
#undef PFNGLRASTERPOS4IPROC
#endif
typedef void  (*PFNGLRASTERPOS4IPROC)(GLint x, GLint y, GLint z, GLint w);

#ifdef glRasterPos4iv
#undef glRasterPos4iv
#endif
#ifdef PFNGLRASTERPOS4IVPROC
#undef PFNGLRASTERPOS4IVPROC
#endif
typedef void  (*PFNGLRASTERPOS4IVPROC)(const GLint *v);

#ifdef glRasterPos4s
#undef glRasterPos4s
#endif
#ifdef PFNGLRASTERPOS4SPROC
#undef PFNGLRASTERPOS4SPROC
#endif
typedef void  (*PFNGLRASTERPOS4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);

#ifdef glRasterPos4sv
#undef glRasterPos4sv
#endif
#ifdef PFNGLRASTERPOS4SVPROC
#undef PFNGLRASTERPOS4SVPROC
#endif
typedef void  (*PFNGLRASTERPOS4SVPROC)(const GLshort *v);

#ifdef glRectd
#undef glRectd
#endif
#ifdef PFNGLRECTDPROC
#undef PFNGLRECTDPROC
#endif
typedef void  (*PFNGLRECTDPROC)(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);

#ifdef glRectdv
#undef glRectdv
#endif
#ifdef PFNGLRECTDVPROC
#undef PFNGLRECTDVPROC
#endif
typedef void  (*PFNGLRECTDVPROC)(const GLdouble *v1, const GLdouble *v2);

#ifdef glRectf
#undef glRectf
#endif
#ifdef PFNGLRECTFPROC
#undef PFNGLRECTFPROC
#endif
typedef void  (*PFNGLRECTFPROC)(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);

#ifdef glRectfv
#undef glRectfv
#endif
#ifdef PFNGLRECTFVPROC
#undef PFNGLRECTFVPROC
#endif
typedef void  (*PFNGLRECTFVPROC)(const GLfloat *v1, const GLfloat *v2);

#ifdef glRecti
#undef glRecti
#endif
#ifdef PFNGLRECTIPROC
#undef PFNGLRECTIPROC
#endif
typedef void  (*PFNGLRECTIPROC)(GLint x1, GLint y1, GLint x2, GLint y2);

#ifdef glRectiv
#undef glRectiv
#endif
#ifdef PFNGLRECTIVPROC
#undef PFNGLRECTIVPROC
#endif
typedef void  (*PFNGLRECTIVPROC)(const GLint *v1, const GLint *v2);

#ifdef glRects
#undef glRects
#endif
#ifdef PFNGLRECTSPROC
#undef PFNGLRECTSPROC
#endif
typedef void  (*PFNGLRECTSPROC)(GLshort x1, GLshort y1, GLshort x2, GLshort y2);

#ifdef glRectsv
#undef glRectsv
#endif
#ifdef PFNGLRECTSVPROC
#undef PFNGLRECTSVPROC
#endif
typedef void  (*PFNGLRECTSVPROC)(const GLshort *v1, const GLshort *v2);

#ifdef glTexCoord1d
#undef glTexCoord1d
#endif
#ifdef PFNGLTEXCOORD1DPROC
#undef PFNGLTEXCOORD1DPROC
#endif
typedef void  (*PFNGLTEXCOORD1DPROC)(GLdouble s);

#ifdef glTexCoord1dv
#undef glTexCoord1dv
#endif
#ifdef PFNGLTEXCOORD1DVPROC
#undef PFNGLTEXCOORD1DVPROC
#endif
typedef void  (*PFNGLTEXCOORD1DVPROC)(const GLdouble *v);

#ifdef glTexCoord1f
#undef glTexCoord1f
#endif
#ifdef PFNGLTEXCOORD1FPROC
#undef PFNGLTEXCOORD1FPROC
#endif
typedef void  (*PFNGLTEXCOORD1FPROC)(GLfloat s);

#ifdef glTexCoord1fv
#undef glTexCoord1fv
#endif
#ifdef PFNGLTEXCOORD1FVPROC
#undef PFNGLTEXCOORD1FVPROC
#endif
typedef void  (*PFNGLTEXCOORD1FVPROC)(const GLfloat *v);

#ifdef glTexCoord1i
#undef glTexCoord1i
#endif
#ifdef PFNGLTEXCOORD1IPROC
#undef PFNGLTEXCOORD1IPROC
#endif
typedef void  (*PFNGLTEXCOORD1IPROC)(GLint s);

#ifdef glTexCoord1iv
#undef glTexCoord1iv
#endif
#ifdef PFNGLTEXCOORD1IVPROC
#undef PFNGLTEXCOORD1IVPROC
#endif
typedef void  (*PFNGLTEXCOORD1IVPROC)(const GLint *v);

#ifdef glTexCoord1s
#undef glTexCoord1s
#endif
#ifdef PFNGLTEXCOORD1SPROC
#undef PFNGLTEXCOORD1SPROC
#endif
typedef void  (*PFNGLTEXCOORD1SPROC)(GLshort s);

#ifdef glTexCoord1sv
#undef glTexCoord1sv
#endif
#ifdef PFNGLTEXCOORD1SVPROC
#undef PFNGLTEXCOORD1SVPROC
#endif
typedef void  (*PFNGLTEXCOORD1SVPROC)(const GLshort *v);

#ifdef glTexCoord2d
#undef glTexCoord2d
#endif
#ifdef PFNGLTEXCOORD2DPROC
#undef PFNGLTEXCOORD2DPROC
#endif
typedef void  (*PFNGLTEXCOORD2DPROC)(GLdouble s, GLdouble t);

#ifdef glTexCoord2dv
#undef glTexCoord2dv
#endif
#ifdef PFNGLTEXCOORD2DVPROC
#undef PFNGLTEXCOORD2DVPROC
#endif
typedef void  (*PFNGLTEXCOORD2DVPROC)(const GLdouble *v);

#ifdef glTexCoord2f
#undef glTexCoord2f
#endif
#ifdef PFNGLTEXCOORD2FPROC
#undef PFNGLTEXCOORD2FPROC
#endif
typedef void  (*PFNGLTEXCOORD2FPROC)(GLfloat s, GLfloat t);

#ifdef glTexCoord2fv
#undef glTexCoord2fv
#endif
#ifdef PFNGLTEXCOORD2FVPROC
#undef PFNGLTEXCOORD2FVPROC
#endif
typedef void  (*PFNGLTEXCOORD2FVPROC)(const GLfloat *v);

#ifdef glTexCoord2i
#undef glTexCoord2i
#endif
#ifdef PFNGLTEXCOORD2IPROC
#undef PFNGLTEXCOORD2IPROC
#endif
typedef void  (*PFNGLTEXCOORD2IPROC)(GLint s, GLint t);

#ifdef glTexCoord2iv
#undef glTexCoord2iv
#endif
#ifdef PFNGLTEXCOORD2IVPROC
#undef PFNGLTEXCOORD2IVPROC
#endif
typedef void  (*PFNGLTEXCOORD2IVPROC)(const GLint *v);

#ifdef glTexCoord2s
#undef glTexCoord2s
#endif
#ifdef PFNGLTEXCOORD2SPROC
#undef PFNGLTEXCOORD2SPROC
#endif
typedef void  (*PFNGLTEXCOORD2SPROC)(GLshort s, GLshort t);

#ifdef glTexCoord2sv
#undef glTexCoord2sv
#endif
#ifdef PFNGLTEXCOORD2SVPROC
#undef PFNGLTEXCOORD2SVPROC
#endif
typedef void  (*PFNGLTEXCOORD2SVPROC)(const GLshort *v);

#ifdef glTexCoord3d
#undef glTexCoord3d
#endif
#ifdef PFNGLTEXCOORD3DPROC
#undef PFNGLTEXCOORD3DPROC
#endif
typedef void  (*PFNGLTEXCOORD3DPROC)(GLdouble s, GLdouble t, GLdouble r);

#ifdef glTexCoord3dv
#undef glTexCoord3dv
#endif
#ifdef PFNGLTEXCOORD3DVPROC
#undef PFNGLTEXCOORD3DVPROC
#endif
typedef void  (*PFNGLTEXCOORD3DVPROC)(const GLdouble *v);

#ifdef glTexCoord3f
#undef glTexCoord3f
#endif
#ifdef PFNGLTEXCOORD3FPROC
#undef PFNGLTEXCOORD3FPROC
#endif
typedef void  (*PFNGLTEXCOORD3FPROC)(GLfloat s, GLfloat t, GLfloat r);

#ifdef glTexCoord3fv
#undef glTexCoord3fv
#endif
#ifdef PFNGLTEXCOORD3FVPROC
#undef PFNGLTEXCOORD3FVPROC
#endif
typedef void  (*PFNGLTEXCOORD3FVPROC)(const GLfloat *v);

#ifdef glTexCoord3i
#undef glTexCoord3i
#endif
#ifdef PFNGLTEXCOORD3IPROC
#undef PFNGLTEXCOORD3IPROC
#endif
typedef void  (*PFNGLTEXCOORD3IPROC)(GLint s, GLint t, GLint r);

#ifdef glTexCoord3iv
#undef glTexCoord3iv
#endif
#ifdef PFNGLTEXCOORD3IVPROC
#undef PFNGLTEXCOORD3IVPROC
#endif
typedef void  (*PFNGLTEXCOORD3IVPROC)(const GLint *v);

#ifdef glTexCoord3s
#undef glTexCoord3s
#endif
#ifdef PFNGLTEXCOORD3SPROC
#undef PFNGLTEXCOORD3SPROC
#endif
typedef void  (*PFNGLTEXCOORD3SPROC)(GLshort s, GLshort t, GLshort r);

#ifdef glTexCoord3sv
#undef glTexCoord3sv
#endif
#ifdef PFNGLTEXCOORD3SVPROC
#undef PFNGLTEXCOORD3SVPROC
#endif
typedef void  (*PFNGLTEXCOORD3SVPROC)(const GLshort *v);

#ifdef glTexCoord4d
#undef glTexCoord4d
#endif
#ifdef PFNGLTEXCOORD4DPROC
#undef PFNGLTEXCOORD4DPROC
#endif
typedef void  (*PFNGLTEXCOORD4DPROC)(GLdouble s, GLdouble t, GLdouble r, GLdouble q);

#ifdef glTexCoord4dv
#undef glTexCoord4dv
#endif
#ifdef PFNGLTEXCOORD4DVPROC
#undef PFNGLTEXCOORD4DVPROC
#endif
typedef void  (*PFNGLTEXCOORD4DVPROC)(const GLdouble *v);

#ifdef glTexCoord4f
#undef glTexCoord4f
#endif
#ifdef PFNGLTEXCOORD4FPROC
#undef PFNGLTEXCOORD4FPROC
#endif
typedef void  (*PFNGLTEXCOORD4FPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat q);

#ifdef glTexCoord4fv
#undef glTexCoord4fv
#endif
#ifdef PFNGLTEXCOORD4FVPROC
#undef PFNGLTEXCOORD4FVPROC
#endif
typedef void  (*PFNGLTEXCOORD4FVPROC)(const GLfloat *v);

#ifdef glTexCoord4i
#undef glTexCoord4i
#endif
#ifdef PFNGLTEXCOORD4IPROC
#undef PFNGLTEXCOORD4IPROC
#endif
typedef void  (*PFNGLTEXCOORD4IPROC)(GLint s, GLint t, GLint r, GLint q);

#ifdef glTexCoord4iv
#undef glTexCoord4iv
#endif
#ifdef PFNGLTEXCOORD4IVPROC
#undef PFNGLTEXCOORD4IVPROC
#endif
typedef void  (*PFNGLTEXCOORD4IVPROC)(const GLint *v);

#ifdef glTexCoord4s
#undef glTexCoord4s
#endif
#ifdef PFNGLTEXCOORD4SPROC
#undef PFNGLTEXCOORD4SPROC
#endif
typedef void  (*PFNGLTEXCOORD4SPROC)(GLshort s, GLshort t, GLshort r, GLshort q);

#ifdef glTexCoord4sv
#undef glTexCoord4sv
#endif
#ifdef PFNGLTEXCOORD4SVPROC
#undef PFNGLTEXCOORD4SVPROC
#endif
typedef void  (*PFNGLTEXCOORD4SVPROC)(const GLshort *v);

#ifdef glVertex2d
#undef glVertex2d
#endif
#ifdef PFNGLVERTEX2DPROC
#undef PFNGLVERTEX2DPROC
#endif
typedef void  (*PFNGLVERTEX2DPROC)(GLdouble x, GLdouble y);

#ifdef glVertex2dv
#undef glVertex2dv
#endif
#ifdef PFNGLVERTEX2DVPROC
#undef PFNGLVERTEX2DVPROC
#endif
typedef void  (*PFNGLVERTEX2DVPROC)(const GLdouble *v);

#ifdef glVertex2f
#undef glVertex2f
#endif
#ifdef PFNGLVERTEX2FPROC
#undef PFNGLVERTEX2FPROC
#endif
typedef void  (*PFNGLVERTEX2FPROC)(GLfloat x, GLfloat y);

#ifdef glVertex2fv
#undef glVertex2fv
#endif
#ifdef PFNGLVERTEX2FVPROC
#undef PFNGLVERTEX2FVPROC
#endif
typedef void  (*PFNGLVERTEX2FVPROC)(const GLfloat *v);

#ifdef glVertex2i
#undef glVertex2i
#endif
#ifdef PFNGLVERTEX2IPROC
#undef PFNGLVERTEX2IPROC
#endif
typedef void  (*PFNGLVERTEX2IPROC)(GLint x, GLint y);

#ifdef glVertex2iv
#undef glVertex2iv
#endif
#ifdef PFNGLVERTEX2IVPROC
#undef PFNGLVERTEX2IVPROC
#endif
typedef void  (*PFNGLVERTEX2IVPROC)(const GLint *v);

#ifdef glVertex2s
#undef glVertex2s
#endif
#ifdef PFNGLVERTEX2SPROC
#undef PFNGLVERTEX2SPROC
#endif
typedef void  (*PFNGLVERTEX2SPROC)(GLshort x, GLshort y);

#ifdef glVertex2sv
#undef glVertex2sv
#endif
#ifdef PFNGLVERTEX2SVPROC
#undef PFNGLVERTEX2SVPROC
#endif
typedef void  (*PFNGLVERTEX2SVPROC)(const GLshort *v);

#ifdef glVertex3d
#undef glVertex3d
#endif
#ifdef PFNGLVERTEX3DPROC
#undef PFNGLVERTEX3DPROC
#endif
typedef void  (*PFNGLVERTEX3DPROC)(GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertex3dv
#undef glVertex3dv
#endif
#ifdef PFNGLVERTEX3DVPROC
#undef PFNGLVERTEX3DVPROC
#endif
typedef void  (*PFNGLVERTEX3DVPROC)(const GLdouble *v);

#ifdef glVertex3f
#undef glVertex3f
#endif
#ifdef PFNGLVERTEX3FPROC
#undef PFNGLVERTEX3FPROC
#endif
typedef void  (*PFNGLVERTEX3FPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifdef glVertex3fv
#undef glVertex3fv
#endif
#ifdef PFNGLVERTEX3FVPROC
#undef PFNGLVERTEX3FVPROC
#endif
typedef void  (*PFNGLVERTEX3FVPROC)(const GLfloat *v);

#ifdef glVertex3i
#undef glVertex3i
#endif
#ifdef PFNGLVERTEX3IPROC
#undef PFNGLVERTEX3IPROC
#endif
typedef void  (*PFNGLVERTEX3IPROC)(GLint x, GLint y, GLint z);

#ifdef glVertex3iv
#undef glVertex3iv
#endif
#ifdef PFNGLVERTEX3IVPROC
#undef PFNGLVERTEX3IVPROC
#endif
typedef void  (*PFNGLVERTEX3IVPROC)(const GLint *v);

#ifdef glVertex3s
#undef glVertex3s
#endif
#ifdef PFNGLVERTEX3SPROC
#undef PFNGLVERTEX3SPROC
#endif
typedef void  (*PFNGLVERTEX3SPROC)(GLshort x, GLshort y, GLshort z);

#ifdef glVertex3sv
#undef glVertex3sv
#endif
#ifdef PFNGLVERTEX3SVPROC
#undef PFNGLVERTEX3SVPROC
#endif
typedef void  (*PFNGLVERTEX3SVPROC)(const GLshort *v);

#ifdef glVertex4d
#undef glVertex4d
#endif
#ifdef PFNGLVERTEX4DPROC
#undef PFNGLVERTEX4DPROC
#endif
typedef void  (*PFNGLVERTEX4DPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertex4dv
#undef glVertex4dv
#endif
#ifdef PFNGLVERTEX4DVPROC
#undef PFNGLVERTEX4DVPROC
#endif
typedef void  (*PFNGLVERTEX4DVPROC)(const GLdouble *v);

#ifdef glVertex4f
#undef glVertex4f
#endif
#ifdef PFNGLVERTEX4FPROC
#undef PFNGLVERTEX4FPROC
#endif
typedef void  (*PFNGLVERTEX4FPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glVertex4fv
#undef glVertex4fv
#endif
#ifdef PFNGLVERTEX4FVPROC
#undef PFNGLVERTEX4FVPROC
#endif
typedef void  (*PFNGLVERTEX4FVPROC)(const GLfloat *v);

#ifdef glVertex4i
#undef glVertex4i
#endif
#ifdef PFNGLVERTEX4IPROC
#undef PFNGLVERTEX4IPROC
#endif
typedef void  (*PFNGLVERTEX4IPROC)(GLint x, GLint y, GLint z, GLint w);

#ifdef glVertex4iv
#undef glVertex4iv
#endif
#ifdef PFNGLVERTEX4IVPROC
#undef PFNGLVERTEX4IVPROC
#endif
typedef void  (*PFNGLVERTEX4IVPROC)(const GLint *v);

#ifdef glVertex4s
#undef glVertex4s
#endif
#ifdef PFNGLVERTEX4SPROC
#undef PFNGLVERTEX4SPROC
#endif
typedef void  (*PFNGLVERTEX4SPROC)(GLshort x, GLshort y, GLshort z, GLshort w);

#ifdef glVertex4sv
#undef glVertex4sv
#endif
#ifdef PFNGLVERTEX4SVPROC
#undef PFNGLVERTEX4SVPROC
#endif
typedef void  (*PFNGLVERTEX4SVPROC)(const GLshort *v);

#ifdef glClipPlane
#undef glClipPlane
#endif
#ifdef PFNGLCLIPPLANEPROC
#undef PFNGLCLIPPLANEPROC
#endif
typedef void  (*PFNGLCLIPPLANEPROC)(GLenum plane, const GLdouble *equation);

#ifdef glColorMaterial
#undef glColorMaterial
#endif
#ifdef PFNGLCOLORMATERIALPROC
#undef PFNGLCOLORMATERIALPROC
#endif
typedef void  (*PFNGLCOLORMATERIALPROC)(GLenum face, GLenum mode);

#ifdef glFogf
#undef glFogf
#endif
#ifdef PFNGLFOGFPROC
#undef PFNGLFOGFPROC
#endif
typedef void  (*PFNGLFOGFPROC)(GLenum pname, GLfloat param);

#ifdef glFogfv
#undef glFogfv
#endif
#ifdef PFNGLFOGFVPROC
#undef PFNGLFOGFVPROC
#endif
typedef void  (*PFNGLFOGFVPROC)(GLenum pname, const GLfloat *params);

#ifdef glFogi
#undef glFogi
#endif
#ifdef PFNGLFOGIPROC
#undef PFNGLFOGIPROC
#endif
typedef void  (*PFNGLFOGIPROC)(GLenum pname, GLint param);

#ifdef glFogiv
#undef glFogiv
#endif
#ifdef PFNGLFOGIVPROC
#undef PFNGLFOGIVPROC
#endif
typedef void  (*PFNGLFOGIVPROC)(GLenum pname, const GLint *params);

#ifdef glLightf
#undef glLightf
#endif
#ifdef PFNGLLIGHTFPROC
#undef PFNGLLIGHTFPROC
#endif
typedef void  (*PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);

#ifdef glLightfv
#undef glLightfv
#endif
#ifdef PFNGLLIGHTFVPROC
#undef PFNGLLIGHTFVPROC
#endif
typedef void  (*PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat *params);

#ifdef glLighti
#undef glLighti
#endif
#ifdef PFNGLLIGHTIPROC
#undef PFNGLLIGHTIPROC
#endif
typedef void  (*PFNGLLIGHTIPROC)(GLenum light, GLenum pname, GLint param);

#ifdef glLightiv
#undef glLightiv
#endif
#ifdef PFNGLLIGHTIVPROC
#undef PFNGLLIGHTIVPROC
#endif
typedef void  (*PFNGLLIGHTIVPROC)(GLenum light, GLenum pname, const GLint *params);

#ifdef glLightModelf
#undef glLightModelf
#endif
#ifdef PFNGLLIGHTMODELFPROC
#undef PFNGLLIGHTMODELFPROC
#endif
typedef void  (*PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);

#ifdef glLightModelfv
#undef glLightModelfv
#endif
#ifdef PFNGLLIGHTMODELFVPROC
#undef PFNGLLIGHTMODELFVPROC
#endif
typedef void  (*PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat *params);

#ifdef glLightModeli
#undef glLightModeli
#endif
#ifdef PFNGLLIGHTMODELIPROC
#undef PFNGLLIGHTMODELIPROC
#endif
typedef void  (*PFNGLLIGHTMODELIPROC)(GLenum pname, GLint param);

#ifdef glLightModeliv
#undef glLightModeliv
#endif
#ifdef PFNGLLIGHTMODELIVPROC
#undef PFNGLLIGHTMODELIVPROC
#endif
typedef void  (*PFNGLLIGHTMODELIVPROC)(GLenum pname, const GLint *params);

#ifdef glLineStipple
#undef glLineStipple
#endif
#ifdef PFNGLLINESTIPPLEPROC
#undef PFNGLLINESTIPPLEPROC
#endif
typedef void  (*PFNGLLINESTIPPLEPROC)(GLint factor, GLushort pattern);

#ifdef glMaterialf
#undef glMaterialf
#endif
#ifdef PFNGLMATERIALFPROC
#undef PFNGLMATERIALFPROC
#endif
typedef void  (*PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);

#ifdef glMaterialfv
#undef glMaterialfv
#endif
#ifdef PFNGLMATERIALFVPROC
#undef PFNGLMATERIALFVPROC
#endif
typedef void  (*PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat *params);

#ifdef glMateriali
#undef glMateriali
#endif
#ifdef PFNGLMATERIALIPROC
#undef PFNGLMATERIALIPROC
#endif
typedef void  (*PFNGLMATERIALIPROC)(GLenum face, GLenum pname, GLint param);

#ifdef glMaterialiv
#undef glMaterialiv
#endif
#ifdef PFNGLMATERIALIVPROC
#undef PFNGLMATERIALIVPROC
#endif
typedef void  (*PFNGLMATERIALIVPROC)(GLenum face, GLenum pname, const GLint *params);

#ifdef glPolygonStipple
#undef glPolygonStipple
#endif
#ifdef PFNGLPOLYGONSTIPPLEPROC
#undef PFNGLPOLYGONSTIPPLEPROC
#endif
typedef void  (*PFNGLPOLYGONSTIPPLEPROC)(const GLubyte *mask);

#ifdef glShadeModel
#undef glShadeModel
#endif
#ifdef PFNGLSHADEMODELPROC
#undef PFNGLSHADEMODELPROC
#endif
typedef void  (*PFNGLSHADEMODELPROC)(GLenum mode);

#ifdef glTexEnvf
#undef glTexEnvf
#endif
#ifdef PFNGLTEXENVFPROC
#undef PFNGLTEXENVFPROC
#endif
typedef void  (*PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);

#ifdef glTexEnvfv
#undef glTexEnvfv
#endif
#ifdef PFNGLTEXENVFVPROC
#undef PFNGLTEXENVFVPROC
#endif
typedef void  (*PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glTexEnvi
#undef glTexEnvi
#endif
#ifdef PFNGLTEXENVIPROC
#undef PFNGLTEXENVIPROC
#endif
typedef void  (*PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glTexEnviv
#undef glTexEnviv
#endif
#ifdef PFNGLTEXENVIVPROC
#undef PFNGLTEXENVIVPROC
#endif
typedef void  (*PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexGend
#undef glTexGend
#endif
#ifdef PFNGLTEXGENDPROC
#undef PFNGLTEXGENDPROC
#endif
typedef void  (*PFNGLTEXGENDPROC)(GLenum coord, GLenum pname, GLdouble param);

#ifdef glTexGendv
#undef glTexGendv
#endif
#ifdef PFNGLTEXGENDVPROC
#undef PFNGLTEXGENDVPROC
#endif
typedef void  (*PFNGLTEXGENDVPROC)(GLenum coord, GLenum pname, const GLdouble *params);

#ifdef glTexGenf
#undef glTexGenf
#endif
#ifdef PFNGLTEXGENFPROC
#undef PFNGLTEXGENFPROC
#endif
typedef void  (*PFNGLTEXGENFPROC)(GLenum coord, GLenum pname, GLfloat param);

#ifdef glTexGenfv
#undef glTexGenfv
#endif
#ifdef PFNGLTEXGENFVPROC
#undef PFNGLTEXGENFVPROC
#endif
typedef void  (*PFNGLTEXGENFVPROC)(GLenum coord, GLenum pname, const GLfloat *params);

#ifdef glTexGeni
#undef glTexGeni
#endif
#ifdef PFNGLTEXGENIPROC
#undef PFNGLTEXGENIPROC
#endif
typedef void  (*PFNGLTEXGENIPROC)(GLenum coord, GLenum pname, GLint param);

#ifdef glTexGeniv
#undef glTexGeniv
#endif
#ifdef PFNGLTEXGENIVPROC
#undef PFNGLTEXGENIVPROC
#endif
typedef void  (*PFNGLTEXGENIVPROC)(GLenum coord, GLenum pname, const GLint *params);

#ifdef glFeedbackBuffer
#undef glFeedbackBuffer
#endif
#ifdef PFNGLFEEDBACKBUFFERPROC
#undef PFNGLFEEDBACKBUFFERPROC
#endif
typedef void  (*PFNGLFEEDBACKBUFFERPROC)(GLsizei size, GLenum type, GLfloat *buffer);

#ifdef glSelectBuffer
#undef glSelectBuffer
#endif
#ifdef PFNGLSELECTBUFFERPROC
#undef PFNGLSELECTBUFFERPROC
#endif
typedef void  (*PFNGLSELECTBUFFERPROC)(GLsizei size, GLuint *buffer);

#ifdef glRenderMode
#undef glRenderMode
#endif
#ifdef PFNGLRENDERMODEPROC
#undef PFNGLRENDERMODEPROC
#endif
typedef GLint  (*PFNGLRENDERMODEPROC)(GLenum mode);

#ifdef glInitNames
#undef glInitNames
#endif
#ifdef PFNGLINITNAMESPROC
#undef PFNGLINITNAMESPROC
#endif
typedef void  (*PFNGLINITNAMESPROC)(void);

#ifdef glLoadName
#undef glLoadName
#endif
#ifdef PFNGLLOADNAMEPROC
#undef PFNGLLOADNAMEPROC
#endif
typedef void  (*PFNGLLOADNAMEPROC)(GLuint name);

#ifdef glPassThrough
#undef glPassThrough
#endif
#ifdef PFNGLPASSTHROUGHPROC
#undef PFNGLPASSTHROUGHPROC
#endif
typedef void  (*PFNGLPASSTHROUGHPROC)(GLfloat token);

#ifdef glPopName
#undef glPopName
#endif
#ifdef PFNGLPOPNAMEPROC
#undef PFNGLPOPNAMEPROC
#endif
typedef void  (*PFNGLPOPNAMEPROC)(void);

#ifdef glPushName
#undef glPushName
#endif
#ifdef PFNGLPUSHNAMEPROC
#undef PFNGLPUSHNAMEPROC
#endif
typedef void  (*PFNGLPUSHNAMEPROC)(GLuint name);

#ifdef glClearAccum
#undef glClearAccum
#endif
#ifdef PFNGLCLEARACCUMPROC
#undef PFNGLCLEARACCUMPROC
#endif
typedef void  (*PFNGLCLEARACCUMPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glClearIndex
#undef glClearIndex
#endif
#ifdef PFNGLCLEARINDEXPROC
#undef PFNGLCLEARINDEXPROC
#endif
typedef void  (*PFNGLCLEARINDEXPROC)(GLfloat c);

#ifdef glIndexMask
#undef glIndexMask
#endif
#ifdef PFNGLINDEXMASKPROC
#undef PFNGLINDEXMASKPROC
#endif
typedef void  (*PFNGLINDEXMASKPROC)(GLuint mask);

#ifdef glAccum
#undef glAccum
#endif
#ifdef PFNGLACCUMPROC
#undef PFNGLACCUMPROC
#endif
typedef void  (*PFNGLACCUMPROC)(GLenum op, GLfloat value);

#ifdef glPopAttrib
#undef glPopAttrib
#endif
#ifdef PFNGLPOPATTRIBPROC
#undef PFNGLPOPATTRIBPROC
#endif
typedef void  (*PFNGLPOPATTRIBPROC)(void);

#ifdef glPushAttrib
#undef glPushAttrib
#endif
#ifdef PFNGLPUSHATTRIBPROC
#undef PFNGLPUSHATTRIBPROC
#endif
typedef void  (*PFNGLPUSHATTRIBPROC)(GLbitfield mask);

#ifdef glMap1d
#undef glMap1d
#endif
#ifdef PFNGLMAP1DPROC
#undef PFNGLMAP1DPROC
#endif
typedef void  (*PFNGLMAP1DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);

#ifdef glMap1f
#undef glMap1f
#endif
#ifdef PFNGLMAP1FPROC
#undef PFNGLMAP1FPROC
#endif
typedef void  (*PFNGLMAP1FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);

#ifdef glMap2d
#undef glMap2d
#endif
#ifdef PFNGLMAP2DPROC
#undef PFNGLMAP2DPROC
#endif
typedef void  (*PFNGLMAP2DPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);

#ifdef glMap2f
#undef glMap2f
#endif
#ifdef PFNGLMAP2FPROC
#undef PFNGLMAP2FPROC
#endif
typedef void  (*PFNGLMAP2FPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);

#ifdef glMapGrid1d
#undef glMapGrid1d
#endif
#ifdef PFNGLMAPGRID1DPROC
#undef PFNGLMAPGRID1DPROC
#endif
typedef void  (*PFNGLMAPGRID1DPROC)(GLint un, GLdouble u1, GLdouble u2);

#ifdef glMapGrid1f
#undef glMapGrid1f
#endif
#ifdef PFNGLMAPGRID1FPROC
#undef PFNGLMAPGRID1FPROC
#endif
typedef void  (*PFNGLMAPGRID1FPROC)(GLint un, GLfloat u1, GLfloat u2);

#ifdef glMapGrid2d
#undef glMapGrid2d
#endif
#ifdef PFNGLMAPGRID2DPROC
#undef PFNGLMAPGRID2DPROC
#endif
typedef void  (*PFNGLMAPGRID2DPROC)(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);

#ifdef glMapGrid2f
#undef glMapGrid2f
#endif
#ifdef PFNGLMAPGRID2FPROC
#undef PFNGLMAPGRID2FPROC
#endif
typedef void  (*PFNGLMAPGRID2FPROC)(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);

#ifdef glEvalCoord1d
#undef glEvalCoord1d
#endif
#ifdef PFNGLEVALCOORD1DPROC
#undef PFNGLEVALCOORD1DPROC
#endif
typedef void  (*PFNGLEVALCOORD1DPROC)(GLdouble u);

#ifdef glEvalCoord1dv
#undef glEvalCoord1dv
#endif
#ifdef PFNGLEVALCOORD1DVPROC
#undef PFNGLEVALCOORD1DVPROC
#endif
typedef void  (*PFNGLEVALCOORD1DVPROC)(const GLdouble *u);

#ifdef glEvalCoord1f
#undef glEvalCoord1f
#endif
#ifdef PFNGLEVALCOORD1FPROC
#undef PFNGLEVALCOORD1FPROC
#endif
typedef void  (*PFNGLEVALCOORD1FPROC)(GLfloat u);

#ifdef glEvalCoord1fv
#undef glEvalCoord1fv
#endif
#ifdef PFNGLEVALCOORD1FVPROC
#undef PFNGLEVALCOORD1FVPROC
#endif
typedef void  (*PFNGLEVALCOORD1FVPROC)(const GLfloat *u);

#ifdef glEvalCoord2d
#undef glEvalCoord2d
#endif
#ifdef PFNGLEVALCOORD2DPROC
#undef PFNGLEVALCOORD2DPROC
#endif
typedef void  (*PFNGLEVALCOORD2DPROC)(GLdouble u, GLdouble v);

#ifdef glEvalCoord2dv
#undef glEvalCoord2dv
#endif
#ifdef PFNGLEVALCOORD2DVPROC
#undef PFNGLEVALCOORD2DVPROC
#endif
typedef void  (*PFNGLEVALCOORD2DVPROC)(const GLdouble *u);

#ifdef glEvalCoord2f
#undef glEvalCoord2f
#endif
#ifdef PFNGLEVALCOORD2FPROC
#undef PFNGLEVALCOORD2FPROC
#endif
typedef void  (*PFNGLEVALCOORD2FPROC)(GLfloat u, GLfloat v);

#ifdef glEvalCoord2fv
#undef glEvalCoord2fv
#endif
#ifdef PFNGLEVALCOORD2FVPROC
#undef PFNGLEVALCOORD2FVPROC
#endif
typedef void  (*PFNGLEVALCOORD2FVPROC)(const GLfloat *u);

#ifdef glEvalMesh1
#undef glEvalMesh1
#endif
#ifdef PFNGLEVALMESH1PROC
#undef PFNGLEVALMESH1PROC
#endif
typedef void  (*PFNGLEVALMESH1PROC)(GLenum mode, GLint i1, GLint i2);

#ifdef glEvalPoint1
#undef glEvalPoint1
#endif
#ifdef PFNGLEVALPOINT1PROC
#undef PFNGLEVALPOINT1PROC
#endif
typedef void  (*PFNGLEVALPOINT1PROC)(GLint i);

#ifdef glEvalMesh2
#undef glEvalMesh2
#endif
#ifdef PFNGLEVALMESH2PROC
#undef PFNGLEVALMESH2PROC
#endif
typedef void  (*PFNGLEVALMESH2PROC)(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);

#ifdef glEvalPoint2
#undef glEvalPoint2
#endif
#ifdef PFNGLEVALPOINT2PROC
#undef PFNGLEVALPOINT2PROC
#endif
typedef void  (*PFNGLEVALPOINT2PROC)(GLint i, GLint j);

#ifdef glAlphaFunc
#undef glAlphaFunc
#endif
#ifdef PFNGLALPHAFUNCPROC
#undef PFNGLALPHAFUNCPROC
#endif
typedef void  (*PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);

#ifdef glPixelZoom
#undef glPixelZoom
#endif
#ifdef PFNGLPIXELZOOMPROC
#undef PFNGLPIXELZOOMPROC
#endif
typedef void  (*PFNGLPIXELZOOMPROC)(GLfloat xfactor, GLfloat yfactor);

#ifdef glPixelTransferf
#undef glPixelTransferf
#endif
#ifdef PFNGLPIXELTRANSFERFPROC
#undef PFNGLPIXELTRANSFERFPROC
#endif
typedef void  (*PFNGLPIXELTRANSFERFPROC)(GLenum pname, GLfloat param);

#ifdef glPixelTransferi
#undef glPixelTransferi
#endif
#ifdef PFNGLPIXELTRANSFERIPROC
#undef PFNGLPIXELTRANSFERIPROC
#endif
typedef void  (*PFNGLPIXELTRANSFERIPROC)(GLenum pname, GLint param);

#ifdef glPixelMapfv
#undef glPixelMapfv
#endif
#ifdef PFNGLPIXELMAPFVPROC
#undef PFNGLPIXELMAPFVPROC
#endif
typedef void  (*PFNGLPIXELMAPFVPROC)(GLenum map, GLsizei mapsize, const GLfloat *values);

#ifdef glPixelMapuiv
#undef glPixelMapuiv
#endif
#ifdef PFNGLPIXELMAPUIVPROC
#undef PFNGLPIXELMAPUIVPROC
#endif
typedef void  (*PFNGLPIXELMAPUIVPROC)(GLenum map, GLsizei mapsize, const GLuint *values);

#ifdef glPixelMapusv
#undef glPixelMapusv
#endif
#ifdef PFNGLPIXELMAPUSVPROC
#undef PFNGLPIXELMAPUSVPROC
#endif
typedef void  (*PFNGLPIXELMAPUSVPROC)(GLenum map, GLsizei mapsize, const GLushort *values);

#ifdef glCopyPixels
#undef glCopyPixels
#endif
#ifdef PFNGLCOPYPIXELSPROC
#undef PFNGLCOPYPIXELSPROC
#endif
typedef void  (*PFNGLCOPYPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);

#ifdef glDrawPixels
#undef glDrawPixels
#endif
#ifdef PFNGLDRAWPIXELSPROC
#undef PFNGLDRAWPIXELSPROC
#endif
typedef void  (*PFNGLDRAWPIXELSPROC)(GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifdef glGetClipPlane
#undef glGetClipPlane
#endif
#ifdef PFNGLGETCLIPPLANEPROC
#undef PFNGLGETCLIPPLANEPROC
#endif
typedef void  (*PFNGLGETCLIPPLANEPROC)(GLenum plane, GLdouble *equation);

#ifdef glGetLightfv
#undef glGetLightfv
#endif
#ifdef PFNGLGETLIGHTFVPROC
#undef PFNGLGETLIGHTFVPROC
#endif
typedef void  (*PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat *params);

#ifdef glGetLightiv
#undef glGetLightiv
#endif
#ifdef PFNGLGETLIGHTIVPROC
#undef PFNGLGETLIGHTIVPROC
#endif
typedef void  (*PFNGLGETLIGHTIVPROC)(GLenum light, GLenum pname, GLint *params);

#ifdef glGetMapdv
#undef glGetMapdv
#endif
#ifdef PFNGLGETMAPDVPROC
#undef PFNGLGETMAPDVPROC
#endif
typedef void  (*PFNGLGETMAPDVPROC)(GLenum target, GLenum query, GLdouble *v);

#ifdef glGetMapfv
#undef glGetMapfv
#endif
#ifdef PFNGLGETMAPFVPROC
#undef PFNGLGETMAPFVPROC
#endif
typedef void  (*PFNGLGETMAPFVPROC)(GLenum target, GLenum query, GLfloat *v);

#ifdef glGetMapiv
#undef glGetMapiv
#endif
#ifdef PFNGLGETMAPIVPROC
#undef PFNGLGETMAPIVPROC
#endif
typedef void  (*PFNGLGETMAPIVPROC)(GLenum target, GLenum query, GLint *v);

#ifdef glGetMaterialfv
#undef glGetMaterialfv
#endif
#ifdef PFNGLGETMATERIALFVPROC
#undef PFNGLGETMATERIALFVPROC
#endif
typedef void  (*PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat *params);

#ifdef glGetMaterialiv
#undef glGetMaterialiv
#endif
#ifdef PFNGLGETMATERIALIVPROC
#undef PFNGLGETMATERIALIVPROC
#endif
typedef void  (*PFNGLGETMATERIALIVPROC)(GLenum face, GLenum pname, GLint *params);

#ifdef glGetPixelMapfv
#undef glGetPixelMapfv
#endif
#ifdef PFNGLGETPIXELMAPFVPROC
#undef PFNGLGETPIXELMAPFVPROC
#endif
typedef void  (*PFNGLGETPIXELMAPFVPROC)(GLenum map, GLfloat *values);

#ifdef glGetPixelMapuiv
#undef glGetPixelMapuiv
#endif
#ifdef PFNGLGETPIXELMAPUIVPROC
#undef PFNGLGETPIXELMAPUIVPROC
#endif
typedef void  (*PFNGLGETPIXELMAPUIVPROC)(GLenum map, GLuint *values);

#ifdef glGetPixelMapusv
#undef glGetPixelMapusv
#endif
#ifdef PFNGLGETPIXELMAPUSVPROC
#undef PFNGLGETPIXELMAPUSVPROC
#endif
typedef void  (*PFNGLGETPIXELMAPUSVPROC)(GLenum map, GLushort *values);

#ifdef glGetPolygonStipple
#undef glGetPolygonStipple
#endif
#ifdef PFNGLGETPOLYGONSTIPPLEPROC
#undef PFNGLGETPOLYGONSTIPPLEPROC
#endif
typedef void  (*PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte *mask);

#ifdef glGetTexEnvfv
#undef glGetTexEnvfv
#endif
#ifdef PFNGLGETTEXENVFVPROC
#undef PFNGLGETTEXENVFVPROC
#endif
typedef void  (*PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetTexEnviv
#undef glGetTexEnviv
#endif
#ifdef PFNGLGETTEXENVIVPROC
#undef PFNGLGETTEXENVIVPROC
#endif
typedef void  (*PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetTexGendv
#undef glGetTexGendv
#endif
#ifdef PFNGLGETTEXGENDVPROC
#undef PFNGLGETTEXGENDVPROC
#endif
typedef void  (*PFNGLGETTEXGENDVPROC)(GLenum coord, GLenum pname, GLdouble *params);

#ifdef glGetTexGenfv
#undef glGetTexGenfv
#endif
#ifdef PFNGLGETTEXGENFVPROC
#undef PFNGLGETTEXGENFVPROC
#endif
typedef void  (*PFNGLGETTEXGENFVPROC)(GLenum coord, GLenum pname, GLfloat *params);

#ifdef glGetTexGeniv
#undef glGetTexGeniv
#endif
#ifdef PFNGLGETTEXGENIVPROC
#undef PFNGLGETTEXGENIVPROC
#endif
typedef void  (*PFNGLGETTEXGENIVPROC)(GLenum coord, GLenum pname, GLint *params);

#ifdef glIsList
#undef glIsList
#endif
#ifdef PFNGLISLISTPROC
#undef PFNGLISLISTPROC
#endif
typedef GLboolean  (*PFNGLISLISTPROC)(GLuint list);

#ifdef glFrustum
#undef glFrustum
#endif
#ifdef PFNGLFRUSTUMPROC
#undef PFNGLFRUSTUMPROC
#endif
typedef void  (*PFNGLFRUSTUMPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);

#ifdef glLoadIdentity
#undef glLoadIdentity
#endif
#ifdef PFNGLLOADIDENTITYPROC
#undef PFNGLLOADIDENTITYPROC
#endif
typedef void  (*PFNGLLOADIDENTITYPROC)(void);

#ifdef glLoadMatrixf
#undef glLoadMatrixf
#endif
#ifdef PFNGLLOADMATRIXFPROC
#undef PFNGLLOADMATRIXFPROC
#endif
typedef void  (*PFNGLLOADMATRIXFPROC)(const GLfloat *m);

#ifdef glLoadMatrixd
#undef glLoadMatrixd
#endif
#ifdef PFNGLLOADMATRIXDPROC
#undef PFNGLLOADMATRIXDPROC
#endif
typedef void  (*PFNGLLOADMATRIXDPROC)(const GLdouble *m);

#ifdef glMatrixMode
#undef glMatrixMode
#endif
#ifdef PFNGLMATRIXMODEPROC
#undef PFNGLMATRIXMODEPROC
#endif
typedef void  (*PFNGLMATRIXMODEPROC)(GLenum mode);

#ifdef glMultMatrixf
#undef glMultMatrixf
#endif
#ifdef PFNGLMULTMATRIXFPROC
#undef PFNGLMULTMATRIXFPROC
#endif
typedef void  (*PFNGLMULTMATRIXFPROC)(const GLfloat *m);

#ifdef glMultMatrixd
#undef glMultMatrixd
#endif
#ifdef PFNGLMULTMATRIXDPROC
#undef PFNGLMULTMATRIXDPROC
#endif
typedef void  (*PFNGLMULTMATRIXDPROC)(const GLdouble *m);

#ifdef glOrtho
#undef glOrtho
#endif
#ifdef PFNGLORTHOPROC
#undef PFNGLORTHOPROC
#endif
typedef void  (*PFNGLORTHOPROC)(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);

#ifdef glPopMatrix
#undef glPopMatrix
#endif
#ifdef PFNGLPOPMATRIXPROC
#undef PFNGLPOPMATRIXPROC
#endif
typedef void  (*PFNGLPOPMATRIXPROC)(void);

#ifdef glPushMatrix
#undef glPushMatrix
#endif
#ifdef PFNGLPUSHMATRIXPROC
#undef PFNGLPUSHMATRIXPROC
#endif
typedef void  (*PFNGLPUSHMATRIXPROC)(void);

#ifdef glRotated
#undef glRotated
#endif
#ifdef PFNGLROTATEDPROC
#undef PFNGLROTATEDPROC
#endif
typedef void  (*PFNGLROTATEDPROC)(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);

#ifdef glRotatef
#undef glRotatef
#endif
#ifdef PFNGLROTATEFPROC
#undef PFNGLROTATEFPROC
#endif
typedef void  (*PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);

#ifdef glScaled
#undef glScaled
#endif
#ifdef PFNGLSCALEDPROC
#undef PFNGLSCALEDPROC
#endif
typedef void  (*PFNGLSCALEDPROC)(GLdouble x, GLdouble y, GLdouble z);

#ifdef glScalef
#undef glScalef
#endif
#ifdef PFNGLSCALEFPROC
#undef PFNGLSCALEFPROC
#endif
typedef void  (*PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifdef glTranslated
#undef glTranslated
#endif
#ifdef PFNGLTRANSLATEDPROC
#undef PFNGLTRANSLATEDPROC
#endif
typedef void  (*PFNGLTRANSLATEDPROC)(GLdouble x, GLdouble y, GLdouble z);

#ifdef glTranslatef
#undef glTranslatef
#endif
#ifdef PFNGLTRANSLATEFPROC
#undef PFNGLTRANSLATEFPROC
#endif
typedef void  (*PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifndef GL_VERSION_1_1
#define GL_VERSION_1_1 1
#endif

#ifdef glDrawArrays
#undef glDrawArrays
#endif
#ifdef PFNGLDRAWARRAYSPROC
#undef PFNGLDRAWARRAYSPROC
#endif
typedef void  (*PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);

#ifdef glDrawElements
#undef glDrawElements
#endif
#ifdef PFNGLDRAWELEMENTSPROC
#undef PFNGLDRAWELEMENTSPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices);

#ifdef glGetPointerv
#undef glGetPointerv
#endif
#ifdef PFNGLGETPOINTERVPROC
#undef PFNGLGETPOINTERVPROC
#endif
typedef void  (*PFNGLGETPOINTERVPROC)(GLenum pname, void **params);

#ifdef glPolygonOffset
#undef glPolygonOffset
#endif
#ifdef PFNGLPOLYGONOFFSETPROC
#undef PFNGLPOLYGONOFFSETPROC
#endif
typedef void  (*PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);

#ifdef glCopyTexImage1D
#undef glCopyTexImage1D
#endif
#ifdef PFNGLCOPYTEXIMAGE1DPROC
#undef PFNGLCOPYTEXIMAGE1DPROC
#endif
typedef void  (*PFNGLCOPYTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);

#ifdef glCopyTexImage2D
#undef glCopyTexImage2D
#endif
#ifdef PFNGLCOPYTEXIMAGE2DPROC
#undef PFNGLCOPYTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);

#ifdef glCopyTexSubImage1D
#undef glCopyTexSubImage1D
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE1DPROC
#undef PFNGLCOPYTEXSUBIMAGE1DPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);

#ifdef glCopyTexSubImage2D
#undef glCopyTexSubImage2D
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE2DPROC
#undef PFNGLCOPYTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glTexSubImage1D
#undef glTexSubImage1D
#endif
#ifdef PFNGLTEXSUBIMAGE1DPROC
#undef PFNGLTEXSUBIMAGE1DPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);

#ifdef glTexSubImage2D
#undef glTexSubImage2D
#endif
#ifdef PFNGLTEXSUBIMAGE2DPROC
#undef PFNGLTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifdef glBindTexture
#undef glBindTexture
#endif
#ifdef PFNGLBINDTEXTUREPROC
#undef PFNGLBINDTEXTUREPROC
#endif
typedef void  (*PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);

#ifdef glDeleteTextures
#undef glDeleteTextures
#endif
#ifdef PFNGLDELETETEXTURESPROC
#undef PFNGLDELETETEXTURESPROC
#endif
typedef void  (*PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint *textures);

#ifdef glGenTextures
#undef glGenTextures
#endif
#ifdef PFNGLGENTEXTURESPROC
#undef PFNGLGENTEXTURESPROC
#endif
typedef void  (*PFNGLGENTEXTURESPROC)(GLsizei n, GLuint *textures);

#ifdef glIsTexture
#undef glIsTexture
#endif
#ifdef PFNGLISTEXTUREPROC
#undef PFNGLISTEXTUREPROC
#endif
typedef GLboolean  (*PFNGLISTEXTUREPROC)(GLuint texture);

#ifdef glArrayElement
#undef glArrayElement
#endif
#ifdef PFNGLARRAYELEMENTPROC
#undef PFNGLARRAYELEMENTPROC
#endif
typedef void  (*PFNGLARRAYELEMENTPROC)(GLint i);

#ifdef glColorPointer
#undef glColorPointer
#endif
#ifdef PFNGLCOLORPOINTERPROC
#undef PFNGLCOLORPOINTERPROC
#endif
typedef void  (*PFNGLCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glDisableClientState
#undef glDisableClientState
#endif
#ifdef PFNGLDISABLECLIENTSTATEPROC
#undef PFNGLDISABLECLIENTSTATEPROC
#endif
typedef void  (*PFNGLDISABLECLIENTSTATEPROC)(GLenum array);

#ifdef glEdgeFlagPointer
#undef glEdgeFlagPointer
#endif
#ifdef PFNGLEDGEFLAGPOINTERPROC
#undef PFNGLEDGEFLAGPOINTERPROC
#endif
typedef void  (*PFNGLEDGEFLAGPOINTERPROC)(GLsizei stride, const void *pointer);

#ifdef glEnableClientState
#undef glEnableClientState
#endif
#ifdef PFNGLENABLECLIENTSTATEPROC
#undef PFNGLENABLECLIENTSTATEPROC
#endif
typedef void  (*PFNGLENABLECLIENTSTATEPROC)(GLenum array);

#ifdef glIndexPointer
#undef glIndexPointer
#endif
#ifdef PFNGLINDEXPOINTERPROC
#undef PFNGLINDEXPOINTERPROC
#endif
typedef void  (*PFNGLINDEXPOINTERPROC)(GLenum type, GLsizei stride, const void *pointer);

#ifdef glInterleavedArrays
#undef glInterleavedArrays
#endif
#ifdef PFNGLINTERLEAVEDARRAYSPROC
#undef PFNGLINTERLEAVEDARRAYSPROC
#endif
typedef void  (*PFNGLINTERLEAVEDARRAYSPROC)(GLenum format, GLsizei stride, const void *pointer);

#ifdef glNormalPointer
#undef glNormalPointer
#endif
#ifdef PFNGLNORMALPOINTERPROC
#undef PFNGLNORMALPOINTERPROC
#endif
typedef void  (*PFNGLNORMALPOINTERPROC)(GLenum type, GLsizei stride, const void *pointer);

#ifdef glTexCoordPointer
#undef glTexCoordPointer
#endif
#ifdef PFNGLTEXCOORDPOINTERPROC
#undef PFNGLTEXCOORDPOINTERPROC
#endif
typedef void  (*PFNGLTEXCOORDPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glVertexPointer
#undef glVertexPointer
#endif
#ifdef PFNGLVERTEXPOINTERPROC
#undef PFNGLVERTEXPOINTERPROC
#endif
typedef void  (*PFNGLVERTEXPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glAreTexturesResident
#undef glAreTexturesResident
#endif
#ifdef PFNGLARETEXTURESRESIDENTPROC
#undef PFNGLARETEXTURESRESIDENTPROC
#endif
typedef GLboolean  (*PFNGLARETEXTURESRESIDENTPROC)(GLsizei n, const GLuint *textures, GLboolean *residences);

#ifdef glPrioritizeTextures
#undef glPrioritizeTextures
#endif
#ifdef PFNGLPRIORITIZETEXTURESPROC
#undef PFNGLPRIORITIZETEXTURESPROC
#endif
typedef void  (*PFNGLPRIORITIZETEXTURESPROC)(GLsizei n, const GLuint *textures, const GLfloat *priorities);

#ifdef glIndexub
#undef glIndexub
#endif
#ifdef PFNGLINDEXUBPROC
#undef PFNGLINDEXUBPROC
#endif
typedef void  (*PFNGLINDEXUBPROC)(GLubyte c);

#ifdef glIndexubv
#undef glIndexubv
#endif
#ifdef PFNGLINDEXUBVPROC
#undef PFNGLINDEXUBVPROC
#endif
typedef void  (*PFNGLINDEXUBVPROC)(const GLubyte *c);

#ifdef glPopClientAttrib
#undef glPopClientAttrib
#endif
#ifdef PFNGLPOPCLIENTATTRIBPROC
#undef PFNGLPOPCLIENTATTRIBPROC
#endif
typedef void  (*PFNGLPOPCLIENTATTRIBPROC)(void);

#ifdef glPushClientAttrib
#undef glPushClientAttrib
#endif
#ifdef PFNGLPUSHCLIENTATTRIBPROC
#undef PFNGLPUSHCLIENTATTRIBPROC
#endif
typedef void  (*PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield mask);

#ifndef GL_DEPTH_BUFFER_BIT
#define GL_DEPTH_BUFFER_BIT 0x00000100
#endif

#ifndef GL_STENCIL_BUFFER_BIT
#define GL_STENCIL_BUFFER_BIT 0x00000400
#endif

#ifndef GL_COLOR_BUFFER_BIT
#define GL_COLOR_BUFFER_BIT 0x00004000
#endif

#ifndef GL_FALSE
#define GL_FALSE 0
#endif

#ifndef GL_TRUE
#define GL_TRUE 1
#endif

#ifndef GL_POINTS
#define GL_POINTS 0x0000
#endif

#ifndef GL_LINES
#define GL_LINES 0x0001
#endif

#ifndef GL_LINE_LOOP
#define GL_LINE_LOOP 0x0002
#endif

#ifndef GL_LINE_STRIP
#define GL_LINE_STRIP 0x0003
#endif

#ifndef GL_TRIANGLES
#define GL_TRIANGLES 0x0004
#endif

#ifndef GL_TRIANGLE_STRIP
#define GL_TRIANGLE_STRIP 0x0005
#endif

#ifndef GL_TRIANGLE_FAN
#define GL_TRIANGLE_FAN 0x0006
#endif

#ifndef GL_QUADS
#define GL_QUADS 0x0007
#endif

#ifndef GL_NEVER
#define GL_NEVER 0x0200
#endif

#ifndef GL_LESS
#define GL_LESS 0x0201
#endif

#ifndef GL_EQUAL
#define GL_EQUAL 0x0202
#endif

#ifndef GL_LEQUAL
#define GL_LEQUAL 0x0203
#endif

#ifndef GL_GREATER
#define GL_GREATER 0x0204
#endif

#ifndef GL_NOTEQUAL
#define GL_NOTEQUAL 0x0205
#endif

#ifndef GL_GEQUAL
#define GL_GEQUAL 0x0206
#endif

#ifndef GL_ALWAYS
#define GL_ALWAYS 0x0207
#endif

#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_ONE
#define GL_ONE 1
#endif

#ifndef GL_SRC_COLOR
#define GL_SRC_COLOR 0x0300
#endif

#ifndef GL_ONE_MINUS_SRC_COLOR
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#endif

#ifndef GL_SRC_ALPHA
#define GL_SRC_ALPHA 0x0302
#endif

#ifndef GL_ONE_MINUS_SRC_ALPHA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#endif

#ifndef GL_DST_ALPHA
#define GL_DST_ALPHA 0x0304
#endif

#ifndef GL_ONE_MINUS_DST_ALPHA
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#endif

#ifndef GL_DST_COLOR
#define GL_DST_COLOR 0x0306
#endif

#ifndef GL_ONE_MINUS_DST_COLOR
#define GL_ONE_MINUS_DST_COLOR 0x0307
#endif

#ifndef GL_SRC_ALPHA_SATURATE
#define GL_SRC_ALPHA_SATURATE 0x0308
#endif

#ifndef GL_NONE
#define GL_NONE 0
#endif

#ifndef GL_FRONT_LEFT
#define GL_FRONT_LEFT 0x0400
#endif

#ifndef GL_FRONT_RIGHT
#define GL_FRONT_RIGHT 0x0401
#endif

#ifndef GL_BACK_LEFT
#define GL_BACK_LEFT 0x0402
#endif

#ifndef GL_BACK_RIGHT
#define GL_BACK_RIGHT 0x0403
#endif

#ifndef GL_FRONT
#define GL_FRONT 0x0404
#endif

#ifndef GL_BACK
#define GL_BACK 0x0405
#endif

#ifndef GL_LEFT
#define GL_LEFT 0x0406
#endif

#ifndef GL_RIGHT
#define GL_RIGHT 0x0407
#endif

#ifndef GL_FRONT_AND_BACK
#define GL_FRONT_AND_BACK 0x0408
#endif

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_INVALID_ENUM
#define GL_INVALID_ENUM 0x0500
#endif

#ifndef GL_INVALID_VALUE
#define GL_INVALID_VALUE 0x0501
#endif

#ifndef GL_INVALID_OPERATION
#define GL_INVALID_OPERATION 0x0502
#endif

#ifndef GL_OUT_OF_MEMORY
#define GL_OUT_OF_MEMORY 0x0505
#endif

#ifndef GL_CW
#define GL_CW 0x0900
#endif

#ifndef GL_CCW
#define GL_CCW 0x0901
#endif

#ifndef GL_POINT_SIZE
#define GL_POINT_SIZE 0x0B11
#endif

#ifndef GL_POINT_SIZE_RANGE
#define GL_POINT_SIZE_RANGE 0x0B12
#endif

#ifndef GL_POINT_SIZE_GRANULARITY
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#endif

#ifndef GL_LINE_SMOOTH
#define GL_LINE_SMOOTH 0x0B20
#endif

#ifndef GL_LINE_WIDTH
#define GL_LINE_WIDTH 0x0B21
#endif

#ifndef GL_LINE_WIDTH_RANGE
#define GL_LINE_WIDTH_RANGE 0x0B22
#endif

#ifndef GL_LINE_WIDTH_GRANULARITY
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#endif

#ifndef GL_POLYGON_MODE
#define GL_POLYGON_MODE 0x0B40
#endif

#ifndef GL_POLYGON_SMOOTH
#define GL_POLYGON_SMOOTH 0x0B41
#endif

#ifndef GL_CULL_FACE
#define GL_CULL_FACE 0x0B44
#endif

#ifndef GL_CULL_FACE_MODE
#define GL_CULL_FACE_MODE 0x0B45
#endif

#ifndef GL_FRONT_FACE
#define GL_FRONT_FACE 0x0B46
#endif

#ifndef GL_DEPTH_RANGE
#define GL_DEPTH_RANGE 0x0B70
#endif

#ifndef GL_DEPTH_TEST
#define GL_DEPTH_TEST 0x0B71
#endif

#ifndef GL_DEPTH_WRITEMASK
#define GL_DEPTH_WRITEMASK 0x0B72
#endif

#ifndef GL_DEPTH_CLEAR_VALUE
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#endif

#ifndef GL_DEPTH_FUNC
#define GL_DEPTH_FUNC 0x0B74
#endif

#ifndef GL_STENCIL_TEST
#define GL_STENCIL_TEST 0x0B90
#endif

#ifndef GL_STENCIL_CLEAR_VALUE
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#endif

#ifndef GL_STENCIL_FUNC
#define GL_STENCIL_FUNC 0x0B92
#endif

#ifndef GL_STENCIL_VALUE_MASK
#define GL_STENCIL_VALUE_MASK 0x0B93
#endif

#ifndef GL_STENCIL_FAIL
#define GL_STENCIL_FAIL 0x0B94
#endif

#ifndef GL_STENCIL_PASS_DEPTH_FAIL
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#endif

#ifndef GL_STENCIL_PASS_DEPTH_PASS
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#endif

#ifndef GL_STENCIL_REF
#define GL_STENCIL_REF 0x0B97
#endif

#ifndef GL_STENCIL_WRITEMASK
#define GL_STENCIL_WRITEMASK 0x0B98
#endif

#ifndef GL_VIEWPORT
#define GL_VIEWPORT 0x0BA2
#endif

#ifndef GL_DITHER
#define GL_DITHER 0x0BD0
#endif

#ifndef GL_BLEND_DST
#define GL_BLEND_DST 0x0BE0
#endif

#ifndef GL_BLEND_SRC
#define GL_BLEND_SRC 0x0BE1
#endif

#ifndef GL_BLEND
#define GL_BLEND 0x0BE2
#endif

#ifndef GL_LOGIC_OP_MODE
#define GL_LOGIC_OP_MODE 0x0BF0
#endif

#ifndef GL_COLOR_LOGIC_OP
#define GL_COLOR_LOGIC_OP 0x0BF2
#endif

#ifndef GL_DRAW_BUFFER
#define GL_DRAW_BUFFER 0x0C01
#endif

#ifndef GL_READ_BUFFER
#define GL_READ_BUFFER 0x0C02
#endif

#ifndef GL_SCISSOR_BOX
#define GL_SCISSOR_BOX 0x0C10
#endif

#ifndef GL_SCISSOR_TEST
#define GL_SCISSOR_TEST 0x0C11
#endif

#ifndef GL_COLOR_CLEAR_VALUE
#define GL_COLOR_CLEAR_VALUE 0x0C22
#endif

#ifndef GL_COLOR_WRITEMASK
#define GL_COLOR_WRITEMASK 0x0C23
#endif

#ifndef GL_DOUBLEBUFFER
#define GL_DOUBLEBUFFER 0x0C32
#endif

#ifndef GL_STEREO
#define GL_STEREO 0x0C33
#endif

#ifndef GL_LINE_SMOOTH_HINT
#define GL_LINE_SMOOTH_HINT 0x0C52
#endif

#ifndef GL_POLYGON_SMOOTH_HINT
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#endif

#ifndef GL_UNPACK_SWAP_BYTES
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#endif

#ifndef GL_UNPACK_LSB_FIRST
#define GL_UNPACK_LSB_FIRST 0x0CF1
#endif

#ifndef GL_UNPACK_ROW_LENGTH
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#endif

#ifndef GL_UNPACK_SKIP_ROWS
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#endif

#ifndef GL_UNPACK_SKIP_PIXELS
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#endif

#ifndef GL_UNPACK_ALIGNMENT
#define GL_UNPACK_ALIGNMENT 0x0CF5
#endif

#ifndef GL_PACK_SWAP_BYTES
#define GL_PACK_SWAP_BYTES 0x0D00
#endif

#ifndef GL_PACK_LSB_FIRST
#define GL_PACK_LSB_FIRST 0x0D01
#endif

#ifndef GL_PACK_ROW_LENGTH
#define GL_PACK_ROW_LENGTH 0x0D02
#endif

#ifndef GL_PACK_SKIP_ROWS
#define GL_PACK_SKIP_ROWS 0x0D03
#endif

#ifndef GL_PACK_SKIP_PIXELS
#define GL_PACK_SKIP_PIXELS 0x0D04
#endif

#ifndef GL_PACK_ALIGNMENT
#define GL_PACK_ALIGNMENT 0x0D05
#endif

#ifndef GL_MAX_TEXTURE_SIZE
#define GL_MAX_TEXTURE_SIZE 0x0D33
#endif

#ifndef GL_MAX_VIEWPORT_DIMS
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#endif

#ifndef GL_SUBPIXEL_BITS
#define GL_SUBPIXEL_BITS 0x0D50
#endif

#ifndef GL_TEXTURE_1D
#define GL_TEXTURE_1D 0x0DE0
#endif

#ifndef GL_TEXTURE_2D
#define GL_TEXTURE_2D 0x0DE1
#endif

#ifndef GL_POLYGON_OFFSET_UNITS
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#endif

#ifndef GL_POLYGON_OFFSET_POINT
#define GL_POLYGON_OFFSET_POINT 0x2A01
#endif

#ifndef GL_POLYGON_OFFSET_LINE
#define GL_POLYGON_OFFSET_LINE 0x2A02
#endif

#ifndef GL_POLYGON_OFFSET_FILL
#define GL_POLYGON_OFFSET_FILL 0x8037
#endif

#ifndef GL_POLYGON_OFFSET_FACTOR
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#endif

#ifndef GL_TEXTURE_BINDING_1D
#define GL_TEXTURE_BINDING_1D 0x8068
#endif

#ifndef GL_TEXTURE_BINDING_2D
#define GL_TEXTURE_BINDING_2D 0x8069
#endif

#ifndef GL_TEXTURE_WIDTH
#define GL_TEXTURE_WIDTH 0x1000
#endif

#ifndef GL_TEXTURE_HEIGHT
#define GL_TEXTURE_HEIGHT 0x1001
#endif

#ifndef GL_TEXTURE_INTERNAL_FORMAT
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#endif

#ifndef GL_TEXTURE_BORDER_COLOR
#define GL_TEXTURE_BORDER_COLOR 0x1004
#endif

#ifndef GL_TEXTURE_RED_SIZE
#define GL_TEXTURE_RED_SIZE 0x805C
#endif

#ifndef GL_TEXTURE_GREEN_SIZE
#define GL_TEXTURE_GREEN_SIZE 0x805D
#endif

#ifndef GL_TEXTURE_BLUE_SIZE
#define GL_TEXTURE_BLUE_SIZE 0x805E
#endif

#ifndef GL_TEXTURE_ALPHA_SIZE
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#endif

#ifndef GL_DONT_CARE
#define GL_DONT_CARE 0x1100
#endif

#ifndef GL_FASTEST
#define GL_FASTEST 0x1101
#endif

#ifndef GL_NICEST
#define GL_NICEST 0x1102
#endif

#ifndef GL_BYTE
#define GL_BYTE 0x1400
#endif

#ifndef GL_UNSIGNED_BYTE
#define GL_UNSIGNED_BYTE 0x1401
#endif

#ifndef GL_SHORT
#define GL_SHORT 0x1402
#endif

#ifndef GL_UNSIGNED_SHORT
#define GL_UNSIGNED_SHORT 0x1403
#endif

#ifndef GL_INT
#define GL_INT 0x1404
#endif

#ifndef GL_UNSIGNED_INT
#define GL_UNSIGNED_INT 0x1405
#endif

#ifndef GL_FLOAT
#define GL_FLOAT 0x1406
#endif

#ifndef GL_DOUBLE
#define GL_DOUBLE 0x140A
#endif

#ifndef GL_STACK_OVERFLOW
#define GL_STACK_OVERFLOW 0x0503
#endif

#ifndef GL_STACK_UNDERFLOW
#define GL_STACK_UNDERFLOW 0x0504
#endif

#ifndef GL_CLEAR
#define GL_CLEAR 0x1500
#endif

#ifndef GL_AND
#define GL_AND 0x1501
#endif

#ifndef GL_AND_REVERSE
#define GL_AND_REVERSE 0x1502
#endif

#ifndef GL_COPY
#define GL_COPY 0x1503
#endif

#ifndef GL_AND_INVERTED
#define GL_AND_INVERTED 0x1504
#endif

#ifndef GL_NOOP
#define GL_NOOP 0x1505
#endif

#ifndef GL_XOR
#define GL_XOR 0x1506
#endif

#ifndef GL_OR
#define GL_OR 0x1507
#endif

#ifndef GL_NOR
#define GL_NOR 0x1508
#endif

#ifndef GL_EQUIV
#define GL_EQUIV 0x1509
#endif

#ifndef GL_INVERT
#define GL_INVERT 0x150A
#endif

#ifndef GL_OR_REVERSE
#define GL_OR_REVERSE 0x150B
#endif

#ifndef GL_COPY_INVERTED
#define GL_COPY_INVERTED 0x150C
#endif

#ifndef GL_OR_INVERTED
#define GL_OR_INVERTED 0x150D
#endif

#ifndef GL_NAND
#define GL_NAND 0x150E
#endif

#ifndef GL_SET
#define GL_SET 0x150F
#endif

#ifndef GL_TEXTURE
#define GL_TEXTURE 0x1702
#endif

#ifndef GL_COLOR
#define GL_COLOR 0x1800
#endif

#ifndef GL_DEPTH
#define GL_DEPTH 0x1801
#endif

#ifndef GL_STENCIL
#define GL_STENCIL 0x1802
#endif

#ifndef GL_STENCIL_INDEX
#define GL_STENCIL_INDEX 0x1901
#endif

#ifndef GL_DEPTH_COMPONENT
#define GL_DEPTH_COMPONENT 0x1902
#endif

#ifndef GL_RED
#define GL_RED 0x1903
#endif

#ifndef GL_GREEN
#define GL_GREEN 0x1904
#endif

#ifndef GL_BLUE
#define GL_BLUE 0x1905
#endif

#ifndef GL_ALPHA
#define GL_ALPHA 0x1906
#endif

#ifndef GL_RGB
#define GL_RGB 0x1907
#endif

#ifndef GL_RGBA
#define GL_RGBA 0x1908
#endif

#ifndef GL_POINT
#define GL_POINT 0x1B00
#endif

#ifndef GL_LINE
#define GL_LINE 0x1B01
#endif

#ifndef GL_FILL
#define GL_FILL 0x1B02
#endif

#ifndef GL_KEEP
#define GL_KEEP 0x1E00
#endif

#ifndef GL_REPLACE
#define GL_REPLACE 0x1E01
#endif

#ifndef GL_INCR
#define GL_INCR 0x1E02
#endif

#ifndef GL_DECR
#define GL_DECR 0x1E03
#endif

#ifndef GL_VENDOR
#define GL_VENDOR 0x1F00
#endif

#ifndef GL_RENDERER
#define GL_RENDERER 0x1F01
#endif

#ifndef GL_VERSION
#define GL_VERSION 0x1F02
#endif

#ifndef GL_EXTENSIONS
#define GL_EXTENSIONS 0x1F03
#endif

#ifndef GL_NEAREST
#define GL_NEAREST 0x2600
#endif

#ifndef GL_LINEAR
#define GL_LINEAR 0x2601
#endif

#ifndef GL_NEAREST_MIPMAP_NEAREST
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#endif

#ifndef GL_LINEAR_MIPMAP_NEAREST
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#endif

#ifndef GL_NEAREST_MIPMAP_LINEAR
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#endif

#ifndef GL_LINEAR_MIPMAP_LINEAR
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#endif

#ifndef GL_TEXTURE_MAG_FILTER
#define GL_TEXTURE_MAG_FILTER 0x2800
#endif

#ifndef GL_TEXTURE_MIN_FILTER
#define GL_TEXTURE_MIN_FILTER 0x2801
#endif

#ifndef GL_TEXTURE_WRAP_S
#define GL_TEXTURE_WRAP_S 0x2802
#endif

#ifndef GL_TEXTURE_WRAP_T
#define GL_TEXTURE_WRAP_T 0x2803
#endif

#ifndef GL_PROXY_TEXTURE_1D
#define GL_PROXY_TEXTURE_1D 0x8063
#endif

#ifndef GL_PROXY_TEXTURE_2D
#define GL_PROXY_TEXTURE_2D 0x8064
#endif

#ifndef GL_REPEAT
#define GL_REPEAT 0x2901
#endif

#ifndef GL_R3_G3_B2
#define GL_R3_G3_B2 0x2A10
#endif

#ifndef GL_RGB4
#define GL_RGB4 0x804F
#endif

#ifndef GL_RGB5
#define GL_RGB5 0x8050
#endif

#ifndef GL_RGB8
#define GL_RGB8 0x8051
#endif

#ifndef GL_RGB10
#define GL_RGB10 0x8052
#endif

#ifndef GL_RGB12
#define GL_RGB12 0x8053
#endif

#ifndef GL_RGB16
#define GL_RGB16 0x8054
#endif

#ifndef GL_RGBA2
#define GL_RGBA2 0x8055
#endif

#ifndef GL_RGBA4
#define GL_RGBA4 0x8056
#endif

#ifndef GL_RGB5_A1
#define GL_RGB5_A1 0x8057
#endif

#ifndef GL_RGBA8
#define GL_RGBA8 0x8058
#endif

#ifndef GL_RGB10_A2
#define GL_RGB10_A2 0x8059
#endif

#ifndef GL_RGBA12
#define GL_RGBA12 0x805A
#endif

#ifndef GL_RGBA16
#define GL_RGBA16 0x805B
#endif

#ifndef GL_CURRENT_BIT
#define GL_CURRENT_BIT 0x00000001
#endif

#ifndef GL_POINT_BIT
#define GL_POINT_BIT 0x00000002
#endif

#ifndef GL_LINE_BIT
#define GL_LINE_BIT 0x00000004
#endif

#ifndef GL_POLYGON_BIT
#define GL_POLYGON_BIT 0x00000008
#endif

#ifndef GL_POLYGON_STIPPLE_BIT
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#endif

#ifndef GL_PIXEL_MODE_BIT
#define GL_PIXEL_MODE_BIT 0x00000020
#endif

#ifndef GL_LIGHTING_BIT
#define GL_LIGHTING_BIT 0x00000040
#endif

#ifndef GL_FOG_BIT
#define GL_FOG_BIT 0x00000080
#endif

#ifndef GL_ACCUM_BUFFER_BIT
#define GL_ACCUM_BUFFER_BIT 0x00000200
#endif

#ifndef GL_VIEWPORT_BIT
#define GL_VIEWPORT_BIT 0x00000800
#endif

#ifndef GL_TRANSFORM_BIT
#define GL_TRANSFORM_BIT 0x00001000
#endif

#ifndef GL_ENABLE_BIT
#define GL_ENABLE_BIT 0x00002000
#endif

#ifndef GL_HINT_BIT
#define GL_HINT_BIT 0x00008000
#endif

#ifndef GL_EVAL_BIT
#define GL_EVAL_BIT 0x00010000
#endif

#ifndef GL_LIST_BIT
#define GL_LIST_BIT 0x00020000
#endif

#ifndef GL_TEXTURE_BIT
#define GL_TEXTURE_BIT 0x00040000
#endif

#ifndef GL_SCISSOR_BIT
#define GL_SCISSOR_BIT 0x00080000
#endif

#ifndef GL_ALL_ATTRIB_BITS
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#endif

#ifndef GL_CLIENT_PIXEL_STORE_BIT
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#endif

#ifndef GL_CLIENT_VERTEX_ARRAY_BIT
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#endif

#ifndef GL_CLIENT_ALL_ATTRIB_BITS
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#endif

#ifndef GL_QUAD_STRIP
#define GL_QUAD_STRIP 0x0008
#endif

#ifndef GL_POLYGON
#define GL_POLYGON 0x0009
#endif

#ifndef GL_ACCUM
#define GL_ACCUM 0x0100
#endif

#ifndef GL_LOAD
#define GL_LOAD 0x0101
#endif

#ifndef GL_RETURN
#define GL_RETURN 0x0102
#endif

#ifndef GL_MULT
#define GL_MULT 0x0103
#endif

#ifndef GL_ADD
#define GL_ADD 0x0104
#endif

#ifndef GL_AUX0
#define GL_AUX0 0x0409
#endif

#ifndef GL_AUX1
#define GL_AUX1 0x040A
#endif

#ifndef GL_AUX2
#define GL_AUX2 0x040B
#endif

#ifndef GL_AUX3
#define GL_AUX3 0x040C
#endif

#ifndef GL_2D
#define GL_2D 0x0600
#endif

#ifndef GL_3D
#define GL_3D 0x0601
#endif

#ifndef GL_3D_COLOR
#define GL_3D_COLOR 0x0602
#endif

#ifndef GL_3D_COLOR_TEXTURE
#define GL_3D_COLOR_TEXTURE 0x0603
#endif

#ifndef GL_4D_COLOR_TEXTURE
#define GL_4D_COLOR_TEXTURE 0x0604
#endif

#ifndef GL_PASS_THROUGH_TOKEN
#define GL_PASS_THROUGH_TOKEN 0x0700
#endif

#ifndef GL_POINT_TOKEN
#define GL_POINT_TOKEN 0x0701
#endif

#ifndef GL_LINE_TOKEN
#define GL_LINE_TOKEN 0x0702
#endif

#ifndef GL_POLYGON_TOKEN
#define GL_POLYGON_TOKEN 0x0703
#endif

#ifndef GL_BITMAP_TOKEN
#define GL_BITMAP_TOKEN 0x0704
#endif

#ifndef GL_DRAW_PIXEL_TOKEN
#define GL_DRAW_PIXEL_TOKEN 0x0705
#endif

#ifndef GL_COPY_PIXEL_TOKEN
#define GL_COPY_PIXEL_TOKEN 0x0706
#endif

#ifndef GL_LINE_RESET_TOKEN
#define GL_LINE_RESET_TOKEN 0x0707
#endif

#ifndef GL_EXP
#define GL_EXP 0x0800
#endif

#ifndef GL_EXP2
#define GL_EXP2 0x0801
#endif

#ifndef GL_COEFF
#define GL_COEFF 0x0A00
#endif

#ifndef GL_ORDER
#define GL_ORDER 0x0A01
#endif

#ifndef GL_DOMAIN
#define GL_DOMAIN 0x0A02
#endif

#ifndef GL_PIXEL_MAP_I_TO_I
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#endif

#ifndef GL_PIXEL_MAP_S_TO_S
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#endif

#ifndef GL_PIXEL_MAP_I_TO_R
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#endif

#ifndef GL_PIXEL_MAP_I_TO_G
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#endif

#ifndef GL_PIXEL_MAP_I_TO_B
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#endif

#ifndef GL_PIXEL_MAP_I_TO_A
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#endif

#ifndef GL_PIXEL_MAP_R_TO_R
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#endif

#ifndef GL_PIXEL_MAP_G_TO_G
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#endif

#ifndef GL_PIXEL_MAP_B_TO_B
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#endif

#ifndef GL_PIXEL_MAP_A_TO_A
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#endif

#ifndef GL_VERTEX_ARRAY_POINTER
#define GL_VERTEX_ARRAY_POINTER 0x808E
#endif

#ifndef GL_NORMAL_ARRAY_POINTER
#define GL_NORMAL_ARRAY_POINTER 0x808F
#endif

#ifndef GL_COLOR_ARRAY_POINTER
#define GL_COLOR_ARRAY_POINTER 0x8090
#endif

#ifndef GL_INDEX_ARRAY_POINTER
#define GL_INDEX_ARRAY_POINTER 0x8091
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_POINTER
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#endif

#ifndef GL_EDGE_FLAG_ARRAY_POINTER
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#endif

#ifndef GL_FEEDBACK_BUFFER_POINTER
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#endif

#ifndef GL_SELECTION_BUFFER_POINTER
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#endif

#ifndef GL_CURRENT_COLOR
#define GL_CURRENT_COLOR 0x0B00
#endif

#ifndef GL_CURRENT_INDEX
#define GL_CURRENT_INDEX 0x0B01
#endif

#ifndef GL_CURRENT_NORMAL
#define GL_CURRENT_NORMAL 0x0B02
#endif

#ifndef GL_CURRENT_TEXTURE_COORDS
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#endif

#ifndef GL_CURRENT_RASTER_COLOR
#define GL_CURRENT_RASTER_COLOR 0x0B04
#endif

#ifndef GL_CURRENT_RASTER_INDEX
#define GL_CURRENT_RASTER_INDEX 0x0B05
#endif

#ifndef GL_CURRENT_RASTER_TEXTURE_COORDS
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#endif

#ifndef GL_CURRENT_RASTER_POSITION
#define GL_CURRENT_RASTER_POSITION 0x0B07
#endif

#ifndef GL_CURRENT_RASTER_POSITION_VALID
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#endif

#ifndef GL_CURRENT_RASTER_DISTANCE
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#endif

#ifndef GL_POINT_SMOOTH
#define GL_POINT_SMOOTH 0x0B10
#endif

#ifndef GL_LINE_STIPPLE
#define GL_LINE_STIPPLE 0x0B24
#endif

#ifndef GL_LINE_STIPPLE_PATTERN
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#endif

#ifndef GL_LINE_STIPPLE_REPEAT
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#endif

#ifndef GL_LIST_MODE
#define GL_LIST_MODE 0x0B30
#endif

#ifndef GL_MAX_LIST_NESTING
#define GL_MAX_LIST_NESTING 0x0B31
#endif

#ifndef GL_LIST_BASE
#define GL_LIST_BASE 0x0B32
#endif

#ifndef GL_LIST_INDEX
#define GL_LIST_INDEX 0x0B33
#endif

#ifndef GL_POLYGON_STIPPLE
#define GL_POLYGON_STIPPLE 0x0B42
#endif

#ifndef GL_EDGE_FLAG
#define GL_EDGE_FLAG 0x0B43
#endif

#ifndef GL_LIGHTING
#define GL_LIGHTING 0x0B50
#endif

#ifndef GL_LIGHT_MODEL_LOCAL_VIEWER
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#endif

#ifndef GL_LIGHT_MODEL_TWO_SIDE
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#endif

#ifndef GL_LIGHT_MODEL_AMBIENT
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#endif

#ifndef GL_SHADE_MODEL
#define GL_SHADE_MODEL 0x0B54
#endif

#ifndef GL_COLOR_MATERIAL_FACE
#define GL_COLOR_MATERIAL_FACE 0x0B55
#endif

#ifndef GL_COLOR_MATERIAL_PARAMETER
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#endif

#ifndef GL_COLOR_MATERIAL
#define GL_COLOR_MATERIAL 0x0B57
#endif

#ifndef GL_FOG
#define GL_FOG 0x0B60
#endif

#ifndef GL_FOG_INDEX
#define GL_FOG_INDEX 0x0B61
#endif

#ifndef GL_FOG_DENSITY
#define GL_FOG_DENSITY 0x0B62
#endif

#ifndef GL_FOG_START
#define GL_FOG_START 0x0B63
#endif

#ifndef GL_FOG_END
#define GL_FOG_END 0x0B64
#endif

#ifndef GL_FOG_MODE
#define GL_FOG_MODE 0x0B65
#endif

#ifndef GL_FOG_COLOR
#define GL_FOG_COLOR 0x0B66
#endif

#ifndef GL_ACCUM_CLEAR_VALUE
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#endif

#ifndef GL_MATRIX_MODE
#define GL_MATRIX_MODE 0x0BA0
#endif

#ifndef GL_NORMALIZE
#define GL_NORMALIZE 0x0BA1
#endif

#ifndef GL_MODELVIEW_STACK_DEPTH
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#endif

#ifndef GL_PROJECTION_STACK_DEPTH
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#endif

#ifndef GL_TEXTURE_STACK_DEPTH
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#endif

#ifndef GL_MODELVIEW_MATRIX
#define GL_MODELVIEW_MATRIX 0x0BA6
#endif

#ifndef GL_PROJECTION_MATRIX
#define GL_PROJECTION_MATRIX 0x0BA7
#endif

#ifndef GL_TEXTURE_MATRIX
#define GL_TEXTURE_MATRIX 0x0BA8
#endif

#ifndef GL_ATTRIB_STACK_DEPTH
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#endif

#ifndef GL_CLIENT_ATTRIB_STACK_DEPTH
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#endif

#ifndef GL_ALPHA_TEST
#define GL_ALPHA_TEST 0x0BC0
#endif

#ifndef GL_ALPHA_TEST_FUNC
#define GL_ALPHA_TEST_FUNC 0x0BC1
#endif

#ifndef GL_ALPHA_TEST_REF
#define GL_ALPHA_TEST_REF 0x0BC2
#endif

#ifndef GL_INDEX_LOGIC_OP
#define GL_INDEX_LOGIC_OP 0x0BF1
#endif

#ifndef GL_LOGIC_OP
#define GL_LOGIC_OP 0x0BF1
#endif

#ifndef GL_AUX_BUFFERS
#define GL_AUX_BUFFERS 0x0C00
#endif

#ifndef GL_INDEX_CLEAR_VALUE
#define GL_INDEX_CLEAR_VALUE 0x0C20
#endif

#ifndef GL_INDEX_WRITEMASK
#define GL_INDEX_WRITEMASK 0x0C21
#endif

#ifndef GL_INDEX_MODE
#define GL_INDEX_MODE 0x0C30
#endif

#ifndef GL_RGBA_MODE
#define GL_RGBA_MODE 0x0C31
#endif

#ifndef GL_RENDER_MODE
#define GL_RENDER_MODE 0x0C40
#endif

#ifndef GL_PERSPECTIVE_CORRECTION_HINT
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#endif

#ifndef GL_POINT_SMOOTH_HINT
#define GL_POINT_SMOOTH_HINT 0x0C51
#endif

#ifndef GL_FOG_HINT
#define GL_FOG_HINT 0x0C54
#endif

#ifndef GL_TEXTURE_GEN_S
#define GL_TEXTURE_GEN_S 0x0C60
#endif

#ifndef GL_TEXTURE_GEN_T
#define GL_TEXTURE_GEN_T 0x0C61
#endif

#ifndef GL_TEXTURE_GEN_R
#define GL_TEXTURE_GEN_R 0x0C62
#endif

#ifndef GL_TEXTURE_GEN_Q
#define GL_TEXTURE_GEN_Q 0x0C63
#endif

#ifndef GL_PIXEL_MAP_I_TO_I_SIZE
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#endif

#ifndef GL_PIXEL_MAP_S_TO_S_SIZE
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#endif

#ifndef GL_PIXEL_MAP_I_TO_R_SIZE
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#endif

#ifndef GL_PIXEL_MAP_I_TO_G_SIZE
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#endif

#ifndef GL_PIXEL_MAP_I_TO_B_SIZE
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#endif

#ifndef GL_PIXEL_MAP_I_TO_A_SIZE
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#endif

#ifndef GL_PIXEL_MAP_R_TO_R_SIZE
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#endif

#ifndef GL_PIXEL_MAP_G_TO_G_SIZE
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#endif

#ifndef GL_PIXEL_MAP_B_TO_B_SIZE
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#endif

#ifndef GL_PIXEL_MAP_A_TO_A_SIZE
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#endif

#ifndef GL_MAP_COLOR
#define GL_MAP_COLOR 0x0D10
#endif

#ifndef GL_MAP_STENCIL
#define GL_MAP_STENCIL 0x0D11
#endif

#ifndef GL_INDEX_SHIFT
#define GL_INDEX_SHIFT 0x0D12
#endif

#ifndef GL_INDEX_OFFSET
#define GL_INDEX_OFFSET 0x0D13
#endif

#ifndef GL_RED_SCALE
#define GL_RED_SCALE 0x0D14
#endif

#ifndef GL_RED_BIAS
#define GL_RED_BIAS 0x0D15
#endif

#ifndef GL_ZOOM_X
#define GL_ZOOM_X 0x0D16
#endif

#ifndef GL_ZOOM_Y
#define GL_ZOOM_Y 0x0D17
#endif

#ifndef GL_GREEN_SCALE
#define GL_GREEN_SCALE 0x0D18
#endif

#ifndef GL_GREEN_BIAS
#define GL_GREEN_BIAS 0x0D19
#endif

#ifndef GL_BLUE_SCALE
#define GL_BLUE_SCALE 0x0D1A
#endif

#ifndef GL_BLUE_BIAS
#define GL_BLUE_BIAS 0x0D1B
#endif

#ifndef GL_ALPHA_SCALE
#define GL_ALPHA_SCALE 0x0D1C
#endif

#ifndef GL_ALPHA_BIAS
#define GL_ALPHA_BIAS 0x0D1D
#endif

#ifndef GL_DEPTH_SCALE
#define GL_DEPTH_SCALE 0x0D1E
#endif

#ifndef GL_DEPTH_BIAS
#define GL_DEPTH_BIAS 0x0D1F
#endif

#ifndef GL_MAX_EVAL_ORDER
#define GL_MAX_EVAL_ORDER 0x0D30
#endif

#ifndef GL_MAX_LIGHTS
#define GL_MAX_LIGHTS 0x0D31
#endif

#ifndef GL_MAX_CLIP_PLANES
#define GL_MAX_CLIP_PLANES 0x0D32
#endif

#ifndef GL_MAX_PIXEL_MAP_TABLE
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#endif

#ifndef GL_MAX_ATTRIB_STACK_DEPTH
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#endif

#ifndef GL_MAX_MODELVIEW_STACK_DEPTH
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#endif

#ifndef GL_MAX_NAME_STACK_DEPTH
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#endif

#ifndef GL_MAX_PROJECTION_STACK_DEPTH
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#endif

#ifndef GL_MAX_TEXTURE_STACK_DEPTH
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#endif

#ifndef GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#endif

#ifndef GL_INDEX_BITS
#define GL_INDEX_BITS 0x0D51
#endif

#ifndef GL_RED_BITS
#define GL_RED_BITS 0x0D52
#endif

#ifndef GL_GREEN_BITS
#define GL_GREEN_BITS 0x0D53
#endif

#ifndef GL_BLUE_BITS
#define GL_BLUE_BITS 0x0D54
#endif

#ifndef GL_ALPHA_BITS
#define GL_ALPHA_BITS 0x0D55
#endif

#ifndef GL_DEPTH_BITS
#define GL_DEPTH_BITS 0x0D56
#endif

#ifndef GL_STENCIL_BITS
#define GL_STENCIL_BITS 0x0D57
#endif

#ifndef GL_ACCUM_RED_BITS
#define GL_ACCUM_RED_BITS 0x0D58
#endif

#ifndef GL_ACCUM_GREEN_BITS
#define GL_ACCUM_GREEN_BITS 0x0D59
#endif

#ifndef GL_ACCUM_BLUE_BITS
#define GL_ACCUM_BLUE_BITS 0x0D5A
#endif

#ifndef GL_ACCUM_ALPHA_BITS
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#endif

#ifndef GL_NAME_STACK_DEPTH
#define GL_NAME_STACK_DEPTH 0x0D70
#endif

#ifndef GL_AUTO_NORMAL
#define GL_AUTO_NORMAL 0x0D80
#endif

#ifndef GL_MAP1_COLOR_4
#define GL_MAP1_COLOR_4 0x0D90
#endif

#ifndef GL_MAP1_INDEX
#define GL_MAP1_INDEX 0x0D91
#endif

#ifndef GL_MAP1_NORMAL
#define GL_MAP1_NORMAL 0x0D92
#endif

#ifndef GL_MAP1_TEXTURE_COORD_1
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#endif

#ifndef GL_MAP1_TEXTURE_COORD_2
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#endif

#ifndef GL_MAP1_TEXTURE_COORD_3
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#endif

#ifndef GL_MAP1_TEXTURE_COORD_4
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#endif

#ifndef GL_MAP1_VERTEX_3
#define GL_MAP1_VERTEX_3 0x0D97
#endif

#ifndef GL_MAP1_VERTEX_4
#define GL_MAP1_VERTEX_4 0x0D98
#endif

#ifndef GL_MAP2_COLOR_4
#define GL_MAP2_COLOR_4 0x0DB0
#endif

#ifndef GL_MAP2_INDEX
#define GL_MAP2_INDEX 0x0DB1
#endif

#ifndef GL_MAP2_NORMAL
#define GL_MAP2_NORMAL 0x0DB2
#endif

#ifndef GL_MAP2_TEXTURE_COORD_1
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#endif

#ifndef GL_MAP2_TEXTURE_COORD_2
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#endif

#ifndef GL_MAP2_TEXTURE_COORD_3
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#endif

#ifndef GL_MAP2_TEXTURE_COORD_4
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#endif

#ifndef GL_MAP2_VERTEX_3
#define GL_MAP2_VERTEX_3 0x0DB7
#endif

#ifndef GL_MAP2_VERTEX_4
#define GL_MAP2_VERTEX_4 0x0DB8
#endif

#ifndef GL_MAP1_GRID_DOMAIN
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#endif

#ifndef GL_MAP1_GRID_SEGMENTS
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#endif

#ifndef GL_MAP2_GRID_DOMAIN
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#endif

#ifndef GL_MAP2_GRID_SEGMENTS
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#endif

#ifndef GL_FEEDBACK_BUFFER_SIZE
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#endif

#ifndef GL_FEEDBACK_BUFFER_TYPE
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#endif

#ifndef GL_SELECTION_BUFFER_SIZE
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#endif

#ifndef GL_VERTEX_ARRAY
#define GL_VERTEX_ARRAY 0x8074
#endif

#ifndef GL_NORMAL_ARRAY
#define GL_NORMAL_ARRAY 0x8075
#endif

#ifndef GL_COLOR_ARRAY
#define GL_COLOR_ARRAY 0x8076
#endif

#ifndef GL_INDEX_ARRAY
#define GL_INDEX_ARRAY 0x8077
#endif

#ifndef GL_TEXTURE_COORD_ARRAY
#define GL_TEXTURE_COORD_ARRAY 0x8078
#endif

#ifndef GL_EDGE_FLAG_ARRAY
#define GL_EDGE_FLAG_ARRAY 0x8079
#endif

#ifndef GL_VERTEX_ARRAY_SIZE
#define GL_VERTEX_ARRAY_SIZE 0x807A
#endif

#ifndef GL_VERTEX_ARRAY_TYPE
#define GL_VERTEX_ARRAY_TYPE 0x807B
#endif

#ifndef GL_VERTEX_ARRAY_STRIDE
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#endif

#ifndef GL_NORMAL_ARRAY_TYPE
#define GL_NORMAL_ARRAY_TYPE 0x807E
#endif

#ifndef GL_NORMAL_ARRAY_STRIDE
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#endif

#ifndef GL_COLOR_ARRAY_SIZE
#define GL_COLOR_ARRAY_SIZE 0x8081
#endif

#ifndef GL_COLOR_ARRAY_TYPE
#define GL_COLOR_ARRAY_TYPE 0x8082
#endif

#ifndef GL_COLOR_ARRAY_STRIDE
#define GL_COLOR_ARRAY_STRIDE 0x8083
#endif

#ifndef GL_INDEX_ARRAY_TYPE
#define GL_INDEX_ARRAY_TYPE 0x8085
#endif

#ifndef GL_INDEX_ARRAY_STRIDE
#define GL_INDEX_ARRAY_STRIDE 0x8086
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_SIZE
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_TYPE
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_STRIDE
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#endif

#ifndef GL_EDGE_FLAG_ARRAY_STRIDE
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#endif

#ifndef GL_TEXTURE_COMPONENTS
#define GL_TEXTURE_COMPONENTS 0x1003
#endif

#ifndef GL_TEXTURE_BORDER
#define GL_TEXTURE_BORDER 0x1005
#endif

#ifndef GL_TEXTURE_LUMINANCE_SIZE
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#endif

#ifndef GL_TEXTURE_INTENSITY_SIZE
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#endif

#ifndef GL_TEXTURE_PRIORITY
#define GL_TEXTURE_PRIORITY 0x8066
#endif

#ifndef GL_TEXTURE_RESIDENT
#define GL_TEXTURE_RESIDENT 0x8067
#endif

#ifndef GL_AMBIENT
#define GL_AMBIENT 0x1200
#endif

#ifndef GL_DIFFUSE
#define GL_DIFFUSE 0x1201
#endif

#ifndef GL_SPECULAR
#define GL_SPECULAR 0x1202
#endif

#ifndef GL_POSITION
#define GL_POSITION 0x1203
#endif

#ifndef GL_SPOT_DIRECTION
#define GL_SPOT_DIRECTION 0x1204
#endif

#ifndef GL_SPOT_EXPONENT
#define GL_SPOT_EXPONENT 0x1205
#endif

#ifndef GL_SPOT_CUTOFF
#define GL_SPOT_CUTOFF 0x1206
#endif

#ifndef GL_CONSTANT_ATTENUATION
#define GL_CONSTANT_ATTENUATION 0x1207
#endif

#ifndef GL_LINEAR_ATTENUATION
#define GL_LINEAR_ATTENUATION 0x1208
#endif

#ifndef GL_QUADRATIC_ATTENUATION
#define GL_QUADRATIC_ATTENUATION 0x1209
#endif

#ifndef GL_COMPILE
#define GL_COMPILE 0x1300
#endif

#ifndef GL_COMPILE_AND_EXECUTE
#define GL_COMPILE_AND_EXECUTE 0x1301
#endif

#ifndef GL_2_BYTES
#define GL_2_BYTES 0x1407
#endif

#ifndef GL_3_BYTES
#define GL_3_BYTES 0x1408
#endif

#ifndef GL_4_BYTES
#define GL_4_BYTES 0x1409
#endif

#ifndef GL_EMISSION
#define GL_EMISSION 0x1600
#endif

#ifndef GL_SHININESS
#define GL_SHININESS 0x1601
#endif

#ifndef GL_AMBIENT_AND_DIFFUSE
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#endif

#ifndef GL_COLOR_INDEXES
#define GL_COLOR_INDEXES 0x1603
#endif

#ifndef GL_MODELVIEW
#define GL_MODELVIEW 0x1700
#endif

#ifndef GL_PROJECTION
#define GL_PROJECTION 0x1701
#endif

#ifndef GL_COLOR_INDEX
#define GL_COLOR_INDEX 0x1900
#endif

#ifndef GL_LUMINANCE
#define GL_LUMINANCE 0x1909
#endif

#ifndef GL_LUMINANCE_ALPHA
#define GL_LUMINANCE_ALPHA 0x190A
#endif

#ifndef GL_BITMAP
#define GL_BITMAP 0x1A00
#endif

#ifndef GL_RENDER
#define GL_RENDER 0x1C00
#endif

#ifndef GL_FEEDBACK
#define GL_FEEDBACK 0x1C01
#endif

#ifndef GL_SELECT
#define GL_SELECT 0x1C02
#endif

#ifndef GL_FLAT
#define GL_FLAT 0x1D00
#endif

#ifndef GL_SMOOTH
#define GL_SMOOTH 0x1D01
#endif

#ifndef GL_S
#define GL_S 0x2000
#endif

#ifndef GL_T
#define GL_T 0x2001
#endif

#ifndef GL_R
#define GL_R 0x2002
#endif

#ifndef GL_Q
#define GL_Q 0x2003
#endif

#ifndef GL_MODULATE
#define GL_MODULATE 0x2100
#endif

#ifndef GL_DECAL
#define GL_DECAL 0x2101
#endif

#ifndef GL_TEXTURE_ENV_MODE
#define GL_TEXTURE_ENV_MODE 0x2200
#endif

#ifndef GL_TEXTURE_ENV_COLOR
#define GL_TEXTURE_ENV_COLOR 0x2201
#endif

#ifndef GL_TEXTURE_ENV
#define GL_TEXTURE_ENV 0x2300
#endif

#ifndef GL_EYE_LINEAR
#define GL_EYE_LINEAR 0x2400
#endif

#ifndef GL_OBJECT_LINEAR
#define GL_OBJECT_LINEAR 0x2401
#endif

#ifndef GL_SPHERE_MAP
#define GL_SPHERE_MAP 0x2402
#endif

#ifndef GL_TEXTURE_GEN_MODE
#define GL_TEXTURE_GEN_MODE 0x2500
#endif

#ifndef GL_OBJECT_PLANE
#define GL_OBJECT_PLANE 0x2501
#endif

#ifndef GL_EYE_PLANE
#define GL_EYE_PLANE 0x2502
#endif

#ifndef GL_CLAMP
#define GL_CLAMP 0x2900
#endif

#ifndef GL_ALPHA4
#define GL_ALPHA4 0x803B
#endif

#ifndef GL_ALPHA8
#define GL_ALPHA8 0x803C
#endif

#ifndef GL_ALPHA12
#define GL_ALPHA12 0x803D
#endif

#ifndef GL_ALPHA16
#define GL_ALPHA16 0x803E
#endif

#ifndef GL_LUMINANCE4
#define GL_LUMINANCE4 0x803F
#endif

#ifndef GL_LUMINANCE8
#define GL_LUMINANCE8 0x8040
#endif

#ifndef GL_LUMINANCE12
#define GL_LUMINANCE12 0x8041
#endif

#ifndef GL_LUMINANCE16
#define GL_LUMINANCE16 0x8042
#endif

#ifndef GL_LUMINANCE4_ALPHA4
#define GL_LUMINANCE4_ALPHA4 0x8043
#endif

#ifndef GL_LUMINANCE6_ALPHA2
#define GL_LUMINANCE6_ALPHA2 0x8044
#endif

#ifndef GL_LUMINANCE8_ALPHA8
#define GL_LUMINANCE8_ALPHA8 0x8045
#endif

#ifndef GL_LUMINANCE12_ALPHA4
#define GL_LUMINANCE12_ALPHA4 0x8046
#endif

#ifndef GL_LUMINANCE12_ALPHA12
#define GL_LUMINANCE12_ALPHA12 0x8047
#endif

#ifndef GL_LUMINANCE16_ALPHA16
#define GL_LUMINANCE16_ALPHA16 0x8048
#endif

#ifndef GL_INTENSITY
#define GL_INTENSITY 0x8049
#endif

#ifndef GL_INTENSITY4
#define GL_INTENSITY4 0x804A
#endif

#ifndef GL_INTENSITY8
#define GL_INTENSITY8 0x804B
#endif

#ifndef GL_INTENSITY12
#define GL_INTENSITY12 0x804C
#endif

#ifndef GL_INTENSITY16
#define GL_INTENSITY16 0x804D
#endif

#ifndef GL_V2F
#define GL_V2F 0x2A20
#endif

#ifndef GL_V3F
#define GL_V3F 0x2A21
#endif

#ifndef GL_C4UB_V2F
#define GL_C4UB_V2F 0x2A22
#endif

#ifndef GL_C4UB_V3F
#define GL_C4UB_V3F 0x2A23
#endif

#ifndef GL_C3F_V3F
#define GL_C3F_V3F 0x2A24
#endif

#ifndef GL_N3F_V3F
#define GL_N3F_V3F 0x2A25
#endif

#ifndef GL_C4F_N3F_V3F
#define GL_C4F_N3F_V3F 0x2A26
#endif

#ifndef GL_T2F_V3F
#define GL_T2F_V3F 0x2A27
#endif

#ifndef GL_T4F_V4F
#define GL_T4F_V4F 0x2A28
#endif

#ifndef GL_T2F_C4UB_V3F
#define GL_T2F_C4UB_V3F 0x2A29
#endif

#ifndef GL_T2F_C3F_V3F
#define GL_T2F_C3F_V3F 0x2A2A
#endif

#ifndef GL_T2F_N3F_V3F
#define GL_T2F_N3F_V3F 0x2A2B
#endif

#ifndef GL_T2F_C4F_N3F_V3F
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#endif

#ifndef GL_T4F_C4F_N3F_V4F
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#endif

#ifndef GL_CLIP_PLANE0
#define GL_CLIP_PLANE0 0x3000
#endif

#ifndef GL_CLIP_PLANE1
#define GL_CLIP_PLANE1 0x3001
#endif

#ifndef GL_CLIP_PLANE2
#define GL_CLIP_PLANE2 0x3002
#endif

#ifndef GL_CLIP_PLANE3
#define GL_CLIP_PLANE3 0x3003
#endif

#ifndef GL_CLIP_PLANE4
#define GL_CLIP_PLANE4 0x3004
#endif

#ifndef GL_CLIP_PLANE5
#define GL_CLIP_PLANE5 0x3005
#endif

#ifndef GL_LIGHT0
#define GL_LIGHT0 0x4000
#endif

#ifndef GL_LIGHT1
#define GL_LIGHT1 0x4001
#endif

#ifndef GL_LIGHT2
#define GL_LIGHT2 0x4002
#endif

#ifndef GL_LIGHT3
#define GL_LIGHT3 0x4003
#endif

#ifndef GL_LIGHT4
#define GL_LIGHT4 0x4004
#endif

#ifndef GL_LIGHT5
#define GL_LIGHT5 0x4005
#endif

#ifndef GL_LIGHT6
#define GL_LIGHT6 0x4006
#endif

#ifndef GL_LIGHT7
#define GL_LIGHT7 0x4007
#endif

#ifndef GL_VERSION_1_2
#define GL_VERSION_1_2 1
#endif

#ifdef glDrawRangeElements
#undef glDrawRangeElements
#endif
#ifdef PFNGLDRAWRANGEELEMENTSPROC
#undef PFNGLDRAWRANGEELEMENTSPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);

#ifdef glTexImage3D
#undef glTexImage3D
#endif
#ifdef PFNGLTEXIMAGE3DPROC
#undef PFNGLTEXIMAGE3DPROC
#endif
typedef void  (*PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTexSubImage3D
#undef glTexSubImage3D
#endif
#ifdef PFNGLTEXSUBIMAGE3DPROC
#undef PFNGLTEXSUBIMAGE3DPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);

#ifdef glCopyTexSubImage3D
#undef glCopyTexSubImage3D
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE3DPROC
#undef PFNGLCOPYTEXSUBIMAGE3DPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifndef GL_UNSIGNED_BYTE_3_3_2
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif

#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#endif

#ifndef GL_UNSIGNED_INT_10_10_10_2
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#endif

#ifndef GL_TEXTURE_BINDING_3D
#define GL_TEXTURE_BINDING_3D 0x806A
#endif

#ifndef GL_PACK_SKIP_IMAGES
#define GL_PACK_SKIP_IMAGES 0x806B
#endif

#ifndef GL_PACK_IMAGE_HEIGHT
#define GL_PACK_IMAGE_HEIGHT 0x806C
#endif

#ifndef GL_UNPACK_SKIP_IMAGES
#define GL_UNPACK_SKIP_IMAGES 0x806D
#endif

#ifndef GL_UNPACK_IMAGE_HEIGHT
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#endif

#ifndef GL_TEXTURE_3D
#define GL_TEXTURE_3D 0x806F
#endif

#ifndef GL_PROXY_TEXTURE_3D
#define GL_PROXY_TEXTURE_3D 0x8070
#endif

#ifndef GL_TEXTURE_DEPTH
#define GL_TEXTURE_DEPTH 0x8071
#endif

#ifndef GL_TEXTURE_WRAP_R
#define GL_TEXTURE_WRAP_R 0x8072
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#endif

#ifndef GL_UNSIGNED_BYTE_2_3_3_REV
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5_REV
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#endif

#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8_REV
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#endif

#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif

#ifndef GL_BGR
#define GL_BGR 0x80E0
#endif

#ifndef GL_BGRA
#define GL_BGRA 0x80E1
#endif

#ifndef GL_MAX_ELEMENTS_VERTICES
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#endif

#ifndef GL_MAX_ELEMENTS_INDICES
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#endif

#ifndef GL_CLAMP_TO_EDGE
#define GL_CLAMP_TO_EDGE 0x812F
#endif

#ifndef GL_TEXTURE_MIN_LOD
#define GL_TEXTURE_MIN_LOD 0x813A
#endif

#ifndef GL_TEXTURE_MAX_LOD
#define GL_TEXTURE_MAX_LOD 0x813B
#endif

#ifndef GL_TEXTURE_BASE_LEVEL
#define GL_TEXTURE_BASE_LEVEL 0x813C
#endif

#ifndef GL_TEXTURE_MAX_LEVEL
#define GL_TEXTURE_MAX_LEVEL 0x813D
#endif

#ifndef GL_SMOOTH_POINT_SIZE_RANGE
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#endif

#ifndef GL_SMOOTH_POINT_SIZE_GRANULARITY
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#endif

#ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#endif

#ifndef GL_SMOOTH_LINE_WIDTH_GRANULARITY
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#endif

#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif

#ifndef GL_RESCALE_NORMAL
#define GL_RESCALE_NORMAL 0x803A
#endif

#ifndef GL_LIGHT_MODEL_COLOR_CONTROL
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#endif

#ifndef GL_SINGLE_COLOR
#define GL_SINGLE_COLOR 0x81F9
#endif

#ifndef GL_SEPARATE_SPECULAR_COLOR
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#endif

#ifndef GL_ALIASED_POINT_SIZE_RANGE
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif

#ifndef GL_VERSION_1_3
#define GL_VERSION_1_3 1
#endif

#ifdef glActiveTexture
#undef glActiveTexture
#endif
#ifdef PFNGLACTIVETEXTUREPROC
#undef PFNGLACTIVETEXTUREPROC
#endif
typedef void  (*PFNGLACTIVETEXTUREPROC)(GLenum texture);

#ifdef glSampleCoverage
#undef glSampleCoverage
#endif
#ifdef PFNGLSAMPLECOVERAGEPROC
#undef PFNGLSAMPLECOVERAGEPROC
#endif
typedef void  (*PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);

#ifdef glCompressedTexImage3D
#undef glCompressedTexImage3D
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE3DPROC
#undef PFNGLCOMPRESSEDTEXIMAGE3DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexImage2D
#undef glCompressedTexImage2D
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE2DPROC
#undef PFNGLCOMPRESSEDTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexImage1D
#undef glCompressedTexImage1D
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE1DPROC
#undef PFNGLCOMPRESSEDTEXIMAGE1DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage3D
#undef glCompressedTexSubImage3D
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage2D
#undef glCompressedTexSubImage2D
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage1D
#undef glCompressedTexSubImage1D
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);

#ifdef glGetCompressedTexImage
#undef glGetCompressedTexImage
#endif
#ifdef PFNGLGETCOMPRESSEDTEXIMAGEPROC
#undef PFNGLGETCOMPRESSEDTEXIMAGEPROC
#endif
typedef void  (*PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint level, void *img);

#ifdef glClientActiveTexture
#undef glClientActiveTexture
#endif
#ifdef PFNGLCLIENTACTIVETEXTUREPROC
#undef PFNGLCLIENTACTIVETEXTUREPROC
#endif
typedef void  (*PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);

#ifdef glMultiTexCoord1d
#undef glMultiTexCoord1d
#endif
#ifdef PFNGLMULTITEXCOORD1DPROC
#undef PFNGLMULTITEXCOORD1DPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1DPROC)(GLenum target, GLdouble s);

#ifdef glMultiTexCoord1dv
#undef glMultiTexCoord1dv
#endif
#ifdef PFNGLMULTITEXCOORD1DVPROC
#undef PFNGLMULTITEXCOORD1DVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1DVPROC)(GLenum target, const GLdouble *v);

#ifdef glMultiTexCoord1f
#undef glMultiTexCoord1f
#endif
#ifdef PFNGLMULTITEXCOORD1FPROC
#undef PFNGLMULTITEXCOORD1FPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1FPROC)(GLenum target, GLfloat s);

#ifdef glMultiTexCoord1fv
#undef glMultiTexCoord1fv
#endif
#ifdef PFNGLMULTITEXCOORD1FVPROC
#undef PFNGLMULTITEXCOORD1FVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1FVPROC)(GLenum target, const GLfloat *v);

#ifdef glMultiTexCoord1i
#undef glMultiTexCoord1i
#endif
#ifdef PFNGLMULTITEXCOORD1IPROC
#undef PFNGLMULTITEXCOORD1IPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1IPROC)(GLenum target, GLint s);

#ifdef glMultiTexCoord1iv
#undef glMultiTexCoord1iv
#endif
#ifdef PFNGLMULTITEXCOORD1IVPROC
#undef PFNGLMULTITEXCOORD1IVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1IVPROC)(GLenum target, const GLint *v);

#ifdef glMultiTexCoord1s
#undef glMultiTexCoord1s
#endif
#ifdef PFNGLMULTITEXCOORD1SPROC
#undef PFNGLMULTITEXCOORD1SPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1SPROC)(GLenum target, GLshort s);

#ifdef glMultiTexCoord1sv
#undef glMultiTexCoord1sv
#endif
#ifdef PFNGLMULTITEXCOORD1SVPROC
#undef PFNGLMULTITEXCOORD1SVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1SVPROC)(GLenum target, const GLshort *v);

#ifdef glMultiTexCoord2d
#undef glMultiTexCoord2d
#endif
#ifdef PFNGLMULTITEXCOORD2DPROC
#undef PFNGLMULTITEXCOORD2DPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2DPROC)(GLenum target, GLdouble s, GLdouble t);

#ifdef glMultiTexCoord2dv
#undef glMultiTexCoord2dv
#endif
#ifdef PFNGLMULTITEXCOORD2DVPROC
#undef PFNGLMULTITEXCOORD2DVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2DVPROC)(GLenum target, const GLdouble *v);

#ifdef glMultiTexCoord2f
#undef glMultiTexCoord2f
#endif
#ifdef PFNGLMULTITEXCOORD2FPROC
#undef PFNGLMULTITEXCOORD2FPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2FPROC)(GLenum target, GLfloat s, GLfloat t);

#ifdef glMultiTexCoord2fv
#undef glMultiTexCoord2fv
#endif
#ifdef PFNGLMULTITEXCOORD2FVPROC
#undef PFNGLMULTITEXCOORD2FVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2FVPROC)(GLenum target, const GLfloat *v);

#ifdef glMultiTexCoord2i
#undef glMultiTexCoord2i
#endif
#ifdef PFNGLMULTITEXCOORD2IPROC
#undef PFNGLMULTITEXCOORD2IPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2IPROC)(GLenum target, GLint s, GLint t);

#ifdef glMultiTexCoord2iv
#undef glMultiTexCoord2iv
#endif
#ifdef PFNGLMULTITEXCOORD2IVPROC
#undef PFNGLMULTITEXCOORD2IVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2IVPROC)(GLenum target, const GLint *v);

#ifdef glMultiTexCoord2s
#undef glMultiTexCoord2s
#endif
#ifdef PFNGLMULTITEXCOORD2SPROC
#undef PFNGLMULTITEXCOORD2SPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2SPROC)(GLenum target, GLshort s, GLshort t);

#ifdef glMultiTexCoord2sv
#undef glMultiTexCoord2sv
#endif
#ifdef PFNGLMULTITEXCOORD2SVPROC
#undef PFNGLMULTITEXCOORD2SVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2SVPROC)(GLenum target, const GLshort *v);

#ifdef glMultiTexCoord3d
#undef glMultiTexCoord3d
#endif
#ifdef PFNGLMULTITEXCOORD3DPROC
#undef PFNGLMULTITEXCOORD3DPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);

#ifdef glMultiTexCoord3dv
#undef glMultiTexCoord3dv
#endif
#ifdef PFNGLMULTITEXCOORD3DVPROC
#undef PFNGLMULTITEXCOORD3DVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3DVPROC)(GLenum target, const GLdouble *v);

#ifdef glMultiTexCoord3f
#undef glMultiTexCoord3f
#endif
#ifdef PFNGLMULTITEXCOORD3FPROC
#undef PFNGLMULTITEXCOORD3FPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);

#ifdef glMultiTexCoord3fv
#undef glMultiTexCoord3fv
#endif
#ifdef PFNGLMULTITEXCOORD3FVPROC
#undef PFNGLMULTITEXCOORD3FVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3FVPROC)(GLenum target, const GLfloat *v);

#ifdef glMultiTexCoord3i
#undef glMultiTexCoord3i
#endif
#ifdef PFNGLMULTITEXCOORD3IPROC
#undef PFNGLMULTITEXCOORD3IPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3IPROC)(GLenum target, GLint s, GLint t, GLint r);

#ifdef glMultiTexCoord3iv
#undef glMultiTexCoord3iv
#endif
#ifdef PFNGLMULTITEXCOORD3IVPROC
#undef PFNGLMULTITEXCOORD3IVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3IVPROC)(GLenum target, const GLint *v);

#ifdef glMultiTexCoord3s
#undef glMultiTexCoord3s
#endif
#ifdef PFNGLMULTITEXCOORD3SPROC
#undef PFNGLMULTITEXCOORD3SPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3SPROC)(GLenum target, GLshort s, GLshort t, GLshort r);

#ifdef glMultiTexCoord3sv
#undef glMultiTexCoord3sv
#endif
#ifdef PFNGLMULTITEXCOORD3SVPROC
#undef PFNGLMULTITEXCOORD3SVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3SVPROC)(GLenum target, const GLshort *v);

#ifdef glMultiTexCoord4d
#undef glMultiTexCoord4d
#endif
#ifdef PFNGLMULTITEXCOORD4DPROC
#undef PFNGLMULTITEXCOORD4DPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4DPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);

#ifdef glMultiTexCoord4dv
#undef glMultiTexCoord4dv
#endif
#ifdef PFNGLMULTITEXCOORD4DVPROC
#undef PFNGLMULTITEXCOORD4DVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4DVPROC)(GLenum target, const GLdouble *v);

#ifdef glMultiTexCoord4f
#undef glMultiTexCoord4f
#endif
#ifdef PFNGLMULTITEXCOORD4FPROC
#undef PFNGLMULTITEXCOORD4FPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);

#ifdef glMultiTexCoord4fv
#undef glMultiTexCoord4fv
#endif
#ifdef PFNGLMULTITEXCOORD4FVPROC
#undef PFNGLMULTITEXCOORD4FVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4FVPROC)(GLenum target, const GLfloat *v);

#ifdef glMultiTexCoord4i
#undef glMultiTexCoord4i
#endif
#ifdef PFNGLMULTITEXCOORD4IPROC
#undef PFNGLMULTITEXCOORD4IPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4IPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);

#ifdef glMultiTexCoord4iv
#undef glMultiTexCoord4iv
#endif
#ifdef PFNGLMULTITEXCOORD4IVPROC
#undef PFNGLMULTITEXCOORD4IVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4IVPROC)(GLenum target, const GLint *v);

#ifdef glMultiTexCoord4s
#undef glMultiTexCoord4s
#endif
#ifdef PFNGLMULTITEXCOORD4SPROC
#undef PFNGLMULTITEXCOORD4SPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4SPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);

#ifdef glMultiTexCoord4sv
#undef glMultiTexCoord4sv
#endif
#ifdef PFNGLMULTITEXCOORD4SVPROC
#undef PFNGLMULTITEXCOORD4SVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4SVPROC)(GLenum target, const GLshort *v);

#ifdef glLoadTransposeMatrixf
#undef glLoadTransposeMatrixf
#endif
#ifdef PFNGLLOADTRANSPOSEMATRIXFPROC
#undef PFNGLLOADTRANSPOSEMATRIXFPROC
#endif
typedef void  (*PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat *m);

#ifdef glLoadTransposeMatrixd
#undef glLoadTransposeMatrixd
#endif
#ifdef PFNGLLOADTRANSPOSEMATRIXDPROC
#undef PFNGLLOADTRANSPOSEMATRIXDPROC
#endif
typedef void  (*PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble *m);

#ifdef glMultTransposeMatrixf
#undef glMultTransposeMatrixf
#endif
#ifdef PFNGLMULTTRANSPOSEMATRIXFPROC
#undef PFNGLMULTTRANSPOSEMATRIXFPROC
#endif
typedef void  (*PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat *m);

#ifdef glMultTransposeMatrixd
#undef glMultTransposeMatrixd
#endif
#ifdef PFNGLMULTTRANSPOSEMATRIXDPROC
#undef PFNGLMULTTRANSPOSEMATRIXDPROC
#endif
typedef void  (*PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble *m);

#ifndef GL_TEXTURE0
#define GL_TEXTURE0 0x84C0
#endif

#ifndef GL_TEXTURE1
#define GL_TEXTURE1 0x84C1
#endif

#ifndef GL_TEXTURE2
#define GL_TEXTURE2 0x84C2
#endif

#ifndef GL_TEXTURE3
#define GL_TEXTURE3 0x84C3
#endif

#ifndef GL_TEXTURE4
#define GL_TEXTURE4 0x84C4
#endif

#ifndef GL_TEXTURE5
#define GL_TEXTURE5 0x84C5
#endif

#ifndef GL_TEXTURE6
#define GL_TEXTURE6 0x84C6
#endif

#ifndef GL_TEXTURE7
#define GL_TEXTURE7 0x84C7
#endif

#ifndef GL_TEXTURE8
#define GL_TEXTURE8 0x84C8
#endif

#ifndef GL_TEXTURE9
#define GL_TEXTURE9 0x84C9
#endif

#ifndef GL_TEXTURE10
#define GL_TEXTURE10 0x84CA
#endif

#ifndef GL_TEXTURE11
#define GL_TEXTURE11 0x84CB
#endif

#ifndef GL_TEXTURE12
#define GL_TEXTURE12 0x84CC
#endif

#ifndef GL_TEXTURE13
#define GL_TEXTURE13 0x84CD
#endif

#ifndef GL_TEXTURE14
#define GL_TEXTURE14 0x84CE
#endif

#ifndef GL_TEXTURE15
#define GL_TEXTURE15 0x84CF
#endif

#ifndef GL_TEXTURE16
#define GL_TEXTURE16 0x84D0
#endif

#ifndef GL_TEXTURE17
#define GL_TEXTURE17 0x84D1
#endif

#ifndef GL_TEXTURE18
#define GL_TEXTURE18 0x84D2
#endif

#ifndef GL_TEXTURE19
#define GL_TEXTURE19 0x84D3
#endif

#ifndef GL_TEXTURE20
#define GL_TEXTURE20 0x84D4
#endif

#ifndef GL_TEXTURE21
#define GL_TEXTURE21 0x84D5
#endif

#ifndef GL_TEXTURE22
#define GL_TEXTURE22 0x84D6
#endif

#ifndef GL_TEXTURE23
#define GL_TEXTURE23 0x84D7
#endif

#ifndef GL_TEXTURE24
#define GL_TEXTURE24 0x84D8
#endif

#ifndef GL_TEXTURE25
#define GL_TEXTURE25 0x84D9
#endif

#ifndef GL_TEXTURE26
#define GL_TEXTURE26 0x84DA
#endif

#ifndef GL_TEXTURE27
#define GL_TEXTURE27 0x84DB
#endif

#ifndef GL_TEXTURE28
#define GL_TEXTURE28 0x84DC
#endif

#ifndef GL_TEXTURE29
#define GL_TEXTURE29 0x84DD
#endif

#ifndef GL_TEXTURE30
#define GL_TEXTURE30 0x84DE
#endif

#ifndef GL_TEXTURE31
#define GL_TEXTURE31 0x84DF
#endif

#ifndef GL_ACTIVE_TEXTURE
#define GL_ACTIVE_TEXTURE 0x84E0
#endif

#ifndef GL_MULTISAMPLE
#define GL_MULTISAMPLE 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#endif

#ifndef GL_SAMPLE_COVERAGE
#define GL_SAMPLE_COVERAGE 0x80A0
#endif

#ifndef GL_SAMPLE_BUFFERS
#define GL_SAMPLE_BUFFERS 0x80A8
#endif

#ifndef GL_SAMPLES
#define GL_SAMPLES 0x80A9
#endif

#ifndef GL_SAMPLE_COVERAGE_VALUE
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif

#ifndef GL_SAMPLE_COVERAGE_INVERT
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif

#ifndef GL_TEXTURE_CUBE_MAP
#define GL_TEXTURE_CUBE_MAP 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#endif

#ifndef GL_COMPRESSED_RGB
#define GL_COMPRESSED_RGB 0x84ED
#endif

#ifndef GL_COMPRESSED_RGBA
#define GL_COMPRESSED_RGBA 0x84EE
#endif

#ifndef GL_TEXTURE_COMPRESSION_HINT
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#endif

#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#endif

#ifndef GL_TEXTURE_COMPRESSED
#define GL_TEXTURE_COMPRESSED 0x86A1
#endif

#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif

#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif

#ifndef GL_CLAMP_TO_BORDER
#define GL_CLAMP_TO_BORDER 0x812D
#endif

#ifndef GL_CLIENT_ACTIVE_TEXTURE
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#endif

#ifndef GL_MAX_TEXTURE_UNITS
#define GL_MAX_TEXTURE_UNITS 0x84E2
#endif

#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#endif

#ifndef GL_TRANSPOSE_PROJECTION_MATRIX
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#endif

#ifndef GL_TRANSPOSE_TEXTURE_MATRIX
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#endif

#ifndef GL_TRANSPOSE_COLOR_MATRIX
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#endif

#ifndef GL_MULTISAMPLE_BIT
#define GL_MULTISAMPLE_BIT 0x20000000
#endif

#ifndef GL_NORMAL_MAP
#define GL_NORMAL_MAP 0x8511
#endif

#ifndef GL_REFLECTION_MAP
#define GL_REFLECTION_MAP 0x8512
#endif

#ifndef GL_COMPRESSED_ALPHA
#define GL_COMPRESSED_ALPHA 0x84E9
#endif

#ifndef GL_COMPRESSED_LUMINANCE
#define GL_COMPRESSED_LUMINANCE 0x84EA
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#endif

#ifndef GL_COMPRESSED_INTENSITY
#define GL_COMPRESSED_INTENSITY 0x84EC
#endif

#ifndef GL_COMBINE
#define GL_COMBINE 0x8570
#endif

#ifndef GL_COMBINE_RGB
#define GL_COMBINE_RGB 0x8571
#endif

#ifndef GL_COMBINE_ALPHA
#define GL_COMBINE_ALPHA 0x8572
#endif

#ifndef GL_SOURCE0_RGB
#define GL_SOURCE0_RGB 0x8580
#endif

#ifndef GL_SOURCE1_RGB
#define GL_SOURCE1_RGB 0x8581
#endif

#ifndef GL_SOURCE2_RGB
#define GL_SOURCE2_RGB 0x8582
#endif

#ifndef GL_SOURCE0_ALPHA
#define GL_SOURCE0_ALPHA 0x8588
#endif

#ifndef GL_SOURCE1_ALPHA
#define GL_SOURCE1_ALPHA 0x8589
#endif

#ifndef GL_SOURCE2_ALPHA
#define GL_SOURCE2_ALPHA 0x858A
#endif

#ifndef GL_OPERAND0_RGB
#define GL_OPERAND0_RGB 0x8590
#endif

#ifndef GL_OPERAND1_RGB
#define GL_OPERAND1_RGB 0x8591
#endif

#ifndef GL_OPERAND2_RGB
#define GL_OPERAND2_RGB 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA
#define GL_OPERAND0_ALPHA 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA
#define GL_OPERAND1_ALPHA 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA
#define GL_OPERAND2_ALPHA 0x859A
#endif

#ifndef GL_RGB_SCALE
#define GL_RGB_SCALE 0x8573
#endif

#ifndef GL_ADD_SIGNED
#define GL_ADD_SIGNED 0x8574
#endif

#ifndef GL_INTERPOLATE
#define GL_INTERPOLATE 0x8575
#endif

#ifndef GL_SUBTRACT
#define GL_SUBTRACT 0x84E7
#endif

#ifndef GL_CONSTANT
#define GL_CONSTANT 0x8576
#endif

#ifndef GL_PRIMARY_COLOR
#define GL_PRIMARY_COLOR 0x8577
#endif

#ifndef GL_PREVIOUS
#define GL_PREVIOUS 0x8578
#endif

#ifndef GL_DOT3_RGB
#define GL_DOT3_RGB 0x86AE
#endif

#ifndef GL_DOT3_RGBA
#define GL_DOT3_RGBA 0x86AF
#endif

#ifndef GL_VERSION_1_4
#define GL_VERSION_1_4 1
#endif

#ifdef glBlendFuncSeparate
#undef glBlendFuncSeparate
#endif
#ifdef PFNGLBLENDFUNCSEPARATEPROC
#undef PFNGLBLENDFUNCSEPARATEPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);

#ifdef glMultiDrawArrays
#undef glMultiDrawArrays
#endif
#ifdef PFNGLMULTIDRAWARRAYSPROC
#undef PFNGLMULTIDRAWARRAYSPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSPROC)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);

#ifdef glMultiDrawElements
#undef glMultiDrawElements
#endif
#ifdef PFNGLMULTIDRAWELEMENTSPROC
#undef PFNGLMULTIDRAWELEMENTSPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);

#ifdef glPointParameterf
#undef glPointParameterf
#endif
#ifdef PFNGLPOINTPARAMETERFPROC
#undef PFNGLPOINTPARAMETERFPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);

#ifdef glPointParameterfv
#undef glPointParameterfv
#endif
#ifdef PFNGLPOINTPARAMETERFVPROC
#undef PFNGLPOINTPARAMETERFVPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat *params);

#ifdef glPointParameteri
#undef glPointParameteri
#endif
#ifdef PFNGLPOINTPARAMETERIPROC
#undef PFNGLPOINTPARAMETERIPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERIPROC)(GLenum pname, GLint param);

#ifdef glPointParameteriv
#undef glPointParameteriv
#endif
#ifdef PFNGLPOINTPARAMETERIVPROC
#undef PFNGLPOINTPARAMETERIVPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERIVPROC)(GLenum pname, const GLint *params);

#ifdef glFogCoordf
#undef glFogCoordf
#endif
#ifdef PFNGLFOGCOORDFPROC
#undef PFNGLFOGCOORDFPROC
#endif
typedef void  (*PFNGLFOGCOORDFPROC)(GLfloat coord);

#ifdef glFogCoordfv
#undef glFogCoordfv
#endif
#ifdef PFNGLFOGCOORDFVPROC
#undef PFNGLFOGCOORDFVPROC
#endif
typedef void  (*PFNGLFOGCOORDFVPROC)(const GLfloat *coord);

#ifdef glFogCoordd
#undef glFogCoordd
#endif
#ifdef PFNGLFOGCOORDDPROC
#undef PFNGLFOGCOORDDPROC
#endif
typedef void  (*PFNGLFOGCOORDDPROC)(GLdouble coord);

#ifdef glFogCoorddv
#undef glFogCoorddv
#endif
#ifdef PFNGLFOGCOORDDVPROC
#undef PFNGLFOGCOORDDVPROC
#endif
typedef void  (*PFNGLFOGCOORDDVPROC)(const GLdouble *coord);

#ifdef glFogCoordPointer
#undef glFogCoordPointer
#endif
#ifdef PFNGLFOGCOORDPOINTERPROC
#undef PFNGLFOGCOORDPOINTERPROC
#endif
typedef void  (*PFNGLFOGCOORDPOINTERPROC)(GLenum type, GLsizei stride, const void *pointer);

#ifdef glSecondaryColor3b
#undef glSecondaryColor3b
#endif
#ifdef PFNGLSECONDARYCOLOR3BPROC
#undef PFNGLSECONDARYCOLOR3BPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3BPROC)(GLbyte red, GLbyte green, GLbyte blue);

#ifdef glSecondaryColor3bv
#undef glSecondaryColor3bv
#endif
#ifdef PFNGLSECONDARYCOLOR3BVPROC
#undef PFNGLSECONDARYCOLOR3BVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte *v);

#ifdef glSecondaryColor3d
#undef glSecondaryColor3d
#endif
#ifdef PFNGLSECONDARYCOLOR3DPROC
#undef PFNGLSECONDARYCOLOR3DPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3DPROC)(GLdouble red, GLdouble green, GLdouble blue);

#ifdef glSecondaryColor3dv
#undef glSecondaryColor3dv
#endif
#ifdef PFNGLSECONDARYCOLOR3DVPROC
#undef PFNGLSECONDARYCOLOR3DVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble *v);

#ifdef glSecondaryColor3f
#undef glSecondaryColor3f
#endif
#ifdef PFNGLSECONDARYCOLOR3FPROC
#undef PFNGLSECONDARYCOLOR3FPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3FPROC)(GLfloat red, GLfloat green, GLfloat blue);

#ifdef glSecondaryColor3fv
#undef glSecondaryColor3fv
#endif
#ifdef PFNGLSECONDARYCOLOR3FVPROC
#undef PFNGLSECONDARYCOLOR3FVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat *v);

#ifdef glSecondaryColor3i
#undef glSecondaryColor3i
#endif
#ifdef PFNGLSECONDARYCOLOR3IPROC
#undef PFNGLSECONDARYCOLOR3IPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3IPROC)(GLint red, GLint green, GLint blue);

#ifdef glSecondaryColor3iv
#undef glSecondaryColor3iv
#endif
#ifdef PFNGLSECONDARYCOLOR3IVPROC
#undef PFNGLSECONDARYCOLOR3IVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3IVPROC)(const GLint *v);

#ifdef glSecondaryColor3s
#undef glSecondaryColor3s
#endif
#ifdef PFNGLSECONDARYCOLOR3SPROC
#undef PFNGLSECONDARYCOLOR3SPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3SPROC)(GLshort red, GLshort green, GLshort blue);

#ifdef glSecondaryColor3sv
#undef glSecondaryColor3sv
#endif
#ifdef PFNGLSECONDARYCOLOR3SVPROC
#undef PFNGLSECONDARYCOLOR3SVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3SVPROC)(const GLshort *v);

#ifdef glSecondaryColor3ub
#undef glSecondaryColor3ub
#endif
#ifdef PFNGLSECONDARYCOLOR3UBPROC
#undef PFNGLSECONDARYCOLOR3UBPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3UBPROC)(GLubyte red, GLubyte green, GLubyte blue);

#ifdef glSecondaryColor3ubv
#undef glSecondaryColor3ubv
#endif
#ifdef PFNGLSECONDARYCOLOR3UBVPROC
#undef PFNGLSECONDARYCOLOR3UBVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte *v);

#ifdef glSecondaryColor3ui
#undef glSecondaryColor3ui
#endif
#ifdef PFNGLSECONDARYCOLOR3UIPROC
#undef PFNGLSECONDARYCOLOR3UIPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3UIPROC)(GLuint red, GLuint green, GLuint blue);

#ifdef glSecondaryColor3uiv
#undef glSecondaryColor3uiv
#endif
#ifdef PFNGLSECONDARYCOLOR3UIVPROC
#undef PFNGLSECONDARYCOLOR3UIVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint *v);

#ifdef glSecondaryColor3us
#undef glSecondaryColor3us
#endif
#ifdef PFNGLSECONDARYCOLOR3USPROC
#undef PFNGLSECONDARYCOLOR3USPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3USPROC)(GLushort red, GLushort green, GLushort blue);

#ifdef glSecondaryColor3usv
#undef glSecondaryColor3usv
#endif
#ifdef PFNGLSECONDARYCOLOR3USVPROC
#undef PFNGLSECONDARYCOLOR3USVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3USVPROC)(const GLushort *v);

#ifdef glSecondaryColorPointer
#undef glSecondaryColorPointer
#endif
#ifdef PFNGLSECONDARYCOLORPOINTERPROC
#undef PFNGLSECONDARYCOLORPOINTERPROC
#endif
typedef void  (*PFNGLSECONDARYCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glWindowPos2d
#undef glWindowPos2d
#endif
#ifdef PFNGLWINDOWPOS2DPROC
#undef PFNGLWINDOWPOS2DPROC
#endif
typedef void  (*PFNGLWINDOWPOS2DPROC)(GLdouble x, GLdouble y);

#ifdef glWindowPos2dv
#undef glWindowPos2dv
#endif
#ifdef PFNGLWINDOWPOS2DVPROC
#undef PFNGLWINDOWPOS2DVPROC
#endif
typedef void  (*PFNGLWINDOWPOS2DVPROC)(const GLdouble *v);

#ifdef glWindowPos2f
#undef glWindowPos2f
#endif
#ifdef PFNGLWINDOWPOS2FPROC
#undef PFNGLWINDOWPOS2FPROC
#endif
typedef void  (*PFNGLWINDOWPOS2FPROC)(GLfloat x, GLfloat y);

#ifdef glWindowPos2fv
#undef glWindowPos2fv
#endif
#ifdef PFNGLWINDOWPOS2FVPROC
#undef PFNGLWINDOWPOS2FVPROC
#endif
typedef void  (*PFNGLWINDOWPOS2FVPROC)(const GLfloat *v);

#ifdef glWindowPos2i
#undef glWindowPos2i
#endif
#ifdef PFNGLWINDOWPOS2IPROC
#undef PFNGLWINDOWPOS2IPROC
#endif
typedef void  (*PFNGLWINDOWPOS2IPROC)(GLint x, GLint y);

#ifdef glWindowPos2iv
#undef glWindowPos2iv
#endif
#ifdef PFNGLWINDOWPOS2IVPROC
#undef PFNGLWINDOWPOS2IVPROC
#endif
typedef void  (*PFNGLWINDOWPOS2IVPROC)(const GLint *v);

#ifdef glWindowPos2s
#undef glWindowPos2s
#endif
#ifdef PFNGLWINDOWPOS2SPROC
#undef PFNGLWINDOWPOS2SPROC
#endif
typedef void  (*PFNGLWINDOWPOS2SPROC)(GLshort x, GLshort y);

#ifdef glWindowPos2sv
#undef glWindowPos2sv
#endif
#ifdef PFNGLWINDOWPOS2SVPROC
#undef PFNGLWINDOWPOS2SVPROC
#endif
typedef void  (*PFNGLWINDOWPOS2SVPROC)(const GLshort *v);

#ifdef glWindowPos3d
#undef glWindowPos3d
#endif
#ifdef PFNGLWINDOWPOS3DPROC
#undef PFNGLWINDOWPOS3DPROC
#endif
typedef void  (*PFNGLWINDOWPOS3DPROC)(GLdouble x, GLdouble y, GLdouble z);

#ifdef glWindowPos3dv
#undef glWindowPos3dv
#endif
#ifdef PFNGLWINDOWPOS3DVPROC
#undef PFNGLWINDOWPOS3DVPROC
#endif
typedef void  (*PFNGLWINDOWPOS3DVPROC)(const GLdouble *v);

#ifdef glWindowPos3f
#undef glWindowPos3f
#endif
#ifdef PFNGLWINDOWPOS3FPROC
#undef PFNGLWINDOWPOS3FPROC
#endif
typedef void  (*PFNGLWINDOWPOS3FPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifdef glWindowPos3fv
#undef glWindowPos3fv
#endif
#ifdef PFNGLWINDOWPOS3FVPROC
#undef PFNGLWINDOWPOS3FVPROC
#endif
typedef void  (*PFNGLWINDOWPOS3FVPROC)(const GLfloat *v);

#ifdef glWindowPos3i
#undef glWindowPos3i
#endif
#ifdef PFNGLWINDOWPOS3IPROC
#undef PFNGLWINDOWPOS3IPROC
#endif
typedef void  (*PFNGLWINDOWPOS3IPROC)(GLint x, GLint y, GLint z);

#ifdef glWindowPos3iv
#undef glWindowPos3iv
#endif
#ifdef PFNGLWINDOWPOS3IVPROC
#undef PFNGLWINDOWPOS3IVPROC
#endif
typedef void  (*PFNGLWINDOWPOS3IVPROC)(const GLint *v);

#ifdef glWindowPos3s
#undef glWindowPos3s
#endif
#ifdef PFNGLWINDOWPOS3SPROC
#undef PFNGLWINDOWPOS3SPROC
#endif
typedef void  (*PFNGLWINDOWPOS3SPROC)(GLshort x, GLshort y, GLshort z);

#ifdef glWindowPos3sv
#undef glWindowPos3sv
#endif
#ifdef PFNGLWINDOWPOS3SVPROC
#undef PFNGLWINDOWPOS3SVPROC
#endif
typedef void  (*PFNGLWINDOWPOS3SVPROC)(const GLshort *v);

#ifndef GL_BLEND_DST_RGB
#define GL_BLEND_DST_RGB 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB
#define GL_BLEND_SRC_RGB 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA
#define GL_BLEND_DST_ALPHA 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA
#define GL_BLEND_SRC_ALPHA 0x80CB
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#endif

#ifndef GL_DEPTH_COMPONENT16
#define GL_DEPTH_COMPONENT16 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24
#define GL_DEPTH_COMPONENT24 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32
#define GL_DEPTH_COMPONENT32 0x81A7
#endif

#ifndef GL_MIRRORED_REPEAT
#define GL_MIRRORED_REPEAT 0x8370
#endif

#ifndef GL_MAX_TEXTURE_LOD_BIAS
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#endif

#ifndef GL_TEXTURE_LOD_BIAS
#define GL_TEXTURE_LOD_BIAS 0x8501
#endif

#ifndef GL_INCR_WRAP
#define GL_INCR_WRAP 0x8507
#endif

#ifndef GL_DECR_WRAP
#define GL_DECR_WRAP 0x8508
#endif

#ifndef GL_TEXTURE_DEPTH_SIZE
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#endif

#ifndef GL_TEXTURE_COMPARE_MODE
#define GL_TEXTURE_COMPARE_MODE 0x884C
#endif

#ifndef GL_TEXTURE_COMPARE_FUNC
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#endif

#ifndef GL_POINT_SIZE_MIN
#define GL_POINT_SIZE_MIN 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX
#define GL_POINT_SIZE_MAX 0x8127
#endif

#ifndef GL_POINT_DISTANCE_ATTENUATION
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#endif

#ifndef GL_GENERATE_MIPMAP
#define GL_GENERATE_MIPMAP 0x8191
#endif

#ifndef GL_GENERATE_MIPMAP_HINT
#define GL_GENERATE_MIPMAP_HINT 0x8192
#endif

#ifndef GL_FOG_COORDINATE_SOURCE
#define GL_FOG_COORDINATE_SOURCE 0x8450
#endif

#ifndef GL_FOG_COORDINATE
#define GL_FOG_COORDINATE 0x8451
#endif

#ifndef GL_FRAGMENT_DEPTH
#define GL_FRAGMENT_DEPTH 0x8452
#endif

#ifndef GL_CURRENT_FOG_COORDINATE
#define GL_CURRENT_FOG_COORDINATE 0x8453
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_TYPE
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_POINTER
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#endif

#ifndef GL_FOG_COORDINATE_ARRAY
#define GL_FOG_COORDINATE_ARRAY 0x8457
#endif

#ifndef GL_COLOR_SUM
#define GL_COLOR_SUM 0x8458
#endif

#ifndef GL_CURRENT_SECONDARY_COLOR
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#endif

#ifndef GL_TEXTURE_FILTER_CONTROL
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#endif

#ifndef GL_DEPTH_TEXTURE_MODE
#define GL_DEPTH_TEXTURE_MODE 0x884B
#endif

#ifndef GL_COMPARE_R_TO_TEXTURE
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#endif

#ifdef glBlendColor
#undef glBlendColor
#endif
#ifdef PFNGLBLENDCOLORPROC
#undef PFNGLBLENDCOLORPROC
#endif
typedef void  (*PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glBlendEquation
#undef glBlendEquation
#endif
#ifdef PFNGLBLENDEQUATIONPROC
#undef PFNGLBLENDEQUATIONPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONPROC)(GLenum mode);

#ifndef GL_FUNC_ADD
#define GL_FUNC_ADD 0x8006
#endif

#ifndef GL_FUNC_SUBTRACT
#define GL_FUNC_SUBTRACT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#endif

#ifndef GL_MIN
#define GL_MIN 0x8007
#endif

#ifndef GL_MAX
#define GL_MAX 0x8008
#endif

#ifndef GL_CONSTANT_COLOR
#define GL_CONSTANT_COLOR 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA
#define GL_CONSTANT_ALPHA 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#endif

#ifndef GL_VERSION_1_5
#define GL_VERSION_1_5 1
#endif

#ifdef glGenQueries
#undef glGenQueries
#endif
#ifdef PFNGLGENQUERIESPROC
#undef PFNGLGENQUERIESPROC
#endif
typedef void  (*PFNGLGENQUERIESPROC)(GLsizei n, GLuint *ids);

#ifdef glDeleteQueries
#undef glDeleteQueries
#endif
#ifdef PFNGLDELETEQUERIESPROC
#undef PFNGLDELETEQUERIESPROC
#endif
typedef void  (*PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint *ids);

#ifdef glIsQuery
#undef glIsQuery
#endif
#ifdef PFNGLISQUERYPROC
#undef PFNGLISQUERYPROC
#endif
typedef GLboolean  (*PFNGLISQUERYPROC)(GLuint id);

#ifdef glBeginQuery
#undef glBeginQuery
#endif
#ifdef PFNGLBEGINQUERYPROC
#undef PFNGLBEGINQUERYPROC
#endif
typedef void  (*PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);

#ifdef glEndQuery
#undef glEndQuery
#endif
#ifdef PFNGLENDQUERYPROC
#undef PFNGLENDQUERYPROC
#endif
typedef void  (*PFNGLENDQUERYPROC)(GLenum target);

#ifdef glGetQueryiv
#undef glGetQueryiv
#endif
#ifdef PFNGLGETQUERYIVPROC
#undef PFNGLGETQUERYIVPROC
#endif
typedef void  (*PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetQueryObjectiv
#undef glGetQueryObjectiv
#endif
#ifdef PFNGLGETQUERYOBJECTIVPROC
#undef PFNGLGETQUERYOBJECTIVPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTIVPROC)(GLuint id, GLenum pname, GLint *params);

#ifdef glGetQueryObjectuiv
#undef glGetQueryObjectuiv
#endif
#ifdef PFNGLGETQUERYOBJECTUIVPROC
#undef PFNGLGETQUERYOBJECTUIVPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint *params);

#ifdef glBindBuffer
#undef glBindBuffer
#endif
#ifdef PFNGLBINDBUFFERPROC
#undef PFNGLBINDBUFFERPROC
#endif
typedef void  (*PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);

#ifdef glDeleteBuffers
#undef glDeleteBuffers
#endif
#ifdef PFNGLDELETEBUFFERSPROC
#undef PFNGLDELETEBUFFERSPROC
#endif
typedef void  (*PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint *buffers);

#ifdef glGenBuffers
#undef glGenBuffers
#endif
#ifdef PFNGLGENBUFFERSPROC
#undef PFNGLGENBUFFERSPROC
#endif
typedef void  (*PFNGLGENBUFFERSPROC)(GLsizei n, GLuint *buffers);

#ifdef glIsBuffer
#undef glIsBuffer
#endif
#ifdef PFNGLISBUFFERPROC
#undef PFNGLISBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISBUFFERPROC)(GLuint buffer);

#ifdef glBufferData
#undef glBufferData
#endif
#ifdef PFNGLBUFFERDATAPROC
#undef PFNGLBUFFERDATAPROC
#endif
typedef void  (*PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);

#ifdef glBufferSubData
#undef glBufferSubData
#endif
#ifdef PFNGLBUFFERSUBDATAPROC
#undef PFNGLBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);

#ifdef glGetBufferSubData
#undef glGetBufferSubData
#endif
#ifdef PFNGLGETBUFFERSUBDATAPROC
#undef PFNGLGETBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLGETBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, void *data);

#ifdef glMapBuffer
#undef glMapBuffer
#endif
#ifdef PFNGLMAPBUFFERPROC
#undef PFNGLMAPBUFFERPROC
#endif
typedef void * (*PFNGLMAPBUFFERPROC)(GLenum target, GLenum access);

#ifdef glUnmapBuffer
#undef glUnmapBuffer
#endif
#ifdef PFNGLUNMAPBUFFERPROC
#undef PFNGLUNMAPBUFFERPROC
#endif
typedef GLboolean  (*PFNGLUNMAPBUFFERPROC)(GLenum target);

#ifdef glGetBufferParameteriv
#undef glGetBufferParameteriv
#endif
#ifdef PFNGLGETBUFFERPARAMETERIVPROC
#undef PFNGLGETBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetBufferPointerv
#undef glGetBufferPointerv
#endif
#ifdef PFNGLGETBUFFERPOINTERVPROC
#undef PFNGLGETBUFFERPOINTERVPROC
#endif
typedef void  (*PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void **params);

#ifndef GL_BUFFER_SIZE
#define GL_BUFFER_SIZE 0x8764
#endif

#ifndef GL_BUFFER_USAGE
#define GL_BUFFER_USAGE 0x8765
#endif

#ifndef GL_QUERY_COUNTER_BITS
#define GL_QUERY_COUNTER_BITS 0x8864
#endif

#ifndef GL_CURRENT_QUERY
#define GL_CURRENT_QUERY 0x8865
#endif

#ifndef GL_QUERY_RESULT
#define GL_QUERY_RESULT 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#endif

#ifndef GL_ARRAY_BUFFER
#define GL_ARRAY_BUFFER 0x8892
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#endif

#ifndef GL_ARRAY_BUFFER_BINDING
#define GL_ARRAY_BUFFER_BINDING 0x8894
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_BINDING
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#endif

#ifndef GL_READ_ONLY
#define GL_READ_ONLY 0x88B8
#endif

#ifndef GL_WRITE_ONLY
#define GL_WRITE_ONLY 0x88B9
#endif

#ifndef GL_READ_WRITE
#define GL_READ_WRITE 0x88BA
#endif

#ifndef GL_BUFFER_ACCESS
#define GL_BUFFER_ACCESS 0x88BB
#endif

#ifndef GL_BUFFER_MAPPED
#define GL_BUFFER_MAPPED 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER
#define GL_BUFFER_MAP_POINTER 0x88BD
#endif

#ifndef GL_STREAM_DRAW
#define GL_STREAM_DRAW 0x88E0
#endif

#ifndef GL_STREAM_READ
#define GL_STREAM_READ 0x88E1
#endif

#ifndef GL_STREAM_COPY
#define GL_STREAM_COPY 0x88E2
#endif

#ifndef GL_STATIC_DRAW
#define GL_STATIC_DRAW 0x88E4
#endif

#ifndef GL_STATIC_READ
#define GL_STATIC_READ 0x88E5
#endif

#ifndef GL_STATIC_COPY
#define GL_STATIC_COPY 0x88E6
#endif

#ifndef GL_DYNAMIC_DRAW
#define GL_DYNAMIC_DRAW 0x88E8
#endif

#ifndef GL_DYNAMIC_READ
#define GL_DYNAMIC_READ 0x88E9
#endif

#ifndef GL_DYNAMIC_COPY
#define GL_DYNAMIC_COPY 0x88EA
#endif

#ifndef GL_SAMPLES_PASSED
#define GL_SAMPLES_PASSED 0x8914
#endif

#ifndef GL_SRC1_ALPHA
#define GL_SRC1_ALPHA 0x8589
#endif

#ifndef GL_VERTEX_ARRAY_BUFFER_BINDING
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#endif

#ifndef GL_NORMAL_ARRAY_BUFFER_BINDING
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#endif

#ifndef GL_COLOR_ARRAY_BUFFER_BINDING
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#endif

#ifndef GL_INDEX_ARRAY_BUFFER_BINDING
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#endif

#ifndef GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#endif

#ifndef GL_WEIGHT_ARRAY_BUFFER_BINDING
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#endif

#ifndef GL_FOG_COORD_SRC
#define GL_FOG_COORD_SRC 0x8450
#endif

#ifndef GL_FOG_COORD
#define GL_FOG_COORD 0x8451
#endif

#ifndef GL_CURRENT_FOG_COORD
#define GL_CURRENT_FOG_COORD 0x8453
#endif

#ifndef GL_FOG_COORD_ARRAY_TYPE
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#endif

#ifndef GL_FOG_COORD_ARRAY_STRIDE
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#endif

#ifndef GL_FOG_COORD_ARRAY_POINTER
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#endif

#ifndef GL_FOG_COORD_ARRAY
#define GL_FOG_COORD_ARRAY 0x8457
#endif

#ifndef GL_FOG_COORD_ARRAY_BUFFER_BINDING
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#endif

#ifndef GL_SRC0_RGB
#define GL_SRC0_RGB 0x8580
#endif

#ifndef GL_SRC1_RGB
#define GL_SRC1_RGB 0x8581
#endif

#ifndef GL_SRC2_RGB
#define GL_SRC2_RGB 0x8582
#endif

#ifndef GL_SRC0_ALPHA
#define GL_SRC0_ALPHA 0x8588
#endif

#ifndef GL_SRC2_ALPHA
#define GL_SRC2_ALPHA 0x858A
#endif

#ifndef GL_VERSION_2_0
#define GL_VERSION_2_0 1
#endif

#ifdef glBlendEquationSeparate
#undef glBlendEquationSeparate
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEPROC
#undef PFNGLBLENDEQUATIONSEPARATEPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);

#ifdef glDrawBuffers
#undef glDrawBuffers
#endif
#ifdef PFNGLDRAWBUFFERSPROC
#undef PFNGLDRAWBUFFERSPROC
#endif
typedef void  (*PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum *bufs);

#ifdef glStencilOpSeparate
#undef glStencilOpSeparate
#endif
#ifdef PFNGLSTENCILOPSEPARATEPROC
#undef PFNGLSTENCILOPSEPARATEPROC
#endif
typedef void  (*PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);

#ifdef glStencilFuncSeparate
#undef glStencilFuncSeparate
#endif
#ifdef PFNGLSTENCILFUNCSEPARATEPROC
#undef PFNGLSTENCILFUNCSEPARATEPROC
#endif
typedef void  (*PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);

#ifdef glStencilMaskSeparate
#undef glStencilMaskSeparate
#endif
#ifdef PFNGLSTENCILMASKSEPARATEPROC
#undef PFNGLSTENCILMASKSEPARATEPROC
#endif
typedef void  (*PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);

#ifdef glAttachShader
#undef glAttachShader
#endif
#ifdef PFNGLATTACHSHADERPROC
#undef PFNGLATTACHSHADERPROC
#endif
typedef void  (*PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);

#ifdef glBindAttribLocation
#undef glBindAttribLocation
#endif
#ifdef PFNGLBINDATTRIBLOCATIONPROC
#undef PFNGLBINDATTRIBLOCATIONPROC
#endif
typedef void  (*PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar *name);

#ifdef glCompileShader
#undef glCompileShader
#endif
#ifdef PFNGLCOMPILESHADERPROC
#undef PFNGLCOMPILESHADERPROC
#endif
typedef void  (*PFNGLCOMPILESHADERPROC)(GLuint shader);

#ifdef glCreateProgram
#undef glCreateProgram
#endif
#ifdef PFNGLCREATEPROGRAMPROC
#undef PFNGLCREATEPROGRAMPROC
#endif
typedef GLuint  (*PFNGLCREATEPROGRAMPROC)(void);

#ifdef glCreateShader
#undef glCreateShader
#endif
#ifdef PFNGLCREATESHADERPROC
#undef PFNGLCREATESHADERPROC
#endif
typedef GLuint  (*PFNGLCREATESHADERPROC)(GLenum type);

#ifdef glDeleteProgram
#undef glDeleteProgram
#endif
#ifdef PFNGLDELETEPROGRAMPROC
#undef PFNGLDELETEPROGRAMPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMPROC)(GLuint program);

#ifdef glDeleteShader
#undef glDeleteShader
#endif
#ifdef PFNGLDELETESHADERPROC
#undef PFNGLDELETESHADERPROC
#endif
typedef void  (*PFNGLDELETESHADERPROC)(GLuint shader);

#ifdef glDetachShader
#undef glDetachShader
#endif
#ifdef PFNGLDETACHSHADERPROC
#undef PFNGLDETACHSHADERPROC
#endif
typedef void  (*PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);

#ifdef glDisableVertexAttribArray
#undef glDisableVertexAttribArray
#endif
#ifdef PFNGLDISABLEVERTEXATTRIBARRAYPROC
#undef PFNGLDISABLEVERTEXATTRIBARRAYPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);

#ifdef glEnableVertexAttribArray
#undef glEnableVertexAttribArray
#endif
#ifdef PFNGLENABLEVERTEXATTRIBARRAYPROC
#undef PFNGLENABLEVERTEXATTRIBARRAYPROC
#endif
typedef void  (*PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);

#ifdef glGetActiveAttrib
#undef glGetActiveAttrib
#endif
#ifdef PFNGLGETACTIVEATTRIBPROC
#undef PFNGLGETACTIVEATTRIBPROC
#endif
typedef void  (*PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);

#ifdef glGetActiveUniform
#undef glGetActiveUniform
#endif
#ifdef PFNGLGETACTIVEUNIFORMPROC
#undef PFNGLGETACTIVEUNIFORMPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);

#ifdef glGetAttachedShaders
#undef glGetAttachedShaders
#endif
#ifdef PFNGLGETATTACHEDSHADERSPROC
#undef PFNGLGETATTACHEDSHADERSPROC
#endif
typedef void  (*PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);

#ifdef glGetAttribLocation
#undef glGetAttribLocation
#endif
#ifdef PFNGLGETATTRIBLOCATIONPROC
#undef PFNGLGETATTRIBLOCATIONPROC
#endif
typedef GLint  (*PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar *name);

#ifdef glGetProgramiv
#undef glGetProgramiv
#endif
#ifdef PFNGLGETPROGRAMIVPROC
#undef PFNGLGETPROGRAMIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint *params);

#ifdef glGetProgramInfoLog
#undef glGetProgramInfoLog
#endif
#ifdef PFNGLGETPROGRAMINFOLOGPROC
#undef PFNGLGETPROGRAMINFOLOGPROC
#endif
typedef void  (*PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

#ifdef glGetShaderiv
#undef glGetShaderiv
#endif
#ifdef PFNGLGETSHADERIVPROC
#undef PFNGLGETSHADERIVPROC
#endif
typedef void  (*PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint *params);

#ifdef glGetShaderInfoLog
#undef glGetShaderInfoLog
#endif
#ifdef PFNGLGETSHADERINFOLOGPROC
#undef PFNGLGETSHADERINFOLOGPROC
#endif
typedef void  (*PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

#ifdef glGetShaderSource
#undef glGetShaderSource
#endif
#ifdef PFNGLGETSHADERSOURCEPROC
#undef PFNGLGETSHADERSOURCEPROC
#endif
typedef void  (*PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);

#ifdef glGetUniformLocation
#undef glGetUniformLocation
#endif
#ifdef PFNGLGETUNIFORMLOCATIONPROC
#undef PFNGLGETUNIFORMLOCATIONPROC
#endif
typedef GLint  (*PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar *name);

#ifdef glGetUniformfv
#undef glGetUniformfv
#endif
#ifdef PFNGLGETUNIFORMFVPROC
#undef PFNGLGETUNIFORMFVPROC
#endif
typedef void  (*PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat *params);

#ifdef glGetUniformiv
#undef glGetUniformiv
#endif
#ifdef PFNGLGETUNIFORMIVPROC
#undef PFNGLGETUNIFORMIVPROC
#endif
typedef void  (*PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint *params);

#ifdef glGetVertexAttribdv
#undef glGetVertexAttribdv
#endif
#ifdef PFNGLGETVERTEXATTRIBDVPROC
#undef PFNGLGETVERTEXATTRIBDVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBDVPROC)(GLuint index, GLenum pname, GLdouble *params);

#ifdef glGetVertexAttribfv
#undef glGetVertexAttribfv
#endif
#ifdef PFNGLGETVERTEXATTRIBFVPROC
#undef PFNGLGETVERTEXATTRIBFVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat *params);

#ifdef glGetVertexAttribiv
#undef glGetVertexAttribiv
#endif
#ifdef PFNGLGETVERTEXATTRIBIVPROC
#undef PFNGLGETVERTEXATTRIBIVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint *params);

#ifdef glGetVertexAttribPointerv
#undef glGetVertexAttribPointerv
#endif
#ifdef PFNGLGETVERTEXATTRIBPOINTERVPROC
#undef PFNGLGETVERTEXATTRIBPOINTERVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void **pointer);

#ifdef glIsProgram
#undef glIsProgram
#endif
#ifdef PFNGLISPROGRAMPROC
#undef PFNGLISPROGRAMPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMPROC)(GLuint program);

#ifdef glIsShader
#undef glIsShader
#endif
#ifdef PFNGLISSHADERPROC
#undef PFNGLISSHADERPROC
#endif
typedef GLboolean  (*PFNGLISSHADERPROC)(GLuint shader);

#ifdef glLinkProgram
#undef glLinkProgram
#endif
#ifdef PFNGLLINKPROGRAMPROC
#undef PFNGLLINKPROGRAMPROC
#endif
typedef void  (*PFNGLLINKPROGRAMPROC)(GLuint program);

#ifdef glShaderSource
#undef glShaderSource
#endif
#ifdef PFNGLSHADERSOURCEPROC
#undef PFNGLSHADERSOURCEPROC
#endif
typedef void  (*PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);

#ifdef glUseProgram
#undef glUseProgram
#endif
#ifdef PFNGLUSEPROGRAMPROC
#undef PFNGLUSEPROGRAMPROC
#endif
typedef void  (*PFNGLUSEPROGRAMPROC)(GLuint program);

#ifdef glUniform1f
#undef glUniform1f
#endif
#ifdef PFNGLUNIFORM1FPROC
#undef PFNGLUNIFORM1FPROC
#endif
typedef void  (*PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);

#ifdef glUniform2f
#undef glUniform2f
#endif
#ifdef PFNGLUNIFORM2FPROC
#undef PFNGLUNIFORM2FPROC
#endif
typedef void  (*PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);

#ifdef glUniform3f
#undef glUniform3f
#endif
#ifdef PFNGLUNIFORM3FPROC
#undef PFNGLUNIFORM3FPROC
#endif
typedef void  (*PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);

#ifdef glUniform4f
#undef glUniform4f
#endif
#ifdef PFNGLUNIFORM4FPROC
#undef PFNGLUNIFORM4FPROC
#endif
typedef void  (*PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

#ifdef glUniform1i
#undef glUniform1i
#endif
#ifdef PFNGLUNIFORM1IPROC
#undef PFNGLUNIFORM1IPROC
#endif
typedef void  (*PFNGLUNIFORM1IPROC)(GLint location, GLint v0);

#ifdef glUniform2i
#undef glUniform2i
#endif
#ifdef PFNGLUNIFORM2IPROC
#undef PFNGLUNIFORM2IPROC
#endif
typedef void  (*PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);

#ifdef glUniform3i
#undef glUniform3i
#endif
#ifdef PFNGLUNIFORM3IPROC
#undef PFNGLUNIFORM3IPROC
#endif
typedef void  (*PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);

#ifdef glUniform4i
#undef glUniform4i
#endif
#ifdef PFNGLUNIFORM4IPROC
#undef PFNGLUNIFORM4IPROC
#endif
typedef void  (*PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);

#ifdef glUniform1fv
#undef glUniform1fv
#endif
#ifdef PFNGLUNIFORM1FVPROC
#undef PFNGLUNIFORM1FVPROC
#endif
typedef void  (*PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform2fv
#undef glUniform2fv
#endif
#ifdef PFNGLUNIFORM2FVPROC
#undef PFNGLUNIFORM2FVPROC
#endif
typedef void  (*PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform3fv
#undef glUniform3fv
#endif
#ifdef PFNGLUNIFORM3FVPROC
#undef PFNGLUNIFORM3FVPROC
#endif
typedef void  (*PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform4fv
#undef glUniform4fv
#endif
#ifdef PFNGLUNIFORM4FVPROC
#undef PFNGLUNIFORM4FVPROC
#endif
typedef void  (*PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform1iv
#undef glUniform1iv
#endif
#ifdef PFNGLUNIFORM1IVPROC
#undef PFNGLUNIFORM1IVPROC
#endif
typedef void  (*PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform2iv
#undef glUniform2iv
#endif
#ifdef PFNGLUNIFORM2IVPROC
#undef PFNGLUNIFORM2IVPROC
#endif
typedef void  (*PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform3iv
#undef glUniform3iv
#endif
#ifdef PFNGLUNIFORM3IVPROC
#undef PFNGLUNIFORM3IVPROC
#endif
typedef void  (*PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform4iv
#undef glUniform4iv
#endif
#ifdef PFNGLUNIFORM4IVPROC
#undef PFNGLUNIFORM4IVPROC
#endif
typedef void  (*PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniformMatrix2fv
#undef glUniformMatrix2fv
#endif
#ifdef PFNGLUNIFORMMATRIX2FVPROC
#undef PFNGLUNIFORMMATRIX2FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3fv
#undef glUniformMatrix3fv
#endif
#ifdef PFNGLUNIFORMMATRIX3FVPROC
#undef PFNGLUNIFORMMATRIX3FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4fv
#undef glUniformMatrix4fv
#endif
#ifdef PFNGLUNIFORMMATRIX4FVPROC
#undef PFNGLUNIFORMMATRIX4FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glValidateProgram
#undef glValidateProgram
#endif
#ifdef PFNGLVALIDATEPROGRAMPROC
#undef PFNGLVALIDATEPROGRAMPROC
#endif
typedef void  (*PFNGLVALIDATEPROGRAMPROC)(GLuint program);

#ifdef glVertexAttrib1d
#undef glVertexAttrib1d
#endif
#ifdef PFNGLVERTEXATTRIB1DPROC
#undef PFNGLVERTEXATTRIB1DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1DPROC)(GLuint index, GLdouble x);

#ifdef glVertexAttrib1dv
#undef glVertexAttrib1dv
#endif
#ifdef PFNGLVERTEXATTRIB1DVPROC
#undef PFNGLVERTEXATTRIB1DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib1f
#undef glVertexAttrib1f
#endif
#ifdef PFNGLVERTEXATTRIB1FPROC
#undef PFNGLVERTEXATTRIB1FPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);

#ifdef glVertexAttrib1fv
#undef glVertexAttrib1fv
#endif
#ifdef PFNGLVERTEXATTRIB1FVPROC
#undef PFNGLVERTEXATTRIB1FVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib1s
#undef glVertexAttrib1s
#endif
#ifdef PFNGLVERTEXATTRIB1SPROC
#undef PFNGLVERTEXATTRIB1SPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1SPROC)(GLuint index, GLshort x);

#ifdef glVertexAttrib1sv
#undef glVertexAttrib1sv
#endif
#ifdef PFNGLVERTEXATTRIB1SVPROC
#undef PFNGLVERTEXATTRIB1SVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1SVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib2d
#undef glVertexAttrib2d
#endif
#ifdef PFNGLVERTEXATTRIB2DPROC
#undef PFNGLVERTEXATTRIB2DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2DPROC)(GLuint index, GLdouble x, GLdouble y);

#ifdef glVertexAttrib2dv
#undef glVertexAttrib2dv
#endif
#ifdef PFNGLVERTEXATTRIB2DVPROC
#undef PFNGLVERTEXATTRIB2DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib2f
#undef glVertexAttrib2f
#endif
#ifdef PFNGLVERTEXATTRIB2FPROC
#undef PFNGLVERTEXATTRIB2FPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);

#ifdef glVertexAttrib2fv
#undef glVertexAttrib2fv
#endif
#ifdef PFNGLVERTEXATTRIB2FVPROC
#undef PFNGLVERTEXATTRIB2FVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib2s
#undef glVertexAttrib2s
#endif
#ifdef PFNGLVERTEXATTRIB2SPROC
#undef PFNGLVERTEXATTRIB2SPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2SPROC)(GLuint index, GLshort x, GLshort y);

#ifdef glVertexAttrib2sv
#undef glVertexAttrib2sv
#endif
#ifdef PFNGLVERTEXATTRIB2SVPROC
#undef PFNGLVERTEXATTRIB2SVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2SVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib3d
#undef glVertexAttrib3d
#endif
#ifdef PFNGLVERTEXATTRIB3DPROC
#undef PFNGLVERTEXATTRIB3DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertexAttrib3dv
#undef glVertexAttrib3dv
#endif
#ifdef PFNGLVERTEXATTRIB3DVPROC
#undef PFNGLVERTEXATTRIB3DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib3f
#undef glVertexAttrib3f
#endif
#ifdef PFNGLVERTEXATTRIB3FPROC
#undef PFNGLVERTEXATTRIB3FPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);

#ifdef glVertexAttrib3fv
#undef glVertexAttrib3fv
#endif
#ifdef PFNGLVERTEXATTRIB3FVPROC
#undef PFNGLVERTEXATTRIB3FVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib3s
#undef glVertexAttrib3s
#endif
#ifdef PFNGLVERTEXATTRIB3SPROC
#undef PFNGLVERTEXATTRIB3SPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3SPROC)(GLuint index, GLshort x, GLshort y, GLshort z);

#ifdef glVertexAttrib3sv
#undef glVertexAttrib3sv
#endif
#ifdef PFNGLVERTEXATTRIB3SVPROC
#undef PFNGLVERTEXATTRIB3SVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3SVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4Nbv
#undef glVertexAttrib4Nbv
#endif
#ifdef PFNGLVERTEXATTRIB4NBVPROC
#undef PFNGLVERTEXATTRIB4NBVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NBVPROC)(GLuint index, const GLbyte *v);

#ifdef glVertexAttrib4Niv
#undef glVertexAttrib4Niv
#endif
#ifdef PFNGLVERTEXATTRIB4NIVPROC
#undef PFNGLVERTEXATTRIB4NIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NIVPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttrib4Nsv
#undef glVertexAttrib4Nsv
#endif
#ifdef PFNGLVERTEXATTRIB4NSVPROC
#undef PFNGLVERTEXATTRIB4NSVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NSVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4Nub
#undef glVertexAttrib4Nub
#endif
#ifdef PFNGLVERTEXATTRIB4NUBPROC
#undef PFNGLVERTEXATTRIB4NUBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);

#ifdef glVertexAttrib4Nubv
#undef glVertexAttrib4Nubv
#endif
#ifdef PFNGLVERTEXATTRIB4NUBVPROC
#undef PFNGLVERTEXATTRIB4NUBVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttrib4Nuiv
#undef glVertexAttrib4Nuiv
#endif
#ifdef PFNGLVERTEXATTRIB4NUIVPROC
#undef PFNGLVERTEXATTRIB4NUIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttrib4Nusv
#undef glVertexAttrib4Nusv
#endif
#ifdef PFNGLVERTEXATTRIB4NUSVPROC
#undef PFNGLVERTEXATTRIB4NUSVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index, const GLushort *v);

#ifdef glVertexAttrib4bv
#undef glVertexAttrib4bv
#endif
#ifdef PFNGLVERTEXATTRIB4BVPROC
#undef PFNGLVERTEXATTRIB4BVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4BVPROC)(GLuint index, const GLbyte *v);

#ifdef glVertexAttrib4d
#undef glVertexAttrib4d
#endif
#ifdef PFNGLVERTEXATTRIB4DPROC
#undef PFNGLVERTEXATTRIB4DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertexAttrib4dv
#undef glVertexAttrib4dv
#endif
#ifdef PFNGLVERTEXATTRIB4DVPROC
#undef PFNGLVERTEXATTRIB4DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib4f
#undef glVertexAttrib4f
#endif
#ifdef PFNGLVERTEXATTRIB4FPROC
#undef PFNGLVERTEXATTRIB4FPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glVertexAttrib4fv
#undef glVertexAttrib4fv
#endif
#ifdef PFNGLVERTEXATTRIB4FVPROC
#undef PFNGLVERTEXATTRIB4FVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib4iv
#undef glVertexAttrib4iv
#endif
#ifdef PFNGLVERTEXATTRIB4IVPROC
#undef PFNGLVERTEXATTRIB4IVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4IVPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttrib4s
#undef glVertexAttrib4s
#endif
#ifdef PFNGLVERTEXATTRIB4SPROC
#undef PFNGLVERTEXATTRIB4SPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4SPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);

#ifdef glVertexAttrib4sv
#undef glVertexAttrib4sv
#endif
#ifdef PFNGLVERTEXATTRIB4SVPROC
#undef PFNGLVERTEXATTRIB4SVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4SVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4ubv
#undef glVertexAttrib4ubv
#endif
#ifdef PFNGLVERTEXATTRIB4UBVPROC
#undef PFNGLVERTEXATTRIB4UBVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4UBVPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttrib4uiv
#undef glVertexAttrib4uiv
#endif
#ifdef PFNGLVERTEXATTRIB4UIVPROC
#undef PFNGLVERTEXATTRIB4UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4UIVPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttrib4usv
#undef glVertexAttrib4usv
#endif
#ifdef PFNGLVERTEXATTRIB4USVPROC
#undef PFNGLVERTEXATTRIB4USVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4USVPROC)(GLuint index, const GLushort *v);

#ifdef glVertexAttribPointer
#undef glVertexAttribPointer
#endif
#ifdef PFNGLVERTEXATTRIBPOINTERPROC
#undef PFNGLVERTEXATTRIBPOINTERPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);

#ifndef GL_BLEND_EQUATION_RGB
#define GL_BLEND_EQUATION_RGB 0x8009
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#endif

#ifndef GL_CURRENT_VERTEX_ATTRIB
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#endif

#ifndef GL_VERTEX_PROGRAM_POINT_SIZE
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#endif

#ifndef GL_STENCIL_BACK_FUNC
#define GL_STENCIL_BACK_FUNC 0x8800
#endif

#ifndef GL_STENCIL_BACK_FAIL
#define GL_STENCIL_BACK_FAIL 0x8801
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#endif

#ifndef GL_MAX_DRAW_BUFFERS
#define GL_MAX_DRAW_BUFFERS 0x8824
#endif

#ifndef GL_DRAW_BUFFER0
#define GL_DRAW_BUFFER0 0x8825
#endif

#ifndef GL_DRAW_BUFFER1
#define GL_DRAW_BUFFER1 0x8826
#endif

#ifndef GL_DRAW_BUFFER2
#define GL_DRAW_BUFFER2 0x8827
#endif

#ifndef GL_DRAW_BUFFER3
#define GL_DRAW_BUFFER3 0x8828
#endif

#ifndef GL_DRAW_BUFFER4
#define GL_DRAW_BUFFER4 0x8829
#endif

#ifndef GL_DRAW_BUFFER5
#define GL_DRAW_BUFFER5 0x882A
#endif

#ifndef GL_DRAW_BUFFER6
#define GL_DRAW_BUFFER6 0x882B
#endif

#ifndef GL_DRAW_BUFFER7
#define GL_DRAW_BUFFER7 0x882C
#endif

#ifndef GL_DRAW_BUFFER8
#define GL_DRAW_BUFFER8 0x882D
#endif

#ifndef GL_DRAW_BUFFER9
#define GL_DRAW_BUFFER9 0x882E
#endif

#ifndef GL_DRAW_BUFFER10
#define GL_DRAW_BUFFER10 0x882F
#endif

#ifndef GL_DRAW_BUFFER11
#define GL_DRAW_BUFFER11 0x8830
#endif

#ifndef GL_DRAW_BUFFER12
#define GL_DRAW_BUFFER12 0x8831
#endif

#ifndef GL_DRAW_BUFFER13
#define GL_DRAW_BUFFER13 0x8832
#endif

#ifndef GL_DRAW_BUFFER14
#define GL_DRAW_BUFFER14 0x8833
#endif

#ifndef GL_DRAW_BUFFER15
#define GL_DRAW_BUFFER15 0x8834
#endif

#ifndef GL_BLEND_EQUATION_ALPHA
#define GL_BLEND_EQUATION_ALPHA 0x883D
#endif

#ifndef GL_MAX_VERTEX_ATTRIBS
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#endif

#ifndef GL_FRAGMENT_SHADER
#define GL_FRAGMENT_SHADER 0x8B30
#endif

#ifndef GL_VERTEX_SHADER
#define GL_VERTEX_SHADER 0x8B31
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#endif

#ifndef GL_MAX_VARYING_FLOATS
#define GL_MAX_VARYING_FLOATS 0x8B4B
#endif

#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#endif

#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#endif

#ifndef GL_SHADER_TYPE
#define GL_SHADER_TYPE 0x8B4F
#endif

#ifndef GL_FLOAT_VEC2
#define GL_FLOAT_VEC2 0x8B50
#endif

#ifndef GL_FLOAT_VEC3
#define GL_FLOAT_VEC3 0x8B51
#endif

#ifndef GL_FLOAT_VEC4
#define GL_FLOAT_VEC4 0x8B52
#endif

#ifndef GL_INT_VEC2
#define GL_INT_VEC2 0x8B53
#endif

#ifndef GL_INT_VEC3
#define GL_INT_VEC3 0x8B54
#endif

#ifndef GL_INT_VEC4
#define GL_INT_VEC4 0x8B55
#endif

#ifndef GL_BOOL
#define GL_BOOL 0x8B56
#endif

#ifndef GL_BOOL_VEC2
#define GL_BOOL_VEC2 0x8B57
#endif

#ifndef GL_BOOL_VEC3
#define GL_BOOL_VEC3 0x8B58
#endif

#ifndef GL_BOOL_VEC4
#define GL_BOOL_VEC4 0x8B59
#endif

#ifndef GL_FLOAT_MAT2
#define GL_FLOAT_MAT2 0x8B5A
#endif

#ifndef GL_FLOAT_MAT3
#define GL_FLOAT_MAT3 0x8B5B
#endif

#ifndef GL_FLOAT_MAT4
#define GL_FLOAT_MAT4 0x8B5C
#endif

#ifndef GL_SAMPLER_1D
#define GL_SAMPLER_1D 0x8B5D
#endif

#ifndef GL_SAMPLER_2D
#define GL_SAMPLER_2D 0x8B5E
#endif

#ifndef GL_SAMPLER_3D
#define GL_SAMPLER_3D 0x8B5F
#endif

#ifndef GL_SAMPLER_CUBE
#define GL_SAMPLER_CUBE 0x8B60
#endif

#ifndef GL_SAMPLER_1D_SHADOW
#define GL_SAMPLER_1D_SHADOW 0x8B61
#endif

#ifndef GL_SAMPLER_2D_SHADOW
#define GL_SAMPLER_2D_SHADOW 0x8B62
#endif

#ifndef GL_DELETE_STATUS
#define GL_DELETE_STATUS 0x8B80
#endif

#ifndef GL_COMPILE_STATUS
#define GL_COMPILE_STATUS 0x8B81
#endif

#ifndef GL_LINK_STATUS
#define GL_LINK_STATUS 0x8B82
#endif

#ifndef GL_VALIDATE_STATUS
#define GL_VALIDATE_STATUS 0x8B83
#endif

#ifndef GL_INFO_LOG_LENGTH
#define GL_INFO_LOG_LENGTH 0x8B84
#endif

#ifndef GL_ATTACHED_SHADERS
#define GL_ATTACHED_SHADERS 0x8B85
#endif

#ifndef GL_ACTIVE_UNIFORMS
#define GL_ACTIVE_UNIFORMS 0x8B86
#endif

#ifndef GL_ACTIVE_UNIFORM_MAX_LENGTH
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#endif

#ifndef GL_SHADER_SOURCE_LENGTH
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#endif

#ifndef GL_ACTIVE_ATTRIBUTES
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#endif

#ifndef GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#endif

#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#endif

#ifndef GL_SHADING_LANGUAGE_VERSION
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#endif

#ifndef GL_CURRENT_PROGRAM
#define GL_CURRENT_PROGRAM 0x8B8D
#endif

#ifndef GL_POINT_SPRITE_COORD_ORIGIN
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#endif

#ifndef GL_LOWER_LEFT
#define GL_LOWER_LEFT 0x8CA1
#endif

#ifndef GL_UPPER_LEFT
#define GL_UPPER_LEFT 0x8CA2
#endif

#ifndef GL_STENCIL_BACK_REF
#define GL_STENCIL_BACK_REF 0x8CA3
#endif

#ifndef GL_STENCIL_BACK_VALUE_MASK
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#endif

#ifndef GL_STENCIL_BACK_WRITEMASK
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#endif

#ifndef GL_VERTEX_PROGRAM_TWO_SIDE
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#endif

#ifndef GL_POINT_SPRITE
#define GL_POINT_SPRITE 0x8861
#endif

#ifndef GL_COORD_REPLACE
#define GL_COORD_REPLACE 0x8862
#endif

#ifndef GL_MAX_TEXTURE_COORDS
#define GL_MAX_TEXTURE_COORDS 0x8871
#endif

#ifndef GL_VERSION_2_1
#define GL_VERSION_2_1 1
#endif

#ifdef glUniformMatrix2x3fv
#undef glUniformMatrix2x3fv
#endif
#ifdef PFNGLUNIFORMMATRIX2X3FVPROC
#undef PFNGLUNIFORMMATRIX2X3FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3x2fv
#undef glUniformMatrix3x2fv
#endif
#ifdef PFNGLUNIFORMMATRIX3X2FVPROC
#undef PFNGLUNIFORMMATRIX3X2FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix2x4fv
#undef glUniformMatrix2x4fv
#endif
#ifdef PFNGLUNIFORMMATRIX2X4FVPROC
#undef PFNGLUNIFORMMATRIX2X4FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4x2fv
#undef glUniformMatrix4x2fv
#endif
#ifdef PFNGLUNIFORMMATRIX4X2FVPROC
#undef PFNGLUNIFORMMATRIX4X2FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3x4fv
#undef glUniformMatrix3x4fv
#endif
#ifdef PFNGLUNIFORMMATRIX3X4FVPROC
#undef PFNGLUNIFORMMATRIX3X4FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4x3fv
#undef glUniformMatrix4x3fv
#endif
#ifdef PFNGLUNIFORMMATRIX4X3FVPROC
#undef PFNGLUNIFORMMATRIX4X3FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifndef GL_PIXEL_PACK_BUFFER
#define GL_PIXEL_PACK_BUFFER 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#endif

#ifndef GL_FLOAT_MAT2x3
#define GL_FLOAT_MAT2x3 0x8B65
#endif

#ifndef GL_FLOAT_MAT2x4
#define GL_FLOAT_MAT2x4 0x8B66
#endif

#ifndef GL_FLOAT_MAT3x2
#define GL_FLOAT_MAT3x2 0x8B67
#endif

#ifndef GL_FLOAT_MAT3x4
#define GL_FLOAT_MAT3x4 0x8B68
#endif

#ifndef GL_FLOAT_MAT4x2
#define GL_FLOAT_MAT4x2 0x8B69
#endif

#ifndef GL_FLOAT_MAT4x3
#define GL_FLOAT_MAT4x3 0x8B6A
#endif

#ifndef GL_SRGB
#define GL_SRGB 0x8C40
#endif

#ifndef GL_SRGB8
#define GL_SRGB8 0x8C41
#endif

#ifndef GL_SRGB_ALPHA
#define GL_SRGB_ALPHA 0x8C42
#endif

#ifndef GL_SRGB8_ALPHA8
#define GL_SRGB8_ALPHA8 0x8C43
#endif

#ifndef GL_COMPRESSED_SRGB
#define GL_COMPRESSED_SRGB 0x8C48
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#endif

#ifndef GL_CURRENT_RASTER_SECONDARY_COLOR
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#endif

#ifndef GL_SLUMINANCE_ALPHA
#define GL_SLUMINANCE_ALPHA 0x8C44
#endif

#ifndef GL_SLUMINANCE8_ALPHA8
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#endif

#ifndef GL_SLUMINANCE
#define GL_SLUMINANCE 0x8C46
#endif

#ifndef GL_SLUMINANCE8
#define GL_SLUMINANCE8 0x8C47
#endif

#ifndef GL_COMPRESSED_SLUMINANCE
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_ALPHA
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#endif

#ifndef GL_VERSION_3_0
#define GL_VERSION_3_0 1
#endif

#ifdef glColorMaski
#undef glColorMaski
#endif
#ifdef PFNGLCOLORMASKIPROC
#undef PFNGLCOLORMASKIPROC
#endif
typedef void  (*PFNGLCOLORMASKIPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);

#ifdef glGetBooleani_v
#undef glGetBooleani_v
#endif
#ifdef PFNGLGETBOOLEANI_VPROC
#undef PFNGLGETBOOLEANI_VPROC
#endif
typedef void  (*PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean *data);

#ifdef glGetIntegeri_v
#undef glGetIntegeri_v
#endif
#ifdef PFNGLGETINTEGERI_VPROC
#undef PFNGLGETINTEGERI_VPROC
#endif
typedef void  (*PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint *data);

#ifdef glEnablei
#undef glEnablei
#endif
#ifdef PFNGLENABLEIPROC
#undef PFNGLENABLEIPROC
#endif
typedef void  (*PFNGLENABLEIPROC)(GLenum target, GLuint index);

#ifdef glDisablei
#undef glDisablei
#endif
#ifdef PFNGLDISABLEIPROC
#undef PFNGLDISABLEIPROC
#endif
typedef void  (*PFNGLDISABLEIPROC)(GLenum target, GLuint index);

#ifdef glIsEnabledi
#undef glIsEnabledi
#endif
#ifdef PFNGLISENABLEDIPROC
#undef PFNGLISENABLEDIPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDIPROC)(GLenum target, GLuint index);

#ifdef glBeginTransformFeedback
#undef glBeginTransformFeedback
#endif
#ifdef PFNGLBEGINTRANSFORMFEEDBACKPROC
#undef PFNGLBEGINTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);

#ifdef glEndTransformFeedback
#undef glEndTransformFeedback
#endif
#ifdef PFNGLENDTRANSFORMFEEDBACKPROC
#undef PFNGLENDTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLENDTRANSFORMFEEDBACKPROC)(void);

#ifdef glBindBufferRange
#undef glBindBufferRange
#endif
#ifdef PFNGLBINDBUFFERRANGEPROC
#undef PFNGLBINDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glBindBufferBase
#undef glBindBufferBase
#endif
#ifdef PFNGLBINDBUFFERBASEPROC
#undef PFNGLBINDBUFFERBASEPROC
#endif
typedef void  (*PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);

#ifdef glTransformFeedbackVaryings
#undef glTransformFeedbackVaryings
#endif
#ifdef PFNGLTRANSFORMFEEDBACKVARYINGSPROC
#undef PFNGLTRANSFORMFEEDBACKVARYINGSPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);

#ifdef glGetTransformFeedbackVarying
#undef glGetTransformFeedbackVarying
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
#undef PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);

#ifdef glClampColor
#undef glClampColor
#endif
#ifdef PFNGLCLAMPCOLORPROC
#undef PFNGLCLAMPCOLORPROC
#endif
typedef void  (*PFNGLCLAMPCOLORPROC)(GLenum target, GLenum clamp);

#ifdef glBeginConditionalRender
#undef glBeginConditionalRender
#endif
#ifdef PFNGLBEGINCONDITIONALRENDERPROC
#undef PFNGLBEGINCONDITIONALRENDERPROC
#endif
typedef void  (*PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id, GLenum mode);

#ifdef glEndConditionalRender
#undef glEndConditionalRender
#endif
#ifdef PFNGLENDCONDITIONALRENDERPROC
#undef PFNGLENDCONDITIONALRENDERPROC
#endif
typedef void  (*PFNGLENDCONDITIONALRENDERPROC)(void);

#ifdef glVertexAttribIPointer
#undef glVertexAttribIPointer
#endif
#ifdef PFNGLVERTEXATTRIBIPOINTERPROC
#undef PFNGLVERTEXATTRIBIPOINTERPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glGetVertexAttribIiv
#undef glGetVertexAttribIiv
#endif
#ifdef PFNGLGETVERTEXATTRIBIIVPROC
#undef PFNGLGETVERTEXATTRIBIIVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint *params);

#ifdef glGetVertexAttribIuiv
#undef glGetVertexAttribIuiv
#endif
#ifdef PFNGLGETVERTEXATTRIBIUIVPROC
#undef PFNGLGETVERTEXATTRIBIUIVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint *params);

#ifdef glVertexAttribI1i
#undef glVertexAttribI1i
#endif
#ifdef PFNGLVERTEXATTRIBI1IPROC
#undef PFNGLVERTEXATTRIBI1IPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI1IPROC)(GLuint index, GLint x);

#ifdef glVertexAttribI2i
#undef glVertexAttribI2i
#endif
#ifdef PFNGLVERTEXATTRIBI2IPROC
#undef PFNGLVERTEXATTRIBI2IPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI2IPROC)(GLuint index, GLint x, GLint y);

#ifdef glVertexAttribI3i
#undef glVertexAttribI3i
#endif
#ifdef PFNGLVERTEXATTRIBI3IPROC
#undef PFNGLVERTEXATTRIBI3IPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI3IPROC)(GLuint index, GLint x, GLint y, GLint z);

#ifdef glVertexAttribI4i
#undef glVertexAttribI4i
#endif
#ifdef PFNGLVERTEXATTRIBI4IPROC
#undef PFNGLVERTEXATTRIBI4IPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);

#ifdef glVertexAttribI1ui
#undef glVertexAttribI1ui
#endif
#ifdef PFNGLVERTEXATTRIBI1UIPROC
#undef PFNGLVERTEXATTRIBI1UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI1UIPROC)(GLuint index, GLuint x);

#ifdef glVertexAttribI2ui
#undef glVertexAttribI2ui
#endif
#ifdef PFNGLVERTEXATTRIBI2UIPROC
#undef PFNGLVERTEXATTRIBI2UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI2UIPROC)(GLuint index, GLuint x, GLuint y);

#ifdef glVertexAttribI3ui
#undef glVertexAttribI3ui
#endif
#ifdef PFNGLVERTEXATTRIBI3UIPROC
#undef PFNGLVERTEXATTRIBI3UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI3UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z);

#ifdef glVertexAttribI4ui
#undef glVertexAttribI4ui
#endif
#ifdef PFNGLVERTEXATTRIBI4UIPROC
#undef PFNGLVERTEXATTRIBI4UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);

#ifdef glVertexAttribI1iv
#undef glVertexAttribI1iv
#endif
#ifdef PFNGLVERTEXATTRIBI1IVPROC
#undef PFNGLVERTEXATTRIBI1IVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI1IVPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI2iv
#undef glVertexAttribI2iv
#endif
#ifdef PFNGLVERTEXATTRIBI2IVPROC
#undef PFNGLVERTEXATTRIBI2IVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI2IVPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI3iv
#undef glVertexAttribI3iv
#endif
#ifdef PFNGLVERTEXATTRIBI3IVPROC
#undef PFNGLVERTEXATTRIBI3IVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI3IVPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI4iv
#undef glVertexAttribI4iv
#endif
#ifdef PFNGLVERTEXATTRIBI4IVPROC
#undef PFNGLVERTEXATTRIBI4IVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI1uiv
#undef glVertexAttribI1uiv
#endif
#ifdef PFNGLVERTEXATTRIBI1UIVPROC
#undef PFNGLVERTEXATTRIBI1UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribI2uiv
#undef glVertexAttribI2uiv
#endif
#ifdef PFNGLVERTEXATTRIBI2UIVPROC
#undef PFNGLVERTEXATTRIBI2UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribI3uiv
#undef glVertexAttribI3uiv
#endif
#ifdef PFNGLVERTEXATTRIBI3UIVPROC
#undef PFNGLVERTEXATTRIBI3UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribI4uiv
#undef glVertexAttribI4uiv
#endif
#ifdef PFNGLVERTEXATTRIBI4UIVPROC
#undef PFNGLVERTEXATTRIBI4UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribI4bv
#undef glVertexAttribI4bv
#endif
#ifdef PFNGLVERTEXATTRIBI4BVPROC
#undef PFNGLVERTEXATTRIBI4BVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4BVPROC)(GLuint index, const GLbyte *v);

#ifdef glVertexAttribI4sv
#undef glVertexAttribI4sv
#endif
#ifdef PFNGLVERTEXATTRIBI4SVPROC
#undef PFNGLVERTEXATTRIBI4SVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4SVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttribI4ubv
#undef glVertexAttribI4ubv
#endif
#ifdef PFNGLVERTEXATTRIBI4UBVPROC
#undef PFNGLVERTEXATTRIBI4UBVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttribI4usv
#undef glVertexAttribI4usv
#endif
#ifdef PFNGLVERTEXATTRIBI4USVPROC
#undef PFNGLVERTEXATTRIBI4USVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4USVPROC)(GLuint index, const GLushort *v);

#ifdef glGetUniformuiv
#undef glGetUniformuiv
#endif
#ifdef PFNGLGETUNIFORMUIVPROC
#undef PFNGLGETUNIFORMUIVPROC
#endif
typedef void  (*PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint *params);

#ifdef glBindFragDataLocation
#undef glBindFragDataLocation
#endif
#ifdef PFNGLBINDFRAGDATALOCATIONPROC
#undef PFNGLBINDFRAGDATALOCATIONPROC
#endif
typedef void  (*PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program, GLuint color, const GLchar *name);

#ifdef glGetFragDataLocation
#undef glGetFragDataLocation
#endif
#ifdef PFNGLGETFRAGDATALOCATIONPROC
#undef PFNGLGETFRAGDATALOCATIONPROC
#endif
typedef GLint  (*PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar *name);

#ifdef glUniform1ui
#undef glUniform1ui
#endif
#ifdef PFNGLUNIFORM1UIPROC
#undef PFNGLUNIFORM1UIPROC
#endif
typedef void  (*PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);

#ifdef glUniform2ui
#undef glUniform2ui
#endif
#ifdef PFNGLUNIFORM2UIPROC
#undef PFNGLUNIFORM2UIPROC
#endif
typedef void  (*PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);

#ifdef glUniform3ui
#undef glUniform3ui
#endif
#ifdef PFNGLUNIFORM3UIPROC
#undef PFNGLUNIFORM3UIPROC
#endif
typedef void  (*PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);

#ifdef glUniform4ui
#undef glUniform4ui
#endif
#ifdef PFNGLUNIFORM4UIPROC
#undef PFNGLUNIFORM4UIPROC
#endif
typedef void  (*PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

#ifdef glUniform1uiv
#undef glUniform1uiv
#endif
#ifdef PFNGLUNIFORM1UIVPROC
#undef PFNGLUNIFORM1UIVPROC
#endif
typedef void  (*PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform2uiv
#undef glUniform2uiv
#endif
#ifdef PFNGLUNIFORM2UIVPROC
#undef PFNGLUNIFORM2UIVPROC
#endif
typedef void  (*PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform3uiv
#undef glUniform3uiv
#endif
#ifdef PFNGLUNIFORM3UIVPROC
#undef PFNGLUNIFORM3UIVPROC
#endif
typedef void  (*PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform4uiv
#undef glUniform4uiv
#endif
#ifdef PFNGLUNIFORM4UIVPROC
#undef PFNGLUNIFORM4UIVPROC
#endif
typedef void  (*PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glTexParameterIiv
#undef glTexParameterIiv
#endif
#ifdef PFNGLTEXPARAMETERIIVPROC
#undef PFNGLTEXPARAMETERIIVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexParameterIuiv
#undef glTexParameterIuiv
#endif
#ifdef PFNGLTEXPARAMETERIUIVPROC
#undef PFNGLTEXPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, const GLuint *params);

#ifdef glGetTexParameterIiv
#undef glGetTexParameterIiv
#endif
#ifdef PFNGLGETTEXPARAMETERIIVPROC
#undef PFNGLGETTEXPARAMETERIIVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetTexParameterIuiv
#undef glGetTexParameterIuiv
#endif
#ifdef PFNGLGETTEXPARAMETERIUIVPROC
#undef PFNGLGETTEXPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target, GLenum pname, GLuint *params);

#ifdef glClearBufferiv
#undef glClearBufferiv
#endif
#ifdef PFNGLCLEARBUFFERIVPROC
#undef PFNGLCLEARBUFFERIVPROC
#endif
typedef void  (*PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint *value);

#ifdef glClearBufferuiv
#undef glClearBufferuiv
#endif
#ifdef PFNGLCLEARBUFFERUIVPROC
#undef PFNGLCLEARBUFFERUIVPROC
#endif
typedef void  (*PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint *value);

#ifdef glClearBufferfv
#undef glClearBufferfv
#endif
#ifdef PFNGLCLEARBUFFERFVPROC
#undef PFNGLCLEARBUFFERFVPROC
#endif
typedef void  (*PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat *value);

#ifdef glClearBufferfi
#undef glClearBufferfi
#endif
#ifdef PFNGLCLEARBUFFERFIPROC
#undef PFNGLCLEARBUFFERFIPROC
#endif
typedef void  (*PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);

#ifdef glGetStringi
#undef glGetStringi
#endif
#ifdef PFNGLGETSTRINGIPROC
#undef PFNGLGETSTRINGIPROC
#endif
typedef const GLubyte * (*PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);

#ifndef GL_COMPARE_REF_TO_TEXTURE
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#endif

#ifndef GL_CLIP_DISTANCE0
#define GL_CLIP_DISTANCE0 0x3000
#endif

#ifndef GL_CLIP_DISTANCE1
#define GL_CLIP_DISTANCE1 0x3001
#endif

#ifndef GL_CLIP_DISTANCE2
#define GL_CLIP_DISTANCE2 0x3002
#endif

#ifndef GL_CLIP_DISTANCE3
#define GL_CLIP_DISTANCE3 0x3003
#endif

#ifndef GL_CLIP_DISTANCE4
#define GL_CLIP_DISTANCE4 0x3004
#endif

#ifndef GL_CLIP_DISTANCE5
#define GL_CLIP_DISTANCE5 0x3005
#endif

#ifndef GL_CLIP_DISTANCE6
#define GL_CLIP_DISTANCE6 0x3006
#endif

#ifndef GL_CLIP_DISTANCE7
#define GL_CLIP_DISTANCE7 0x3007
#endif

#ifndef GL_MAX_CLIP_DISTANCES
#define GL_MAX_CLIP_DISTANCES 0x0D32
#endif

#ifndef GL_MAJOR_VERSION
#define GL_MAJOR_VERSION 0x821B
#endif

#ifndef GL_MINOR_VERSION
#define GL_MINOR_VERSION 0x821C
#endif

#ifndef GL_NUM_EXTENSIONS
#define GL_NUM_EXTENSIONS 0x821D
#endif

#ifndef GL_CONTEXT_FLAGS
#define GL_CONTEXT_FLAGS 0x821E
#endif

#ifndef GL_COMPRESSED_RED
#define GL_COMPRESSED_RED 0x8225
#endif

#ifndef GL_COMPRESSED_RG
#define GL_COMPRESSED_RG 0x8226
#endif

#ifndef GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#endif

#ifndef GL_RGBA32F
#define GL_RGBA32F 0x8814
#endif

#ifndef GL_RGB32F
#define GL_RGB32F 0x8815
#endif

#ifndef GL_RGBA16F
#define GL_RGBA16F 0x881A
#endif

#ifndef GL_RGB16F
#define GL_RGB16F 0x881B
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#endif

#ifndef GL_MAX_ARRAY_TEXTURE_LAYERS
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#endif

#ifndef GL_MIN_PROGRAM_TEXEL_OFFSET
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#endif

#ifndef GL_MAX_PROGRAM_TEXEL_OFFSET
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#endif

#ifndef GL_CLAMP_READ_COLOR
#define GL_CLAMP_READ_COLOR 0x891C
#endif

#ifndef GL_FIXED_ONLY
#define GL_FIXED_ONLY 0x891D
#endif

#ifndef GL_MAX_VARYING_COMPONENTS
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#endif

#ifndef GL_TEXTURE_1D_ARRAY
#define GL_TEXTURE_1D_ARRAY 0x8C18
#endif

#ifndef GL_PROXY_TEXTURE_1D_ARRAY
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#endif

#ifndef GL_TEXTURE_2D_ARRAY
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#endif

#ifndef GL_PROXY_TEXTURE_2D_ARRAY
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#endif

#ifndef GL_TEXTURE_BINDING_1D_ARRAY
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#endif

#ifndef GL_R11F_G11F_B10F
#define GL_R11F_G11F_B10F 0x8C3A
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#endif

#ifndef GL_RGB9_E5
#define GL_RGB9_E5 0x8C3D
#endif

#ifndef GL_UNSIGNED_INT_5_9_9_9_REV
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#endif

#ifndef GL_TEXTURE_SHARED_SIZE
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#endif

#ifndef GL_PRIMITIVES_GENERATED
#define GL_PRIMITIVES_GENERATED 0x8C87
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#endif

#ifndef GL_RASTERIZER_DISCARD
#define GL_RASTERIZER_DISCARD 0x8C89
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#endif

#ifndef GL_INTERLEAVED_ATTRIBS
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#endif

#ifndef GL_SEPARATE_ATTRIBS
#define GL_SEPARATE_ATTRIBS 0x8C8D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#endif

#ifndef GL_RGBA32UI
#define GL_RGBA32UI 0x8D70
#endif

#ifndef GL_RGB32UI
#define GL_RGB32UI 0x8D71
#endif

#ifndef GL_RGBA16UI
#define GL_RGBA16UI 0x8D76
#endif

#ifndef GL_RGB16UI
#define GL_RGB16UI 0x8D77
#endif

#ifndef GL_RGBA8UI
#define GL_RGBA8UI 0x8D7C
#endif

#ifndef GL_RGB8UI
#define GL_RGB8UI 0x8D7D
#endif

#ifndef GL_RGBA32I
#define GL_RGBA32I 0x8D82
#endif

#ifndef GL_RGB32I
#define GL_RGB32I 0x8D83
#endif

#ifndef GL_RGBA16I
#define GL_RGBA16I 0x8D88
#endif

#ifndef GL_RGB16I
#define GL_RGB16I 0x8D89
#endif

#ifndef GL_RGBA8I
#define GL_RGBA8I 0x8D8E
#endif

#ifndef GL_RGB8I
#define GL_RGB8I 0x8D8F
#endif

#ifndef GL_RED_INTEGER
#define GL_RED_INTEGER 0x8D94
#endif

#ifndef GL_GREEN_INTEGER
#define GL_GREEN_INTEGER 0x8D95
#endif

#ifndef GL_BLUE_INTEGER
#define GL_BLUE_INTEGER 0x8D96
#endif

#ifndef GL_RGB_INTEGER
#define GL_RGB_INTEGER 0x8D98
#endif

#ifndef GL_RGBA_INTEGER
#define GL_RGBA_INTEGER 0x8D99
#endif

#ifndef GL_BGR_INTEGER
#define GL_BGR_INTEGER 0x8D9A
#endif

#ifndef GL_BGRA_INTEGER
#define GL_BGRA_INTEGER 0x8D9B
#endif

#ifndef GL_SAMPLER_1D_ARRAY
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#endif

#ifndef GL_SAMPLER_2D_ARRAY
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#endif

#ifndef GL_SAMPLER_1D_ARRAY_SHADOW
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#endif

#ifndef GL_SAMPLER_2D_ARRAY_SHADOW
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#endif

#ifndef GL_SAMPLER_CUBE_SHADOW
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#endif

#ifndef GL_UNSIGNED_INT_VEC2
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#endif

#ifndef GL_UNSIGNED_INT_VEC3
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#endif

#ifndef GL_UNSIGNED_INT_VEC4
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#endif

#ifndef GL_INT_SAMPLER_1D
#define GL_INT_SAMPLER_1D 0x8DC9
#endif

#ifndef GL_INT_SAMPLER_2D
#define GL_INT_SAMPLER_2D 0x8DCA
#endif

#ifndef GL_INT_SAMPLER_3D
#define GL_INT_SAMPLER_3D 0x8DCB
#endif

#ifndef GL_INT_SAMPLER_CUBE
#define GL_INT_SAMPLER_CUBE 0x8DCC
#endif

#ifndef GL_INT_SAMPLER_1D_ARRAY
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#endif

#ifndef GL_INT_SAMPLER_2D_ARRAY
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_3D
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#endif

#ifndef GL_QUERY_WAIT
#define GL_QUERY_WAIT 0x8E13
#endif

#ifndef GL_QUERY_NO_WAIT
#define GL_QUERY_NO_WAIT 0x8E14
#endif

#ifndef GL_QUERY_BY_REGION_WAIT
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#endif

#ifndef GL_QUERY_BY_REGION_NO_WAIT
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#endif

#ifndef GL_BUFFER_ACCESS_FLAGS
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#endif

#ifndef GL_BUFFER_MAP_LENGTH
#define GL_BUFFER_MAP_LENGTH 0x9120
#endif

#ifndef GL_BUFFER_MAP_OFFSET
#define GL_BUFFER_MAP_OFFSET 0x9121
#endif

#ifndef GL_DEPTH_COMPONENT32F
#define GL_DEPTH_COMPONENT32F 0x8CAC
#endif

#ifndef GL_DEPTH32F_STENCIL8
#define GL_DEPTH32F_STENCIL8 0x8CAD
#endif

#ifndef GL_FLOAT_32_UNSIGNED_INT_24_8_REV
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#endif

#ifdef glIsRenderbuffer
#undef glIsRenderbuffer
#endif
#ifdef PFNGLISRENDERBUFFERPROC
#undef PFNGLISRENDERBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);

#ifdef glBindRenderbuffer
#undef glBindRenderbuffer
#endif
#ifdef PFNGLBINDRENDERBUFFERPROC
#undef PFNGLBINDRENDERBUFFERPROC
#endif
typedef void  (*PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);

#ifdef glDeleteRenderbuffers
#undef glDeleteRenderbuffers
#endif
#ifdef PFNGLDELETERENDERBUFFERSPROC
#undef PFNGLDELETERENDERBUFFERSPROC
#endif
typedef void  (*PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint *renderbuffers);

#ifdef glGenRenderbuffers
#undef glGenRenderbuffers
#endif
#ifdef PFNGLGENRENDERBUFFERSPROC
#undef PFNGLGENRENDERBUFFERSPROC
#endif
typedef void  (*PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);

#ifdef glRenderbufferStorage
#undef glRenderbufferStorage
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEPROC
#undef PFNGLRENDERBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glGetRenderbufferParameteriv
#undef glGetRenderbufferParameteriv
#endif
#ifdef PFNGLGETRENDERBUFFERPARAMETERIVPROC
#undef PFNGLGETRENDERBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glIsFramebuffer
#undef glIsFramebuffer
#endif
#ifdef PFNGLISFRAMEBUFFERPROC
#undef PFNGLISFRAMEBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);

#ifdef glBindFramebuffer
#undef glBindFramebuffer
#endif
#ifdef PFNGLBINDFRAMEBUFFERPROC
#undef PFNGLBINDFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);

#ifdef glDeleteFramebuffers
#undef glDeleteFramebuffers
#endif
#ifdef PFNGLDELETEFRAMEBUFFERSPROC
#undef PFNGLDELETEFRAMEBUFFERSPROC
#endif
typedef void  (*PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint *framebuffers);

#ifdef glGenFramebuffers
#undef glGenFramebuffers
#endif
#ifdef PFNGLGENFRAMEBUFFERSPROC
#undef PFNGLGENFRAMEBUFFERSPROC
#endif
typedef void  (*PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);

#ifdef glCheckFramebufferStatus
#undef glCheckFramebufferStatus
#endif
#ifdef PFNGLCHECKFRAMEBUFFERSTATUSPROC
#undef PFNGLCHECKFRAMEBUFFERSTATUSPROC
#endif
typedef GLenum  (*PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);

#ifdef glFramebufferTexture1D
#undef glFramebufferTexture1D
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE1DPROC
#undef PFNGLFRAMEBUFFERTEXTURE1DPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glFramebufferTexture2D
#undef glFramebufferTexture2D
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE2DPROC
#undef PFNGLFRAMEBUFFERTEXTURE2DPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glFramebufferTexture3D
#undef glFramebufferTexture3D
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE3DPROC
#undef PFNGLFRAMEBUFFERTEXTURE3DPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);

#ifdef glFramebufferRenderbuffer
#undef glFramebufferRenderbuffer
#endif
#ifdef PFNGLFRAMEBUFFERRENDERBUFFERPROC
#undef PFNGLFRAMEBUFFERRENDERBUFFERPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);

#ifdef glGetFramebufferAttachmentParameteriv
#undef glGetFramebufferAttachmentParameteriv
#endif
#ifdef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#undef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint *params);

#ifdef glGenerateMipmap
#undef glGenerateMipmap
#endif
#ifdef PFNGLGENERATEMIPMAPPROC
#undef PFNGLGENERATEMIPMAPPROC
#endif
typedef void  (*PFNGLGENERATEMIPMAPPROC)(GLenum target);

#ifdef glBlitFramebuffer
#undef glBlitFramebuffer
#endif
#ifdef PFNGLBLITFRAMEBUFFERPROC
#undef PFNGLBLITFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#ifdef glRenderbufferStorageMultisample
#undef glRenderbufferStorageMultisample
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glFramebufferTextureLayer
#undef glFramebufferTextureLayer
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURELAYERPROC
#undef PFNGLFRAMEBUFFERTEXTURELAYERPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif

#ifndef GL_FRAMEBUFFER_UNDEFINED
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif

#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif

#ifndef GL_DEPTH_STENCIL
#define GL_DEPTH_STENCIL 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8
#define GL_UNSIGNED_INT_24_8 0x84FA
#endif

#ifndef GL_DEPTH24_STENCIL8
#define GL_DEPTH24_STENCIL8 0x88F0
#endif

#ifndef GL_TEXTURE_STENCIL_SIZE
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif

#ifndef GL_TEXTURE_RED_TYPE
#define GL_TEXTURE_RED_TYPE 0x8C10
#endif

#ifndef GL_TEXTURE_GREEN_TYPE
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif

#ifndef GL_TEXTURE_BLUE_TYPE
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif

#ifndef GL_TEXTURE_ALPHA_TYPE
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif

#ifndef GL_TEXTURE_DEPTH_TYPE
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif

#ifndef GL_UNSIGNED_NORMALIZED
#define GL_UNSIGNED_NORMALIZED 0x8C17
#endif

#ifndef GL_FRAMEBUFFER_BINDING
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING
#define GL_RENDERBUFFER_BINDING 0x8CA7
#endif

#ifndef GL_READ_FRAMEBUFFER
#define GL_READ_FRAMEBUFFER 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif

#ifndef GL_RENDERBUFFER_SAMPLES
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif

#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif

#ifndef GL_MAX_COLOR_ATTACHMENTS
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif

#ifndef GL_COLOR_ATTACHMENT0
#define GL_COLOR_ATTACHMENT0 0x8CE0
#endif

#ifndef GL_COLOR_ATTACHMENT1
#define GL_COLOR_ATTACHMENT1 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2
#define GL_COLOR_ATTACHMENT2 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3
#define GL_COLOR_ATTACHMENT3 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4
#define GL_COLOR_ATTACHMENT4 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5
#define GL_COLOR_ATTACHMENT5 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6
#define GL_COLOR_ATTACHMENT6 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7
#define GL_COLOR_ATTACHMENT7 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8
#define GL_COLOR_ATTACHMENT8 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9
#define GL_COLOR_ATTACHMENT9 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10
#define GL_COLOR_ATTACHMENT10 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11
#define GL_COLOR_ATTACHMENT11 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12
#define GL_COLOR_ATTACHMENT12 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13
#define GL_COLOR_ATTACHMENT13 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14
#define GL_COLOR_ATTACHMENT14 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15
#define GL_COLOR_ATTACHMENT15 0x8CEF
#endif

#ifndef GL_COLOR_ATTACHMENT16
#define GL_COLOR_ATTACHMENT16 0x8CF0
#endif

#ifndef GL_COLOR_ATTACHMENT17
#define GL_COLOR_ATTACHMENT17 0x8CF1
#endif

#ifndef GL_COLOR_ATTACHMENT18
#define GL_COLOR_ATTACHMENT18 0x8CF2
#endif

#ifndef GL_COLOR_ATTACHMENT19
#define GL_COLOR_ATTACHMENT19 0x8CF3
#endif

#ifndef GL_COLOR_ATTACHMENT20
#define GL_COLOR_ATTACHMENT20 0x8CF4
#endif

#ifndef GL_COLOR_ATTACHMENT21
#define GL_COLOR_ATTACHMENT21 0x8CF5
#endif

#ifndef GL_COLOR_ATTACHMENT22
#define GL_COLOR_ATTACHMENT22 0x8CF6
#endif

#ifndef GL_COLOR_ATTACHMENT23
#define GL_COLOR_ATTACHMENT23 0x8CF7
#endif

#ifndef GL_COLOR_ATTACHMENT24
#define GL_COLOR_ATTACHMENT24 0x8CF8
#endif

#ifndef GL_COLOR_ATTACHMENT25
#define GL_COLOR_ATTACHMENT25 0x8CF9
#endif

#ifndef GL_COLOR_ATTACHMENT26
#define GL_COLOR_ATTACHMENT26 0x8CFA
#endif

#ifndef GL_COLOR_ATTACHMENT27
#define GL_COLOR_ATTACHMENT27 0x8CFB
#endif

#ifndef GL_COLOR_ATTACHMENT28
#define GL_COLOR_ATTACHMENT28 0x8CFC
#endif

#ifndef GL_COLOR_ATTACHMENT29
#define GL_COLOR_ATTACHMENT29 0x8CFD
#endif

#ifndef GL_COLOR_ATTACHMENT30
#define GL_COLOR_ATTACHMENT30 0x8CFE
#endif

#ifndef GL_COLOR_ATTACHMENT31
#define GL_COLOR_ATTACHMENT31 0x8CFF
#endif

#ifndef GL_DEPTH_ATTACHMENT
#define GL_DEPTH_ATTACHMENT 0x8D00
#endif

#ifndef GL_STENCIL_ATTACHMENT
#define GL_STENCIL_ATTACHMENT 0x8D20
#endif

#ifndef GL_FRAMEBUFFER
#define GL_FRAMEBUFFER 0x8D40
#endif

#ifndef GL_RENDERBUFFER
#define GL_RENDERBUFFER 0x8D41
#endif

#ifndef GL_RENDERBUFFER_WIDTH
#define GL_RENDERBUFFER_WIDTH 0x8D42
#endif

#ifndef GL_RENDERBUFFER_HEIGHT
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif

#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif

#ifndef GL_STENCIL_INDEX1
#define GL_STENCIL_INDEX1 0x8D46
#endif

#ifndef GL_STENCIL_INDEX4
#define GL_STENCIL_INDEX4 0x8D47
#endif

#ifndef GL_STENCIL_INDEX8
#define GL_STENCIL_INDEX8 0x8D48
#endif

#ifndef GL_STENCIL_INDEX16
#define GL_STENCIL_INDEX16 0x8D49
#endif

#ifndef GL_RENDERBUFFER_RED_SIZE
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif

#ifndef GL_RENDERBUFFER_GREEN_SIZE
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif

#ifndef GL_RENDERBUFFER_BLUE_SIZE
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif

#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif

#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif

#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif

#ifndef GL_MAX_SAMPLES
#define GL_MAX_SAMPLES 0x8D57
#endif

#ifndef GL_INDEX
#define GL_INDEX 0x8222
#endif

#ifndef GL_TEXTURE_LUMINANCE_TYPE
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#endif

#ifndef GL_TEXTURE_INTENSITY_TYPE
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#endif

#ifndef GL_FRAMEBUFFER_SRGB
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#endif

#ifndef GL_HALF_FLOAT
#define GL_HALF_FLOAT 0x140B
#endif

#ifdef glMapBufferRange
#undef glMapBufferRange
#endif
#ifdef PFNGLMAPBUFFERRANGEPROC
#undef PFNGLMAPBUFFERRANGEPROC
#endif
typedef void * (*PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);

#ifdef glFlushMappedBufferRange
#undef glFlushMappedBufferRange
#endif
#ifdef PFNGLFLUSHMAPPEDBUFFERRANGEPROC
#undef PFNGLFLUSHMAPPEDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);

#ifndef GL_MAP_READ_BIT
#define GL_MAP_READ_BIT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT
#define GL_MAP_WRITE_BIT 0x0002
#endif

#ifndef GL_MAP_INVALIDATE_RANGE_BIT
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#endif

#ifndef GL_MAP_INVALIDATE_BUFFER_BIT
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#endif

#ifndef GL_MAP_FLUSH_EXPLICIT_BIT
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#endif

#ifndef GL_MAP_UNSYNCHRONIZED_BIT
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#endif

#ifndef GL_COMPRESSED_RED_RGTC1
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_RGTC1
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#endif

#ifndef GL_COMPRESSED_RG_RGTC2
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#endif

#ifndef GL_COMPRESSED_SIGNED_RG_RGTC2
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#endif

#ifndef GL_RG
#define GL_RG 0x8227
#endif

#ifndef GL_RG_INTEGER
#define GL_RG_INTEGER 0x8228
#endif

#ifndef GL_R8
#define GL_R8 0x8229
#endif

#ifndef GL_R16
#define GL_R16 0x822A
#endif

#ifndef GL_RG8
#define GL_RG8 0x822B
#endif

#ifndef GL_RG16
#define GL_RG16 0x822C
#endif

#ifndef GL_R16F
#define GL_R16F 0x822D
#endif

#ifndef GL_R32F
#define GL_R32F 0x822E
#endif

#ifndef GL_RG16F
#define GL_RG16F 0x822F
#endif

#ifndef GL_RG32F
#define GL_RG32F 0x8230
#endif

#ifndef GL_R8I
#define GL_R8I 0x8231
#endif

#ifndef GL_R8UI
#define GL_R8UI 0x8232
#endif

#ifndef GL_R16I
#define GL_R16I 0x8233
#endif

#ifndef GL_R16UI
#define GL_R16UI 0x8234
#endif

#ifndef GL_R32I
#define GL_R32I 0x8235
#endif

#ifndef GL_R32UI
#define GL_R32UI 0x8236
#endif

#ifndef GL_RG8I
#define GL_RG8I 0x8237
#endif

#ifndef GL_RG8UI
#define GL_RG8UI 0x8238
#endif

#ifndef GL_RG16I
#define GL_RG16I 0x8239
#endif

#ifndef GL_RG16UI
#define GL_RG16UI 0x823A
#endif

#ifndef GL_RG32I
#define GL_RG32I 0x823B
#endif

#ifndef GL_RG32UI
#define GL_RG32UI 0x823C
#endif

#ifdef glBindVertexArray
#undef glBindVertexArray
#endif
#ifdef PFNGLBINDVERTEXARRAYPROC
#undef PFNGLBINDVERTEXARRAYPROC
#endif
typedef void  (*PFNGLBINDVERTEXARRAYPROC)(GLuint array);

#ifdef glDeleteVertexArrays
#undef glDeleteVertexArrays
#endif
#ifdef PFNGLDELETEVERTEXARRAYSPROC
#undef PFNGLDELETEVERTEXARRAYSPROC
#endif
typedef void  (*PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint *arrays);

#ifdef glGenVertexArrays
#undef glGenVertexArrays
#endif
#ifdef PFNGLGENVERTEXARRAYSPROC
#undef PFNGLGENVERTEXARRAYSPROC
#endif
typedef void  (*PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);

#ifdef glIsVertexArray
#undef glIsVertexArray
#endif
#ifdef PFNGLISVERTEXARRAYPROC
#undef PFNGLISVERTEXARRAYPROC
#endif
typedef GLboolean  (*PFNGLISVERTEXARRAYPROC)(GLuint array);

#ifndef GL_VERTEX_ARRAY_BINDING
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#endif

#ifndef GL_CLAMP_VERTEX_COLOR
#define GL_CLAMP_VERTEX_COLOR 0x891A
#endif

#ifndef GL_CLAMP_FRAGMENT_COLOR
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#endif

#ifndef GL_ALPHA_INTEGER
#define GL_ALPHA_INTEGER 0x8D97
#endif

#ifndef GL_VERSION_3_1
#define GL_VERSION_3_1 1
#endif

#ifdef glDrawArraysInstanced
#undef glDrawArraysInstanced
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDPROC
#undef PFNGLDRAWARRAYSINSTANCEDPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);

#ifdef glDrawElementsInstanced
#undef glDrawElementsInstanced
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDPROC
#undef PFNGLDRAWELEMENTSINSTANCEDPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);

#ifdef glTexBuffer
#undef glTexBuffer
#endif
#ifdef PFNGLTEXBUFFERPROC
#undef PFNGLTEXBUFFERPROC
#endif
typedef void  (*PFNGLTEXBUFFERPROC)(GLenum target, GLenum internalformat, GLuint buffer);

#ifdef glPrimitiveRestartIndex
#undef glPrimitiveRestartIndex
#endif
#ifdef PFNGLPRIMITIVERESTARTINDEXPROC
#undef PFNGLPRIMITIVERESTARTINDEXPROC
#endif
typedef void  (*PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);

#ifndef GL_SAMPLER_2D_RECT
#define GL_SAMPLER_2D_RECT 0x8B63
#endif

#ifndef GL_SAMPLER_2D_RECT_SHADOW
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#endif

#ifndef GL_SAMPLER_BUFFER
#define GL_SAMPLER_BUFFER 0x8DC2
#endif

#ifndef GL_INT_SAMPLER_2D_RECT
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#endif

#ifndef GL_INT_SAMPLER_BUFFER
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_RECT
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#endif

#ifndef GL_TEXTURE_BUFFER
#define GL_TEXTURE_BUFFER 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#endif

#ifndef GL_TEXTURE_RECTANGLE
#define GL_TEXTURE_RECTANGLE 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#endif

#ifndef GL_R8_SNORM
#define GL_R8_SNORM 0x8F94
#endif

#ifndef GL_RG8_SNORM
#define GL_RG8_SNORM 0x8F95
#endif

#ifndef GL_RGB8_SNORM
#define GL_RGB8_SNORM 0x8F96
#endif

#ifndef GL_RGBA8_SNORM
#define GL_RGBA8_SNORM 0x8F97
#endif

#ifndef GL_R16_SNORM
#define GL_R16_SNORM 0x8F98
#endif

#ifndef GL_RG16_SNORM
#define GL_RG16_SNORM 0x8F99
#endif

#ifndef GL_RGB16_SNORM
#define GL_RGB16_SNORM 0x8F9A
#endif

#ifndef GL_RGBA16_SNORM
#define GL_RGBA16_SNORM 0x8F9B
#endif

#ifndef GL_SIGNED_NORMALIZED
#define GL_SIGNED_NORMALIZED 0x8F9C
#endif

#ifndef GL_PRIMITIVE_RESTART
#define GL_PRIMITIVE_RESTART 0x8F9D
#endif

#ifndef GL_PRIMITIVE_RESTART_INDEX
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#endif

#ifdef glCopyBufferSubData
#undef glCopyBufferSubData
#endif
#ifdef PFNGLCOPYBUFFERSUBDATAPROC
#undef PFNGLCOPYBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

#ifndef GL_COPY_READ_BUFFER
#define GL_COPY_READ_BUFFER 0x8F36
#endif

#ifndef GL_COPY_WRITE_BUFFER
#define GL_COPY_WRITE_BUFFER 0x8F37
#endif

#ifdef glGetUniformIndices
#undef glGetUniformIndices
#endif
#ifdef PFNGLGETUNIFORMINDICESPROC
#undef PFNGLGETUNIFORMINDICESPROC
#endif
typedef void  (*PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);

#ifdef glGetActiveUniformsiv
#undef glGetActiveUniformsiv
#endif
#ifdef PFNGLGETACTIVEUNIFORMSIVPROC
#undef PFNGLGETACTIVEUNIFORMSIVPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);

#ifdef glGetActiveUniformName
#undef glGetActiveUniformName
#endif
#ifdef PFNGLGETACTIVEUNIFORMNAMEPROC
#undef PFNGLGETACTIVEUNIFORMNAMEPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);

#ifdef glGetUniformBlockIndex
#undef glGetUniformBlockIndex
#endif
#ifdef PFNGLGETUNIFORMBLOCKINDEXPROC
#undef PFNGLGETUNIFORMBLOCKINDEXPROC
#endif
typedef GLuint  (*PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar *uniformBlockName);

#ifdef glGetActiveUniformBlockiv
#undef glGetActiveUniformBlockiv
#endif
#ifdef PFNGLGETACTIVEUNIFORMBLOCKIVPROC
#undef PFNGLGETACTIVEUNIFORMBLOCKIVPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);

#ifdef glGetActiveUniformBlockName
#undef glGetActiveUniformBlockName
#endif
#ifdef PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
#undef PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);

#ifdef glUniformBlockBinding
#undef glUniformBlockBinding
#endif
#ifdef PFNGLUNIFORMBLOCKBINDINGPROC
#undef PFNGLUNIFORMBLOCKBINDINGPROC
#endif
typedef void  (*PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

#ifdef glBindBufferRange
#undef glBindBufferRange
#endif
#ifdef PFNGLBINDBUFFERRANGEPROC
#undef PFNGLBINDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glBindBufferBase
#undef glBindBufferBase
#endif
#ifdef PFNGLBINDBUFFERBASEPROC
#undef PFNGLBINDBUFFERBASEPROC
#endif
typedef void  (*PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);

#ifdef glGetIntegeri_v
#undef glGetIntegeri_v
#endif
#ifdef PFNGLGETINTEGERI_VPROC
#undef PFNGLGETINTEGERI_VPROC
#endif
typedef void  (*PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint *data);

#ifndef GL_UNIFORM_BUFFER
#define GL_UNIFORM_BUFFER 0x8A11
#endif

#ifndef GL_UNIFORM_BUFFER_BINDING
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#endif

#ifndef GL_UNIFORM_BUFFER_START
#define GL_UNIFORM_BUFFER_START 0x8A29
#endif

#ifndef GL_UNIFORM_BUFFER_SIZE
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_BLOCKS
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_BLOCKS
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_BLOCKS
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#endif

#ifndef GL_MAX_COMBINED_UNIFORM_BLOCKS
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#endif

#ifndef GL_MAX_UNIFORM_BUFFER_BINDINGS
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#endif

#ifndef GL_MAX_UNIFORM_BLOCK_SIZE
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#endif

#ifndef GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#endif

#ifndef GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#endif

#ifndef GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#endif

#ifndef GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCKS
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#endif

#ifndef GL_UNIFORM_TYPE
#define GL_UNIFORM_TYPE 0x8A37
#endif

#ifndef GL_UNIFORM_SIZE
#define GL_UNIFORM_SIZE 0x8A38
#endif

#ifndef GL_UNIFORM_NAME_LENGTH
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#endif

#ifndef GL_UNIFORM_BLOCK_INDEX
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#endif

#ifndef GL_UNIFORM_OFFSET
#define GL_UNIFORM_OFFSET 0x8A3B
#endif

#ifndef GL_UNIFORM_ARRAY_STRIDE
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#endif

#ifndef GL_UNIFORM_MATRIX_STRIDE
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#endif

#ifndef GL_UNIFORM_IS_ROW_MAJOR
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#endif

#ifndef GL_UNIFORM_BLOCK_BINDING
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#endif

#ifndef GL_UNIFORM_BLOCK_DATA_SIZE
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#endif

#ifndef GL_UNIFORM_BLOCK_NAME_LENGTH
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#endif

#ifndef GL_INVALID_INDEX
#define GL_INVALID_INDEX 0xFFFFFFFF
#endif

#ifndef GL_VERSION_3_2
#define GL_VERSION_3_2 1
#endif

#ifndef GL_CONTEXT_CORE_PROFILE_BIT
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#endif

#ifndef GL_CONTEXT_COMPATIBILITY_PROFILE_BIT
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#endif

#ifndef GL_LINES_ADJACENCY
#define GL_LINES_ADJACENCY 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY
#define GL_LINE_STRIP_ADJACENCY 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY
#define GL_TRIANGLES_ADJACENCY 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#endif

#ifndef GL_PROGRAM_POINT_SIZE
#define GL_PROGRAM_POINT_SIZE 0x8642
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#endif

#ifndef GL_GEOMETRY_SHADER
#define GL_GEOMETRY_SHADER 0x8DD9
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#endif

#ifndef GL_MAX_VERTEX_OUTPUT_COMPONENTS
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#endif

#ifndef GL_MAX_GEOMETRY_INPUT_COMPONENTS
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_COMPONENTS
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#endif

#ifndef GL_MAX_FRAGMENT_INPUT_COMPONENTS
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#endif

#ifndef GL_CONTEXT_PROFILE_MASK
#define GL_CONTEXT_PROFILE_MASK 0x9126
#endif

#ifndef GL_DEPTH_CLAMP
#define GL_DEPTH_CLAMP 0x864F
#endif

#ifdef glDrawElementsBaseVertex
#undef glDrawElementsBaseVertex
#endif
#ifdef PFNGLDRAWELEMENTSBASEVERTEXPROC
#undef PFNGLDRAWELEMENTSBASEVERTEXPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);

#ifdef glDrawRangeElementsBaseVertex
#undef glDrawRangeElementsBaseVertex
#endif
#ifdef PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
#undef PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);

#ifdef glDrawElementsInstancedBaseVertex
#undef glDrawElementsInstancedBaseVertex
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);

#ifdef glMultiDrawElementsBaseVertex
#undef glMultiDrawElementsBaseVertex
#endif
#ifdef PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
#undef PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);

#ifdef glProvokingVertex
#undef glProvokingVertex
#endif
#ifdef PFNGLPROVOKINGVERTEXPROC
#undef PFNGLPROVOKINGVERTEXPROC
#endif
typedef void  (*PFNGLPROVOKINGVERTEXPROC)(GLenum mode);

#ifndef GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#endif

#ifndef GL_PROVOKING_VERTEX
#define GL_PROVOKING_VERTEX 0x8E4F
#endif

#ifndef GL_TEXTURE_CUBE_MAP_SEAMLESS
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#endif

#ifdef glFenceSync
#undef glFenceSync
#endif
#ifdef PFNGLFENCESYNCPROC
#undef PFNGLFENCESYNCPROC
#endif
typedef GLsync  (*PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);

#ifdef glIsSync
#undef glIsSync
#endif
#ifdef PFNGLISSYNCPROC
#undef PFNGLISSYNCPROC
#endif
typedef GLboolean  (*PFNGLISSYNCPROC)(GLsync sync);

#ifdef glDeleteSync
#undef glDeleteSync
#endif
#ifdef PFNGLDELETESYNCPROC
#undef PFNGLDELETESYNCPROC
#endif
typedef void  (*PFNGLDELETESYNCPROC)(GLsync sync);

#ifdef glClientWaitSync
#undef glClientWaitSync
#endif
#ifdef PFNGLCLIENTWAITSYNCPROC
#undef PFNGLCLIENTWAITSYNCPROC
#endif
typedef GLenum  (*PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

#ifdef glWaitSync
#undef glWaitSync
#endif
#ifdef PFNGLWAITSYNCPROC
#undef PFNGLWAITSYNCPROC
#endif
typedef void  (*PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

#ifdef glGetInteger64v
#undef glGetInteger64v
#endif
#ifdef PFNGLGETINTEGER64VPROC
#undef PFNGLGETINTEGER64VPROC
#endif
typedef void  (*PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 *data);

#ifdef glGetSynciv
#undef glGetSynciv
#endif
#ifdef PFNGLGETSYNCIVPROC
#undef PFNGLGETSYNCIVPROC
#endif
typedef void  (*PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);

#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif

#ifndef GL_OBJECT_TYPE
#define GL_OBJECT_TYPE 0x9112
#endif

#ifndef GL_SYNC_CONDITION
#define GL_SYNC_CONDITION 0x9113
#endif

#ifndef GL_SYNC_STATUS
#define GL_SYNC_STATUS 0x9114
#endif

#ifndef GL_SYNC_FLAGS
#define GL_SYNC_FLAGS 0x9115
#endif

#ifndef GL_SYNC_FENCE
#define GL_SYNC_FENCE 0x9116
#endif

#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif

#ifndef GL_UNSIGNALED
#define GL_UNSIGNALED 0x9118
#endif

#ifndef GL_SIGNALED
#define GL_SIGNALED 0x9119
#endif

#ifndef GL_ALREADY_SIGNALED
#define GL_ALREADY_SIGNALED 0x911A
#endif

#ifndef GL_TIMEOUT_EXPIRED
#define GL_TIMEOUT_EXPIRED 0x911B
#endif

#ifndef GL_CONDITION_SATISFIED
#define GL_CONDITION_SATISFIED 0x911C
#endif

#ifndef GL_WAIT_FAILED
#define GL_WAIT_FAILED 0x911D
#endif

#ifndef GL_TIMEOUT_IGNORED
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#endif

#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif

#ifdef glGetInteger64i_v
#undef glGetInteger64i_v
#endif
#ifdef PFNGLGETINTEGER64I_VPROC
#undef PFNGLGETINTEGER64I_VPROC
#endif
typedef void  (*PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 *data);

#ifdef glGetBufferParameteri64v
#undef glGetBufferParameteri64v
#endif
#ifdef PFNGLGETBUFFERPARAMETERI64VPROC
#undef PFNGLGETBUFFERPARAMETERI64VPROC
#endif
typedef void  (*PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 *params);

#ifdef glFramebufferTexture
#undef glFramebufferTexture
#endif
#ifdef PFNGLFRAMEBUFFERTEXTUREPROC
#undef PFNGLFRAMEBUFFERTEXTUREPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);

#ifdef glTexImage2DMultisample
#undef glTexImage2DMultisample
#endif
#ifdef PFNGLTEXIMAGE2DMULTISAMPLEPROC
#undef PFNGLTEXIMAGE2DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);

#ifdef glTexImage3DMultisample
#undef glTexImage3DMultisample
#endif
#ifdef PFNGLTEXIMAGE3DMULTISAMPLEPROC
#undef PFNGLTEXIMAGE3DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

#ifdef glGetMultisamplefv
#undef glGetMultisamplefv
#endif
#ifdef PFNGLGETMULTISAMPLEFVPROC
#undef PFNGLGETMULTISAMPLEFVPROC
#endif
typedef void  (*PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat *val);

#ifdef glSampleMaski
#undef glSampleMaski
#endif
#ifdef PFNGLSAMPLEMASKIPROC
#undef PFNGLSAMPLEMASKIPROC
#endif
typedef void  (*PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);

#ifndef GL_SAMPLE_POSITION
#define GL_SAMPLE_POSITION 0x8E50
#endif

#ifndef GL_SAMPLE_MASK
#define GL_SAMPLE_MASK 0x8E51
#endif

#ifndef GL_SAMPLE_MASK_VALUE
#define GL_SAMPLE_MASK_VALUE 0x8E52
#endif

#ifndef GL_MAX_SAMPLE_MASK_WORDS
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#endif

#ifndef GL_PROXY_TEXTURE_2D_MULTISAMPLE
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#endif

#ifndef GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#endif

#ifndef GL_TEXTURE_SAMPLES
#define GL_TEXTURE_SAMPLES 0x9106
#endif

#ifndef GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#endif

#ifndef GL_MAX_COLOR_TEXTURE_SAMPLES
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#endif

#ifndef GL_MAX_DEPTH_TEXTURE_SAMPLES
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#endif

#ifndef GL_MAX_INTEGER_SAMPLES
#define GL_MAX_INTEGER_SAMPLES 0x9110
#endif

#ifndef GL_VERSION_3_3
#define GL_VERSION_3_3 1
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#endif

#ifdef glBindFragDataLocationIndexed
#undef glBindFragDataLocationIndexed
#endif
#ifdef PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
#undef PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
#endif
typedef void  (*PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);

#ifdef glGetFragDataIndex
#undef glGetFragDataIndex
#endif
#ifdef PFNGLGETFRAGDATAINDEXPROC
#undef PFNGLGETFRAGDATAINDEXPROC
#endif
typedef GLint  (*PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar *name);

#ifndef GL_SRC1_COLOR
#define GL_SRC1_COLOR 0x88F9
#endif

#ifndef GL_ONE_MINUS_SRC1_COLOR
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#endif

#ifndef GL_ONE_MINUS_SRC1_ALPHA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#endif

#ifndef GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#endif

#ifndef GL_ANY_SAMPLES_PASSED
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#endif

#ifdef glGenSamplers
#undef glGenSamplers
#endif
#ifdef PFNGLGENSAMPLERSPROC
#undef PFNGLGENSAMPLERSPROC
#endif
typedef void  (*PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint *samplers);

#ifdef glDeleteSamplers
#undef glDeleteSamplers
#endif
#ifdef PFNGLDELETESAMPLERSPROC
#undef PFNGLDELETESAMPLERSPROC
#endif
typedef void  (*PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint *samplers);

#ifdef glIsSampler
#undef glIsSampler
#endif
#ifdef PFNGLISSAMPLERPROC
#undef PFNGLISSAMPLERPROC
#endif
typedef GLboolean  (*PFNGLISSAMPLERPROC)(GLuint sampler);

#ifdef glBindSampler
#undef glBindSampler
#endif
#ifdef PFNGLBINDSAMPLERPROC
#undef PFNGLBINDSAMPLERPROC
#endif
typedef void  (*PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);

#ifdef glSamplerParameteri
#undef glSamplerParameteri
#endif
#ifdef PFNGLSAMPLERPARAMETERIPROC
#undef PFNGLSAMPLERPARAMETERIPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);

#ifdef glSamplerParameteriv
#undef glSamplerParameteriv
#endif
#ifdef PFNGLSAMPLERPARAMETERIVPROC
#undef PFNGLSAMPLERPARAMETERIVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint *param);

#ifdef glSamplerParameterf
#undef glSamplerParameterf
#endif
#ifdef PFNGLSAMPLERPARAMETERFPROC
#undef PFNGLSAMPLERPARAMETERFPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);

#ifdef glSamplerParameterfv
#undef glSamplerParameterfv
#endif
#ifdef PFNGLSAMPLERPARAMETERFVPROC
#undef PFNGLSAMPLERPARAMETERFVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat *param);

#ifdef glSamplerParameterIiv
#undef glSamplerParameterIiv
#endif
#ifdef PFNGLSAMPLERPARAMETERIIVPROC
#undef PFNGLSAMPLERPARAMETERIIVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint *param);

#ifdef glSamplerParameterIuiv
#undef glSamplerParameterIuiv
#endif
#ifdef PFNGLSAMPLERPARAMETERIUIVPROC
#undef PFNGLSAMPLERPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint *param);

#ifdef glGetSamplerParameteriv
#undef glGetSamplerParameteriv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIVPROC
#undef PFNGLGETSAMPLERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint *params);

#ifdef glGetSamplerParameterIiv
#undef glGetSamplerParameterIiv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIIVPROC
#undef PFNGLGETSAMPLERPARAMETERIIVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint *params);

#ifdef glGetSamplerParameterfv
#undef glGetSamplerParameterfv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERFVPROC
#undef PFNGLGETSAMPLERPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat *params);

#ifdef glGetSamplerParameterIuiv
#undef glGetSamplerParameterIuiv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIUIVPROC
#undef PFNGLGETSAMPLERPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint *params);

#ifndef GL_SAMPLER_BINDING
#define GL_SAMPLER_BINDING 0x8919
#endif

#ifndef GL_RGB10_A2UI
#define GL_RGB10_A2UI 0x906F
#endif

#ifndef GL_TEXTURE_SWIZZLE_R
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#endif

#ifndef GL_TEXTURE_SWIZZLE_G
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#endif

#ifndef GL_TEXTURE_SWIZZLE_B
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#endif

#ifndef GL_TEXTURE_SWIZZLE_A
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#endif

#ifndef GL_TEXTURE_SWIZZLE_RGBA
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#endif

#ifdef glQueryCounter
#undef glQueryCounter
#endif
#ifdef PFNGLQUERYCOUNTERPROC
#undef PFNGLQUERYCOUNTERPROC
#endif
typedef void  (*PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);

#ifdef glGetQueryObjecti64v
#undef glGetQueryObjecti64v
#endif
#ifdef PFNGLGETQUERYOBJECTI64VPROC
#undef PFNGLGETQUERYOBJECTI64VPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64 *params);

#ifdef glGetQueryObjectui64v
#undef glGetQueryObjectui64v
#endif
#ifdef PFNGLGETQUERYOBJECTUI64VPROC
#undef PFNGLGETQUERYOBJECTUI64VPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64 *params);

#ifndef GL_TIME_ELAPSED
#define GL_TIME_ELAPSED 0x88BF
#endif

#ifndef GL_TIMESTAMP
#define GL_TIMESTAMP 0x8E28
#endif

#ifdef glVertexAttribDivisor
#undef glVertexAttribDivisor
#endif
#ifdef PFNGLVERTEXATTRIBDIVISORPROC
#undef PFNGLVERTEXATTRIBDIVISORPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);

#ifdef glVertexAttribP1ui
#undef glVertexAttribP1ui
#endif
#ifdef PFNGLVERTEXATTRIBP1UIPROC
#undef PFNGLVERTEXATTRIBP1UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);

#ifdef glVertexAttribP1uiv
#undef glVertexAttribP1uiv
#endif
#ifdef PFNGLVERTEXATTRIBP1UIVPROC
#undef PFNGLVERTEXATTRIBP1UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

#ifdef glVertexAttribP2ui
#undef glVertexAttribP2ui
#endif
#ifdef PFNGLVERTEXATTRIBP2UIPROC
#undef PFNGLVERTEXATTRIBP2UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);

#ifdef glVertexAttribP2uiv
#undef glVertexAttribP2uiv
#endif
#ifdef PFNGLVERTEXATTRIBP2UIVPROC
#undef PFNGLVERTEXATTRIBP2UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

#ifdef glVertexAttribP3ui
#undef glVertexAttribP3ui
#endif
#ifdef PFNGLVERTEXATTRIBP3UIPROC
#undef PFNGLVERTEXATTRIBP3UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);

#ifdef glVertexAttribP3uiv
#undef glVertexAttribP3uiv
#endif
#ifdef PFNGLVERTEXATTRIBP3UIVPROC
#undef PFNGLVERTEXATTRIBP3UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

#ifdef glVertexAttribP4ui
#undef glVertexAttribP4ui
#endif
#ifdef PFNGLVERTEXATTRIBP4UIPROC
#undef PFNGLVERTEXATTRIBP4UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);

#ifdef glVertexAttribP4uiv
#undef glVertexAttribP4uiv
#endif
#ifdef PFNGLVERTEXATTRIBP4UIVPROC
#undef PFNGLVERTEXATTRIBP4UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

#ifndef GL_INT_2_10_10_10_REV
#define GL_INT_2_10_10_10_REV 0x8D9F
#endif

#ifdef glVertexP2ui
#undef glVertexP2ui
#endif
#ifdef PFNGLVERTEXP2UIPROC
#undef PFNGLVERTEXP2UIPROC
#endif
typedef void  (*PFNGLVERTEXP2UIPROC)(GLenum type, GLuint value);

#ifdef glVertexP2uiv
#undef glVertexP2uiv
#endif
#ifdef PFNGLVERTEXP2UIVPROC
#undef PFNGLVERTEXP2UIVPROC
#endif
typedef void  (*PFNGLVERTEXP2UIVPROC)(GLenum type, const GLuint *value);

#ifdef glVertexP3ui
#undef glVertexP3ui
#endif
#ifdef PFNGLVERTEXP3UIPROC
#undef PFNGLVERTEXP3UIPROC
#endif
typedef void  (*PFNGLVERTEXP3UIPROC)(GLenum type, GLuint value);

#ifdef glVertexP3uiv
#undef glVertexP3uiv
#endif
#ifdef PFNGLVERTEXP3UIVPROC
#undef PFNGLVERTEXP3UIVPROC
#endif
typedef void  (*PFNGLVERTEXP3UIVPROC)(GLenum type, const GLuint *value);

#ifdef glVertexP4ui
#undef glVertexP4ui
#endif
#ifdef PFNGLVERTEXP4UIPROC
#undef PFNGLVERTEXP4UIPROC
#endif
typedef void  (*PFNGLVERTEXP4UIPROC)(GLenum type, GLuint value);

#ifdef glVertexP4uiv
#undef glVertexP4uiv
#endif
#ifdef PFNGLVERTEXP4UIVPROC
#undef PFNGLVERTEXP4UIVPROC
#endif
typedef void  (*PFNGLVERTEXP4UIVPROC)(GLenum type, const GLuint *value);

#ifdef glTexCoordP1ui
#undef glTexCoordP1ui
#endif
#ifdef PFNGLTEXCOORDP1UIPROC
#undef PFNGLTEXCOORDP1UIPROC
#endif
typedef void  (*PFNGLTEXCOORDP1UIPROC)(GLenum type, GLuint coords);

#ifdef glTexCoordP1uiv
#undef glTexCoordP1uiv
#endif
#ifdef PFNGLTEXCOORDP1UIVPROC
#undef PFNGLTEXCOORDP1UIVPROC
#endif
typedef void  (*PFNGLTEXCOORDP1UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glTexCoordP2ui
#undef glTexCoordP2ui
#endif
#ifdef PFNGLTEXCOORDP2UIPROC
#undef PFNGLTEXCOORDP2UIPROC
#endif
typedef void  (*PFNGLTEXCOORDP2UIPROC)(GLenum type, GLuint coords);

#ifdef glTexCoordP2uiv
#undef glTexCoordP2uiv
#endif
#ifdef PFNGLTEXCOORDP2UIVPROC
#undef PFNGLTEXCOORDP2UIVPROC
#endif
typedef void  (*PFNGLTEXCOORDP2UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glTexCoordP3ui
#undef glTexCoordP3ui
#endif
#ifdef PFNGLTEXCOORDP3UIPROC
#undef PFNGLTEXCOORDP3UIPROC
#endif
typedef void  (*PFNGLTEXCOORDP3UIPROC)(GLenum type, GLuint coords);

#ifdef glTexCoordP3uiv
#undef glTexCoordP3uiv
#endif
#ifdef PFNGLTEXCOORDP3UIVPROC
#undef PFNGLTEXCOORDP3UIVPROC
#endif
typedef void  (*PFNGLTEXCOORDP3UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glTexCoordP4ui
#undef glTexCoordP4ui
#endif
#ifdef PFNGLTEXCOORDP4UIPROC
#undef PFNGLTEXCOORDP4UIPROC
#endif
typedef void  (*PFNGLTEXCOORDP4UIPROC)(GLenum type, GLuint coords);

#ifdef glTexCoordP4uiv
#undef glTexCoordP4uiv
#endif
#ifdef PFNGLTEXCOORDP4UIVPROC
#undef PFNGLTEXCOORDP4UIVPROC
#endif
typedef void  (*PFNGLTEXCOORDP4UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glMultiTexCoordP1ui
#undef glMultiTexCoordP1ui
#endif
#ifdef PFNGLMULTITEXCOORDP1UIPROC
#undef PFNGLMULTITEXCOORDP1UIPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture, GLenum type, GLuint coords);

#ifdef glMultiTexCoordP1uiv
#undef glMultiTexCoordP1uiv
#endif
#ifdef PFNGLMULTITEXCOORDP1UIVPROC
#undef PFNGLMULTITEXCOORDP1UIVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);

#ifdef glMultiTexCoordP2ui
#undef glMultiTexCoordP2ui
#endif
#ifdef PFNGLMULTITEXCOORDP2UIPROC
#undef PFNGLMULTITEXCOORDP2UIPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture, GLenum type, GLuint coords);

#ifdef glMultiTexCoordP2uiv
#undef glMultiTexCoordP2uiv
#endif
#ifdef PFNGLMULTITEXCOORDP2UIVPROC
#undef PFNGLMULTITEXCOORDP2UIVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);

#ifdef glMultiTexCoordP3ui
#undef glMultiTexCoordP3ui
#endif
#ifdef PFNGLMULTITEXCOORDP3UIPROC
#undef PFNGLMULTITEXCOORDP3UIPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture, GLenum type, GLuint coords);

#ifdef glMultiTexCoordP3uiv
#undef glMultiTexCoordP3uiv
#endif
#ifdef PFNGLMULTITEXCOORDP3UIVPROC
#undef PFNGLMULTITEXCOORDP3UIVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);

#ifdef glMultiTexCoordP4ui
#undef glMultiTexCoordP4ui
#endif
#ifdef PFNGLMULTITEXCOORDP4UIPROC
#undef PFNGLMULTITEXCOORDP4UIPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture, GLenum type, GLuint coords);

#ifdef glMultiTexCoordP4uiv
#undef glMultiTexCoordP4uiv
#endif
#ifdef PFNGLMULTITEXCOORDP4UIVPROC
#undef PFNGLMULTITEXCOORDP4UIVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);

#ifdef glNormalP3ui
#undef glNormalP3ui
#endif
#ifdef PFNGLNORMALP3UIPROC
#undef PFNGLNORMALP3UIPROC
#endif
typedef void  (*PFNGLNORMALP3UIPROC)(GLenum type, GLuint coords);

#ifdef glNormalP3uiv
#undef glNormalP3uiv
#endif
#ifdef PFNGLNORMALP3UIVPROC
#undef PFNGLNORMALP3UIVPROC
#endif
typedef void  (*PFNGLNORMALP3UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glColorP3ui
#undef glColorP3ui
#endif
#ifdef PFNGLCOLORP3UIPROC
#undef PFNGLCOLORP3UIPROC
#endif
typedef void  (*PFNGLCOLORP3UIPROC)(GLenum type, GLuint color);

#ifdef glColorP3uiv
#undef glColorP3uiv
#endif
#ifdef PFNGLCOLORP3UIVPROC
#undef PFNGLCOLORP3UIVPROC
#endif
typedef void  (*PFNGLCOLORP3UIVPROC)(GLenum type, const GLuint *color);

#ifdef glColorP4ui
#undef glColorP4ui
#endif
#ifdef PFNGLCOLORP4UIPROC
#undef PFNGLCOLORP4UIPROC
#endif
typedef void  (*PFNGLCOLORP4UIPROC)(GLenum type, GLuint color);

#ifdef glColorP4uiv
#undef glColorP4uiv
#endif
#ifdef PFNGLCOLORP4UIVPROC
#undef PFNGLCOLORP4UIVPROC
#endif
typedef void  (*PFNGLCOLORP4UIVPROC)(GLenum type, const GLuint *color);

#ifdef glSecondaryColorP3ui
#undef glSecondaryColorP3ui
#endif
#ifdef PFNGLSECONDARYCOLORP3UIPROC
#undef PFNGLSECONDARYCOLORP3UIPROC
#endif
typedef void  (*PFNGLSECONDARYCOLORP3UIPROC)(GLenum type, GLuint color);

#ifdef glSecondaryColorP3uiv
#undef glSecondaryColorP3uiv
#endif
#ifdef PFNGLSECONDARYCOLORP3UIVPROC
#undef PFNGLSECONDARYCOLORP3UIVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type, const GLuint *color);

#ifndef GL_VERSION_4_0
#define GL_VERSION_4_0 1
#endif

#ifdef glMinSampleShading
#undef glMinSampleShading
#endif
#ifdef PFNGLMINSAMPLESHADINGPROC
#undef PFNGLMINSAMPLESHADINGPROC
#endif
typedef void  (*PFNGLMINSAMPLESHADINGPROC)(GLfloat value);

#ifdef glBlendEquationi
#undef glBlendEquationi
#endif
#ifdef PFNGLBLENDEQUATIONIPROC
#undef PFNGLBLENDEQUATIONIPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONIPROC)(GLuint buf, GLenum mode);

#ifdef glBlendEquationSeparatei
#undef glBlendEquationSeparatei
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEIPROC
#undef PFNGLBLENDEQUATIONSEPARATEIPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);

#ifdef glBlendFunci
#undef glBlendFunci
#endif
#ifdef PFNGLBLENDFUNCIPROC
#undef PFNGLBLENDFUNCIPROC
#endif
typedef void  (*PFNGLBLENDFUNCIPROC)(GLuint buf, GLenum src, GLenum dst);

#ifdef glBlendFuncSeparatei
#undef glBlendFuncSeparatei
#endif
#ifdef PFNGLBLENDFUNCSEPARATEIPROC
#undef PFNGLBLENDFUNCSEPARATEIPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

#ifndef GL_SAMPLE_SHADING
#define GL_SAMPLE_SHADING 0x8C36
#endif

#ifndef GL_MIN_SAMPLE_SHADING_VALUE
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#endif

#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#endif

#ifdef glDrawArraysIndirect
#undef glDrawArraysIndirect
#endif
#ifdef PFNGLDRAWARRAYSINDIRECTPROC
#undef PFNGLDRAWARRAYSINDIRECTPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void *indirect);

#ifdef glDrawElementsIndirect
#undef glDrawElementsIndirect
#endif
#ifdef PFNGLDRAWELEMENTSINDIRECTPROC
#undef PFNGLDRAWELEMENTSINDIRECTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void *indirect);

#ifndef GL_DRAW_INDIRECT_BUFFER
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#endif

#ifndef GL_DRAW_INDIRECT_BUFFER_BINDING
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#endif

#ifndef GL_GEOMETRY_SHADER_INVOCATIONS
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_INVOCATIONS
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#endif

#ifndef GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#endif

#ifndef GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#endif

#ifndef GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#endif

#ifndef GL_MAX_VERTEX_STREAMS
#define GL_MAX_VERTEX_STREAMS 0x8E71
#endif

#ifdef glUniform1d
#undef glUniform1d
#endif
#ifdef PFNGLUNIFORM1DPROC
#undef PFNGLUNIFORM1DPROC
#endif
typedef void  (*PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);

#ifdef glUniform2d
#undef glUniform2d
#endif
#ifdef PFNGLUNIFORM2DPROC
#undef PFNGLUNIFORM2DPROC
#endif
typedef void  (*PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);

#ifdef glUniform3d
#undef glUniform3d
#endif
#ifdef PFNGLUNIFORM3DPROC
#undef PFNGLUNIFORM3DPROC
#endif
typedef void  (*PFNGLUNIFORM3DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z);

#ifdef glUniform4d
#undef glUniform4d
#endif
#ifdef PFNGLUNIFORM4DPROC
#undef PFNGLUNIFORM4DPROC
#endif
typedef void  (*PFNGLUNIFORM4DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glUniform1dv
#undef glUniform1dv
#endif
#ifdef PFNGLUNIFORM1DVPROC
#undef PFNGLUNIFORM1DVPROC
#endif
typedef void  (*PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count, const GLdouble *value);

#ifdef glUniform2dv
#undef glUniform2dv
#endif
#ifdef PFNGLUNIFORM2DVPROC
#undef PFNGLUNIFORM2DVPROC
#endif
typedef void  (*PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count, const GLdouble *value);

#ifdef glUniform3dv
#undef glUniform3dv
#endif
#ifdef PFNGLUNIFORM3DVPROC
#undef PFNGLUNIFORM3DVPROC
#endif
typedef void  (*PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count, const GLdouble *value);

#ifdef glUniform4dv
#undef glUniform4dv
#endif
#ifdef PFNGLUNIFORM4DVPROC
#undef PFNGLUNIFORM4DVPROC
#endif
typedef void  (*PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count, const GLdouble *value);

#ifdef glUniformMatrix2dv
#undef glUniformMatrix2dv
#endif
#ifdef PFNGLUNIFORMMATRIX2DVPROC
#undef PFNGLUNIFORMMATRIX2DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix3dv
#undef glUniformMatrix3dv
#endif
#ifdef PFNGLUNIFORMMATRIX3DVPROC
#undef PFNGLUNIFORMMATRIX3DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix4dv
#undef glUniformMatrix4dv
#endif
#ifdef PFNGLUNIFORMMATRIX4DVPROC
#undef PFNGLUNIFORMMATRIX4DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix2x3dv
#undef glUniformMatrix2x3dv
#endif
#ifdef PFNGLUNIFORMMATRIX2X3DVPROC
#undef PFNGLUNIFORMMATRIX2X3DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix2x4dv
#undef glUniformMatrix2x4dv
#endif
#ifdef PFNGLUNIFORMMATRIX2X4DVPROC
#undef PFNGLUNIFORMMATRIX2X4DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix3x2dv
#undef glUniformMatrix3x2dv
#endif
#ifdef PFNGLUNIFORMMATRIX3X2DVPROC
#undef PFNGLUNIFORMMATRIX3X2DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix3x4dv
#undef glUniformMatrix3x4dv
#endif
#ifdef PFNGLUNIFORMMATRIX3X4DVPROC
#undef PFNGLUNIFORMMATRIX3X4DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix4x2dv
#undef glUniformMatrix4x2dv
#endif
#ifdef PFNGLUNIFORMMATRIX4X2DVPROC
#undef PFNGLUNIFORMMATRIX4X2DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix4x3dv
#undef glUniformMatrix4x3dv
#endif
#ifdef PFNGLUNIFORMMATRIX4X3DVPROC
#undef PFNGLUNIFORMMATRIX4X3DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glGetUniformdv
#undef glGetUniformdv
#endif
#ifdef PFNGLGETUNIFORMDVPROC
#undef PFNGLGETUNIFORMDVPROC
#endif
typedef void  (*PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location, GLdouble *params);

#ifndef GL_DOUBLE_VEC2
#define GL_DOUBLE_VEC2 0x8FFC
#endif

#ifndef GL_DOUBLE_VEC3
#define GL_DOUBLE_VEC3 0x8FFD
#endif

#ifndef GL_DOUBLE_VEC4
#define GL_DOUBLE_VEC4 0x8FFE
#endif

#ifndef GL_DOUBLE_MAT2
#define GL_DOUBLE_MAT2 0x8F46
#endif

#ifndef GL_DOUBLE_MAT3
#define GL_DOUBLE_MAT3 0x8F47
#endif

#ifndef GL_DOUBLE_MAT4
#define GL_DOUBLE_MAT4 0x8F48
#endif

#ifndef GL_DOUBLE_MAT2x3
#define GL_DOUBLE_MAT2x3 0x8F49
#endif

#ifndef GL_DOUBLE_MAT2x4
#define GL_DOUBLE_MAT2x4 0x8F4A
#endif

#ifndef GL_DOUBLE_MAT3x2
#define GL_DOUBLE_MAT3x2 0x8F4B
#endif

#ifndef GL_DOUBLE_MAT3x4
#define GL_DOUBLE_MAT3x4 0x8F4C
#endif

#ifndef GL_DOUBLE_MAT4x2
#define GL_DOUBLE_MAT4x2 0x8F4D
#endif

#ifndef GL_DOUBLE_MAT4x3
#define GL_DOUBLE_MAT4x3 0x8F4E
#endif

#ifdef glGetSubroutineUniformLocation
#undef glGetSubroutineUniformLocation
#endif
#ifdef PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
#undef PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
#endif
typedef GLint  (*PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program, GLenum shadertype, const GLchar *name);

#ifdef glGetSubroutineIndex
#undef glGetSubroutineIndex
#endif
#ifdef PFNGLGETSUBROUTINEINDEXPROC
#undef PFNGLGETSUBROUTINEINDEXPROC
#endif
typedef GLuint  (*PFNGLGETSUBROUTINEINDEXPROC)(GLuint program, GLenum shadertype, const GLchar *name);

#ifdef glGetActiveSubroutineUniformiv
#undef glGetActiveSubroutineUniformiv
#endif
#ifdef PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
#undef PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
#endif
typedef void  (*PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);

#ifdef glGetActiveSubroutineUniformName
#undef glGetActiveSubroutineUniformName
#endif
#ifdef PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
#undef PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
#endif
typedef void  (*PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);

#ifdef glGetActiveSubroutineName
#undef glGetActiveSubroutineName
#endif
#ifdef PFNGLGETACTIVESUBROUTINENAMEPROC
#undef PFNGLGETACTIVESUBROUTINENAMEPROC
#endif
typedef void  (*PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);

#ifdef glUniformSubroutinesuiv
#undef glUniformSubroutinesuiv
#endif
#ifdef PFNGLUNIFORMSUBROUTINESUIVPROC
#undef PFNGLUNIFORMSUBROUTINESUIVPROC
#endif
typedef void  (*PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype, GLsizei count, const GLuint *indices);

#ifdef glGetUniformSubroutineuiv
#undef glGetUniformSubroutineuiv
#endif
#ifdef PFNGLGETUNIFORMSUBROUTINEUIVPROC
#undef PFNGLGETUNIFORMSUBROUTINEUIVPROC
#endif
typedef void  (*PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype, GLint location, GLuint *params);

#ifdef glGetProgramStageiv
#undef glGetProgramStageiv
#endif
#ifdef PFNGLGETPROGRAMSTAGEIVPROC
#undef PFNGLGETPROGRAMSTAGEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);

#ifndef GL_ACTIVE_SUBROUTINES
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif

#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif

#ifndef GL_MAX_SUBROUTINES
#define GL_MAX_SUBROUTINES 0x8DE7
#endif

#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif

#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif

#ifndef GL_COMPATIBLE_SUBROUTINES
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif

#ifdef glPatchParameteri
#undef glPatchParameteri
#endif
#ifdef PFNGLPATCHPARAMETERIPROC
#undef PFNGLPATCHPARAMETERIPROC
#endif
typedef void  (*PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);

#ifdef glPatchParameterfv
#undef glPatchParameterfv
#endif
#ifdef PFNGLPATCHPARAMETERFVPROC
#undef PFNGLPATCHPARAMETERFVPROC
#endif
typedef void  (*PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat *values);

#ifndef GL_PATCHES
#define GL_PATCHES 0x000E
#endif

#ifndef GL_PATCH_VERTICES
#define GL_PATCH_VERTICES 0x8E72
#endif

#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif

#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif

#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif

#ifndef GL_TESS_GEN_MODE
#define GL_TESS_GEN_MODE 0x8E76
#endif

#ifndef GL_TESS_GEN_SPACING
#define GL_TESS_GEN_SPACING 0x8E77
#endif

#ifndef GL_TESS_GEN_VERTEX_ORDER
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif

#ifndef GL_TESS_GEN_POINT_MODE
#define GL_TESS_GEN_POINT_MODE 0x8E79
#endif

#ifndef GL_ISOLINES
#define GL_ISOLINES 0x8E7A
#endif

#ifndef GL_QUADS
#define GL_QUADS 0x0007
#endif

#ifndef GL_FRACTIONAL_ODD
#define GL_FRACTIONAL_ODD 0x8E7B
#endif

#ifndef GL_FRACTIONAL_EVEN
#define GL_FRACTIONAL_EVEN 0x8E7C
#endif

#ifndef GL_MAX_PATCH_VERTICES
#define GL_MAX_PATCH_VERTICES 0x8E7D
#endif

#ifndef GL_MAX_TESS_GEN_LEVEL
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif

#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif

#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif

#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif

#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif

#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif

#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif

#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif

#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif

#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif

#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif

#ifndef GL_TESS_EVALUATION_SHADER
#define GL_TESS_EVALUATION_SHADER 0x8E87
#endif

#ifndef GL_TESS_CONTROL_SHADER
#define GL_TESS_CONTROL_SHADER 0x8E88
#endif

#ifdef glBindTransformFeedback
#undef glBindTransformFeedback
#endif
#ifdef PFNGLBINDTRANSFORMFEEDBACKPROC
#undef PFNGLBINDTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);

#ifdef glDeleteTransformFeedbacks
#undef glDeleteTransformFeedbacks
#endif
#ifdef PFNGLDELETETRANSFORMFEEDBACKSPROC
#undef PFNGLDELETETRANSFORMFEEDBACKSPROC
#endif
typedef void  (*PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint *ids);

#ifdef glGenTransformFeedbacks
#undef glGenTransformFeedbacks
#endif
#ifdef PFNGLGENTRANSFORMFEEDBACKSPROC
#undef PFNGLGENTRANSFORMFEEDBACKSPROC
#endif
typedef void  (*PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint *ids);

#ifdef glIsTransformFeedback
#undef glIsTransformFeedback
#endif
#ifdef PFNGLISTRANSFORMFEEDBACKPROC
#undef PFNGLISTRANSFORMFEEDBACKPROC
#endif
typedef GLboolean  (*PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);

#ifdef glPauseTransformFeedback
#undef glPauseTransformFeedback
#endif
#ifdef PFNGLPAUSETRANSFORMFEEDBACKPROC
#undef PFNGLPAUSETRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);

#ifdef glResumeTransformFeedback
#undef glResumeTransformFeedback
#endif
#ifdef PFNGLRESUMETRANSFORMFEEDBACKPROC
#undef PFNGLRESUMETRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);

#ifdef glDrawTransformFeedback
#undef glDrawTransformFeedback
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);

#ifndef GL_TRANSFORM_FEEDBACK
#define GL_TRANSFORM_FEEDBACK 0x8E22
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BINDING
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#endif

#ifdef glDrawTransformFeedbackStream
#undef glDrawTransformFeedbackStream
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode, GLuint id, GLuint stream);

#ifdef glBeginQueryIndexed
#undef glBeginQueryIndexed
#endif
#ifdef PFNGLBEGINQUERYINDEXEDPROC
#undef PFNGLBEGINQUERYINDEXEDPROC
#endif
typedef void  (*PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index, GLuint id);

#ifdef glEndQueryIndexed
#undef glEndQueryIndexed
#endif
#ifdef PFNGLENDQUERYINDEXEDPROC
#undef PFNGLENDQUERYINDEXEDPROC
#endif
typedef void  (*PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);

#ifdef glGetQueryIndexediv
#undef glGetQueryIndexediv
#endif
#ifdef PFNGLGETQUERYINDEXEDIVPROC
#undef PFNGLGETQUERYINDEXEDIVPROC
#endif
typedef void  (*PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index, GLenum pname, GLint *params);

#ifndef GL_MAX_TRANSFORM_FEEDBACK_BUFFERS
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#endif

#ifndef GL_MAX_VERTEX_STREAMS
#define GL_MAX_VERTEX_STREAMS 0x8E71
#endif

#ifndef GL_VERSION_4_1
#define GL_VERSION_4_1 1
#endif

#ifndef GL_FIXED
#define GL_FIXED 0x140C
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif

#ifndef GL_LOW_FLOAT
#define GL_LOW_FLOAT 0x8DF0
#endif

#ifndef GL_MEDIUM_FLOAT
#define GL_MEDIUM_FLOAT 0x8DF1
#endif

#ifndef GL_HIGH_FLOAT
#define GL_HIGH_FLOAT 0x8DF2
#endif

#ifndef GL_LOW_INT
#define GL_LOW_INT 0x8DF3
#endif

#ifndef GL_MEDIUM_INT
#define GL_MEDIUM_INT 0x8DF4
#endif

#ifndef GL_HIGH_INT
#define GL_HIGH_INT 0x8DF5
#endif

#ifndef GL_SHADER_COMPILER
#define GL_SHADER_COMPILER 0x8DFA
#endif

#ifndef GL_SHADER_BINARY_FORMATS
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif

#ifndef GL_NUM_SHADER_BINARY_FORMATS
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif

#ifndef GL_MAX_VARYING_VECTORS
#define GL_MAX_VARYING_VECTORS 0x8DFC
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif

#ifndef GL_RGB565
#define GL_RGB565 0x8D62
#endif

#ifndef GL_PROGRAM_BINARY_RETRIEVABLE_HINT
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#endif

#ifndef GL_PROGRAM_BINARY_LENGTH
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#endif

#ifndef GL_NUM_PROGRAM_BINARY_FORMATS
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#endif

#ifndef GL_PROGRAM_BINARY_FORMATS
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#endif

#ifndef GL_VERTEX_SHADER_BIT
#define GL_VERTEX_SHADER_BIT 0x00000001
#endif

#ifndef GL_FRAGMENT_SHADER_BIT
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#endif

#ifndef GL_GEOMETRY_SHADER_BIT
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#endif

#ifndef GL_TESS_CONTROL_SHADER_BIT
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#endif

#ifndef GL_TESS_EVALUATION_SHADER_BIT
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#endif

#ifndef GL_ALL_SHADER_BITS
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#endif

#ifndef GL_PROGRAM_SEPARABLE
#define GL_PROGRAM_SEPARABLE 0x8258
#endif

#ifndef GL_ACTIVE_PROGRAM
#define GL_ACTIVE_PROGRAM 0x8259
#endif

#ifndef GL_PROGRAM_PIPELINE_BINDING
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#endif

#ifndef GL_MAX_VIEWPORTS
#define GL_MAX_VIEWPORTS 0x825B
#endif

#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif

#ifndef GL_VIEWPORT_BOUNDS_RANGE
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif

#ifndef GL_LAYER_PROVOKING_VERTEX
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif

#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif

#ifndef GL_UNDEFINED_VERTEX
#define GL_UNDEFINED_VERTEX 0x8260
#endif

#ifdef glReleaseShaderCompiler
#undef glReleaseShaderCompiler
#endif
#ifdef PFNGLRELEASESHADERCOMPILERPROC
#undef PFNGLRELEASESHADERCOMPILERPROC
#endif
typedef void  (*PFNGLRELEASESHADERCOMPILERPROC)(void);

#ifdef glShaderBinary
#undef glShaderBinary
#endif
#ifdef PFNGLSHADERBINARYPROC
#undef PFNGLSHADERBINARYPROC
#endif
typedef void  (*PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);

#ifdef glGetShaderPrecisionFormat
#undef glGetShaderPrecisionFormat
#endif
#ifdef PFNGLGETSHADERPRECISIONFORMATPROC
#undef PFNGLGETSHADERPRECISIONFORMATPROC
#endif
typedef void  (*PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);

#ifdef glDepthRangef
#undef glDepthRangef
#endif
#ifdef PFNGLDEPTHRANGEFPROC
#undef PFNGLDEPTHRANGEFPROC
#endif
typedef void  (*PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);

#ifdef glClearDepthf
#undef glClearDepthf
#endif
#ifdef PFNGLCLEARDEPTHFPROC
#undef PFNGLCLEARDEPTHFPROC
#endif
typedef void  (*PFNGLCLEARDEPTHFPROC)(GLfloat d);

#ifdef glGetProgramBinary
#undef glGetProgramBinary
#endif
#ifdef PFNGLGETPROGRAMBINARYPROC
#undef PFNGLGETPROGRAMBINARYPROC
#endif
typedef void  (*PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);

#ifdef glProgramBinary
#undef glProgramBinary
#endif
#ifdef PFNGLPROGRAMBINARYPROC
#undef PFNGLPROGRAMBINARYPROC
#endif
typedef void  (*PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);

#ifdef glProgramParameteri
#undef glProgramParameteri
#endif
#ifdef PFNGLPROGRAMPARAMETERIPROC
#undef PFNGLPROGRAMPARAMETERIPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);

#ifdef glUseProgramStages
#undef glUseProgramStages
#endif
#ifdef PFNGLUSEPROGRAMSTAGESPROC
#undef PFNGLUSEPROGRAMSTAGESPROC
#endif
typedef void  (*PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);

#ifdef glActiveShaderProgram
#undef glActiveShaderProgram
#endif
#ifdef PFNGLACTIVESHADERPROGRAMPROC
#undef PFNGLACTIVESHADERPROGRAMPROC
#endif
typedef void  (*PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);

#ifdef glCreateShaderProgramv
#undef glCreateShaderProgramv
#endif
#ifdef PFNGLCREATESHADERPROGRAMVPROC
#undef PFNGLCREATESHADERPROGRAMVPROC
#endif
typedef GLuint  (*PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const*strings);

#ifdef glBindProgramPipeline
#undef glBindProgramPipeline
#endif
#ifdef PFNGLBINDPROGRAMPIPELINEPROC
#undef PFNGLBINDPROGRAMPIPELINEPROC
#endif
typedef void  (*PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glDeleteProgramPipelines
#undef glDeleteProgramPipelines
#endif
#ifdef PFNGLDELETEPROGRAMPIPELINESPROC
#undef PFNGLDELETEPROGRAMPIPELINESPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint *pipelines);

#ifdef glGenProgramPipelines
#undef glGenProgramPipelines
#endif
#ifdef PFNGLGENPROGRAMPIPELINESPROC
#undef PFNGLGENPROGRAMPIPELINESPROC
#endif
typedef void  (*PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint *pipelines);

#ifdef glIsProgramPipeline
#undef glIsProgramPipeline
#endif
#ifdef PFNGLISPROGRAMPIPELINEPROC
#undef PFNGLISPROGRAMPIPELINEPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glGetProgramPipelineiv
#undef glGetProgramPipelineiv
#endif
#ifdef PFNGLGETPROGRAMPIPELINEIVPROC
#undef PFNGLGETPROGRAMPIPELINEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint *params);

#ifdef glProgramUniform1i
#undef glProgramUniform1i
#endif
#ifdef PFNGLPROGRAMUNIFORM1IPROC
#undef PFNGLPROGRAMUNIFORM1IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);

#ifdef glProgramUniform1iv
#undef glProgramUniform1iv
#endif
#ifdef PFNGLPROGRAMUNIFORM1IVPROC
#undef PFNGLPROGRAMUNIFORM1IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform1f
#undef glProgramUniform1f
#endif
#ifdef PFNGLPROGRAMUNIFORM1FPROC
#undef PFNGLPROGRAMUNIFORM1FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);

#ifdef glProgramUniform1fv
#undef glProgramUniform1fv
#endif
#ifdef PFNGLPROGRAMUNIFORM1FVPROC
#undef PFNGLPROGRAMUNIFORM1FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform1d
#undef glProgramUniform1d
#endif
#ifdef PFNGLPROGRAMUNIFORM1DPROC
#undef PFNGLPROGRAMUNIFORM1DPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1DPROC)(GLuint program, GLint location, GLdouble v0);

#ifdef glProgramUniform1dv
#undef glProgramUniform1dv
#endif
#ifdef PFNGLPROGRAMUNIFORM1DVPROC
#undef PFNGLPROGRAMUNIFORM1DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform1ui
#undef glProgramUniform1ui
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIPROC
#undef PFNGLPROGRAMUNIFORM1UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);

#ifdef glProgramUniform1uiv
#undef glProgramUniform1uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIVPROC
#undef PFNGLPROGRAMUNIFORM1UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform2i
#undef glProgramUniform2i
#endif
#ifdef PFNGLPROGRAMUNIFORM2IPROC
#undef PFNGLPROGRAMUNIFORM2IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);

#ifdef glProgramUniform2iv
#undef glProgramUniform2iv
#endif
#ifdef PFNGLPROGRAMUNIFORM2IVPROC
#undef PFNGLPROGRAMUNIFORM2IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform2f
#undef glProgramUniform2f
#endif
#ifdef PFNGLPROGRAMUNIFORM2FPROC
#undef PFNGLPROGRAMUNIFORM2FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);

#ifdef glProgramUniform2fv
#undef glProgramUniform2fv
#endif
#ifdef PFNGLPROGRAMUNIFORM2FVPROC
#undef PFNGLPROGRAMUNIFORM2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform2d
#undef glProgramUniform2d
#endif
#ifdef PFNGLPROGRAMUNIFORM2DPROC
#undef PFNGLPROGRAMUNIFORM2DPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1);

#ifdef glProgramUniform2dv
#undef glProgramUniform2dv
#endif
#ifdef PFNGLPROGRAMUNIFORM2DVPROC
#undef PFNGLPROGRAMUNIFORM2DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform2ui
#undef glProgramUniform2ui
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIPROC
#undef PFNGLPROGRAMUNIFORM2UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);

#ifdef glProgramUniform2uiv
#undef glProgramUniform2uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIVPROC
#undef PFNGLPROGRAMUNIFORM2UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform3i
#undef glProgramUniform3i
#endif
#ifdef PFNGLPROGRAMUNIFORM3IPROC
#undef PFNGLPROGRAMUNIFORM3IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);

#ifdef glProgramUniform3iv
#undef glProgramUniform3iv
#endif
#ifdef PFNGLPROGRAMUNIFORM3IVPROC
#undef PFNGLPROGRAMUNIFORM3IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform3f
#undef glProgramUniform3f
#endif
#ifdef PFNGLPROGRAMUNIFORM3FPROC
#undef PFNGLPROGRAMUNIFORM3FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);

#ifdef glProgramUniform3fv
#undef glProgramUniform3fv
#endif
#ifdef PFNGLPROGRAMUNIFORM3FVPROC
#undef PFNGLPROGRAMUNIFORM3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform3d
#undef glProgramUniform3d
#endif
#ifdef PFNGLPROGRAMUNIFORM3DPROC
#undef PFNGLPROGRAMUNIFORM3DPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);

#ifdef glProgramUniform3dv
#undef glProgramUniform3dv
#endif
#ifdef PFNGLPROGRAMUNIFORM3DVPROC
#undef PFNGLPROGRAMUNIFORM3DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform3ui
#undef glProgramUniform3ui
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIPROC
#undef PFNGLPROGRAMUNIFORM3UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);

#ifdef glProgramUniform3uiv
#undef glProgramUniform3uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIVPROC
#undef PFNGLPROGRAMUNIFORM3UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform4i
#undef glProgramUniform4i
#endif
#ifdef PFNGLPROGRAMUNIFORM4IPROC
#undef PFNGLPROGRAMUNIFORM4IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);

#ifdef glProgramUniform4iv
#undef glProgramUniform4iv
#endif
#ifdef PFNGLPROGRAMUNIFORM4IVPROC
#undef PFNGLPROGRAMUNIFORM4IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform4f
#undef glProgramUniform4f
#endif
#ifdef PFNGLPROGRAMUNIFORM4FPROC
#undef PFNGLPROGRAMUNIFORM4FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

#ifdef glProgramUniform4fv
#undef glProgramUniform4fv
#endif
#ifdef PFNGLPROGRAMUNIFORM4FVPROC
#undef PFNGLPROGRAMUNIFORM4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform4d
#undef glProgramUniform4d
#endif
#ifdef PFNGLPROGRAMUNIFORM4DPROC
#undef PFNGLPROGRAMUNIFORM4DPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);

#ifdef glProgramUniform4dv
#undef glProgramUniform4dv
#endif
#ifdef PFNGLPROGRAMUNIFORM4DVPROC
#undef PFNGLPROGRAMUNIFORM4DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform4ui
#undef glProgramUniform4ui
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIPROC
#undef PFNGLPROGRAMUNIFORM4UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

#ifdef glProgramUniform4uiv
#undef glProgramUniform4uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIVPROC
#undef PFNGLPROGRAMUNIFORM4UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniformMatrix2fv
#undef glProgramUniformMatrix2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3fv
#undef glProgramUniformMatrix3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4fv
#undef glProgramUniformMatrix4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2dv
#undef glProgramUniformMatrix2dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3dv
#undef glProgramUniformMatrix3dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4dv
#undef glProgramUniformMatrix4dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix2x3fv
#undef glProgramUniformMatrix2x3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x2fv
#undef glProgramUniformMatrix3x2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x4fv
#undef glProgramUniformMatrix2x4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x2fv
#undef glProgramUniformMatrix4x2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x4fv
#undef glProgramUniformMatrix3x4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x3fv
#undef glProgramUniformMatrix4x3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x3dv
#undef glProgramUniformMatrix2x3dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3x2dv
#undef glProgramUniformMatrix3x2dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix2x4dv
#undef glProgramUniformMatrix2x4dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4x2dv
#undef glProgramUniformMatrix4x2dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3x4dv
#undef glProgramUniformMatrix3x4dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4x3dv
#undef glProgramUniformMatrix4x3dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glValidateProgramPipeline
#undef glValidateProgramPipeline
#endif
#ifdef PFNGLVALIDATEPROGRAMPIPELINEPROC
#undef PFNGLVALIDATEPROGRAMPIPELINEPROC
#endif
typedef void  (*PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glGetProgramPipelineInfoLog
#undef glGetProgramPipelineInfoLog
#endif
#ifdef PFNGLGETPROGRAMPIPELINEINFOLOGPROC
#undef PFNGLGETPROGRAMPIPELINEINFOLOGPROC
#endif
typedef void  (*PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

#ifdef glVertexAttribL1d
#undef glVertexAttribL1d
#endif
#ifdef PFNGLVERTEXATTRIBL1DPROC
#undef PFNGLVERTEXATTRIBL1DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);

#ifdef glVertexAttribL2d
#undef glVertexAttribL2d
#endif
#ifdef PFNGLVERTEXATTRIBL2DPROC
#undef PFNGLVERTEXATTRIBL2DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);

#ifdef glVertexAttribL3d
#undef glVertexAttribL3d
#endif
#ifdef PFNGLVERTEXATTRIBL3DPROC
#undef PFNGLVERTEXATTRIBL3DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertexAttribL4d
#undef glVertexAttribL4d
#endif
#ifdef PFNGLVERTEXATTRIBL4DPROC
#undef PFNGLVERTEXATTRIBL4DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertexAttribL1dv
#undef glVertexAttribL1dv
#endif
#ifdef PFNGLVERTEXATTRIBL1DVPROC
#undef PFNGLVERTEXATTRIBL1DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL2dv
#undef glVertexAttribL2dv
#endif
#ifdef PFNGLVERTEXATTRIBL2DVPROC
#undef PFNGLVERTEXATTRIBL2DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL3dv
#undef glVertexAttribL3dv
#endif
#ifdef PFNGLVERTEXATTRIBL3DVPROC
#undef PFNGLVERTEXATTRIBL3DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL4dv
#undef glVertexAttribL4dv
#endif
#ifdef PFNGLVERTEXATTRIBL4DVPROC
#undef PFNGLVERTEXATTRIBL4DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribLPointer
#undef glVertexAttribLPointer
#endif
#ifdef PFNGLVERTEXATTRIBLPOINTERPROC
#undef PFNGLVERTEXATTRIBLPOINTERPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glGetVertexAttribLdv
#undef glGetVertexAttribLdv
#endif
#ifdef PFNGLGETVERTEXATTRIBLDVPROC
#undef PFNGLGETVERTEXATTRIBLDVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname, GLdouble *params);

#ifdef glViewportArrayv
#undef glViewportArrayv
#endif
#ifdef PFNGLVIEWPORTARRAYVPROC
#undef PFNGLVIEWPORTARRAYVPROC
#endif
typedef void  (*PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count, const GLfloat *v);

#ifdef glViewportIndexedf
#undef glViewportIndexedf
#endif
#ifdef PFNGLVIEWPORTINDEXEDFPROC
#undef PFNGLVIEWPORTINDEXEDFPROC
#endif
typedef void  (*PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);

#ifdef glViewportIndexedfv
#undef glViewportIndexedfv
#endif
#ifdef PFNGLVIEWPORTINDEXEDFVPROC
#undef PFNGLVIEWPORTINDEXEDFVPROC
#endif
typedef void  (*PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat *v);

#ifdef glScissorArrayv
#undef glScissorArrayv
#endif
#ifdef PFNGLSCISSORARRAYVPROC
#undef PFNGLSCISSORARRAYVPROC
#endif
typedef void  (*PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count, const GLint *v);

#ifdef glScissorIndexed
#undef glScissorIndexed
#endif
#ifdef PFNGLSCISSORINDEXEDPROC
#undef PFNGLSCISSORINDEXEDPROC
#endif
typedef void  (*PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);

#ifdef glScissorIndexedv
#undef glScissorIndexedv
#endif
#ifdef PFNGLSCISSORINDEXEDVPROC
#undef PFNGLSCISSORINDEXEDVPROC
#endif
typedef void  (*PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint *v);

#ifdef glDepthRangeArrayv
#undef glDepthRangeArrayv
#endif
#ifdef PFNGLDEPTHRANGEARRAYVPROC
#undef PFNGLDEPTHRANGEARRAYVPROC
#endif
typedef void  (*PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count, const GLdouble *v);

#ifdef glDepthRangeIndexed
#undef glDepthRangeIndexed
#endif
#ifdef PFNGLDEPTHRANGEINDEXEDPROC
#undef PFNGLDEPTHRANGEINDEXEDPROC
#endif
typedef void  (*PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n, GLdouble f);

#ifdef glGetFloati_v
#undef glGetFloati_v
#endif
#ifdef PFNGLGETFLOATI_VPROC
#undef PFNGLGETFLOATI_VPROC
#endif
typedef void  (*PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index, GLfloat *data);

#ifdef glGetDoublei_v
#undef glGetDoublei_v
#endif
#ifdef PFNGLGETDOUBLEI_VPROC
#undef PFNGLGETDOUBLEI_VPROC
#endif
typedef void  (*PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index, GLdouble *data);

#ifndef GL_VERSION_4_2
#define GL_VERSION_4_2 1
#endif

#ifndef GL_COPY_READ_BUFFER_BINDING
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#endif

#ifndef GL_COPY_WRITE_BUFFER_BINDING
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#endif

#ifndef GL_TRANSFORM_FEEDBACK_ACTIVE
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PAUSED
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_WIDTH
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_DEPTH
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_SIZE
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_WIDTH
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_HEIGHT
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_DEPTH
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_SIZE
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#endif

#ifndef GL_NUM_SAMPLE_COUNTS
#define GL_NUM_SAMPLE_COUNTS 0x9380
#endif

#ifndef GL_MIN_MAP_BUFFER_ALIGNMENT
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_BINDING
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_START
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTERS
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTERS
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTERS
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#endif

#ifndef GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#endif

#ifndef GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#endif

#ifndef GL_UNSIGNED_INT_ATOMIC_COUNTER
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#endif

#ifndef GL_ELEMENT_ARRAY_BARRIER_BIT
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#endif

#ifndef GL_UNIFORM_BARRIER_BIT
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#endif

#ifndef GL_TEXTURE_FETCH_BARRIER_BIT
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#endif

#ifndef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#endif

#ifndef GL_COMMAND_BARRIER_BIT
#define GL_COMMAND_BARRIER_BIT 0x00000040
#endif

#ifndef GL_PIXEL_BUFFER_BARRIER_BIT
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#endif

#ifndef GL_TEXTURE_UPDATE_BARRIER_BIT
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#endif

#ifndef GL_BUFFER_UPDATE_BARRIER_BIT
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#endif

#ifndef GL_FRAMEBUFFER_BARRIER_BIT
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BARRIER_BIT
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#endif

#ifndef GL_ATOMIC_COUNTER_BARRIER_BIT
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#endif

#ifndef GL_ALL_BARRIER_BITS
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#endif

#ifndef GL_MAX_IMAGE_UNITS
#define GL_MAX_IMAGE_UNITS 0x8F38
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#endif

#ifndef GL_IMAGE_BINDING_NAME
#define GL_IMAGE_BINDING_NAME 0x8F3A
#endif

#ifndef GL_IMAGE_BINDING_LEVEL
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#endif

#ifndef GL_IMAGE_BINDING_LAYERED
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#endif

#ifndef GL_IMAGE_BINDING_LAYER
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#endif

#ifndef GL_IMAGE_BINDING_ACCESS
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#endif

#ifndef GL_IMAGE_1D
#define GL_IMAGE_1D 0x904C
#endif

#ifndef GL_IMAGE_2D
#define GL_IMAGE_2D 0x904D
#endif

#ifndef GL_IMAGE_3D
#define GL_IMAGE_3D 0x904E
#endif

#ifndef GL_IMAGE_2D_RECT
#define GL_IMAGE_2D_RECT 0x904F
#endif

#ifndef GL_IMAGE_CUBE
#define GL_IMAGE_CUBE 0x9050
#endif

#ifndef GL_IMAGE_BUFFER
#define GL_IMAGE_BUFFER 0x9051
#endif

#ifndef GL_IMAGE_1D_ARRAY
#define GL_IMAGE_1D_ARRAY 0x9052
#endif

#ifndef GL_IMAGE_2D_ARRAY
#define GL_IMAGE_2D_ARRAY 0x9053
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#endif

#ifndef GL_INT_IMAGE_1D
#define GL_INT_IMAGE_1D 0x9057
#endif

#ifndef GL_INT_IMAGE_2D
#define GL_INT_IMAGE_2D 0x9058
#endif

#ifndef GL_INT_IMAGE_3D
#define GL_INT_IMAGE_3D 0x9059
#endif

#ifndef GL_INT_IMAGE_2D_RECT
#define GL_INT_IMAGE_2D_RECT 0x905A
#endif

#ifndef GL_INT_IMAGE_CUBE
#define GL_INT_IMAGE_CUBE 0x905B
#endif

#ifndef GL_INT_IMAGE_BUFFER
#define GL_INT_IMAGE_BUFFER 0x905C
#endif

#ifndef GL_INT_IMAGE_1D_ARRAY
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#endif

#ifndef GL_INT_IMAGE_2D_ARRAY
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_3D
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_RECT
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#endif

#ifndef GL_MAX_IMAGE_SAMPLES
#define GL_MAX_IMAGE_SAMPLES 0x906D
#endif

#ifndef GL_IMAGE_BINDING_FORMAT
#define GL_IMAGE_BINDING_FORMAT 0x906E
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#endif

#ifndef GL_MAX_VERTEX_IMAGE_UNIFORMS
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#endif

#ifndef GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#endif

#ifndef GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#endif

#ifndef GL_MAX_GEOMETRY_IMAGE_UNIFORMS
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#endif

#ifndef GL_MAX_FRAGMENT_IMAGE_UNIFORMS
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNIFORMS
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#endif

#ifndef GL_COMPRESSED_RGBA_BPTC_UNORM
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#endif

#ifndef GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#endif

#ifndef GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#endif

#ifndef GL_TEXTURE_IMMUTABLE_FORMAT
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#endif

#ifdef glDrawArraysInstancedBaseInstance
#undef glDrawArraysInstancedBaseInstance
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
#undef PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);

#ifdef glDrawElementsInstancedBaseInstance
#undef glDrawElementsInstancedBaseInstance
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);

#ifdef glDrawElementsInstancedBaseVertexBaseInstance
#undef glDrawElementsInstancedBaseVertexBaseInstance
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);

#ifdef glGetInternalformativ
#undef glGetInternalformativ
#endif
#ifdef PFNGLGETINTERNALFORMATIVPROC
#undef PFNGLGETINTERNALFORMATIVPROC
#endif
typedef void  (*PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);

#ifdef glGetActiveAtomicCounterBufferiv
#undef glGetActiveAtomicCounterBufferiv
#endif
#ifdef PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
#undef PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
#endif
typedef void  (*PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);

#ifdef glBindImageTexture
#undef glBindImageTexture
#endif
#ifdef PFNGLBINDIMAGETEXTUREPROC
#undef PFNGLBINDIMAGETEXTUREPROC
#endif
typedef void  (*PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);

#ifdef glMemoryBarrier
#undef glMemoryBarrier
#endif
#ifdef PFNGLMEMORYBARRIERPROC
#undef PFNGLMEMORYBARRIERPROC
#endif
typedef void  (*PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);

#ifdef glTexStorage1D
#undef glTexStorage1D
#endif
#ifdef PFNGLTEXSTORAGE1DPROC
#undef PFNGLTEXSTORAGE1DPROC
#endif
typedef void  (*PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);

#ifdef glTexStorage2D
#undef glTexStorage2D
#endif
#ifdef PFNGLTEXSTORAGE2DPROC
#undef PFNGLTEXSTORAGE2DPROC
#endif
typedef void  (*PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glTexStorage3D
#undef glTexStorage3D
#endif
#ifdef PFNGLTEXSTORAGE3DPROC
#undef PFNGLTEXSTORAGE3DPROC
#endif
typedef void  (*PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

#ifdef glDrawTransformFeedbackInstanced
#undef glDrawTransformFeedbackInstanced
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode, GLuint id, GLsizei instancecount);

#ifdef glDrawTransformFeedbackStreamInstanced
#undef glDrawTransformFeedbackStreamInstanced
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);

#ifndef GL_VERSION_4_3
#define GL_VERSION_4_3 1
#endif

#ifndef GL_NUM_SHADING_LANGUAGE_VERSIONS
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_LONG
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#endif

#ifndef GL_COMPRESSED_RGB8_ETC2
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#endif

#ifndef GL_COMPRESSED_SRGB8_ETC2
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#endif

#ifndef GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#endif

#ifndef GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#endif

#ifndef GL_COMPRESSED_RGBA8_ETC2_EAC
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#endif

#ifndef GL_COMPRESSED_R11_EAC
#define GL_COMPRESSED_R11_EAC 0x9270
#endif

#ifndef GL_COMPRESSED_SIGNED_R11_EAC
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#endif

#ifndef GL_COMPRESSED_RG11_EAC
#define GL_COMPRESSED_RG11_EAC 0x9272
#endif

#ifndef GL_COMPRESSED_SIGNED_RG11_EAC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#endif

#ifndef GL_PRIMITIVE_RESTART_FIXED_INDEX
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#endif

#ifndef GL_ANY_SAMPLES_PASSED_CONSERVATIVE
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#endif

#ifndef GL_MAX_ELEMENT_INDEX
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#endif

#ifndef GL_COMPUTE_SHADER
#define GL_COMPUTE_SHADER 0x91B9
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif

#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif

#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif

#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif

#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif

#ifndef GL_COMPUTE_WORK_GROUP_SIZE
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif

#ifndef GL_COMPUTE_SHADER_BIT
#define GL_COMPUTE_SHADER_BIT 0x00000020
#endif

#ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#endif

#ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#endif

#ifndef GL_DEBUG_CALLBACK_FUNCTION
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#endif

#ifndef GL_DEBUG_CALLBACK_USER_PARAM
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#endif

#ifndef GL_DEBUG_SOURCE_API
#define GL_DEBUG_SOURCE_API 0x8246
#endif

#ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#endif

#ifndef GL_DEBUG_SOURCE_SHADER_COMPILER
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#endif

#ifndef GL_DEBUG_SOURCE_THIRD_PARTY
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#endif

#ifndef GL_DEBUG_SOURCE_APPLICATION
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#endif

#ifndef GL_DEBUG_SOURCE_OTHER
#define GL_DEBUG_SOURCE_OTHER 0x824B
#endif

#ifndef GL_DEBUG_TYPE_ERROR
#define GL_DEBUG_TYPE_ERROR 0x824C
#endif

#ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#endif

#ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#endif

#ifndef GL_DEBUG_TYPE_PORTABILITY
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#endif

#ifndef GL_DEBUG_TYPE_PERFORMANCE
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#endif

#ifndef GL_DEBUG_TYPE_OTHER
#define GL_DEBUG_TYPE_OTHER 0x8251
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW
#define GL_DEBUG_SEVERITY_LOW 0x9148
#endif

#ifndef GL_DEBUG_TYPE_MARKER
#define GL_DEBUG_TYPE_MARKER 0x8268
#endif

#ifndef GL_DEBUG_TYPE_PUSH_GROUP
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#endif

#ifndef GL_DEBUG_TYPE_POP_GROUP
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#endif

#ifndef GL_DEBUG_SEVERITY_NOTIFICATION
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#endif

#ifndef GL_MAX_DEBUG_GROUP_STACK_DEPTH
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#endif

#ifndef GL_DEBUG_GROUP_STACK_DEPTH
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#endif

#ifndef GL_BUFFER
#define GL_BUFFER 0x82E0
#endif

#ifndef GL_SHADER
#define GL_SHADER 0x82E1
#endif

#ifndef GL_PROGRAM
#define GL_PROGRAM 0x82E2
#endif

#ifndef GL_VERTEX_ARRAY
#define GL_VERTEX_ARRAY 0x8074
#endif

#ifndef GL_QUERY
#define GL_QUERY 0x82E3
#endif

#ifndef GL_PROGRAM_PIPELINE
#define GL_PROGRAM_PIPELINE 0x82E4
#endif

#ifndef GL_SAMPLER
#define GL_SAMPLER 0x82E6
#endif

#ifndef GL_MAX_LABEL_LENGTH
#define GL_MAX_LABEL_LENGTH 0x82E8
#endif

#ifndef GL_DEBUG_OUTPUT
#define GL_DEBUG_OUTPUT 0x92E0
#endif

#ifndef GL_CONTEXT_FLAG_DEBUG_BIT
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#endif

#ifndef GL_MAX_UNIFORM_LOCATIONS
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_WIDTH
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_HEIGHT
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_LAYERS
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_SAMPLES
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#endif

#ifndef GL_MAX_FRAMEBUFFER_WIDTH
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#endif

#ifndef GL_MAX_FRAMEBUFFER_HEIGHT
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#endif

#ifndef GL_MAX_FRAMEBUFFER_LAYERS
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#endif

#ifndef GL_MAX_FRAMEBUFFER_SAMPLES
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#endif

#ifndef GL_INTERNALFORMAT_SUPPORTED
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif

#ifndef GL_INTERNALFORMAT_PREFERRED
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif

#ifndef GL_INTERNALFORMAT_RED_SIZE
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif

#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif

#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif

#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif

#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif

#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif

#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif

#ifndef GL_INTERNALFORMAT_RED_TYPE
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif

#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif

#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif

#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif

#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif

#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif

#ifndef GL_MAX_WIDTH
#define GL_MAX_WIDTH 0x827E
#endif

#ifndef GL_MAX_HEIGHT
#define GL_MAX_HEIGHT 0x827F
#endif

#ifndef GL_MAX_DEPTH
#define GL_MAX_DEPTH 0x8280
#endif

#ifndef GL_MAX_LAYERS
#define GL_MAX_LAYERS 0x8281
#endif

#ifndef GL_MAX_COMBINED_DIMENSIONS
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif

#ifndef GL_COLOR_COMPONENTS
#define GL_COLOR_COMPONENTS 0x8283
#endif

#ifndef GL_DEPTH_COMPONENTS
#define GL_DEPTH_COMPONENTS 0x8284
#endif

#ifndef GL_STENCIL_COMPONENTS
#define GL_STENCIL_COMPONENTS 0x8285
#endif

#ifndef GL_COLOR_RENDERABLE
#define GL_COLOR_RENDERABLE 0x8286
#endif

#ifndef GL_DEPTH_RENDERABLE
#define GL_DEPTH_RENDERABLE 0x8287
#endif

#ifndef GL_STENCIL_RENDERABLE
#define GL_STENCIL_RENDERABLE 0x8288
#endif

#ifndef GL_FRAMEBUFFER_RENDERABLE
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif

#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif

#ifndef GL_FRAMEBUFFER_BLEND
#define GL_FRAMEBUFFER_BLEND 0x828B
#endif

#ifndef GL_READ_PIXELS
#define GL_READ_PIXELS 0x828C
#endif

#ifndef GL_READ_PIXELS_FORMAT
#define GL_READ_PIXELS_FORMAT 0x828D
#endif

#ifndef GL_READ_PIXELS_TYPE
#define GL_READ_PIXELS_TYPE 0x828E
#endif

#ifndef GL_TEXTURE_IMAGE_FORMAT
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif

#ifndef GL_TEXTURE_IMAGE_TYPE
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif

#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif

#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif

#ifndef GL_MIPMAP
#define GL_MIPMAP 0x8293
#endif

#ifndef GL_MANUAL_GENERATE_MIPMAP
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif

#ifndef GL_AUTO_GENERATE_MIPMAP
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif

#ifndef GL_COLOR_ENCODING
#define GL_COLOR_ENCODING 0x8296
#endif

#ifndef GL_SRGB_READ
#define GL_SRGB_READ 0x8297
#endif

#ifndef GL_SRGB_WRITE
#define GL_SRGB_WRITE 0x8298
#endif

#ifndef GL_FILTER
#define GL_FILTER 0x829A
#endif

#ifndef GL_VERTEX_TEXTURE
#define GL_VERTEX_TEXTURE 0x829B
#endif

#ifndef GL_TESS_CONTROL_TEXTURE
#define GL_TESS_CONTROL_TEXTURE 0x829C
#endif

#ifndef GL_TESS_EVALUATION_TEXTURE
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif

#ifndef GL_GEOMETRY_TEXTURE
#define GL_GEOMETRY_TEXTURE 0x829E
#endif

#ifndef GL_FRAGMENT_TEXTURE
#define GL_FRAGMENT_TEXTURE 0x829F
#endif

#ifndef GL_COMPUTE_TEXTURE
#define GL_COMPUTE_TEXTURE 0x82A0
#endif

#ifndef GL_TEXTURE_SHADOW
#define GL_TEXTURE_SHADOW 0x82A1
#endif

#ifndef GL_TEXTURE_GATHER
#define GL_TEXTURE_GATHER 0x82A2
#endif

#ifndef GL_TEXTURE_GATHER_SHADOW
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif

#ifndef GL_SHADER_IMAGE_LOAD
#define GL_SHADER_IMAGE_LOAD 0x82A4
#endif

#ifndef GL_SHADER_IMAGE_STORE
#define GL_SHADER_IMAGE_STORE 0x82A5
#endif

#ifndef GL_SHADER_IMAGE_ATOMIC
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif

#ifndef GL_IMAGE_TEXEL_SIZE
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif

#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif

#ifndef GL_IMAGE_PIXEL_FORMAT
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif

#ifndef GL_IMAGE_PIXEL_TYPE
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif

#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif

#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif

#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif

#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif

#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif

#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif

#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif

#ifndef GL_CLEAR_BUFFER
#define GL_CLEAR_BUFFER 0x82B4
#endif

#ifndef GL_TEXTURE_VIEW
#define GL_TEXTURE_VIEW 0x82B5
#endif

#ifndef GL_VIEW_COMPATIBILITY_CLASS
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif

#ifndef GL_FULL_SUPPORT
#define GL_FULL_SUPPORT 0x82B7
#endif

#ifndef GL_CAVEAT_SUPPORT
#define GL_CAVEAT_SUPPORT 0x82B8
#endif

#ifndef GL_IMAGE_CLASS_4_X_32
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif

#ifndef GL_IMAGE_CLASS_2_X_32
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif

#ifndef GL_IMAGE_CLASS_1_X_32
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif

#ifndef GL_IMAGE_CLASS_4_X_16
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif

#ifndef GL_IMAGE_CLASS_2_X_16
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif

#ifndef GL_IMAGE_CLASS_1_X_16
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif

#ifndef GL_IMAGE_CLASS_4_X_8
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif

#ifndef GL_IMAGE_CLASS_2_X_8
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif

#ifndef GL_IMAGE_CLASS_1_X_8
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif

#ifndef GL_IMAGE_CLASS_11_11_10
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif

#ifndef GL_IMAGE_CLASS_10_10_10_2
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif

#ifndef GL_VIEW_CLASS_128_BITS
#define GL_VIEW_CLASS_128_BITS 0x82C4
#endif

#ifndef GL_VIEW_CLASS_96_BITS
#define GL_VIEW_CLASS_96_BITS 0x82C5
#endif

#ifndef GL_VIEW_CLASS_64_BITS
#define GL_VIEW_CLASS_64_BITS 0x82C6
#endif

#ifndef GL_VIEW_CLASS_48_BITS
#define GL_VIEW_CLASS_48_BITS 0x82C7
#endif

#ifndef GL_VIEW_CLASS_32_BITS
#define GL_VIEW_CLASS_32_BITS 0x82C8
#endif

#ifndef GL_VIEW_CLASS_24_BITS
#define GL_VIEW_CLASS_24_BITS 0x82C9
#endif

#ifndef GL_VIEW_CLASS_16_BITS
#define GL_VIEW_CLASS_16_BITS 0x82CA
#endif

#ifndef GL_VIEW_CLASS_8_BITS
#define GL_VIEW_CLASS_8_BITS 0x82CB
#endif

#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif

#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif

#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif

#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif

#ifndef GL_VIEW_CLASS_RGTC1_RED
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif

#ifndef GL_VIEW_CLASS_RGTC2_RG
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif

#ifndef GL_VIEW_CLASS_BPTC_UNORM
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif

#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif

#ifndef GL_UNIFORM
#define GL_UNIFORM 0x92E1
#endif

#ifndef GL_UNIFORM_BLOCK
#define GL_UNIFORM_BLOCK 0x92E2
#endif

#ifndef GL_PROGRAM_INPUT
#define GL_PROGRAM_INPUT 0x92E3
#endif

#ifndef GL_PROGRAM_OUTPUT
#define GL_PROGRAM_OUTPUT 0x92E4
#endif

#ifndef GL_BUFFER_VARIABLE
#define GL_BUFFER_VARIABLE 0x92E5
#endif

#ifndef GL_SHADER_STORAGE_BLOCK
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif

#ifndef GL_VERTEX_SUBROUTINE
#define GL_VERTEX_SUBROUTINE 0x92E8
#endif

#ifndef GL_TESS_CONTROL_SUBROUTINE
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif

#ifndef GL_TESS_EVALUATION_SUBROUTINE
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif

#ifndef GL_GEOMETRY_SUBROUTINE
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif

#ifndef GL_FRAGMENT_SUBROUTINE
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif

#ifndef GL_COMPUTE_SUBROUTINE
#define GL_COMPUTE_SUBROUTINE 0x92ED
#endif

#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif

#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif

#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif

#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif

#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif

#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif

#ifndef GL_ACTIVE_RESOURCES
#define GL_ACTIVE_RESOURCES 0x92F5
#endif

#ifndef GL_MAX_NAME_LENGTH
#define GL_MAX_NAME_LENGTH 0x92F6
#endif

#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif

#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif

#ifndef GL_NAME_LENGTH
#define GL_NAME_LENGTH 0x92F9
#endif

#ifndef GL_TYPE
#define GL_TYPE 0x92FA
#endif

#ifndef GL_ARRAY_SIZE
#define GL_ARRAY_SIZE 0x92FB
#endif

#ifndef GL_OFFSET
#define GL_OFFSET 0x92FC
#endif

#ifndef GL_BLOCK_INDEX
#define GL_BLOCK_INDEX 0x92FD
#endif

#ifndef GL_ARRAY_STRIDE
#define GL_ARRAY_STRIDE 0x92FE
#endif

#ifndef GL_MATRIX_STRIDE
#define GL_MATRIX_STRIDE 0x92FF
#endif

#ifndef GL_IS_ROW_MAJOR
#define GL_IS_ROW_MAJOR 0x9300
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif

#ifndef GL_BUFFER_BINDING
#define GL_BUFFER_BINDING 0x9302
#endif

#ifndef GL_BUFFER_DATA_SIZE
#define GL_BUFFER_DATA_SIZE 0x9303
#endif

#ifndef GL_NUM_ACTIVE_VARIABLES
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif

#ifndef GL_ACTIVE_VARIABLES
#define GL_ACTIVE_VARIABLES 0x9305
#endif

#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif

#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif

#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif

#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif

#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif

#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif

#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif

#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif

#ifndef GL_LOCATION
#define GL_LOCATION 0x930E
#endif

#ifndef GL_LOCATION_INDEX
#define GL_LOCATION_INDEX 0x930F
#endif

#ifndef GL_IS_PER_PATCH
#define GL_IS_PER_PATCH 0x92E7
#endif

#ifndef GL_SHADER_STORAGE_BUFFER
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_BINDING
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_START
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_SIZE
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#endif

#ifndef GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#endif

#ifndef GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#endif

#ifndef GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#endif

#ifndef GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#endif

#ifndef GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#endif

#ifndef GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#endif

#ifndef GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#endif

#ifndef GL_MAX_SHADER_STORAGE_BLOCK_SIZE
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#endif

#ifndef GL_SHADER_STORAGE_BARRIER_BIT
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#endif

#ifndef GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#endif

#ifndef GL_DEPTH_STENCIL_TEXTURE_MODE
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#endif

#ifndef GL_TEXTURE_BUFFER_SIZE
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LEVEL
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LEVELS
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LAYER
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LAYERS
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#endif

#ifndef GL_TEXTURE_IMMUTABLE_LEVELS
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#endif

#ifndef GL_VERTEX_ATTRIB_BINDING
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif

#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif

#ifndef GL_VERTEX_BINDING_DIVISOR
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif

#ifndef GL_VERTEX_BINDING_OFFSET
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif

#ifndef GL_VERTEX_BINDING_STRIDE
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif

#ifndef GL_VERTEX_BINDING_BUFFER
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#endif

#ifdef glClearBufferData
#undef glClearBufferData
#endif
#ifdef PFNGLCLEARBUFFERDATAPROC
#undef PFNGLCLEARBUFFERDATAPROC
#endif
typedef void  (*PFNGLCLEARBUFFERDATAPROC)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);

#ifdef glClearBufferSubData
#undef glClearBufferSubData
#endif
#ifdef PFNGLCLEARBUFFERSUBDATAPROC
#undef PFNGLCLEARBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);

#ifdef glDispatchCompute
#undef glDispatchCompute
#endif
#ifdef PFNGLDISPATCHCOMPUTEPROC
#undef PFNGLDISPATCHCOMPUTEPROC
#endif
typedef void  (*PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);

#ifdef glDispatchComputeIndirect
#undef glDispatchComputeIndirect
#endif
#ifdef PFNGLDISPATCHCOMPUTEINDIRECTPROC
#undef PFNGLDISPATCHCOMPUTEINDIRECTPROC
#endif
typedef void  (*PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);

#ifdef glCopyImageSubData
#undef glCopyImageSubData
#endif
#ifdef PFNGLCOPYIMAGESUBDATAPROC
#undef PFNGLCOPYIMAGESUBDATAPROC
#endif
typedef void  (*PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);

#ifdef glFramebufferParameteri
#undef glFramebufferParameteri
#endif
#ifdef PFNGLFRAMEBUFFERPARAMETERIPROC
#undef PFNGLFRAMEBUFFERPARAMETERIPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glGetFramebufferParameteriv
#undef glGetFramebufferParameteriv
#endif
#ifdef PFNGLGETFRAMEBUFFERPARAMETERIVPROC
#undef PFNGLGETFRAMEBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetInternalformati64v
#undef glGetInternalformati64v
#endif
#ifdef PFNGLGETINTERNALFORMATI64VPROC
#undef PFNGLGETINTERNALFORMATI64VPROC
#endif
typedef void  (*PFNGLGETINTERNALFORMATI64VPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);

#ifdef glInvalidateTexSubImage
#undef glInvalidateTexSubImage
#endif
#ifdef PFNGLINVALIDATETEXSUBIMAGEPROC
#undef PFNGLINVALIDATETEXSUBIMAGEPROC
#endif
typedef void  (*PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);

#ifdef glInvalidateTexImage
#undef glInvalidateTexImage
#endif
#ifdef PFNGLINVALIDATETEXIMAGEPROC
#undef PFNGLINVALIDATETEXIMAGEPROC
#endif
typedef void  (*PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);

#ifdef glInvalidateBufferSubData
#undef glInvalidateBufferSubData
#endif
#ifdef PFNGLINVALIDATEBUFFERSUBDATAPROC
#undef PFNGLINVALIDATEBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);

#ifdef glInvalidateBufferData
#undef glInvalidateBufferData
#endif
#ifdef PFNGLINVALIDATEBUFFERDATAPROC
#undef PFNGLINVALIDATEBUFFERDATAPROC
#endif
typedef void  (*PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);

#ifdef glInvalidateFramebuffer
#undef glInvalidateFramebuffer
#endif
#ifdef PFNGLINVALIDATEFRAMEBUFFERPROC
#undef PFNGLINVALIDATEFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments);

#ifdef glInvalidateSubFramebuffer
#undef glInvalidateSubFramebuffer
#endif
#ifdef PFNGLINVALIDATESUBFRAMEBUFFERPROC
#undef PFNGLINVALIDATESUBFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glMultiDrawArraysIndirect
#undef glMultiDrawArraysIndirect
#endif
#ifdef PFNGLMULTIDRAWARRAYSINDIRECTPROC
#undef PFNGLMULTIDRAWARRAYSINDIRECTPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);

#ifdef glMultiDrawElementsIndirect
#undef glMultiDrawElementsIndirect
#endif
#ifdef PFNGLMULTIDRAWELEMENTSINDIRECTPROC
#undef PFNGLMULTIDRAWELEMENTSINDIRECTPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);

#ifdef glGetProgramInterfaceiv
#undef glGetProgramInterfaceiv
#endif
#ifdef PFNGLGETPROGRAMINTERFACEIVPROC
#undef PFNGLGETPROGRAMINTERFACEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);

#ifdef glGetProgramResourceIndex
#undef glGetProgramResourceIndex
#endif
#ifdef PFNGLGETPROGRAMRESOURCEINDEXPROC
#undef PFNGLGETPROGRAMRESOURCEINDEXPROC
#endif
typedef GLuint  (*PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar *name);

#ifdef glGetProgramResourceName
#undef glGetProgramResourceName
#endif
#ifdef PFNGLGETPROGRAMRESOURCENAMEPROC
#undef PFNGLGETPROGRAMRESOURCENAMEPROC
#endif
typedef void  (*PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);

#ifdef glGetProgramResourceiv
#undef glGetProgramResourceiv
#endif
#ifdef PFNGLGETPROGRAMRESOURCEIVPROC
#undef PFNGLGETPROGRAMRESOURCEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);

#ifdef glGetProgramResourceLocation
#undef glGetProgramResourceLocation
#endif
#ifdef PFNGLGETPROGRAMRESOURCELOCATIONPROC
#undef PFNGLGETPROGRAMRESOURCELOCATIONPROC
#endif
typedef GLint  (*PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar *name);

#ifdef glGetProgramResourceLocationIndex
#undef glGetProgramResourceLocationIndex
#endif
#ifdef PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
#undef PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
#endif
typedef GLint  (*PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program, GLenum programInterface, const GLchar *name);

#ifdef glShaderStorageBlockBinding
#undef glShaderStorageBlockBinding
#endif
#ifdef PFNGLSHADERSTORAGEBLOCKBINDINGPROC
#undef PFNGLSHADERSTORAGEBLOCKBINDINGPROC
#endif
typedef void  (*PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);

#ifdef glTexBufferRange
#undef glTexBufferRange
#endif
#ifdef PFNGLTEXBUFFERRANGEPROC
#undef PFNGLTEXBUFFERRANGEPROC
#endif
typedef void  (*PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glTexStorage2DMultisample
#undef glTexStorage2DMultisample
#endif
#ifdef PFNGLTEXSTORAGE2DMULTISAMPLEPROC
#undef PFNGLTEXSTORAGE2DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);

#ifdef glTexStorage3DMultisample
#undef glTexStorage3DMultisample
#endif
#ifdef PFNGLTEXSTORAGE3DMULTISAMPLEPROC
#undef PFNGLTEXSTORAGE3DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

#ifdef glTextureView
#undef glTextureView
#endif
#ifdef PFNGLTEXTUREVIEWPROC
#undef PFNGLTEXTUREVIEWPROC
#endif
typedef void  (*PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);

#ifdef glBindVertexBuffer
#undef glBindVertexBuffer
#endif
#ifdef PFNGLBINDVERTEXBUFFERPROC
#undef PFNGLBINDVERTEXBUFFERPROC
#endif
typedef void  (*PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);

#ifdef glVertexAttribFormat
#undef glVertexAttribFormat
#endif
#ifdef PFNGLVERTEXATTRIBFORMATPROC
#undef PFNGLVERTEXATTRIBFORMATPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);

#ifdef glVertexAttribIFormat
#undef glVertexAttribIFormat
#endif
#ifdef PFNGLVERTEXATTRIBIFORMATPROC
#undef PFNGLVERTEXATTRIBIFORMATPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexAttribLFormat
#undef glVertexAttribLFormat
#endif
#ifdef PFNGLVERTEXATTRIBLFORMATPROC
#undef PFNGLVERTEXATTRIBLFORMATPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexAttribBinding
#undef glVertexAttribBinding
#endif
#ifdef PFNGLVERTEXATTRIBBINDINGPROC
#undef PFNGLVERTEXATTRIBBINDINGPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);

#ifdef glVertexBindingDivisor
#undef glVertexBindingDivisor
#endif
#ifdef PFNGLVERTEXBINDINGDIVISORPROC
#undef PFNGLVERTEXBINDINGDIVISORPROC
#endif
typedef void  (*PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);

#ifdef glDebugMessageControl
#undef glDebugMessageControl
#endif
#ifdef PFNGLDEBUGMESSAGECONTROLPROC
#undef PFNGLDEBUGMESSAGECONTROLPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);

#ifdef glDebugMessageInsert
#undef glDebugMessageInsert
#endif
#ifdef PFNGLDEBUGMESSAGEINSERTPROC
#undef PFNGLDEBUGMESSAGEINSERTPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);

#ifdef glDebugMessageCallback
#undef glDebugMessageCallback
#endif
#ifdef PFNGLDEBUGMESSAGECALLBACKPROC
#undef PFNGLDEBUGMESSAGECALLBACKPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void *userParam);

#ifdef glGetDebugMessageLog
#undef glGetDebugMessageLog
#endif
#ifdef PFNGLGETDEBUGMESSAGELOGPROC
#undef PFNGLGETDEBUGMESSAGELOGPROC
#endif
typedef GLuint  (*PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);

#ifdef glPushDebugGroup
#undef glPushDebugGroup
#endif
#ifdef PFNGLPUSHDEBUGGROUPPROC
#undef PFNGLPUSHDEBUGGROUPPROC
#endif
typedef void  (*PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar *message);

#ifdef glPopDebugGroup
#undef glPopDebugGroup
#endif
#ifdef PFNGLPOPDEBUGGROUPPROC
#undef PFNGLPOPDEBUGGROUPPROC
#endif
typedef void  (*PFNGLPOPDEBUGGROUPPROC)(void);

#ifdef glObjectLabel
#undef glObjectLabel
#endif
#ifdef PFNGLOBJECTLABELPROC
#undef PFNGLOBJECTLABELPROC
#endif
typedef void  (*PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);

#ifdef glGetObjectLabel
#undef glGetObjectLabel
#endif
#ifdef PFNGLGETOBJECTLABELPROC
#undef PFNGLGETOBJECTLABELPROC
#endif
typedef void  (*PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);

#ifdef glObjectPtrLabel
#undef glObjectPtrLabel
#endif
#ifdef PFNGLOBJECTPTRLABELPROC
#undef PFNGLOBJECTPTRLABELPROC
#endif
typedef void  (*PFNGLOBJECTPTRLABELPROC)(const void *ptr, GLsizei length, const GLchar *label);

#ifdef glGetObjectPtrLabel
#undef glGetObjectPtrLabel
#endif
#ifdef PFNGLGETOBJECTPTRLABELPROC
#undef PFNGLGETOBJECTPTRLABELPROC
#endif
typedef void  (*PFNGLGETOBJECTPTRLABELPROC)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);

#ifdef glGetPointerv
#undef glGetPointerv
#endif
#ifdef PFNGLGETPOINTERVPROC
#undef PFNGLGETPOINTERVPROC
#endif
typedef void  (*PFNGLGETPOINTERVPROC)(GLenum pname, void **params);

#ifndef GL_DISPLAY_LIST
#define GL_DISPLAY_LIST 0x82E7
#endif

#ifdef glGetPointerv
#undef glGetPointerv
#endif
#ifdef PFNGLGETPOINTERVPROC
#undef PFNGLGETPOINTERVPROC
#endif
typedef void  (*PFNGLGETPOINTERVPROC)(GLenum pname, void **params);

#ifndef GL_STACK_UNDERFLOW
#define GL_STACK_UNDERFLOW 0x0504
#endif

#ifndef GL_STACK_OVERFLOW
#define GL_STACK_OVERFLOW 0x0503
#endif

#ifndef GL_VERSION_4_4
#define GL_VERSION_4_4 1
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_STRIDE
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#endif

#ifndef GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#endif

#ifndef GL_TEXTURE_BUFFER_BINDING
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#endif

#ifdef glBufferStorage
#undef glBufferStorage
#endif
#ifdef PFNGLBUFFERSTORAGEPROC
#undef PFNGLBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);

#ifndef GL_MAP_READ_BIT
#define GL_MAP_READ_BIT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT
#define GL_MAP_WRITE_BIT 0x0002
#endif

#ifndef GL_MAP_PERSISTENT_BIT
#define GL_MAP_PERSISTENT_BIT 0x0040
#endif

#ifndef GL_MAP_COHERENT_BIT
#define GL_MAP_COHERENT_BIT 0x0080
#endif

#ifndef GL_DYNAMIC_STORAGE_BIT
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#endif

#ifndef GL_CLIENT_STORAGE_BIT
#define GL_CLIENT_STORAGE_BIT 0x0200
#endif

#ifndef GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#endif

#ifndef GL_BUFFER_IMMUTABLE_STORAGE
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#endif

#ifndef GL_BUFFER_STORAGE_FLAGS
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#endif

#ifdef glClearTexImage
#undef glClearTexImage
#endif
#ifdef PFNGLCLEARTEXIMAGEPROC
#undef PFNGLCLEARTEXIMAGEPROC
#endif
typedef void  (*PFNGLCLEARTEXIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);

#ifdef glClearTexSubImage
#undef glClearTexSubImage
#endif
#ifdef PFNGLCLEARTEXSUBIMAGEPROC
#undef PFNGLCLEARTEXSUBIMAGEPROC
#endif
typedef void  (*PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);

#ifndef GL_CLEAR_TEXTURE
#define GL_CLEAR_TEXTURE 0x9365
#endif

#ifndef GL_LOCATION_COMPONENT
#define GL_LOCATION_COMPONENT 0x934A
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_INDEX
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#endif

#ifdef glBindBuffersBase
#undef glBindBuffersBase
#endif
#ifdef PFNGLBINDBUFFERSBASEPROC
#undef PFNGLBINDBUFFERSBASEPROC
#endif
typedef void  (*PFNGLBINDBUFFERSBASEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);

#ifdef glBindBuffersRange
#undef glBindBuffersRange
#endif
#ifdef PFNGLBINDBUFFERSRANGEPROC
#undef PFNGLBINDBUFFERSRANGEPROC
#endif
typedef void  (*PFNGLBINDBUFFERSRANGEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);

#ifdef glBindTextures
#undef glBindTextures
#endif
#ifdef PFNGLBINDTEXTURESPROC
#undef PFNGLBINDTEXTURESPROC
#endif
typedef void  (*PFNGLBINDTEXTURESPROC)(GLuint first, GLsizei count, const GLuint *textures);

#ifdef glBindSamplers
#undef glBindSamplers
#endif
#ifdef PFNGLBINDSAMPLERSPROC
#undef PFNGLBINDSAMPLERSPROC
#endif
typedef void  (*PFNGLBINDSAMPLERSPROC)(GLuint first, GLsizei count, const GLuint *samplers);

#ifdef glBindImageTextures
#undef glBindImageTextures
#endif
#ifdef PFNGLBINDIMAGETEXTURESPROC
#undef PFNGLBINDIMAGETEXTURESPROC
#endif
typedef void  (*PFNGLBINDIMAGETEXTURESPROC)(GLuint first, GLsizei count, const GLuint *textures);

#ifdef glBindVertexBuffers
#undef glBindVertexBuffers
#endif
#ifdef PFNGLBINDVERTEXBUFFERSPROC
#undef PFNGLBINDVERTEXBUFFERSPROC
#endif
typedef void  (*PFNGLBINDVERTEXBUFFERSPROC)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);

#ifndef GL_QUERY_BUFFER
#define GL_QUERY_BUFFER 0x9192
#endif

#ifndef GL_QUERY_BUFFER_BARRIER_BIT
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#endif

#ifndef GL_QUERY_BUFFER_BINDING
#define GL_QUERY_BUFFER_BINDING 0x9193
#endif

#ifndef GL_QUERY_RESULT_NO_WAIT
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#endif

#ifndef GL_MIRROR_CLAMP_TO_EDGE
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#endif

#ifndef GL_STENCIL_INDEX
#define GL_STENCIL_INDEX 0x1901
#endif

#ifndef GL_STENCIL_INDEX8
#define GL_STENCIL_INDEX8 0x8D48
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#endif

#ifndef GL_VERSION_4_5
#define GL_VERSION_4_5 1
#endif

#ifndef GL_CONTEXT_LOST
#define GL_CONTEXT_LOST 0x0507
#endif

#ifdef glClipControl
#undef glClipControl
#endif
#ifdef PFNGLCLIPCONTROLPROC
#undef PFNGLCLIPCONTROLPROC
#endif
typedef void  (*PFNGLCLIPCONTROLPROC)(GLenum origin, GLenum depth);

#ifndef GL_LOWER_LEFT
#define GL_LOWER_LEFT 0x8CA1
#endif

#ifndef GL_UPPER_LEFT
#define GL_UPPER_LEFT 0x8CA2
#endif

#ifndef GL_NEGATIVE_ONE_TO_ONE
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#endif

#ifndef GL_ZERO_TO_ONE
#define GL_ZERO_TO_ONE 0x935F
#endif

#ifndef GL_CLIP_ORIGIN
#define GL_CLIP_ORIGIN 0x935C
#endif

#ifndef GL_CLIP_DEPTH_MODE
#define GL_CLIP_DEPTH_MODE 0x935D
#endif

#ifndef GL_QUERY_WAIT_INVERTED
#define GL_QUERY_WAIT_INVERTED 0x8E17
#endif

#ifndef GL_QUERY_NO_WAIT_INVERTED
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#endif

#ifndef GL_QUERY_BY_REGION_WAIT_INVERTED
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#endif

#ifndef GL_QUERY_BY_REGION_NO_WAIT_INVERTED
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#endif

#ifndef GL_MAX_CULL_DISTANCES
#define GL_MAX_CULL_DISTANCES 0x82F9
#endif

#ifndef GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#endif

#ifdef glCreateTransformFeedbacks
#undef glCreateTransformFeedbacks
#endif
#ifdef PFNGLCREATETRANSFORMFEEDBACKSPROC
#undef PFNGLCREATETRANSFORMFEEDBACKSPROC
#endif
typedef void  (*PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint *ids);

#ifdef glTransformFeedbackBufferBase
#undef glTransformFeedbackBufferBase
#endif
#ifdef PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
#undef PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb, GLuint index, GLuint buffer);

#ifdef glTransformFeedbackBufferRange
#undef glTransformFeedbackBufferRange
#endif
#ifdef PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
#undef PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glGetTransformFeedbackiv
#undef glGetTransformFeedbackiv
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKIVPROC
#undef PFNGLGETTRANSFORMFEEDBACKIVPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb, GLenum pname, GLint *param);

#ifdef glGetTransformFeedbacki_v
#undef glGetTransformFeedbacki_v
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKI_VPROC
#undef PFNGLGETTRANSFORMFEEDBACKI_VPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint *param);

#ifdef glGetTransformFeedbacki64_v
#undef glGetTransformFeedbacki64_v
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKI64_VPROC
#undef PFNGLGETTRANSFORMFEEDBACKI64_VPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);

#ifdef glCreateBuffers
#undef glCreateBuffers
#endif
#ifdef PFNGLCREATEBUFFERSPROC
#undef PFNGLCREATEBUFFERSPROC
#endif
typedef void  (*PFNGLCREATEBUFFERSPROC)(GLsizei n, GLuint *buffers);

#ifdef glNamedBufferStorage
#undef glNamedBufferStorage
#endif
#ifdef PFNGLNAMEDBUFFERSTORAGEPROC
#undef PFNGLNAMEDBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);

#ifdef glNamedBufferData
#undef glNamedBufferData
#endif
#ifdef PFNGLNAMEDBUFFERDATAPROC
#undef PFNGLNAMEDBUFFERDATAPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);

#ifdef glNamedBufferSubData
#undef glNamedBufferSubData
#endif
#ifdef PFNGLNAMEDBUFFERSUBDATAPROC
#undef PFNGLNAMEDBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);

#ifdef glCopyNamedBufferSubData
#undef glCopyNamedBufferSubData
#endif
#ifdef PFNGLCOPYNAMEDBUFFERSUBDATAPROC
#undef PFNGLCOPYNAMEDBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

#ifdef glClearNamedBufferData
#undef glClearNamedBufferData
#endif
#ifdef PFNGLCLEARNAMEDBUFFERDATAPROC
#undef PFNGLCLEARNAMEDBUFFERDATAPROC
#endif
typedef void  (*PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);

#ifdef glClearNamedBufferSubData
#undef glClearNamedBufferSubData
#endif
#ifdef PFNGLCLEARNAMEDBUFFERSUBDATAPROC
#undef PFNGLCLEARNAMEDBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);

#ifdef glMapNamedBuffer
#undef glMapNamedBuffer
#endif
#ifdef PFNGLMAPNAMEDBUFFERPROC
#undef PFNGLMAPNAMEDBUFFERPROC
#endif
typedef void * (*PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer, GLenum access);

#ifdef glMapNamedBufferRange
#undef glMapNamedBufferRange
#endif
#ifdef PFNGLMAPNAMEDBUFFERRANGEPROC
#undef PFNGLMAPNAMEDBUFFERRANGEPROC
#endif
typedef void * (*PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);

#ifdef glUnmapNamedBuffer
#undef glUnmapNamedBuffer
#endif
#ifdef PFNGLUNMAPNAMEDBUFFERPROC
#undef PFNGLUNMAPNAMEDBUFFERPROC
#endif
typedef GLboolean  (*PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);

#ifdef glFlushMappedNamedBufferRange
#undef glFlushMappedNamedBufferRange
#endif
#ifdef PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
#undef PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);

#ifdef glGetNamedBufferParameteriv
#undef glGetNamedBufferParameteriv
#endif
#ifdef PFNGLGETNAMEDBUFFERPARAMETERIVPROC
#undef PFNGLGETNAMEDBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer, GLenum pname, GLint *params);

#ifdef glGetNamedBufferParameteri64v
#undef glGetNamedBufferParameteri64v
#endif
#ifdef PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
#undef PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer, GLenum pname, GLint64 *params);

#ifdef glGetNamedBufferPointerv
#undef glGetNamedBufferPointerv
#endif
#ifdef PFNGLGETNAMEDBUFFERPOINTERVPROC
#undef PFNGLGETNAMEDBUFFERPOINTERVPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer, GLenum pname, void **params);

#ifdef glGetNamedBufferSubData
#undef glGetNamedBufferSubData
#endif
#ifdef PFNGLGETNAMEDBUFFERSUBDATAPROC
#undef PFNGLGETNAMEDBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);

#ifdef glCreateFramebuffers
#undef glCreateFramebuffers
#endif
#ifdef PFNGLCREATEFRAMEBUFFERSPROC
#undef PFNGLCREATEFRAMEBUFFERSPROC
#endif
typedef void  (*PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);

#ifdef glNamedFramebufferRenderbuffer
#undef glNamedFramebufferRenderbuffer
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
#undef PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);

#ifdef glNamedFramebufferParameteri
#undef glNamedFramebufferParameteri
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
#undef PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer, GLenum pname, GLint param);

#ifdef glNamedFramebufferTexture
#undef glNamedFramebufferTexture
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);

#ifdef glNamedFramebufferTextureLayer
#undef glNamedFramebufferTextureLayer
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifdef glNamedFramebufferDrawBuffer
#undef glNamedFramebufferDrawBuffer
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
#undef PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer, GLenum buf);

#ifdef glNamedFramebufferDrawBuffers
#undef glNamedFramebufferDrawBuffers
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
#undef PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer, GLsizei n, const GLenum *bufs);

#ifdef glNamedFramebufferReadBuffer
#undef glNamedFramebufferReadBuffer
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
#undef PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer, GLenum src);

#ifdef glInvalidateNamedFramebufferData
#undef glInvalidateNamedFramebufferData
#endif
#ifdef PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
#undef PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
#endif
typedef void  (*PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);

#ifdef glInvalidateNamedFramebufferSubData
#undef glInvalidateNamedFramebufferSubData
#endif
#ifdef PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
#undef PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glClearNamedFramebufferiv
#undef glClearNamedFramebufferiv
#endif
#ifdef PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
#undef PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
#endif
typedef void  (*PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);

#ifdef glClearNamedFramebufferuiv
#undef glClearNamedFramebufferuiv
#endif
#ifdef PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
#undef PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
#endif
typedef void  (*PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);

#ifdef glClearNamedFramebufferfv
#undef glClearNamedFramebufferfv
#endif
#ifdef PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
#undef PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
#endif
typedef void  (*PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);

#ifdef glClearNamedFramebufferfi
#undef glClearNamedFramebufferfi
#endif
#ifdef PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
#undef PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
#endif
typedef void  (*PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);

#ifdef glBlitNamedFramebuffer
#undef glBlitNamedFramebuffer
#endif
#ifdef PFNGLBLITNAMEDFRAMEBUFFERPROC
#undef PFNGLBLITNAMEDFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#ifdef glCheckNamedFramebufferStatus
#undef glCheckNamedFramebufferStatus
#endif
#ifdef PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
#undef PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
#endif
typedef GLenum  (*PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer, GLenum target);

#ifdef glGetNamedFramebufferParameteriv
#undef glGetNamedFramebufferParameteriv
#endif
#ifdef PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
#undef PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer, GLenum pname, GLint *param);

#ifdef glGetNamedFramebufferAttachmentParameteriv
#undef glGetNamedFramebufferAttachmentParameteriv
#endif
#ifdef PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#undef PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);

#ifdef glCreateRenderbuffers
#undef glCreateRenderbuffers
#endif
#ifdef PFNGLCREATERENDERBUFFERSPROC
#undef PFNGLCREATERENDERBUFFERSPROC
#endif
typedef void  (*PFNGLCREATERENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);

#ifdef glNamedRenderbufferStorage
#undef glNamedRenderbufferStorage
#endif
#ifdef PFNGLNAMEDRENDERBUFFERSTORAGEPROC
#undef PFNGLNAMEDRENDERBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glNamedRenderbufferStorageMultisample
#undef glNamedRenderbufferStorageMultisample
#endif
#ifdef PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
#undef PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
#endif
typedef void  (*PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glGetNamedRenderbufferParameteriv
#undef glGetNamedRenderbufferParameteriv
#endif
#ifdef PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
#undef PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer, GLenum pname, GLint *params);

#ifdef glCreateTextures
#undef glCreateTextures
#endif
#ifdef PFNGLCREATETEXTURESPROC
#undef PFNGLCREATETEXTURESPROC
#endif
typedef void  (*PFNGLCREATETEXTURESPROC)(GLenum target, GLsizei n, GLuint *textures);

#ifdef glTextureBuffer
#undef glTextureBuffer
#endif
#ifdef PFNGLTEXTUREBUFFERPROC
#undef PFNGLTEXTUREBUFFERPROC
#endif
typedef void  (*PFNGLTEXTUREBUFFERPROC)(GLuint texture, GLenum internalformat, GLuint buffer);

#ifdef glTextureBufferRange
#undef glTextureBufferRange
#endif
#ifdef PFNGLTEXTUREBUFFERRANGEPROC
#undef PFNGLTEXTUREBUFFERRANGEPROC
#endif
typedef void  (*PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glTextureStorage1D
#undef glTextureStorage1D
#endif
#ifdef PFNGLTEXTURESTORAGE1DPROC
#undef PFNGLTEXTURESTORAGE1DPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE1DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);

#ifdef glTextureStorage2D
#undef glTextureStorage2D
#endif
#ifdef PFNGLTEXTURESTORAGE2DPROC
#undef PFNGLTEXTURESTORAGE2DPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE2DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glTextureStorage3D
#undef glTextureStorage3D
#endif
#ifdef PFNGLTEXTURESTORAGE3DPROC
#undef PFNGLTEXTURESTORAGE3DPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE3DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

#ifdef glTextureStorage2DMultisample
#undef glTextureStorage2DMultisample
#endif
#ifdef PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
#undef PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);

#ifdef glTextureStorage3DMultisample
#undef glTextureStorage3DMultisample
#endif
#ifdef PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
#undef PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

#ifdef glTextureSubImage1D
#undef glTextureSubImage1D
#endif
#ifdef PFNGLTEXTURESUBIMAGE1DPROC
#undef PFNGLTEXTURESUBIMAGE1DPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);

#ifdef glTextureSubImage2D
#undef glTextureSubImage2D
#endif
#ifdef PFNGLTEXTURESUBIMAGE2DPROC
#undef PFNGLTEXTURESUBIMAGE2DPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifdef glTextureSubImage3D
#undef glTextureSubImage3D
#endif
#ifdef PFNGLTEXTURESUBIMAGE3DPROC
#undef PFNGLTEXTURESUBIMAGE3DPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);

#ifdef glCompressedTextureSubImage1D
#undef glCompressedTextureSubImage1D
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCompressedTextureSubImage2D
#undef glCompressedTextureSubImage2D
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCompressedTextureSubImage3D
#undef glCompressedTextureSubImage3D
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCopyTextureSubImage1D
#undef glCopyTextureSubImage1D
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE1DPROC
#undef PFNGLCOPYTEXTURESUBIMAGE1DPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);

#ifdef glCopyTextureSubImage2D
#undef glCopyTextureSubImage2D
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE2DPROC
#undef PFNGLCOPYTEXTURESUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glCopyTextureSubImage3D
#undef glCopyTextureSubImage3D
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE3DPROC
#undef PFNGLCOPYTEXTURESUBIMAGE3DPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glTextureParameterf
#undef glTextureParameterf
#endif
#ifdef PFNGLTEXTUREPARAMETERFPROC
#undef PFNGLTEXTUREPARAMETERFPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERFPROC)(GLuint texture, GLenum pname, GLfloat param);

#ifdef glTextureParameterfv
#undef glTextureParameterfv
#endif
#ifdef PFNGLTEXTUREPARAMETERFVPROC
#undef PFNGLTEXTUREPARAMETERFVPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, const GLfloat *param);

#ifdef glTextureParameteri
#undef glTextureParameteri
#endif
#ifdef PFNGLTEXTUREPARAMETERIPROC
#undef PFNGLTEXTUREPARAMETERIPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIPROC)(GLuint texture, GLenum pname, GLint param);

#ifdef glTextureParameterIiv
#undef glTextureParameterIiv
#endif
#ifdef PFNGLTEXTUREPARAMETERIIVPROC
#undef PFNGLTEXTUREPARAMETERIIVPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, const GLint *params);

#ifdef glTextureParameterIuiv
#undef glTextureParameterIuiv
#endif
#ifdef PFNGLTEXTUREPARAMETERIUIVPROC
#undef PFNGLTEXTUREPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, const GLuint *params);

#ifdef glTextureParameteriv
#undef glTextureParameteriv
#endif
#ifdef PFNGLTEXTUREPARAMETERIVPROC
#undef PFNGLTEXTUREPARAMETERIVPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, const GLint *param);

#ifdef glGenerateTextureMipmap
#undef glGenerateTextureMipmap
#endif
#ifdef PFNGLGENERATETEXTUREMIPMAPPROC
#undef PFNGLGENERATETEXTUREMIPMAPPROC
#endif
typedef void  (*PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);

#ifdef glBindTextureUnit
#undef glBindTextureUnit
#endif
#ifdef PFNGLBINDTEXTUREUNITPROC
#undef PFNGLBINDTEXTUREUNITPROC
#endif
typedef void  (*PFNGLBINDTEXTUREUNITPROC)(GLuint unit, GLuint texture);

#ifdef glGetTextureImage
#undef glGetTextureImage
#endif
#ifdef PFNGLGETTEXTUREIMAGEPROC
#undef PFNGLGETTEXTUREIMAGEPROC
#endif
typedef void  (*PFNGLGETTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);

#ifdef glGetCompressedTextureImage
#undef glGetCompressedTextureImage
#endif
#ifdef PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
#undef PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
#endif
typedef void  (*PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);

#ifdef glGetTextureLevelParameterfv
#undef glGetTextureLevelParameterfv
#endif
#ifdef PFNGLGETTEXTURELEVELPARAMETERFVPROC
#undef PFNGLGETTEXTURELEVELPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture, GLint level, GLenum pname, GLfloat *params);

#ifdef glGetTextureLevelParameteriv
#undef glGetTextureLevelParameteriv
#endif
#ifdef PFNGLGETTEXTURELEVELPARAMETERIVPROC
#undef PFNGLGETTEXTURELEVELPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture, GLint level, GLenum pname, GLint *params);

#ifdef glGetTextureParameterfv
#undef glGetTextureParameterfv
#endif
#ifdef PFNGLGETTEXTUREPARAMETERFVPROC
#undef PFNGLGETTEXTUREPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, GLfloat *params);

#ifdef glGetTextureParameterIiv
#undef glGetTextureParameterIiv
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIIVPROC
#undef PFNGLGETTEXTUREPARAMETERIIVPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, GLint *params);

#ifdef glGetTextureParameterIuiv
#undef glGetTextureParameterIuiv
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIUIVPROC
#undef PFNGLGETTEXTUREPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, GLuint *params);

#ifdef glGetTextureParameteriv
#undef glGetTextureParameteriv
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIVPROC
#undef PFNGLGETTEXTUREPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, GLint *params);

#ifdef glCreateVertexArrays
#undef glCreateVertexArrays
#endif
#ifdef PFNGLCREATEVERTEXARRAYSPROC
#undef PFNGLCREATEVERTEXARRAYSPROC
#endif
typedef void  (*PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);

#ifdef glDisableVertexArrayAttrib
#undef glDisableVertexArrayAttrib
#endif
#ifdef PFNGLDISABLEVERTEXARRAYATTRIBPROC
#undef PFNGLDISABLEVERTEXARRAYATTRIBPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);

#ifdef glEnableVertexArrayAttrib
#undef glEnableVertexArrayAttrib
#endif
#ifdef PFNGLENABLEVERTEXARRAYATTRIBPROC
#undef PFNGLENABLEVERTEXARRAYATTRIBPROC
#endif
typedef void  (*PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);

#ifdef glVertexArrayElementBuffer
#undef glVertexArrayElementBuffer
#endif
#ifdef PFNGLVERTEXARRAYELEMENTBUFFERPROC
#undef PFNGLVERTEXARRAYELEMENTBUFFERPROC
#endif
typedef void  (*PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj, GLuint buffer);

#ifdef glVertexArrayVertexBuffer
#undef glVertexArrayVertexBuffer
#endif
#ifdef PFNGLVERTEXARRAYVERTEXBUFFERPROC
#undef PFNGLVERTEXARRAYVERTEXBUFFERPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);

#ifdef glVertexArrayVertexBuffers
#undef glVertexArrayVertexBuffers
#endif
#ifdef PFNGLVERTEXARRAYVERTEXBUFFERSPROC
#undef PFNGLVERTEXARRAYVERTEXBUFFERSPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);

#ifdef glVertexArrayAttribBinding
#undef glVertexArrayAttribBinding
#endif
#ifdef PFNGLVERTEXARRAYATTRIBBINDINGPROC
#undef PFNGLVERTEXARRAYATTRIBBINDINGPROC
#endif
typedef void  (*PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);

#ifdef glVertexArrayAttribFormat
#undef glVertexArrayAttribFormat
#endif
#ifdef PFNGLVERTEXARRAYATTRIBFORMATPROC
#undef PFNGLVERTEXARRAYATTRIBFORMATPROC
#endif
typedef void  (*PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);

#ifdef glVertexArrayAttribIFormat
#undef glVertexArrayAttribIFormat
#endif
#ifdef PFNGLVERTEXARRAYATTRIBIFORMATPROC
#undef PFNGLVERTEXARRAYATTRIBIFORMATPROC
#endif
typedef void  (*PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexArrayAttribLFormat
#undef glVertexArrayAttribLFormat
#endif
#ifdef PFNGLVERTEXARRAYATTRIBLFORMATPROC
#undef PFNGLVERTEXARRAYATTRIBLFORMATPROC
#endif
typedef void  (*PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexArrayBindingDivisor
#undef glVertexArrayBindingDivisor
#endif
#ifdef PFNGLVERTEXARRAYBINDINGDIVISORPROC
#undef PFNGLVERTEXARRAYBINDINGDIVISORPROC
#endif
typedef void  (*PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);

#ifdef glGetVertexArrayiv
#undef glGetVertexArrayiv
#endif
#ifdef PFNGLGETVERTEXARRAYIVPROC
#undef PFNGLGETVERTEXARRAYIVPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj, GLenum pname, GLint *param);

#ifdef glGetVertexArrayIndexediv
#undef glGetVertexArrayIndexediv
#endif
#ifdef PFNGLGETVERTEXARRAYINDEXEDIVPROC
#undef PFNGLGETVERTEXARRAYINDEXEDIVPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);

#ifdef glGetVertexArrayIndexed64iv
#undef glGetVertexArrayIndexed64iv
#endif
#ifdef PFNGLGETVERTEXARRAYINDEXED64IVPROC
#undef PFNGLGETVERTEXARRAYINDEXED64IVPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);

#ifdef glCreateSamplers
#undef glCreateSamplers
#endif
#ifdef PFNGLCREATESAMPLERSPROC
#undef PFNGLCREATESAMPLERSPROC
#endif
typedef void  (*PFNGLCREATESAMPLERSPROC)(GLsizei n, GLuint *samplers);

#ifdef glCreateProgramPipelines
#undef glCreateProgramPipelines
#endif
#ifdef PFNGLCREATEPROGRAMPIPELINESPROC
#undef PFNGLCREATEPROGRAMPIPELINESPROC
#endif
typedef void  (*PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n, GLuint *pipelines);

#ifdef glCreateQueries
#undef glCreateQueries
#endif
#ifdef PFNGLCREATEQUERIESPROC
#undef PFNGLCREATEQUERIESPROC
#endif
typedef void  (*PFNGLCREATEQUERIESPROC)(GLenum target, GLsizei n, GLuint *ids);

#ifdef glGetQueryBufferObjecti64v
#undef glGetQueryBufferObjecti64v
#endif
#ifdef PFNGLGETQUERYBUFFEROBJECTI64VPROC
#undef PFNGLGETQUERYBUFFEROBJECTI64VPROC
#endif
typedef void  (*PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);

#ifdef glGetQueryBufferObjectiv
#undef glGetQueryBufferObjectiv
#endif
#ifdef PFNGLGETQUERYBUFFEROBJECTIVPROC
#undef PFNGLGETQUERYBUFFEROBJECTIVPROC
#endif
typedef void  (*PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);

#ifdef glGetQueryBufferObjectui64v
#undef glGetQueryBufferObjectui64v
#endif
#ifdef PFNGLGETQUERYBUFFEROBJECTUI64VPROC
#undef PFNGLGETQUERYBUFFEROBJECTUI64VPROC
#endif
typedef void  (*PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);

#ifdef glGetQueryBufferObjectuiv
#undef glGetQueryBufferObjectuiv
#endif
#ifdef PFNGLGETQUERYBUFFEROBJECTUIVPROC
#undef PFNGLGETQUERYBUFFEROBJECTUIVPROC
#endif
typedef void  (*PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);

#ifndef GL_TEXTURE_TARGET
#define GL_TEXTURE_TARGET 0x1006
#endif

#ifndef GL_QUERY_TARGET
#define GL_QUERY_TARGET 0x82EA
#endif

#ifndef GL_TEXTURE_BINDING_1D
#define GL_TEXTURE_BINDING_1D 0x8068
#endif

#ifndef GL_TEXTURE_BINDING_1D_ARRAY
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#endif

#ifndef GL_TEXTURE_BINDING_2D
#define GL_TEXTURE_BINDING_2D 0x8069
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#endif

#ifndef GL_TEXTURE_BINDING_3D
#define GL_TEXTURE_BINDING_3D 0x806A
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#endif

#ifdef glMemoryBarrierByRegion
#undef glMemoryBarrierByRegion
#endif
#ifdef PFNGLMEMORYBARRIERBYREGIONPROC
#undef PFNGLMEMORYBARRIERBYREGIONPROC
#endif
typedef void  (*PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);

#ifndef GL_BACK
#define GL_BACK 0x0405
#endif

#ifdef glGetTextureSubImage
#undef glGetTextureSubImage
#endif
#ifdef PFNGLGETTEXTURESUBIMAGEPROC
#undef PFNGLGETTEXTURESUBIMAGEPROC
#endif
typedef void  (*PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);

#ifdef glGetCompressedTextureSubImage
#undef glGetCompressedTextureSubImage
#endif
#ifdef PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
#undef PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
#endif
typedef void  (*PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);

#ifdef glGetGraphicsResetStatus
#undef glGetGraphicsResetStatus
#endif
#ifdef PFNGLGETGRAPHICSRESETSTATUSPROC
#undef PFNGLGETGRAPHICSRESETSTATUSPROC
#endif
typedef GLenum  (*PFNGLGETGRAPHICSRESETSTATUSPROC)(void);

#ifdef glGetnCompressedTexImage
#undef glGetnCompressedTexImage
#endif
#ifdef PFNGLGETNCOMPRESSEDTEXIMAGEPROC
#undef PFNGLGETNCOMPRESSEDTEXIMAGEPROC
#endif
typedef void  (*PFNGLGETNCOMPRESSEDTEXIMAGEPROC)(GLenum target, GLint lod, GLsizei bufSize, void *pixels);

#ifdef glGetnTexImage
#undef glGetnTexImage
#endif
#ifdef PFNGLGETNTEXIMAGEPROC
#undef PFNGLGETNTEXIMAGEPROC
#endif
typedef void  (*PFNGLGETNTEXIMAGEPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);

#ifdef glGetnUniformdv
#undef glGetnUniformdv
#endif
#ifdef PFNGLGETNUNIFORMDVPROC
#undef PFNGLGETNUNIFORMDVPROC
#endif
typedef void  (*PFNGLGETNUNIFORMDVPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);

#ifdef glGetnUniformfv
#undef glGetnUniformfv
#endif
#ifdef PFNGLGETNUNIFORMFVPROC
#undef PFNGLGETNUNIFORMFVPROC
#endif
typedef void  (*PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);

#ifdef glGetnUniformiv
#undef glGetnUniformiv
#endif
#ifdef PFNGLGETNUNIFORMIVPROC
#undef PFNGLGETNUNIFORMIVPROC
#endif
typedef void  (*PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLint *params);

#ifdef glGetnUniformuiv
#undef glGetnUniformuiv
#endif
#ifdef PFNGLGETNUNIFORMUIVPROC
#undef PFNGLGETNUNIFORMUIVPROC
#endif
typedef void  (*PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);

#ifdef glReadnPixels
#undef glReadnPixels
#endif
#ifdef PFNGLREADNPIXELSPROC
#undef PFNGLREADNPIXELSPROC
#endif
typedef void  (*PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_GUILTY_CONTEXT_RESET
#define GL_GUILTY_CONTEXT_RESET 0x8253
#endif

#ifndef GL_INNOCENT_CONTEXT_RESET
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#endif

#ifndef GL_UNKNOWN_CONTEXT_RESET
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#endif

#ifndef GL_RESET_NOTIFICATION_STRATEGY
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#endif

#ifndef GL_LOSE_CONTEXT_ON_RESET
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#endif

#ifndef GL_NO_RESET_NOTIFICATION
#define GL_NO_RESET_NOTIFICATION 0x8261
#endif

#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#endif

#ifndef GL_CONTEXT_LOST
#define GL_CONTEXT_LOST 0x0507
#endif

#ifdef glGetnMapdv
#undef glGetnMapdv
#endif
#ifdef PFNGLGETNMAPDVPROC
#undef PFNGLGETNMAPDVPROC
#endif
typedef void  (*PFNGLGETNMAPDVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);

#ifdef glGetnMapfv
#undef glGetnMapfv
#endif
#ifdef PFNGLGETNMAPFVPROC
#undef PFNGLGETNMAPFVPROC
#endif
typedef void  (*PFNGLGETNMAPFVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);

#ifdef glGetnMapiv
#undef glGetnMapiv
#endif
#ifdef PFNGLGETNMAPIVPROC
#undef PFNGLGETNMAPIVPROC
#endif
typedef void  (*PFNGLGETNMAPIVPROC)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);

#ifdef glGetnPixelMapfv
#undef glGetnPixelMapfv
#endif
#ifdef PFNGLGETNPIXELMAPFVPROC
#undef PFNGLGETNPIXELMAPFVPROC
#endif
typedef void  (*PFNGLGETNPIXELMAPFVPROC)(GLenum map, GLsizei bufSize, GLfloat *values);

#ifdef glGetnPixelMapuiv
#undef glGetnPixelMapuiv
#endif
#ifdef PFNGLGETNPIXELMAPUIVPROC
#undef PFNGLGETNPIXELMAPUIVPROC
#endif
typedef void  (*PFNGLGETNPIXELMAPUIVPROC)(GLenum map, GLsizei bufSize, GLuint *values);

#ifdef glGetnPixelMapusv
#undef glGetnPixelMapusv
#endif
#ifdef PFNGLGETNPIXELMAPUSVPROC
#undef PFNGLGETNPIXELMAPUSVPROC
#endif
typedef void  (*PFNGLGETNPIXELMAPUSVPROC)(GLenum map, GLsizei bufSize, GLushort *values);

#ifdef glGetnPolygonStipple
#undef glGetnPolygonStipple
#endif
#ifdef PFNGLGETNPOLYGONSTIPPLEPROC
#undef PFNGLGETNPOLYGONSTIPPLEPROC
#endif
typedef void  (*PFNGLGETNPOLYGONSTIPPLEPROC)(GLsizei bufSize, GLubyte *pattern);

#ifdef glGetnColorTable
#undef glGetnColorTable
#endif
#ifdef PFNGLGETNCOLORTABLEPROC
#undef PFNGLGETNCOLORTABLEPROC
#endif
typedef void  (*PFNGLGETNCOLORTABLEPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);

#ifdef glGetnConvolutionFilter
#undef glGetnConvolutionFilter
#endif
#ifdef PFNGLGETNCONVOLUTIONFILTERPROC
#undef PFNGLGETNCONVOLUTIONFILTERPROC
#endif
typedef void  (*PFNGLGETNCONVOLUTIONFILTERPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);

#ifdef glGetnSeparableFilter
#undef glGetnSeparableFilter
#endif
#ifdef PFNGLGETNSEPARABLEFILTERPROC
#undef PFNGLGETNSEPARABLEFILTERPROC
#endif
typedef void  (*PFNGLGETNSEPARABLEFILTERPROC)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);

#ifdef glGetnHistogram
#undef glGetnHistogram
#endif
#ifdef PFNGLGETNHISTOGRAMPROC
#undef PFNGLGETNHISTOGRAMPROC
#endif
typedef void  (*PFNGLGETNHISTOGRAMPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);

#ifdef glGetnMinmax
#undef glGetnMinmax
#endif
#ifdef PFNGLGETNMINMAXPROC
#undef PFNGLGETNMINMAXPROC
#endif
typedef void  (*PFNGLGETNMINMAXPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);

#ifdef glTextureBarrier
#undef glTextureBarrier
#endif
#ifdef PFNGLTEXTUREBARRIERPROC
#undef PFNGLTEXTUREBARRIERPROC
#endif
typedef void  (*PFNGLTEXTUREBARRIERPROC)(void);

#ifndef GL_CONTEXT_RELEASE_BEHAVIOR
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#endif

#ifndef GL_NONE
#define GL_NONE 0
#endif

#ifndef GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#endif

#ifndef GL_VERSION_ES_CM_1_0
#define GL_VERSION_ES_CM_1_0 1
#endif

#ifndef GL_VERSION_ES_CL_1_0
#define GL_VERSION_ES_CL_1_0 1
#endif

#ifndef GL_VERSION_ES_CM_1_1
#define GL_VERSION_ES_CM_1_1 1
#endif

#ifndef GL_VERSION_ES_CL_1_1
#define GL_VERSION_ES_CL_1_1 1
#endif

#ifndef GL_DEPTH_BUFFER_BIT
#define GL_DEPTH_BUFFER_BIT 0x00000100
#endif

#ifndef GL_STENCIL_BUFFER_BIT
#define GL_STENCIL_BUFFER_BIT 0x00000400
#endif

#ifndef GL_COLOR_BUFFER_BIT
#define GL_COLOR_BUFFER_BIT 0x00004000
#endif

#ifndef GL_FALSE
#define GL_FALSE 0
#endif

#ifndef GL_TRUE
#define GL_TRUE 1
#endif

#ifndef GL_POINTS
#define GL_POINTS 0x0000
#endif

#ifndef GL_LINES
#define GL_LINES 0x0001
#endif

#ifndef GL_LINE_LOOP
#define GL_LINE_LOOP 0x0002
#endif

#ifndef GL_LINE_STRIP
#define GL_LINE_STRIP 0x0003
#endif

#ifndef GL_TRIANGLES
#define GL_TRIANGLES 0x0004
#endif

#ifndef GL_TRIANGLE_STRIP
#define GL_TRIANGLE_STRIP 0x0005
#endif

#ifndef GL_TRIANGLE_FAN
#define GL_TRIANGLE_FAN 0x0006
#endif

#ifndef GL_NEVER
#define GL_NEVER 0x0200
#endif

#ifndef GL_LESS
#define GL_LESS 0x0201
#endif

#ifndef GL_EQUAL
#define GL_EQUAL 0x0202
#endif

#ifndef GL_LEQUAL
#define GL_LEQUAL 0x0203
#endif

#ifndef GL_GREATER
#define GL_GREATER 0x0204
#endif

#ifndef GL_NOTEQUAL
#define GL_NOTEQUAL 0x0205
#endif

#ifndef GL_GEQUAL
#define GL_GEQUAL 0x0206
#endif

#ifndef GL_ALWAYS
#define GL_ALWAYS 0x0207
#endif

#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_ONE
#define GL_ONE 1
#endif

#ifndef GL_SRC_COLOR
#define GL_SRC_COLOR 0x0300
#endif

#ifndef GL_ONE_MINUS_SRC_COLOR
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#endif

#ifndef GL_SRC_ALPHA
#define GL_SRC_ALPHA 0x0302
#endif

#ifndef GL_ONE_MINUS_SRC_ALPHA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#endif

#ifndef GL_DST_ALPHA
#define GL_DST_ALPHA 0x0304
#endif

#ifndef GL_ONE_MINUS_DST_ALPHA
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#endif

#ifndef GL_DST_COLOR
#define GL_DST_COLOR 0x0306
#endif

#ifndef GL_ONE_MINUS_DST_COLOR
#define GL_ONE_MINUS_DST_COLOR 0x0307
#endif

#ifndef GL_SRC_ALPHA_SATURATE
#define GL_SRC_ALPHA_SATURATE 0x0308
#endif

#ifndef GL_CLIP_PLANE0
#define GL_CLIP_PLANE0 0x3000
#endif

#ifndef GL_CLIP_PLANE1
#define GL_CLIP_PLANE1 0x3001
#endif

#ifndef GL_CLIP_PLANE2
#define GL_CLIP_PLANE2 0x3002
#endif

#ifndef GL_CLIP_PLANE3
#define GL_CLIP_PLANE3 0x3003
#endif

#ifndef GL_CLIP_PLANE4
#define GL_CLIP_PLANE4 0x3004
#endif

#ifndef GL_CLIP_PLANE5
#define GL_CLIP_PLANE5 0x3005
#endif

#ifndef GL_FRONT
#define GL_FRONT 0x0404
#endif

#ifndef GL_BACK
#define GL_BACK 0x0405
#endif

#ifndef GL_FRONT_AND_BACK
#define GL_FRONT_AND_BACK 0x0408
#endif

#ifndef GL_FOG
#define GL_FOG 0x0B60
#endif

#ifndef GL_LIGHTING
#define GL_LIGHTING 0x0B50
#endif

#ifndef GL_TEXTURE_2D
#define GL_TEXTURE_2D 0x0DE1
#endif

#ifndef GL_CULL_FACE
#define GL_CULL_FACE 0x0B44
#endif

#ifndef GL_ALPHA_TEST
#define GL_ALPHA_TEST 0x0BC0
#endif

#ifndef GL_BLEND
#define GL_BLEND 0x0BE2
#endif

#ifndef GL_COLOR_LOGIC_OP
#define GL_COLOR_LOGIC_OP 0x0BF2
#endif

#ifndef GL_DITHER
#define GL_DITHER 0x0BD0
#endif

#ifndef GL_STENCIL_TEST
#define GL_STENCIL_TEST 0x0B90
#endif

#ifndef GL_DEPTH_TEST
#define GL_DEPTH_TEST 0x0B71
#endif

#ifndef GL_POINT_SMOOTH
#define GL_POINT_SMOOTH 0x0B10
#endif

#ifndef GL_LINE_SMOOTH
#define GL_LINE_SMOOTH 0x0B20
#endif

#ifndef GL_SCISSOR_TEST
#define GL_SCISSOR_TEST 0x0C11
#endif

#ifndef GL_COLOR_MATERIAL
#define GL_COLOR_MATERIAL 0x0B57
#endif

#ifndef GL_NORMALIZE
#define GL_NORMALIZE 0x0BA1
#endif

#ifndef GL_RESCALE_NORMAL
#define GL_RESCALE_NORMAL 0x803A
#endif

#ifndef GL_VERTEX_ARRAY
#define GL_VERTEX_ARRAY 0x8074
#endif

#ifndef GL_NORMAL_ARRAY
#define GL_NORMAL_ARRAY 0x8075
#endif

#ifndef GL_COLOR_ARRAY
#define GL_COLOR_ARRAY 0x8076
#endif

#ifndef GL_TEXTURE_COORD_ARRAY
#define GL_TEXTURE_COORD_ARRAY 0x8078
#endif

#ifndef GL_MULTISAMPLE
#define GL_MULTISAMPLE 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#endif

#ifndef GL_SAMPLE_COVERAGE
#define GL_SAMPLE_COVERAGE 0x80A0
#endif

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_INVALID_ENUM
#define GL_INVALID_ENUM 0x0500
#endif

#ifndef GL_INVALID_VALUE
#define GL_INVALID_VALUE 0x0501
#endif

#ifndef GL_INVALID_OPERATION
#define GL_INVALID_OPERATION 0x0502
#endif

#ifndef GL_STACK_OVERFLOW
#define GL_STACK_OVERFLOW 0x0503
#endif

#ifndef GL_STACK_UNDERFLOW
#define GL_STACK_UNDERFLOW 0x0504
#endif

#ifndef GL_OUT_OF_MEMORY
#define GL_OUT_OF_MEMORY 0x0505
#endif

#ifndef GL_EXP
#define GL_EXP 0x0800
#endif

#ifndef GL_EXP2
#define GL_EXP2 0x0801
#endif

#ifndef GL_FOG_DENSITY
#define GL_FOG_DENSITY 0x0B62
#endif

#ifndef GL_FOG_START
#define GL_FOG_START 0x0B63
#endif

#ifndef GL_FOG_END
#define GL_FOG_END 0x0B64
#endif

#ifndef GL_FOG_MODE
#define GL_FOG_MODE 0x0B65
#endif

#ifndef GL_FOG_COLOR
#define GL_FOG_COLOR 0x0B66
#endif

#ifndef GL_CW
#define GL_CW 0x0900
#endif

#ifndef GL_CCW
#define GL_CCW 0x0901
#endif

#ifndef GL_CURRENT_COLOR
#define GL_CURRENT_COLOR 0x0B00
#endif

#ifndef GL_CURRENT_NORMAL
#define GL_CURRENT_NORMAL 0x0B02
#endif

#ifndef GL_CURRENT_TEXTURE_COORDS
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#endif

#ifndef GL_POINT_SIZE
#define GL_POINT_SIZE 0x0B11
#endif

#ifndef GL_POINT_SIZE_MIN
#define GL_POINT_SIZE_MIN 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX
#define GL_POINT_SIZE_MAX 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#endif

#ifndef GL_POINT_DISTANCE_ATTENUATION
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#endif

#ifndef GL_SMOOTH_POINT_SIZE_RANGE
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#endif

#ifndef GL_LINE_WIDTH
#define GL_LINE_WIDTH 0x0B21
#endif

#ifndef GL_SMOOTH_LINE_WIDTH_RANGE
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#endif

#ifndef GL_ALIASED_POINT_SIZE_RANGE
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif

#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif

#ifndef GL_CULL_FACE_MODE
#define GL_CULL_FACE_MODE 0x0B45
#endif

#ifndef GL_FRONT_FACE
#define GL_FRONT_FACE 0x0B46
#endif

#ifndef GL_SHADE_MODEL
#define GL_SHADE_MODEL 0x0B54
#endif

#ifndef GL_DEPTH_RANGE
#define GL_DEPTH_RANGE 0x0B70
#endif

#ifndef GL_DEPTH_WRITEMASK
#define GL_DEPTH_WRITEMASK 0x0B72
#endif

#ifndef GL_DEPTH_CLEAR_VALUE
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#endif

#ifndef GL_DEPTH_FUNC
#define GL_DEPTH_FUNC 0x0B74
#endif

#ifndef GL_STENCIL_CLEAR_VALUE
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#endif

#ifndef GL_STENCIL_FUNC
#define GL_STENCIL_FUNC 0x0B92
#endif

#ifndef GL_STENCIL_VALUE_MASK
#define GL_STENCIL_VALUE_MASK 0x0B93
#endif

#ifndef GL_STENCIL_FAIL
#define GL_STENCIL_FAIL 0x0B94
#endif

#ifndef GL_STENCIL_PASS_DEPTH_FAIL
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#endif

#ifndef GL_STENCIL_PASS_DEPTH_PASS
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#endif

#ifndef GL_STENCIL_REF
#define GL_STENCIL_REF 0x0B97
#endif

#ifndef GL_STENCIL_WRITEMASK
#define GL_STENCIL_WRITEMASK 0x0B98
#endif

#ifndef GL_MATRIX_MODE
#define GL_MATRIX_MODE 0x0BA0
#endif

#ifndef GL_VIEWPORT
#define GL_VIEWPORT 0x0BA2
#endif

#ifndef GL_MODELVIEW_STACK_DEPTH
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#endif

#ifndef GL_PROJECTION_STACK_DEPTH
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#endif

#ifndef GL_TEXTURE_STACK_DEPTH
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#endif

#ifndef GL_MODELVIEW_MATRIX
#define GL_MODELVIEW_MATRIX 0x0BA6
#endif

#ifndef GL_PROJECTION_MATRIX
#define GL_PROJECTION_MATRIX 0x0BA7
#endif

#ifndef GL_TEXTURE_MATRIX
#define GL_TEXTURE_MATRIX 0x0BA8
#endif

#ifndef GL_ALPHA_TEST_FUNC
#define GL_ALPHA_TEST_FUNC 0x0BC1
#endif

#ifndef GL_ALPHA_TEST_REF
#define GL_ALPHA_TEST_REF 0x0BC2
#endif

#ifndef GL_BLEND_DST
#define GL_BLEND_DST 0x0BE0
#endif

#ifndef GL_BLEND_SRC
#define GL_BLEND_SRC 0x0BE1
#endif

#ifndef GL_LOGIC_OP_MODE
#define GL_LOGIC_OP_MODE 0x0BF0
#endif

#ifndef GL_SCISSOR_BOX
#define GL_SCISSOR_BOX 0x0C10
#endif

#ifndef GL_COLOR_CLEAR_VALUE
#define GL_COLOR_CLEAR_VALUE 0x0C22
#endif

#ifndef GL_COLOR_WRITEMASK
#define GL_COLOR_WRITEMASK 0x0C23
#endif

#ifndef GL_MAX_LIGHTS
#define GL_MAX_LIGHTS 0x0D31
#endif

#ifndef GL_MAX_CLIP_PLANES
#define GL_MAX_CLIP_PLANES 0x0D32
#endif

#ifndef GL_MAX_TEXTURE_SIZE
#define GL_MAX_TEXTURE_SIZE 0x0D33
#endif

#ifndef GL_MAX_MODELVIEW_STACK_DEPTH
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#endif

#ifndef GL_MAX_PROJECTION_STACK_DEPTH
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#endif

#ifndef GL_MAX_TEXTURE_STACK_DEPTH
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#endif

#ifndef GL_MAX_VIEWPORT_DIMS
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#endif

#ifndef GL_MAX_TEXTURE_UNITS
#define GL_MAX_TEXTURE_UNITS 0x84E2
#endif

#ifndef GL_SUBPIXEL_BITS
#define GL_SUBPIXEL_BITS 0x0D50
#endif

#ifndef GL_RED_BITS
#define GL_RED_BITS 0x0D52
#endif

#ifndef GL_GREEN_BITS
#define GL_GREEN_BITS 0x0D53
#endif

#ifndef GL_BLUE_BITS
#define GL_BLUE_BITS 0x0D54
#endif

#ifndef GL_ALPHA_BITS
#define GL_ALPHA_BITS 0x0D55
#endif

#ifndef GL_DEPTH_BITS
#define GL_DEPTH_BITS 0x0D56
#endif

#ifndef GL_STENCIL_BITS
#define GL_STENCIL_BITS 0x0D57
#endif

#ifndef GL_POLYGON_OFFSET_UNITS
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#endif

#ifndef GL_POLYGON_OFFSET_FILL
#define GL_POLYGON_OFFSET_FILL 0x8037
#endif

#ifndef GL_POLYGON_OFFSET_FACTOR
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#endif

#ifndef GL_TEXTURE_BINDING_2D
#define GL_TEXTURE_BINDING_2D 0x8069
#endif

#ifndef GL_VERTEX_ARRAY_SIZE
#define GL_VERTEX_ARRAY_SIZE 0x807A
#endif

#ifndef GL_VERTEX_ARRAY_TYPE
#define GL_VERTEX_ARRAY_TYPE 0x807B
#endif

#ifndef GL_VERTEX_ARRAY_STRIDE
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#endif

#ifndef GL_NORMAL_ARRAY_TYPE
#define GL_NORMAL_ARRAY_TYPE 0x807E
#endif

#ifndef GL_NORMAL_ARRAY_STRIDE
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#endif

#ifndef GL_COLOR_ARRAY_SIZE
#define GL_COLOR_ARRAY_SIZE 0x8081
#endif

#ifndef GL_COLOR_ARRAY_TYPE
#define GL_COLOR_ARRAY_TYPE 0x8082
#endif

#ifndef GL_COLOR_ARRAY_STRIDE
#define GL_COLOR_ARRAY_STRIDE 0x8083
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_SIZE
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_TYPE
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_STRIDE
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#endif

#ifndef GL_VERTEX_ARRAY_POINTER
#define GL_VERTEX_ARRAY_POINTER 0x808E
#endif

#ifndef GL_NORMAL_ARRAY_POINTER
#define GL_NORMAL_ARRAY_POINTER 0x808F
#endif

#ifndef GL_COLOR_ARRAY_POINTER
#define GL_COLOR_ARRAY_POINTER 0x8090
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_POINTER
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#endif

#ifndef GL_SAMPLE_BUFFERS
#define GL_SAMPLE_BUFFERS 0x80A8
#endif

#ifndef GL_SAMPLES
#define GL_SAMPLES 0x80A9
#endif

#ifndef GL_SAMPLE_COVERAGE_VALUE
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif

#ifndef GL_SAMPLE_COVERAGE_INVERT
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif

#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif

#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif

#ifndef GL_DONT_CARE
#define GL_DONT_CARE 0x1100
#endif

#ifndef GL_FASTEST
#define GL_FASTEST 0x1101
#endif

#ifndef GL_NICEST
#define GL_NICEST 0x1102
#endif

#ifndef GL_PERSPECTIVE_CORRECTION_HINT
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#endif

#ifndef GL_POINT_SMOOTH_HINT
#define GL_POINT_SMOOTH_HINT 0x0C51
#endif

#ifndef GL_LINE_SMOOTH_HINT
#define GL_LINE_SMOOTH_HINT 0x0C52
#endif

#ifndef GL_FOG_HINT
#define GL_FOG_HINT 0x0C54
#endif

#ifndef GL_GENERATE_MIPMAP_HINT
#define GL_GENERATE_MIPMAP_HINT 0x8192
#endif

#ifndef GL_LIGHT_MODEL_AMBIENT
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#endif

#ifndef GL_LIGHT_MODEL_TWO_SIDE
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#endif

#ifndef GL_AMBIENT
#define GL_AMBIENT 0x1200
#endif

#ifndef GL_DIFFUSE
#define GL_DIFFUSE 0x1201
#endif

#ifndef GL_SPECULAR
#define GL_SPECULAR 0x1202
#endif

#ifndef GL_POSITION
#define GL_POSITION 0x1203
#endif

#ifndef GL_SPOT_DIRECTION
#define GL_SPOT_DIRECTION 0x1204
#endif

#ifndef GL_SPOT_EXPONENT
#define GL_SPOT_EXPONENT 0x1205
#endif

#ifndef GL_SPOT_CUTOFF
#define GL_SPOT_CUTOFF 0x1206
#endif

#ifndef GL_CONSTANT_ATTENUATION
#define GL_CONSTANT_ATTENUATION 0x1207
#endif

#ifndef GL_LINEAR_ATTENUATION
#define GL_LINEAR_ATTENUATION 0x1208
#endif

#ifndef GL_QUADRATIC_ATTENUATION
#define GL_QUADRATIC_ATTENUATION 0x1209
#endif

#ifndef GL_BYTE
#define GL_BYTE 0x1400
#endif

#ifndef GL_UNSIGNED_BYTE
#define GL_UNSIGNED_BYTE 0x1401
#endif

#ifndef GL_SHORT
#define GL_SHORT 0x1402
#endif

#ifndef GL_UNSIGNED_SHORT
#define GL_UNSIGNED_SHORT 0x1403
#endif

#ifndef GL_FLOAT
#define GL_FLOAT 0x1406
#endif

#ifndef GL_FIXED
#define GL_FIXED 0x140C
#endif

#ifndef GL_CLEAR
#define GL_CLEAR 0x1500
#endif

#ifndef GL_AND
#define GL_AND 0x1501
#endif

#ifndef GL_AND_REVERSE
#define GL_AND_REVERSE 0x1502
#endif

#ifndef GL_COPY
#define GL_COPY 0x1503
#endif

#ifndef GL_AND_INVERTED
#define GL_AND_INVERTED 0x1504
#endif

#ifndef GL_NOOP
#define GL_NOOP 0x1505
#endif

#ifndef GL_XOR
#define GL_XOR 0x1506
#endif

#ifndef GL_OR
#define GL_OR 0x1507
#endif

#ifndef GL_NOR
#define GL_NOR 0x1508
#endif

#ifndef GL_EQUIV
#define GL_EQUIV 0x1509
#endif

#ifndef GL_INVERT
#define GL_INVERT 0x150A
#endif

#ifndef GL_OR_REVERSE
#define GL_OR_REVERSE 0x150B
#endif

#ifndef GL_COPY_INVERTED
#define GL_COPY_INVERTED 0x150C
#endif

#ifndef GL_OR_INVERTED
#define GL_OR_INVERTED 0x150D
#endif

#ifndef GL_NAND
#define GL_NAND 0x150E
#endif

#ifndef GL_SET
#define GL_SET 0x150F
#endif

#ifndef GL_EMISSION
#define GL_EMISSION 0x1600
#endif

#ifndef GL_SHININESS
#define GL_SHININESS 0x1601
#endif

#ifndef GL_AMBIENT_AND_DIFFUSE
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#endif

#ifndef GL_MODELVIEW
#define GL_MODELVIEW 0x1700
#endif

#ifndef GL_PROJECTION
#define GL_PROJECTION 0x1701
#endif

#ifndef GL_TEXTURE
#define GL_TEXTURE 0x1702
#endif

#ifndef GL_ALPHA
#define GL_ALPHA 0x1906
#endif

#ifndef GL_RGB
#define GL_RGB 0x1907
#endif

#ifndef GL_RGBA
#define GL_RGBA 0x1908
#endif

#ifndef GL_LUMINANCE
#define GL_LUMINANCE 0x1909
#endif

#ifndef GL_LUMINANCE_ALPHA
#define GL_LUMINANCE_ALPHA 0x190A
#endif

#ifndef GL_UNPACK_ALIGNMENT
#define GL_UNPACK_ALIGNMENT 0x0CF5
#endif

#ifndef GL_PACK_ALIGNMENT
#define GL_PACK_ALIGNMENT 0x0D05
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif

#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif

#ifndef GL_FLAT
#define GL_FLAT 0x1D00
#endif

#ifndef GL_SMOOTH
#define GL_SMOOTH 0x1D01
#endif

#ifndef GL_KEEP
#define GL_KEEP 0x1E00
#endif

#ifndef GL_REPLACE
#define GL_REPLACE 0x1E01
#endif

#ifndef GL_INCR
#define GL_INCR 0x1E02
#endif

#ifndef GL_DECR
#define GL_DECR 0x1E03
#endif

#ifndef GL_VENDOR
#define GL_VENDOR 0x1F00
#endif

#ifndef GL_RENDERER
#define GL_RENDERER 0x1F01
#endif

#ifndef GL_VERSION
#define GL_VERSION 0x1F02
#endif

#ifndef GL_EXTENSIONS
#define GL_EXTENSIONS 0x1F03
#endif

#ifndef GL_MODULATE
#define GL_MODULATE 0x2100
#endif

#ifndef GL_DECAL
#define GL_DECAL 0x2101
#endif

#ifndef GL_ADD
#define GL_ADD 0x0104
#endif

#ifndef GL_TEXTURE_ENV_MODE
#define GL_TEXTURE_ENV_MODE 0x2200
#endif

#ifndef GL_TEXTURE_ENV_COLOR
#define GL_TEXTURE_ENV_COLOR 0x2201
#endif

#ifndef GL_TEXTURE_ENV
#define GL_TEXTURE_ENV 0x2300
#endif

#ifndef GL_NEAREST
#define GL_NEAREST 0x2600
#endif

#ifndef GL_LINEAR
#define GL_LINEAR 0x2601
#endif

#ifndef GL_NEAREST_MIPMAP_NEAREST
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#endif

#ifndef GL_LINEAR_MIPMAP_NEAREST
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#endif

#ifndef GL_NEAREST_MIPMAP_LINEAR
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#endif

#ifndef GL_LINEAR_MIPMAP_LINEAR
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#endif

#ifndef GL_TEXTURE_MAG_FILTER
#define GL_TEXTURE_MAG_FILTER 0x2800
#endif

#ifndef GL_TEXTURE_MIN_FILTER
#define GL_TEXTURE_MIN_FILTER 0x2801
#endif

#ifndef GL_TEXTURE_WRAP_S
#define GL_TEXTURE_WRAP_S 0x2802
#endif

#ifndef GL_TEXTURE_WRAP_T
#define GL_TEXTURE_WRAP_T 0x2803
#endif

#ifndef GL_GENERATE_MIPMAP
#define GL_GENERATE_MIPMAP 0x8191
#endif

#ifndef GL_TEXTURE0
#define GL_TEXTURE0 0x84C0
#endif

#ifndef GL_TEXTURE1
#define GL_TEXTURE1 0x84C1
#endif

#ifndef GL_TEXTURE2
#define GL_TEXTURE2 0x84C2
#endif

#ifndef GL_TEXTURE3
#define GL_TEXTURE3 0x84C3
#endif

#ifndef GL_TEXTURE4
#define GL_TEXTURE4 0x84C4
#endif

#ifndef GL_TEXTURE5
#define GL_TEXTURE5 0x84C5
#endif

#ifndef GL_TEXTURE6
#define GL_TEXTURE6 0x84C6
#endif

#ifndef GL_TEXTURE7
#define GL_TEXTURE7 0x84C7
#endif

#ifndef GL_TEXTURE8
#define GL_TEXTURE8 0x84C8
#endif

#ifndef GL_TEXTURE9
#define GL_TEXTURE9 0x84C9
#endif

#ifndef GL_TEXTURE10
#define GL_TEXTURE10 0x84CA
#endif

#ifndef GL_TEXTURE11
#define GL_TEXTURE11 0x84CB
#endif

#ifndef GL_TEXTURE12
#define GL_TEXTURE12 0x84CC
#endif

#ifndef GL_TEXTURE13
#define GL_TEXTURE13 0x84CD
#endif

#ifndef GL_TEXTURE14
#define GL_TEXTURE14 0x84CE
#endif

#ifndef GL_TEXTURE15
#define GL_TEXTURE15 0x84CF
#endif

#ifndef GL_TEXTURE16
#define GL_TEXTURE16 0x84D0
#endif

#ifndef GL_TEXTURE17
#define GL_TEXTURE17 0x84D1
#endif

#ifndef GL_TEXTURE18
#define GL_TEXTURE18 0x84D2
#endif

#ifndef GL_TEXTURE19
#define GL_TEXTURE19 0x84D3
#endif

#ifndef GL_TEXTURE20
#define GL_TEXTURE20 0x84D4
#endif

#ifndef GL_TEXTURE21
#define GL_TEXTURE21 0x84D5
#endif

#ifndef GL_TEXTURE22
#define GL_TEXTURE22 0x84D6
#endif

#ifndef GL_TEXTURE23
#define GL_TEXTURE23 0x84D7
#endif

#ifndef GL_TEXTURE24
#define GL_TEXTURE24 0x84D8
#endif

#ifndef GL_TEXTURE25
#define GL_TEXTURE25 0x84D9
#endif

#ifndef GL_TEXTURE26
#define GL_TEXTURE26 0x84DA
#endif

#ifndef GL_TEXTURE27
#define GL_TEXTURE27 0x84DB
#endif

#ifndef GL_TEXTURE28
#define GL_TEXTURE28 0x84DC
#endif

#ifndef GL_TEXTURE29
#define GL_TEXTURE29 0x84DD
#endif

#ifndef GL_TEXTURE30
#define GL_TEXTURE30 0x84DE
#endif

#ifndef GL_TEXTURE31
#define GL_TEXTURE31 0x84DF
#endif

#ifndef GL_ACTIVE_TEXTURE
#define GL_ACTIVE_TEXTURE 0x84E0
#endif

#ifndef GL_CLIENT_ACTIVE_TEXTURE
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#endif

#ifndef GL_REPEAT
#define GL_REPEAT 0x2901
#endif

#ifndef GL_CLAMP_TO_EDGE
#define GL_CLAMP_TO_EDGE 0x812F
#endif

#ifndef GL_LIGHT0
#define GL_LIGHT0 0x4000
#endif

#ifndef GL_LIGHT1
#define GL_LIGHT1 0x4001
#endif

#ifndef GL_LIGHT2
#define GL_LIGHT2 0x4002
#endif

#ifndef GL_LIGHT3
#define GL_LIGHT3 0x4003
#endif

#ifndef GL_LIGHT4
#define GL_LIGHT4 0x4004
#endif

#ifndef GL_LIGHT5
#define GL_LIGHT5 0x4005
#endif

#ifndef GL_LIGHT6
#define GL_LIGHT6 0x4006
#endif

#ifndef GL_LIGHT7
#define GL_LIGHT7 0x4007
#endif

#ifndef GL_ARRAY_BUFFER
#define GL_ARRAY_BUFFER 0x8892
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#endif

#ifndef GL_ARRAY_BUFFER_BINDING
#define GL_ARRAY_BUFFER_BINDING 0x8894
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_BINDING
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#endif

#ifndef GL_VERTEX_ARRAY_BUFFER_BINDING
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#endif

#ifndef GL_NORMAL_ARRAY_BUFFER_BINDING
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#endif

#ifndef GL_COLOR_ARRAY_BUFFER_BINDING
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#endif

#ifndef GL_STATIC_DRAW
#define GL_STATIC_DRAW 0x88E4
#endif

#ifndef GL_DYNAMIC_DRAW
#define GL_DYNAMIC_DRAW 0x88E8
#endif

#ifndef GL_BUFFER_SIZE
#define GL_BUFFER_SIZE 0x8764
#endif

#ifndef GL_BUFFER_USAGE
#define GL_BUFFER_USAGE 0x8765
#endif

#ifndef GL_SUBTRACT
#define GL_SUBTRACT 0x84E7
#endif

#ifndef GL_COMBINE
#define GL_COMBINE 0x8570
#endif

#ifndef GL_COMBINE_RGB
#define GL_COMBINE_RGB 0x8571
#endif

#ifndef GL_COMBINE_ALPHA
#define GL_COMBINE_ALPHA 0x8572
#endif

#ifndef GL_RGB_SCALE
#define GL_RGB_SCALE 0x8573
#endif

#ifndef GL_ADD_SIGNED
#define GL_ADD_SIGNED 0x8574
#endif

#ifndef GL_INTERPOLATE
#define GL_INTERPOLATE 0x8575
#endif

#ifndef GL_CONSTANT
#define GL_CONSTANT 0x8576
#endif

#ifndef GL_PRIMARY_COLOR
#define GL_PRIMARY_COLOR 0x8577
#endif

#ifndef GL_PREVIOUS
#define GL_PREVIOUS 0x8578
#endif

#ifndef GL_OPERAND0_RGB
#define GL_OPERAND0_RGB 0x8590
#endif

#ifndef GL_OPERAND1_RGB
#define GL_OPERAND1_RGB 0x8591
#endif

#ifndef GL_OPERAND2_RGB
#define GL_OPERAND2_RGB 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA
#define GL_OPERAND0_ALPHA 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA
#define GL_OPERAND1_ALPHA 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA
#define GL_OPERAND2_ALPHA 0x859A
#endif

#ifndef GL_ALPHA_SCALE
#define GL_ALPHA_SCALE 0x0D1C
#endif

#ifndef GL_SRC0_RGB
#define GL_SRC0_RGB 0x8580
#endif

#ifndef GL_SRC1_RGB
#define GL_SRC1_RGB 0x8581
#endif

#ifndef GL_SRC2_RGB
#define GL_SRC2_RGB 0x8582
#endif

#ifndef GL_SRC0_ALPHA
#define GL_SRC0_ALPHA 0x8588
#endif

#ifndef GL_SRC1_ALPHA
#define GL_SRC1_ALPHA 0x8589
#endif

#ifndef GL_SRC2_ALPHA
#define GL_SRC2_ALPHA 0x858A
#endif

#ifndef GL_DOT3_RGB
#define GL_DOT3_RGB 0x86AE
#endif

#ifndef GL_DOT3_RGBA
#define GL_DOT3_RGBA 0x86AF
#endif

#ifdef glAlphaFunc
#undef glAlphaFunc
#endif
#ifdef PFNGLALPHAFUNCPROC
#undef PFNGLALPHAFUNCPROC
#endif
typedef void  (*PFNGLALPHAFUNCPROC)(GLenum func, GLfloat ref);

#ifdef glClearColor
#undef glClearColor
#endif
#ifdef PFNGLCLEARCOLORPROC
#undef PFNGLCLEARCOLORPROC
#endif
typedef void  (*PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glClearDepthf
#undef glClearDepthf
#endif
#ifdef PFNGLCLEARDEPTHFPROC
#undef PFNGLCLEARDEPTHFPROC
#endif
typedef void  (*PFNGLCLEARDEPTHFPROC)(GLfloat d);

#ifdef glClipPlanef
#undef glClipPlanef
#endif
#ifdef PFNGLCLIPPLANEFPROC
#undef PFNGLCLIPPLANEFPROC
#endif
typedef void  (*PFNGLCLIPPLANEFPROC)(GLenum p, const GLfloat *eqn);

#ifdef glColor4f
#undef glColor4f
#endif
#ifdef PFNGLCOLOR4FPROC
#undef PFNGLCOLOR4FPROC
#endif
typedef void  (*PFNGLCOLOR4FPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glDepthRangef
#undef glDepthRangef
#endif
#ifdef PFNGLDEPTHRANGEFPROC
#undef PFNGLDEPTHRANGEFPROC
#endif
typedef void  (*PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);

#ifdef glFogf
#undef glFogf
#endif
#ifdef PFNGLFOGFPROC
#undef PFNGLFOGFPROC
#endif
typedef void  (*PFNGLFOGFPROC)(GLenum pname, GLfloat param);

#ifdef glFogfv
#undef glFogfv
#endif
#ifdef PFNGLFOGFVPROC
#undef PFNGLFOGFVPROC
#endif
typedef void  (*PFNGLFOGFVPROC)(GLenum pname, const GLfloat *params);

#ifdef glFrustumf
#undef glFrustumf
#endif
#ifdef PFNGLFRUSTUMFPROC
#undef PFNGLFRUSTUMFPROC
#endif
typedef void  (*PFNGLFRUSTUMFPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);

#ifdef glGetClipPlanef
#undef glGetClipPlanef
#endif
#ifdef PFNGLGETCLIPPLANEFPROC
#undef PFNGLGETCLIPPLANEFPROC
#endif
typedef void  (*PFNGLGETCLIPPLANEFPROC)(GLenum plane, GLfloat *equation);

#ifdef glGetFloatv
#undef glGetFloatv
#endif
#ifdef PFNGLGETFLOATVPROC
#undef PFNGLGETFLOATVPROC
#endif
typedef void  (*PFNGLGETFLOATVPROC)(GLenum pname, GLfloat *data);

#ifdef glGetLightfv
#undef glGetLightfv
#endif
#ifdef PFNGLGETLIGHTFVPROC
#undef PFNGLGETLIGHTFVPROC
#endif
typedef void  (*PFNGLGETLIGHTFVPROC)(GLenum light, GLenum pname, GLfloat *params);

#ifdef glGetMaterialfv
#undef glGetMaterialfv
#endif
#ifdef PFNGLGETMATERIALFVPROC
#undef PFNGLGETMATERIALFVPROC
#endif
typedef void  (*PFNGLGETMATERIALFVPROC)(GLenum face, GLenum pname, GLfloat *params);

#ifdef glGetTexEnvfv
#undef glGetTexEnvfv
#endif
#ifdef PFNGLGETTEXENVFVPROC
#undef PFNGLGETTEXENVFVPROC
#endif
typedef void  (*PFNGLGETTEXENVFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetTexParameterfv
#undef glGetTexParameterfv
#endif
#ifdef PFNGLGETTEXPARAMETERFVPROC
#undef PFNGLGETTEXPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glLightModelf
#undef glLightModelf
#endif
#ifdef PFNGLLIGHTMODELFPROC
#undef PFNGLLIGHTMODELFPROC
#endif
typedef void  (*PFNGLLIGHTMODELFPROC)(GLenum pname, GLfloat param);

#ifdef glLightModelfv
#undef glLightModelfv
#endif
#ifdef PFNGLLIGHTMODELFVPROC
#undef PFNGLLIGHTMODELFVPROC
#endif
typedef void  (*PFNGLLIGHTMODELFVPROC)(GLenum pname, const GLfloat *params);

#ifdef glLightf
#undef glLightf
#endif
#ifdef PFNGLLIGHTFPROC
#undef PFNGLLIGHTFPROC
#endif
typedef void  (*PFNGLLIGHTFPROC)(GLenum light, GLenum pname, GLfloat param);

#ifdef glLightfv
#undef glLightfv
#endif
#ifdef PFNGLLIGHTFVPROC
#undef PFNGLLIGHTFVPROC
#endif
typedef void  (*PFNGLLIGHTFVPROC)(GLenum light, GLenum pname, const GLfloat *params);

#ifdef glLineWidth
#undef glLineWidth
#endif
#ifdef PFNGLLINEWIDTHPROC
#undef PFNGLLINEWIDTHPROC
#endif
typedef void  (*PFNGLLINEWIDTHPROC)(GLfloat width);

#ifdef glLoadMatrixf
#undef glLoadMatrixf
#endif
#ifdef PFNGLLOADMATRIXFPROC
#undef PFNGLLOADMATRIXFPROC
#endif
typedef void  (*PFNGLLOADMATRIXFPROC)(const GLfloat *m);

#ifdef glMaterialf
#undef glMaterialf
#endif
#ifdef PFNGLMATERIALFPROC
#undef PFNGLMATERIALFPROC
#endif
typedef void  (*PFNGLMATERIALFPROC)(GLenum face, GLenum pname, GLfloat param);

#ifdef glMaterialfv
#undef glMaterialfv
#endif
#ifdef PFNGLMATERIALFVPROC
#undef PFNGLMATERIALFVPROC
#endif
typedef void  (*PFNGLMATERIALFVPROC)(GLenum face, GLenum pname, const GLfloat *params);

#ifdef glMultMatrixf
#undef glMultMatrixf
#endif
#ifdef PFNGLMULTMATRIXFPROC
#undef PFNGLMULTMATRIXFPROC
#endif
typedef void  (*PFNGLMULTMATRIXFPROC)(const GLfloat *m);

#ifdef glMultiTexCoord4f
#undef glMultiTexCoord4f
#endif
#ifdef PFNGLMULTITEXCOORD4FPROC
#undef PFNGLMULTITEXCOORD4FPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4FPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);

#ifdef glNormal3f
#undef glNormal3f
#endif
#ifdef PFNGLNORMAL3FPROC
#undef PFNGLNORMAL3FPROC
#endif
typedef void  (*PFNGLNORMAL3FPROC)(GLfloat nx, GLfloat ny, GLfloat nz);

#ifdef glOrthof
#undef glOrthof
#endif
#ifdef PFNGLORTHOFPROC
#undef PFNGLORTHOFPROC
#endif
typedef void  (*PFNGLORTHOFPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);

#ifdef glPointParameterf
#undef glPointParameterf
#endif
#ifdef PFNGLPOINTPARAMETERFPROC
#undef PFNGLPOINTPARAMETERFPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFPROC)(GLenum pname, GLfloat param);

#ifdef glPointParameterfv
#undef glPointParameterfv
#endif
#ifdef PFNGLPOINTPARAMETERFVPROC
#undef PFNGLPOINTPARAMETERFVPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFVPROC)(GLenum pname, const GLfloat *params);

#ifdef glPointSize
#undef glPointSize
#endif
#ifdef PFNGLPOINTSIZEPROC
#undef PFNGLPOINTSIZEPROC
#endif
typedef void  (*PFNGLPOINTSIZEPROC)(GLfloat size);

#ifdef glPolygonOffset
#undef glPolygonOffset
#endif
#ifdef PFNGLPOLYGONOFFSETPROC
#undef PFNGLPOLYGONOFFSETPROC
#endif
typedef void  (*PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);

#ifdef glRotatef
#undef glRotatef
#endif
#ifdef PFNGLROTATEFPROC
#undef PFNGLROTATEFPROC
#endif
typedef void  (*PFNGLROTATEFPROC)(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);

#ifdef glScalef
#undef glScalef
#endif
#ifdef PFNGLSCALEFPROC
#undef PFNGLSCALEFPROC
#endif
typedef void  (*PFNGLSCALEFPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifdef glTexEnvf
#undef glTexEnvf
#endif
#ifdef PFNGLTEXENVFPROC
#undef PFNGLTEXENVFPROC
#endif
typedef void  (*PFNGLTEXENVFPROC)(GLenum target, GLenum pname, GLfloat param);

#ifdef glTexEnvfv
#undef glTexEnvfv
#endif
#ifdef PFNGLTEXENVFVPROC
#undef PFNGLTEXENVFVPROC
#endif
typedef void  (*PFNGLTEXENVFVPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glTexParameterf
#undef glTexParameterf
#endif
#ifdef PFNGLTEXPARAMETERFPROC
#undef PFNGLTEXPARAMETERFPROC
#endif
typedef void  (*PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);

#ifdef glTexParameterfv
#undef glTexParameterfv
#endif
#ifdef PFNGLTEXPARAMETERFVPROC
#undef PFNGLTEXPARAMETERFVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glTranslatef
#undef glTranslatef
#endif
#ifdef PFNGLTRANSLATEFPROC
#undef PFNGLTRANSLATEFPROC
#endif
typedef void  (*PFNGLTRANSLATEFPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifdef glActiveTexture
#undef glActiveTexture
#endif
#ifdef PFNGLACTIVETEXTUREPROC
#undef PFNGLACTIVETEXTUREPROC
#endif
typedef void  (*PFNGLACTIVETEXTUREPROC)(GLenum texture);

#ifdef glAlphaFuncx
#undef glAlphaFuncx
#endif
#ifdef PFNGLALPHAFUNCXPROC
#undef PFNGLALPHAFUNCXPROC
#endif
typedef void  (*PFNGLALPHAFUNCXPROC)(GLenum func, GLfixed ref);

#ifdef glBindBuffer
#undef glBindBuffer
#endif
#ifdef PFNGLBINDBUFFERPROC
#undef PFNGLBINDBUFFERPROC
#endif
typedef void  (*PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);

#ifdef glBindTexture
#undef glBindTexture
#endif
#ifdef PFNGLBINDTEXTUREPROC
#undef PFNGLBINDTEXTUREPROC
#endif
typedef void  (*PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);

#ifdef glBlendFunc
#undef glBlendFunc
#endif
#ifdef PFNGLBLENDFUNCPROC
#undef PFNGLBLENDFUNCPROC
#endif
typedef void  (*PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);

#ifdef glBufferData
#undef glBufferData
#endif
#ifdef PFNGLBUFFERDATAPROC
#undef PFNGLBUFFERDATAPROC
#endif
typedef void  (*PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);

#ifdef glBufferSubData
#undef glBufferSubData
#endif
#ifdef PFNGLBUFFERSUBDATAPROC
#undef PFNGLBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);

#ifdef glClear
#undef glClear
#endif
#ifdef PFNGLCLEARPROC
#undef PFNGLCLEARPROC
#endif
typedef void  (*PFNGLCLEARPROC)(GLbitfield mask);

#ifdef glClearColorx
#undef glClearColorx
#endif
#ifdef PFNGLCLEARCOLORXPROC
#undef PFNGLCLEARCOLORXPROC
#endif
typedef void  (*PFNGLCLEARCOLORXPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);

#ifdef glClearDepthx
#undef glClearDepthx
#endif
#ifdef PFNGLCLEARDEPTHXPROC
#undef PFNGLCLEARDEPTHXPROC
#endif
typedef void  (*PFNGLCLEARDEPTHXPROC)(GLfixed depth);

#ifdef glClearStencil
#undef glClearStencil
#endif
#ifdef PFNGLCLEARSTENCILPROC
#undef PFNGLCLEARSTENCILPROC
#endif
typedef void  (*PFNGLCLEARSTENCILPROC)(GLint s);

#ifdef glClientActiveTexture
#undef glClientActiveTexture
#endif
#ifdef PFNGLCLIENTACTIVETEXTUREPROC
#undef PFNGLCLIENTACTIVETEXTUREPROC
#endif
typedef void  (*PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);

#ifdef glClipPlanex
#undef glClipPlanex
#endif
#ifdef PFNGLCLIPPLANEXPROC
#undef PFNGLCLIPPLANEXPROC
#endif
typedef void  (*PFNGLCLIPPLANEXPROC)(GLenum plane, const GLfixed *equation);

#ifdef glColor4ub
#undef glColor4ub
#endif
#ifdef PFNGLCOLOR4UBPROC
#undef PFNGLCOLOR4UBPROC
#endif
typedef void  (*PFNGLCOLOR4UBPROC)(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);

#ifdef glColor4x
#undef glColor4x
#endif
#ifdef PFNGLCOLOR4XPROC
#undef PFNGLCOLOR4XPROC
#endif
typedef void  (*PFNGLCOLOR4XPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);

#ifdef glColorMask
#undef glColorMask
#endif
#ifdef PFNGLCOLORMASKPROC
#undef PFNGLCOLORMASKPROC
#endif
typedef void  (*PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);

#ifdef glColorPointer
#undef glColorPointer
#endif
#ifdef PFNGLCOLORPOINTERPROC
#undef PFNGLCOLORPOINTERPROC
#endif
typedef void  (*PFNGLCOLORPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glCompressedTexImage2D
#undef glCompressedTexImage2D
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE2DPROC
#undef PFNGLCOMPRESSEDTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage2D
#undef glCompressedTexSubImage2D
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCopyTexImage2D
#undef glCopyTexImage2D
#endif
#ifdef PFNGLCOPYTEXIMAGE2DPROC
#undef PFNGLCOPYTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);

#ifdef glCopyTexSubImage2D
#undef glCopyTexSubImage2D
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE2DPROC
#undef PFNGLCOPYTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glCullFace
#undef glCullFace
#endif
#ifdef PFNGLCULLFACEPROC
#undef PFNGLCULLFACEPROC
#endif
typedef void  (*PFNGLCULLFACEPROC)(GLenum mode);

#ifdef glDeleteBuffers
#undef glDeleteBuffers
#endif
#ifdef PFNGLDELETEBUFFERSPROC
#undef PFNGLDELETEBUFFERSPROC
#endif
typedef void  (*PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint *buffers);

#ifdef glDeleteTextures
#undef glDeleteTextures
#endif
#ifdef PFNGLDELETETEXTURESPROC
#undef PFNGLDELETETEXTURESPROC
#endif
typedef void  (*PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint *textures);

#ifdef glDepthFunc
#undef glDepthFunc
#endif
#ifdef PFNGLDEPTHFUNCPROC
#undef PFNGLDEPTHFUNCPROC
#endif
typedef void  (*PFNGLDEPTHFUNCPROC)(GLenum func);

#ifdef glDepthMask
#undef glDepthMask
#endif
#ifdef PFNGLDEPTHMASKPROC
#undef PFNGLDEPTHMASKPROC
#endif
typedef void  (*PFNGLDEPTHMASKPROC)(GLboolean flag);

#ifdef glDepthRangex
#undef glDepthRangex
#endif
#ifdef PFNGLDEPTHRANGEXPROC
#undef PFNGLDEPTHRANGEXPROC
#endif
typedef void  (*PFNGLDEPTHRANGEXPROC)(GLfixed n, GLfixed f);

#ifdef glDisable
#undef glDisable
#endif
#ifdef PFNGLDISABLEPROC
#undef PFNGLDISABLEPROC
#endif
typedef void  (*PFNGLDISABLEPROC)(GLenum cap);

#ifdef glDisableClientState
#undef glDisableClientState
#endif
#ifdef PFNGLDISABLECLIENTSTATEPROC
#undef PFNGLDISABLECLIENTSTATEPROC
#endif
typedef void  (*PFNGLDISABLECLIENTSTATEPROC)(GLenum array);

#ifdef glDrawArrays
#undef glDrawArrays
#endif
#ifdef PFNGLDRAWARRAYSPROC
#undef PFNGLDRAWARRAYSPROC
#endif
typedef void  (*PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);

#ifdef glDrawElements
#undef glDrawElements
#endif
#ifdef PFNGLDRAWELEMENTSPROC
#undef PFNGLDRAWELEMENTSPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices);

#ifdef glEnable
#undef glEnable
#endif
#ifdef PFNGLENABLEPROC
#undef PFNGLENABLEPROC
#endif
typedef void  (*PFNGLENABLEPROC)(GLenum cap);

#ifdef glEnableClientState
#undef glEnableClientState
#endif
#ifdef PFNGLENABLECLIENTSTATEPROC
#undef PFNGLENABLECLIENTSTATEPROC
#endif
typedef void  (*PFNGLENABLECLIENTSTATEPROC)(GLenum array);

#ifdef glFinish
#undef glFinish
#endif
#ifdef PFNGLFINISHPROC
#undef PFNGLFINISHPROC
#endif
typedef void  (*PFNGLFINISHPROC)(void);

#ifdef glFlush
#undef glFlush
#endif
#ifdef PFNGLFLUSHPROC
#undef PFNGLFLUSHPROC
#endif
typedef void  (*PFNGLFLUSHPROC)(void);

#ifdef glFogx
#undef glFogx
#endif
#ifdef PFNGLFOGXPROC
#undef PFNGLFOGXPROC
#endif
typedef void  (*PFNGLFOGXPROC)(GLenum pname, GLfixed param);

#ifdef glFogxv
#undef glFogxv
#endif
#ifdef PFNGLFOGXVPROC
#undef PFNGLFOGXVPROC
#endif
typedef void  (*PFNGLFOGXVPROC)(GLenum pname, const GLfixed *param);

#ifdef glFrontFace
#undef glFrontFace
#endif
#ifdef PFNGLFRONTFACEPROC
#undef PFNGLFRONTFACEPROC
#endif
typedef void  (*PFNGLFRONTFACEPROC)(GLenum mode);

#ifdef glFrustumx
#undef glFrustumx
#endif
#ifdef PFNGLFRUSTUMXPROC
#undef PFNGLFRUSTUMXPROC
#endif
typedef void  (*PFNGLFRUSTUMXPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);

#ifdef glGetBooleanv
#undef glGetBooleanv
#endif
#ifdef PFNGLGETBOOLEANVPROC
#undef PFNGLGETBOOLEANVPROC
#endif
typedef void  (*PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean *data);

#ifdef glGetBufferParameteriv
#undef glGetBufferParameteriv
#endif
#ifdef PFNGLGETBUFFERPARAMETERIVPROC
#undef PFNGLGETBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetClipPlanex
#undef glGetClipPlanex
#endif
#ifdef PFNGLGETCLIPPLANEXPROC
#undef PFNGLGETCLIPPLANEXPROC
#endif
typedef void  (*PFNGLGETCLIPPLANEXPROC)(GLenum plane, GLfixed *equation);

#ifdef glGenBuffers
#undef glGenBuffers
#endif
#ifdef PFNGLGENBUFFERSPROC
#undef PFNGLGENBUFFERSPROC
#endif
typedef void  (*PFNGLGENBUFFERSPROC)(GLsizei n, GLuint *buffers);

#ifdef glGenTextures
#undef glGenTextures
#endif
#ifdef PFNGLGENTEXTURESPROC
#undef PFNGLGENTEXTURESPROC
#endif
typedef void  (*PFNGLGENTEXTURESPROC)(GLsizei n, GLuint *textures);

#ifdef glGetError
#undef glGetError
#endif
#ifdef PFNGLGETERRORPROC
#undef PFNGLGETERRORPROC
#endif
typedef GLenum  (*PFNGLGETERRORPROC)(void);

#ifdef glGetFixedv
#undef glGetFixedv
#endif
#ifdef PFNGLGETFIXEDVPROC
#undef PFNGLGETFIXEDVPROC
#endif
typedef void  (*PFNGLGETFIXEDVPROC)(GLenum pname, GLfixed *params);

#ifdef glGetIntegerv
#undef glGetIntegerv
#endif
#ifdef PFNGLGETINTEGERVPROC
#undef PFNGLGETINTEGERVPROC
#endif
typedef void  (*PFNGLGETINTEGERVPROC)(GLenum pname, GLint *data);

#ifdef glGetLightxv
#undef glGetLightxv
#endif
#ifdef PFNGLGETLIGHTXVPROC
#undef PFNGLGETLIGHTXVPROC
#endif
typedef void  (*PFNGLGETLIGHTXVPROC)(GLenum light, GLenum pname, GLfixed *params);

#ifdef glGetMaterialxv
#undef glGetMaterialxv
#endif
#ifdef PFNGLGETMATERIALXVPROC
#undef PFNGLGETMATERIALXVPROC
#endif
typedef void  (*PFNGLGETMATERIALXVPROC)(GLenum face, GLenum pname, GLfixed *params);

#ifdef glGetPointerv
#undef glGetPointerv
#endif
#ifdef PFNGLGETPOINTERVPROC
#undef PFNGLGETPOINTERVPROC
#endif
typedef void  (*PFNGLGETPOINTERVPROC)(GLenum pname, void **params);

#ifdef glGetString
#undef glGetString
#endif
#ifdef PFNGLGETSTRINGPROC
#undef PFNGLGETSTRINGPROC
#endif
typedef const GLubyte * (*PFNGLGETSTRINGPROC)(GLenum name);

#ifdef glGetTexEnviv
#undef glGetTexEnviv
#endif
#ifdef PFNGLGETTEXENVIVPROC
#undef PFNGLGETTEXENVIVPROC
#endif
typedef void  (*PFNGLGETTEXENVIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetTexEnvxv
#undef glGetTexEnvxv
#endif
#ifdef PFNGLGETTEXENVXVPROC
#undef PFNGLGETTEXENVXVPROC
#endif
typedef void  (*PFNGLGETTEXENVXVPROC)(GLenum target, GLenum pname, GLfixed *params);

#ifdef glGetTexParameteriv
#undef glGetTexParameteriv
#endif
#ifdef PFNGLGETTEXPARAMETERIVPROC
#undef PFNGLGETTEXPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetTexParameterxv
#undef glGetTexParameterxv
#endif
#ifdef PFNGLGETTEXPARAMETERXVPROC
#undef PFNGLGETTEXPARAMETERXVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERXVPROC)(GLenum target, GLenum pname, GLfixed *params);

#ifdef glHint
#undef glHint
#endif
#ifdef PFNGLHINTPROC
#undef PFNGLHINTPROC
#endif
typedef void  (*PFNGLHINTPROC)(GLenum target, GLenum mode);

#ifdef glIsBuffer
#undef glIsBuffer
#endif
#ifdef PFNGLISBUFFERPROC
#undef PFNGLISBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISBUFFERPROC)(GLuint buffer);

#ifdef glIsEnabled
#undef glIsEnabled
#endif
#ifdef PFNGLISENABLEDPROC
#undef PFNGLISENABLEDPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDPROC)(GLenum cap);

#ifdef glIsTexture
#undef glIsTexture
#endif
#ifdef PFNGLISTEXTUREPROC
#undef PFNGLISTEXTUREPROC
#endif
typedef GLboolean  (*PFNGLISTEXTUREPROC)(GLuint texture);

#ifdef glLightModelx
#undef glLightModelx
#endif
#ifdef PFNGLLIGHTMODELXPROC
#undef PFNGLLIGHTMODELXPROC
#endif
typedef void  (*PFNGLLIGHTMODELXPROC)(GLenum pname, GLfixed param);

#ifdef glLightModelxv
#undef glLightModelxv
#endif
#ifdef PFNGLLIGHTMODELXVPROC
#undef PFNGLLIGHTMODELXVPROC
#endif
typedef void  (*PFNGLLIGHTMODELXVPROC)(GLenum pname, const GLfixed *param);

#ifdef glLightx
#undef glLightx
#endif
#ifdef PFNGLLIGHTXPROC
#undef PFNGLLIGHTXPROC
#endif
typedef void  (*PFNGLLIGHTXPROC)(GLenum light, GLenum pname, GLfixed param);

#ifdef glLightxv
#undef glLightxv
#endif
#ifdef PFNGLLIGHTXVPROC
#undef PFNGLLIGHTXVPROC
#endif
typedef void  (*PFNGLLIGHTXVPROC)(GLenum light, GLenum pname, const GLfixed *params);

#ifdef glLineWidthx
#undef glLineWidthx
#endif
#ifdef PFNGLLINEWIDTHXPROC
#undef PFNGLLINEWIDTHXPROC
#endif
typedef void  (*PFNGLLINEWIDTHXPROC)(GLfixed width);

#ifdef glLoadIdentity
#undef glLoadIdentity
#endif
#ifdef PFNGLLOADIDENTITYPROC
#undef PFNGLLOADIDENTITYPROC
#endif
typedef void  (*PFNGLLOADIDENTITYPROC)(void);

#ifdef glLoadMatrixx
#undef glLoadMatrixx
#endif
#ifdef PFNGLLOADMATRIXXPROC
#undef PFNGLLOADMATRIXXPROC
#endif
typedef void  (*PFNGLLOADMATRIXXPROC)(const GLfixed *m);

#ifdef glLogicOp
#undef glLogicOp
#endif
#ifdef PFNGLLOGICOPPROC
#undef PFNGLLOGICOPPROC
#endif
typedef void  (*PFNGLLOGICOPPROC)(GLenum opcode);

#ifdef glMaterialx
#undef glMaterialx
#endif
#ifdef PFNGLMATERIALXPROC
#undef PFNGLMATERIALXPROC
#endif
typedef void  (*PFNGLMATERIALXPROC)(GLenum face, GLenum pname, GLfixed param);

#ifdef glMaterialxv
#undef glMaterialxv
#endif
#ifdef PFNGLMATERIALXVPROC
#undef PFNGLMATERIALXVPROC
#endif
typedef void  (*PFNGLMATERIALXVPROC)(GLenum face, GLenum pname, const GLfixed *param);

#ifdef glMatrixMode
#undef glMatrixMode
#endif
#ifdef PFNGLMATRIXMODEPROC
#undef PFNGLMATRIXMODEPROC
#endif
typedef void  (*PFNGLMATRIXMODEPROC)(GLenum mode);

#ifdef glMultMatrixx
#undef glMultMatrixx
#endif
#ifdef PFNGLMULTMATRIXXPROC
#undef PFNGLMULTMATRIXXPROC
#endif
typedef void  (*PFNGLMULTMATRIXXPROC)(const GLfixed *m);

#ifdef glMultiTexCoord4x
#undef glMultiTexCoord4x
#endif
#ifdef PFNGLMULTITEXCOORD4XPROC
#undef PFNGLMULTITEXCOORD4XPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4XPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);

#ifdef glNormal3x
#undef glNormal3x
#endif
#ifdef PFNGLNORMAL3XPROC
#undef PFNGLNORMAL3XPROC
#endif
typedef void  (*PFNGLNORMAL3XPROC)(GLfixed nx, GLfixed ny, GLfixed nz);

#ifdef glNormalPointer
#undef glNormalPointer
#endif
#ifdef PFNGLNORMALPOINTERPROC
#undef PFNGLNORMALPOINTERPROC
#endif
typedef void  (*PFNGLNORMALPOINTERPROC)(GLenum type, GLsizei stride, const void *pointer);

#ifdef glOrthox
#undef glOrthox
#endif
#ifdef PFNGLORTHOXPROC
#undef PFNGLORTHOXPROC
#endif
typedef void  (*PFNGLORTHOXPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);

#ifdef glPixelStorei
#undef glPixelStorei
#endif
#ifdef PFNGLPIXELSTOREIPROC
#undef PFNGLPIXELSTOREIPROC
#endif
typedef void  (*PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);

#ifdef glPointParameterx
#undef glPointParameterx
#endif
#ifdef PFNGLPOINTPARAMETERXPROC
#undef PFNGLPOINTPARAMETERXPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERXPROC)(GLenum pname, GLfixed param);

#ifdef glPointParameterxv
#undef glPointParameterxv
#endif
#ifdef PFNGLPOINTPARAMETERXVPROC
#undef PFNGLPOINTPARAMETERXVPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERXVPROC)(GLenum pname, const GLfixed *params);

#ifdef glPointSizex
#undef glPointSizex
#endif
#ifdef PFNGLPOINTSIZEXPROC
#undef PFNGLPOINTSIZEXPROC
#endif
typedef void  (*PFNGLPOINTSIZEXPROC)(GLfixed size);

#ifdef glPolygonOffsetx
#undef glPolygonOffsetx
#endif
#ifdef PFNGLPOLYGONOFFSETXPROC
#undef PFNGLPOLYGONOFFSETXPROC
#endif
typedef void  (*PFNGLPOLYGONOFFSETXPROC)(GLfixed factor, GLfixed units);

#ifdef glPopMatrix
#undef glPopMatrix
#endif
#ifdef PFNGLPOPMATRIXPROC
#undef PFNGLPOPMATRIXPROC
#endif
typedef void  (*PFNGLPOPMATRIXPROC)(void);

#ifdef glPushMatrix
#undef glPushMatrix
#endif
#ifdef PFNGLPUSHMATRIXPROC
#undef PFNGLPUSHMATRIXPROC
#endif
typedef void  (*PFNGLPUSHMATRIXPROC)(void);

#ifdef glReadPixels
#undef glReadPixels
#endif
#ifdef PFNGLREADPIXELSPROC
#undef PFNGLREADPIXELSPROC
#endif
typedef void  (*PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);

#ifdef glRotatex
#undef glRotatex
#endif
#ifdef PFNGLROTATEXPROC
#undef PFNGLROTATEXPROC
#endif
typedef void  (*PFNGLROTATEXPROC)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);

#ifdef glSampleCoverage
#undef glSampleCoverage
#endif
#ifdef PFNGLSAMPLECOVERAGEPROC
#undef PFNGLSAMPLECOVERAGEPROC
#endif
typedef void  (*PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);

#ifdef glSampleCoveragex
#undef glSampleCoveragex
#endif
#ifdef PFNGLSAMPLECOVERAGEXPROC
#undef PFNGLSAMPLECOVERAGEXPROC
#endif
typedef void  (*PFNGLSAMPLECOVERAGEXPROC)(GLclampx value, GLboolean invert);

#ifdef glScalex
#undef glScalex
#endif
#ifdef PFNGLSCALEXPROC
#undef PFNGLSCALEXPROC
#endif
typedef void  (*PFNGLSCALEXPROC)(GLfixed x, GLfixed y, GLfixed z);

#ifdef glScissor
#undef glScissor
#endif
#ifdef PFNGLSCISSORPROC
#undef PFNGLSCISSORPROC
#endif
typedef void  (*PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glShadeModel
#undef glShadeModel
#endif
#ifdef PFNGLSHADEMODELPROC
#undef PFNGLSHADEMODELPROC
#endif
typedef void  (*PFNGLSHADEMODELPROC)(GLenum mode);

#ifdef glStencilFunc
#undef glStencilFunc
#endif
#ifdef PFNGLSTENCILFUNCPROC
#undef PFNGLSTENCILFUNCPROC
#endif
typedef void  (*PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);

#ifdef glStencilMask
#undef glStencilMask
#endif
#ifdef PFNGLSTENCILMASKPROC
#undef PFNGLSTENCILMASKPROC
#endif
typedef void  (*PFNGLSTENCILMASKPROC)(GLuint mask);

#ifdef glStencilOp
#undef glStencilOp
#endif
#ifdef PFNGLSTENCILOPPROC
#undef PFNGLSTENCILOPPROC
#endif
typedef void  (*PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);

#ifdef glTexCoordPointer
#undef glTexCoordPointer
#endif
#ifdef PFNGLTEXCOORDPOINTERPROC
#undef PFNGLTEXCOORDPOINTERPROC
#endif
typedef void  (*PFNGLTEXCOORDPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glTexEnvi
#undef glTexEnvi
#endif
#ifdef PFNGLTEXENVIPROC
#undef PFNGLTEXENVIPROC
#endif
typedef void  (*PFNGLTEXENVIPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glTexEnvx
#undef glTexEnvx
#endif
#ifdef PFNGLTEXENVXPROC
#undef PFNGLTEXENVXPROC
#endif
typedef void  (*PFNGLTEXENVXPROC)(GLenum target, GLenum pname, GLfixed param);

#ifdef glTexEnviv
#undef glTexEnviv
#endif
#ifdef PFNGLTEXENVIVPROC
#undef PFNGLTEXENVIVPROC
#endif
typedef void  (*PFNGLTEXENVIVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexEnvxv
#undef glTexEnvxv
#endif
#ifdef PFNGLTEXENVXVPROC
#undef PFNGLTEXENVXVPROC
#endif
typedef void  (*PFNGLTEXENVXVPROC)(GLenum target, GLenum pname, const GLfixed *params);

#ifdef glTexImage2D
#undef glTexImage2D
#endif
#ifdef PFNGLTEXIMAGE2DPROC
#undef PFNGLTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTexParameteri
#undef glTexParameteri
#endif
#ifdef PFNGLTEXPARAMETERIPROC
#undef PFNGLTEXPARAMETERIPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glTexParameterx
#undef glTexParameterx
#endif
#ifdef PFNGLTEXPARAMETERXPROC
#undef PFNGLTEXPARAMETERXPROC
#endif
typedef void  (*PFNGLTEXPARAMETERXPROC)(GLenum target, GLenum pname, GLfixed param);

#ifdef glTexParameteriv
#undef glTexParameteriv
#endif
#ifdef PFNGLTEXPARAMETERIVPROC
#undef PFNGLTEXPARAMETERIVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexParameterxv
#undef glTexParameterxv
#endif
#ifdef PFNGLTEXPARAMETERXVPROC
#undef PFNGLTEXPARAMETERXVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERXVPROC)(GLenum target, GLenum pname, const GLfixed *params);

#ifdef glTexSubImage2D
#undef glTexSubImage2D
#endif
#ifdef PFNGLTEXSUBIMAGE2DPROC
#undef PFNGLTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifdef glTranslatex
#undef glTranslatex
#endif
#ifdef PFNGLTRANSLATEXPROC
#undef PFNGLTRANSLATEXPROC
#endif
typedef void  (*PFNGLTRANSLATEXPROC)(GLfixed x, GLfixed y, GLfixed z);

#ifdef glVertexPointer
#undef glVertexPointer
#endif
#ifdef PFNGLVERTEXPOINTERPROC
#undef PFNGLVERTEXPOINTERPROC
#endif
typedef void  (*PFNGLVERTEXPOINTERPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glViewport
#undef glViewport
#endif
#ifdef PFNGLVIEWPORTPROC
#undef PFNGLVIEWPORTPROC
#endif
typedef void  (*PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);

#ifndef GL_ES_VERSION_2_0
#define GL_ES_VERSION_2_0 1
#endif

#ifdef glActiveTexture
#undef glActiveTexture
#endif
#ifdef PFNGLACTIVETEXTUREPROC
#undef PFNGLACTIVETEXTUREPROC
#endif
typedef void  (*PFNGLACTIVETEXTUREPROC)(GLenum texture);

#ifdef glAttachShader
#undef glAttachShader
#endif
#ifdef PFNGLATTACHSHADERPROC
#undef PFNGLATTACHSHADERPROC
#endif
typedef void  (*PFNGLATTACHSHADERPROC)(GLuint program, GLuint shader);

#ifdef glBindAttribLocation
#undef glBindAttribLocation
#endif
#ifdef PFNGLBINDATTRIBLOCATIONPROC
#undef PFNGLBINDATTRIBLOCATIONPROC
#endif
typedef void  (*PFNGLBINDATTRIBLOCATIONPROC)(GLuint program, GLuint index, const GLchar *name);

#ifdef glBindBuffer
#undef glBindBuffer
#endif
#ifdef PFNGLBINDBUFFERPROC
#undef PFNGLBINDBUFFERPROC
#endif
typedef void  (*PFNGLBINDBUFFERPROC)(GLenum target, GLuint buffer);

#ifdef glBindFramebuffer
#undef glBindFramebuffer
#endif
#ifdef PFNGLBINDFRAMEBUFFERPROC
#undef PFNGLBINDFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);

#ifdef glBindRenderbuffer
#undef glBindRenderbuffer
#endif
#ifdef PFNGLBINDRENDERBUFFERPROC
#undef PFNGLBINDRENDERBUFFERPROC
#endif
typedef void  (*PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);

#ifdef glBindTexture
#undef glBindTexture
#endif
#ifdef PFNGLBINDTEXTUREPROC
#undef PFNGLBINDTEXTUREPROC
#endif
typedef void  (*PFNGLBINDTEXTUREPROC)(GLenum target, GLuint texture);

#ifdef glBlendColor
#undef glBlendColor
#endif
#ifdef PFNGLBLENDCOLORPROC
#undef PFNGLBLENDCOLORPROC
#endif
typedef void  (*PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glBlendEquation
#undef glBlendEquation
#endif
#ifdef PFNGLBLENDEQUATIONPROC
#undef PFNGLBLENDEQUATIONPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONPROC)(GLenum mode);

#ifdef glBlendEquationSeparate
#undef glBlendEquationSeparate
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEPROC
#undef PFNGLBLENDEQUATIONSEPARATEPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB, GLenum modeAlpha);

#ifdef glBlendFunc
#undef glBlendFunc
#endif
#ifdef PFNGLBLENDFUNCPROC
#undef PFNGLBLENDFUNCPROC
#endif
typedef void  (*PFNGLBLENDFUNCPROC)(GLenum sfactor, GLenum dfactor);

#ifdef glBlendFuncSeparate
#undef glBlendFuncSeparate
#endif
#ifdef PFNGLBLENDFUNCSEPARATEPROC
#undef PFNGLBLENDFUNCSEPARATEPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);

#ifdef glBufferData
#undef glBufferData
#endif
#ifdef PFNGLBUFFERDATAPROC
#undef PFNGLBUFFERDATAPROC
#endif
typedef void  (*PFNGLBUFFERDATAPROC)(GLenum target, GLsizeiptr size, const void *data, GLenum usage);

#ifdef glBufferSubData
#undef glBufferSubData
#endif
#ifdef PFNGLBUFFERSUBDATAPROC
#undef PFNGLBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLBUFFERSUBDATAPROC)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);

#ifdef glCheckFramebufferStatus
#undef glCheckFramebufferStatus
#endif
#ifdef PFNGLCHECKFRAMEBUFFERSTATUSPROC
#undef PFNGLCHECKFRAMEBUFFERSTATUSPROC
#endif
typedef GLenum  (*PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);

#ifdef glClear
#undef glClear
#endif
#ifdef PFNGLCLEARPROC
#undef PFNGLCLEARPROC
#endif
typedef void  (*PFNGLCLEARPROC)(GLbitfield mask);

#ifdef glClearColor
#undef glClearColor
#endif
#ifdef PFNGLCLEARCOLORPROC
#undef PFNGLCLEARCOLORPROC
#endif
typedef void  (*PFNGLCLEARCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glClearDepthf
#undef glClearDepthf
#endif
#ifdef PFNGLCLEARDEPTHFPROC
#undef PFNGLCLEARDEPTHFPROC
#endif
typedef void  (*PFNGLCLEARDEPTHFPROC)(GLfloat d);

#ifdef glClearStencil
#undef glClearStencil
#endif
#ifdef PFNGLCLEARSTENCILPROC
#undef PFNGLCLEARSTENCILPROC
#endif
typedef void  (*PFNGLCLEARSTENCILPROC)(GLint s);

#ifdef glColorMask
#undef glColorMask
#endif
#ifdef PFNGLCOLORMASKPROC
#undef PFNGLCOLORMASKPROC
#endif
typedef void  (*PFNGLCOLORMASKPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);

#ifdef glCompileShader
#undef glCompileShader
#endif
#ifdef PFNGLCOMPILESHADERPROC
#undef PFNGLCOMPILESHADERPROC
#endif
typedef void  (*PFNGLCOMPILESHADERPROC)(GLuint shader);

#ifdef glCompressedTexImage2D
#undef glCompressedTexImage2D
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE2DPROC
#undef PFNGLCOMPRESSEDTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage2D
#undef glCompressedTexSubImage2D
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCopyTexImage2D
#undef glCopyTexImage2D
#endif
#ifdef PFNGLCOPYTEXIMAGE2DPROC
#undef PFNGLCOPYTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLCOPYTEXIMAGE2DPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);

#ifdef glCopyTexSubImage2D
#undef glCopyTexSubImage2D
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE2DPROC
#undef PFNGLCOPYTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glCreateProgram
#undef glCreateProgram
#endif
#ifdef PFNGLCREATEPROGRAMPROC
#undef PFNGLCREATEPROGRAMPROC
#endif
typedef GLuint  (*PFNGLCREATEPROGRAMPROC)(void);

#ifdef glCreateShader
#undef glCreateShader
#endif
#ifdef PFNGLCREATESHADERPROC
#undef PFNGLCREATESHADERPROC
#endif
typedef GLuint  (*PFNGLCREATESHADERPROC)(GLenum type);

#ifdef glCullFace
#undef glCullFace
#endif
#ifdef PFNGLCULLFACEPROC
#undef PFNGLCULLFACEPROC
#endif
typedef void  (*PFNGLCULLFACEPROC)(GLenum mode);

#ifdef glDeleteBuffers
#undef glDeleteBuffers
#endif
#ifdef PFNGLDELETEBUFFERSPROC
#undef PFNGLDELETEBUFFERSPROC
#endif
typedef void  (*PFNGLDELETEBUFFERSPROC)(GLsizei n, const GLuint *buffers);

#ifdef glDeleteFramebuffers
#undef glDeleteFramebuffers
#endif
#ifdef PFNGLDELETEFRAMEBUFFERSPROC
#undef PFNGLDELETEFRAMEBUFFERSPROC
#endif
typedef void  (*PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint *framebuffers);

#ifdef glDeleteProgram
#undef glDeleteProgram
#endif
#ifdef PFNGLDELETEPROGRAMPROC
#undef PFNGLDELETEPROGRAMPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMPROC)(GLuint program);

#ifdef glDeleteRenderbuffers
#undef glDeleteRenderbuffers
#endif
#ifdef PFNGLDELETERENDERBUFFERSPROC
#undef PFNGLDELETERENDERBUFFERSPROC
#endif
typedef void  (*PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint *renderbuffers);

#ifdef glDeleteShader
#undef glDeleteShader
#endif
#ifdef PFNGLDELETESHADERPROC
#undef PFNGLDELETESHADERPROC
#endif
typedef void  (*PFNGLDELETESHADERPROC)(GLuint shader);

#ifdef glDeleteTextures
#undef glDeleteTextures
#endif
#ifdef PFNGLDELETETEXTURESPROC
#undef PFNGLDELETETEXTURESPROC
#endif
typedef void  (*PFNGLDELETETEXTURESPROC)(GLsizei n, const GLuint *textures);

#ifdef glDepthFunc
#undef glDepthFunc
#endif
#ifdef PFNGLDEPTHFUNCPROC
#undef PFNGLDEPTHFUNCPROC
#endif
typedef void  (*PFNGLDEPTHFUNCPROC)(GLenum func);

#ifdef glDepthMask
#undef glDepthMask
#endif
#ifdef PFNGLDEPTHMASKPROC
#undef PFNGLDEPTHMASKPROC
#endif
typedef void  (*PFNGLDEPTHMASKPROC)(GLboolean flag);

#ifdef glDepthRangef
#undef glDepthRangef
#endif
#ifdef PFNGLDEPTHRANGEFPROC
#undef PFNGLDEPTHRANGEFPROC
#endif
typedef void  (*PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);

#ifdef glDetachShader
#undef glDetachShader
#endif
#ifdef PFNGLDETACHSHADERPROC
#undef PFNGLDETACHSHADERPROC
#endif
typedef void  (*PFNGLDETACHSHADERPROC)(GLuint program, GLuint shader);

#ifdef glDisable
#undef glDisable
#endif
#ifdef PFNGLDISABLEPROC
#undef PFNGLDISABLEPROC
#endif
typedef void  (*PFNGLDISABLEPROC)(GLenum cap);

#ifdef glDisableVertexAttribArray
#undef glDisableVertexAttribArray
#endif
#ifdef PFNGLDISABLEVERTEXATTRIBARRAYPROC
#undef PFNGLDISABLEVERTEXATTRIBARRAYPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);

#ifdef glDrawArrays
#undef glDrawArrays
#endif
#ifdef PFNGLDRAWARRAYSPROC
#undef PFNGLDRAWARRAYSPROC
#endif
typedef void  (*PFNGLDRAWARRAYSPROC)(GLenum mode, GLint first, GLsizei count);

#ifdef glDrawElements
#undef glDrawElements
#endif
#ifdef PFNGLDRAWELEMENTSPROC
#undef PFNGLDRAWELEMENTSPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices);

#ifdef glEnable
#undef glEnable
#endif
#ifdef PFNGLENABLEPROC
#undef PFNGLENABLEPROC
#endif
typedef void  (*PFNGLENABLEPROC)(GLenum cap);

#ifdef glEnableVertexAttribArray
#undef glEnableVertexAttribArray
#endif
#ifdef PFNGLENABLEVERTEXATTRIBARRAYPROC
#undef PFNGLENABLEVERTEXATTRIBARRAYPROC
#endif
typedef void  (*PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);

#ifdef glFinish
#undef glFinish
#endif
#ifdef PFNGLFINISHPROC
#undef PFNGLFINISHPROC
#endif
typedef void  (*PFNGLFINISHPROC)(void);

#ifdef glFlush
#undef glFlush
#endif
#ifdef PFNGLFLUSHPROC
#undef PFNGLFLUSHPROC
#endif
typedef void  (*PFNGLFLUSHPROC)(void);

#ifdef glFramebufferRenderbuffer
#undef glFramebufferRenderbuffer
#endif
#ifdef PFNGLFRAMEBUFFERRENDERBUFFERPROC
#undef PFNGLFRAMEBUFFERRENDERBUFFERPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);

#ifdef glFramebufferTexture2D
#undef glFramebufferTexture2D
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE2DPROC
#undef PFNGLFRAMEBUFFERTEXTURE2DPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glFrontFace
#undef glFrontFace
#endif
#ifdef PFNGLFRONTFACEPROC
#undef PFNGLFRONTFACEPROC
#endif
typedef void  (*PFNGLFRONTFACEPROC)(GLenum mode);

#ifdef glGenBuffers
#undef glGenBuffers
#endif
#ifdef PFNGLGENBUFFERSPROC
#undef PFNGLGENBUFFERSPROC
#endif
typedef void  (*PFNGLGENBUFFERSPROC)(GLsizei n, GLuint *buffers);

#ifdef glGenerateMipmap
#undef glGenerateMipmap
#endif
#ifdef PFNGLGENERATEMIPMAPPROC
#undef PFNGLGENERATEMIPMAPPROC
#endif
typedef void  (*PFNGLGENERATEMIPMAPPROC)(GLenum target);

#ifdef glGenFramebuffers
#undef glGenFramebuffers
#endif
#ifdef PFNGLGENFRAMEBUFFERSPROC
#undef PFNGLGENFRAMEBUFFERSPROC
#endif
typedef void  (*PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);

#ifdef glGenRenderbuffers
#undef glGenRenderbuffers
#endif
#ifdef PFNGLGENRENDERBUFFERSPROC
#undef PFNGLGENRENDERBUFFERSPROC
#endif
typedef void  (*PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);

#ifdef glGenTextures
#undef glGenTextures
#endif
#ifdef PFNGLGENTEXTURESPROC
#undef PFNGLGENTEXTURESPROC
#endif
typedef void  (*PFNGLGENTEXTURESPROC)(GLsizei n, GLuint *textures);

#ifdef glGetActiveAttrib
#undef glGetActiveAttrib
#endif
#ifdef PFNGLGETACTIVEATTRIBPROC
#undef PFNGLGETACTIVEATTRIBPROC
#endif
typedef void  (*PFNGLGETACTIVEATTRIBPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);

#ifdef glGetActiveUniform
#undef glGetActiveUniform
#endif
#ifdef PFNGLGETACTIVEUNIFORMPROC
#undef PFNGLGETACTIVEUNIFORMPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);

#ifdef glGetAttachedShaders
#undef glGetAttachedShaders
#endif
#ifdef PFNGLGETATTACHEDSHADERSPROC
#undef PFNGLGETATTACHEDSHADERSPROC
#endif
typedef void  (*PFNGLGETATTACHEDSHADERSPROC)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);

#ifdef glGetAttribLocation
#undef glGetAttribLocation
#endif
#ifdef PFNGLGETATTRIBLOCATIONPROC
#undef PFNGLGETATTRIBLOCATIONPROC
#endif
typedef GLint  (*PFNGLGETATTRIBLOCATIONPROC)(GLuint program, const GLchar *name);

#ifdef glGetBooleanv
#undef glGetBooleanv
#endif
#ifdef PFNGLGETBOOLEANVPROC
#undef PFNGLGETBOOLEANVPROC
#endif
typedef void  (*PFNGLGETBOOLEANVPROC)(GLenum pname, GLboolean *data);

#ifdef glGetBufferParameteriv
#undef glGetBufferParameteriv
#endif
#ifdef PFNGLGETBUFFERPARAMETERIVPROC
#undef PFNGLGETBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetError
#undef glGetError
#endif
#ifdef PFNGLGETERRORPROC
#undef PFNGLGETERRORPROC
#endif
typedef GLenum  (*PFNGLGETERRORPROC)(void);

#ifdef glGetFloatv
#undef glGetFloatv
#endif
#ifdef PFNGLGETFLOATVPROC
#undef PFNGLGETFLOATVPROC
#endif
typedef void  (*PFNGLGETFLOATVPROC)(GLenum pname, GLfloat *data);

#ifdef glGetFramebufferAttachmentParameteriv
#undef glGetFramebufferAttachmentParameteriv
#endif
#ifdef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#undef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint *params);

#ifdef glGetIntegerv
#undef glGetIntegerv
#endif
#ifdef PFNGLGETINTEGERVPROC
#undef PFNGLGETINTEGERVPROC
#endif
typedef void  (*PFNGLGETINTEGERVPROC)(GLenum pname, GLint *data);

#ifdef glGetProgramiv
#undef glGetProgramiv
#endif
#ifdef PFNGLGETPROGRAMIVPROC
#undef PFNGLGETPROGRAMIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMIVPROC)(GLuint program, GLenum pname, GLint *params);

#ifdef glGetProgramInfoLog
#undef glGetProgramInfoLog
#endif
#ifdef PFNGLGETPROGRAMINFOLOGPROC
#undef PFNGLGETPROGRAMINFOLOGPROC
#endif
typedef void  (*PFNGLGETPROGRAMINFOLOGPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

#ifdef glGetRenderbufferParameteriv
#undef glGetRenderbufferParameteriv
#endif
#ifdef PFNGLGETRENDERBUFFERPARAMETERIVPROC
#undef PFNGLGETRENDERBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetShaderiv
#undef glGetShaderiv
#endif
#ifdef PFNGLGETSHADERIVPROC
#undef PFNGLGETSHADERIVPROC
#endif
typedef void  (*PFNGLGETSHADERIVPROC)(GLuint shader, GLenum pname, GLint *params);

#ifdef glGetShaderInfoLog
#undef glGetShaderInfoLog
#endif
#ifdef PFNGLGETSHADERINFOLOGPROC
#undef PFNGLGETSHADERINFOLOGPROC
#endif
typedef void  (*PFNGLGETSHADERINFOLOGPROC)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

#ifdef glGetShaderPrecisionFormat
#undef glGetShaderPrecisionFormat
#endif
#ifdef PFNGLGETSHADERPRECISIONFORMATPROC
#undef PFNGLGETSHADERPRECISIONFORMATPROC
#endif
typedef void  (*PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);

#ifdef glGetShaderSource
#undef glGetShaderSource
#endif
#ifdef PFNGLGETSHADERSOURCEPROC
#undef PFNGLGETSHADERSOURCEPROC
#endif
typedef void  (*PFNGLGETSHADERSOURCEPROC)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);

#ifdef glGetString
#undef glGetString
#endif
#ifdef PFNGLGETSTRINGPROC
#undef PFNGLGETSTRINGPROC
#endif
typedef const GLubyte * (*PFNGLGETSTRINGPROC)(GLenum name);

#ifdef glGetTexParameterfv
#undef glGetTexParameterfv
#endif
#ifdef PFNGLGETTEXPARAMETERFVPROC
#undef PFNGLGETTEXPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetTexParameteriv
#undef glGetTexParameteriv
#endif
#ifdef PFNGLGETTEXPARAMETERIVPROC
#undef PFNGLGETTEXPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetUniformfv
#undef glGetUniformfv
#endif
#ifdef PFNGLGETUNIFORMFVPROC
#undef PFNGLGETUNIFORMFVPROC
#endif
typedef void  (*PFNGLGETUNIFORMFVPROC)(GLuint program, GLint location, GLfloat *params);

#ifdef glGetUniformiv
#undef glGetUniformiv
#endif
#ifdef PFNGLGETUNIFORMIVPROC
#undef PFNGLGETUNIFORMIVPROC
#endif
typedef void  (*PFNGLGETUNIFORMIVPROC)(GLuint program, GLint location, GLint *params);

#ifdef glGetUniformLocation
#undef glGetUniformLocation
#endif
#ifdef PFNGLGETUNIFORMLOCATIONPROC
#undef PFNGLGETUNIFORMLOCATIONPROC
#endif
typedef GLint  (*PFNGLGETUNIFORMLOCATIONPROC)(GLuint program, const GLchar *name);

#ifdef glGetVertexAttribfv
#undef glGetVertexAttribfv
#endif
#ifdef PFNGLGETVERTEXATTRIBFVPROC
#undef PFNGLGETVERTEXATTRIBFVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBFVPROC)(GLuint index, GLenum pname, GLfloat *params);

#ifdef glGetVertexAttribiv
#undef glGetVertexAttribiv
#endif
#ifdef PFNGLGETVERTEXATTRIBIVPROC
#undef PFNGLGETVERTEXATTRIBIVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIVPROC)(GLuint index, GLenum pname, GLint *params);

#ifdef glGetVertexAttribPointerv
#undef glGetVertexAttribPointerv
#endif
#ifdef PFNGLGETVERTEXATTRIBPOINTERVPROC
#undef PFNGLGETVERTEXATTRIBPOINTERVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index, GLenum pname, void **pointer);

#ifdef glHint
#undef glHint
#endif
#ifdef PFNGLHINTPROC
#undef PFNGLHINTPROC
#endif
typedef void  (*PFNGLHINTPROC)(GLenum target, GLenum mode);

#ifdef glIsBuffer
#undef glIsBuffer
#endif
#ifdef PFNGLISBUFFERPROC
#undef PFNGLISBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISBUFFERPROC)(GLuint buffer);

#ifdef glIsEnabled
#undef glIsEnabled
#endif
#ifdef PFNGLISENABLEDPROC
#undef PFNGLISENABLEDPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDPROC)(GLenum cap);

#ifdef glIsFramebuffer
#undef glIsFramebuffer
#endif
#ifdef PFNGLISFRAMEBUFFERPROC
#undef PFNGLISFRAMEBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);

#ifdef glIsProgram
#undef glIsProgram
#endif
#ifdef PFNGLISPROGRAMPROC
#undef PFNGLISPROGRAMPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMPROC)(GLuint program);

#ifdef glIsRenderbuffer
#undef glIsRenderbuffer
#endif
#ifdef PFNGLISRENDERBUFFERPROC
#undef PFNGLISRENDERBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);

#ifdef glIsShader
#undef glIsShader
#endif
#ifdef PFNGLISSHADERPROC
#undef PFNGLISSHADERPROC
#endif
typedef GLboolean  (*PFNGLISSHADERPROC)(GLuint shader);

#ifdef glIsTexture
#undef glIsTexture
#endif
#ifdef PFNGLISTEXTUREPROC
#undef PFNGLISTEXTUREPROC
#endif
typedef GLboolean  (*PFNGLISTEXTUREPROC)(GLuint texture);

#ifdef glLineWidth
#undef glLineWidth
#endif
#ifdef PFNGLLINEWIDTHPROC
#undef PFNGLLINEWIDTHPROC
#endif
typedef void  (*PFNGLLINEWIDTHPROC)(GLfloat width);

#ifdef glLinkProgram
#undef glLinkProgram
#endif
#ifdef PFNGLLINKPROGRAMPROC
#undef PFNGLLINKPROGRAMPROC
#endif
typedef void  (*PFNGLLINKPROGRAMPROC)(GLuint program);

#ifdef glPixelStorei
#undef glPixelStorei
#endif
#ifdef PFNGLPIXELSTOREIPROC
#undef PFNGLPIXELSTOREIPROC
#endif
typedef void  (*PFNGLPIXELSTOREIPROC)(GLenum pname, GLint param);

#ifdef glPolygonOffset
#undef glPolygonOffset
#endif
#ifdef PFNGLPOLYGONOFFSETPROC
#undef PFNGLPOLYGONOFFSETPROC
#endif
typedef void  (*PFNGLPOLYGONOFFSETPROC)(GLfloat factor, GLfloat units);

#ifdef glReadPixels
#undef glReadPixels
#endif
#ifdef PFNGLREADPIXELSPROC
#undef PFNGLREADPIXELSPROC
#endif
typedef void  (*PFNGLREADPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);

#ifdef glReleaseShaderCompiler
#undef glReleaseShaderCompiler
#endif
#ifdef PFNGLRELEASESHADERCOMPILERPROC
#undef PFNGLRELEASESHADERCOMPILERPROC
#endif
typedef void  (*PFNGLRELEASESHADERCOMPILERPROC)(void);

#ifdef glRenderbufferStorage
#undef glRenderbufferStorage
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEPROC
#undef PFNGLRENDERBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glSampleCoverage
#undef glSampleCoverage
#endif
#ifdef PFNGLSAMPLECOVERAGEPROC
#undef PFNGLSAMPLECOVERAGEPROC
#endif
typedef void  (*PFNGLSAMPLECOVERAGEPROC)(GLfloat value, GLboolean invert);

#ifdef glScissor
#undef glScissor
#endif
#ifdef PFNGLSCISSORPROC
#undef PFNGLSCISSORPROC
#endif
typedef void  (*PFNGLSCISSORPROC)(GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glShaderBinary
#undef glShaderBinary
#endif
#ifdef PFNGLSHADERBINARYPROC
#undef PFNGLSHADERBINARYPROC
#endif
typedef void  (*PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);

#ifdef glShaderSource
#undef glShaderSource
#endif
#ifdef PFNGLSHADERSOURCEPROC
#undef PFNGLSHADERSOURCEPROC
#endif
typedef void  (*PFNGLSHADERSOURCEPROC)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);

#ifdef glStencilFunc
#undef glStencilFunc
#endif
#ifdef PFNGLSTENCILFUNCPROC
#undef PFNGLSTENCILFUNCPROC
#endif
typedef void  (*PFNGLSTENCILFUNCPROC)(GLenum func, GLint ref, GLuint mask);

#ifdef glStencilFuncSeparate
#undef glStencilFuncSeparate
#endif
#ifdef PFNGLSTENCILFUNCSEPARATEPROC
#undef PFNGLSTENCILFUNCSEPARATEPROC
#endif
typedef void  (*PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face, GLenum func, GLint ref, GLuint mask);

#ifdef glStencilMask
#undef glStencilMask
#endif
#ifdef PFNGLSTENCILMASKPROC
#undef PFNGLSTENCILMASKPROC
#endif
typedef void  (*PFNGLSTENCILMASKPROC)(GLuint mask);

#ifdef glStencilMaskSeparate
#undef glStencilMaskSeparate
#endif
#ifdef PFNGLSTENCILMASKSEPARATEPROC
#undef PFNGLSTENCILMASKSEPARATEPROC
#endif
typedef void  (*PFNGLSTENCILMASKSEPARATEPROC)(GLenum face, GLuint mask);

#ifdef glStencilOp
#undef glStencilOp
#endif
#ifdef PFNGLSTENCILOPPROC
#undef PFNGLSTENCILOPPROC
#endif
typedef void  (*PFNGLSTENCILOPPROC)(GLenum fail, GLenum zfail, GLenum zpass);

#ifdef glStencilOpSeparate
#undef glStencilOpSeparate
#endif
#ifdef PFNGLSTENCILOPSEPARATEPROC
#undef PFNGLSTENCILOPSEPARATEPROC
#endif
typedef void  (*PFNGLSTENCILOPSEPARATEPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);

#ifdef glTexImage2D
#undef glTexImage2D
#endif
#ifdef PFNGLTEXIMAGE2DPROC
#undef PFNGLTEXIMAGE2DPROC
#endif
typedef void  (*PFNGLTEXIMAGE2DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTexParameterf
#undef glTexParameterf
#endif
#ifdef PFNGLTEXPARAMETERFPROC
#undef PFNGLTEXPARAMETERFPROC
#endif
typedef void  (*PFNGLTEXPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat param);

#ifdef glTexParameterfv
#undef glTexParameterfv
#endif
#ifdef PFNGLTEXPARAMETERFVPROC
#undef PFNGLTEXPARAMETERFVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glTexParameteri
#undef glTexParameteri
#endif
#ifdef PFNGLTEXPARAMETERIPROC
#undef PFNGLTEXPARAMETERIPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glTexParameteriv
#undef glTexParameteriv
#endif
#ifdef PFNGLTEXPARAMETERIVPROC
#undef PFNGLTEXPARAMETERIVPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexSubImage2D
#undef glTexSubImage2D
#endif
#ifdef PFNGLTEXSUBIMAGE2DPROC
#undef PFNGLTEXSUBIMAGE2DPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE2DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifdef glUniform1f
#undef glUniform1f
#endif
#ifdef PFNGLUNIFORM1FPROC
#undef PFNGLUNIFORM1FPROC
#endif
typedef void  (*PFNGLUNIFORM1FPROC)(GLint location, GLfloat v0);

#ifdef glUniform1fv
#undef glUniform1fv
#endif
#ifdef PFNGLUNIFORM1FVPROC
#undef PFNGLUNIFORM1FVPROC
#endif
typedef void  (*PFNGLUNIFORM1FVPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform1i
#undef glUniform1i
#endif
#ifdef PFNGLUNIFORM1IPROC
#undef PFNGLUNIFORM1IPROC
#endif
typedef void  (*PFNGLUNIFORM1IPROC)(GLint location, GLint v0);

#ifdef glUniform1iv
#undef glUniform1iv
#endif
#ifdef PFNGLUNIFORM1IVPROC
#undef PFNGLUNIFORM1IVPROC
#endif
typedef void  (*PFNGLUNIFORM1IVPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform2f
#undef glUniform2f
#endif
#ifdef PFNGLUNIFORM2FPROC
#undef PFNGLUNIFORM2FPROC
#endif
typedef void  (*PFNGLUNIFORM2FPROC)(GLint location, GLfloat v0, GLfloat v1);

#ifdef glUniform2fv
#undef glUniform2fv
#endif
#ifdef PFNGLUNIFORM2FVPROC
#undef PFNGLUNIFORM2FVPROC
#endif
typedef void  (*PFNGLUNIFORM2FVPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform2i
#undef glUniform2i
#endif
#ifdef PFNGLUNIFORM2IPROC
#undef PFNGLUNIFORM2IPROC
#endif
typedef void  (*PFNGLUNIFORM2IPROC)(GLint location, GLint v0, GLint v1);

#ifdef glUniform2iv
#undef glUniform2iv
#endif
#ifdef PFNGLUNIFORM2IVPROC
#undef PFNGLUNIFORM2IVPROC
#endif
typedef void  (*PFNGLUNIFORM2IVPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform3f
#undef glUniform3f
#endif
#ifdef PFNGLUNIFORM3FPROC
#undef PFNGLUNIFORM3FPROC
#endif
typedef void  (*PFNGLUNIFORM3FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);

#ifdef glUniform3fv
#undef glUniform3fv
#endif
#ifdef PFNGLUNIFORM3FVPROC
#undef PFNGLUNIFORM3FVPROC
#endif
typedef void  (*PFNGLUNIFORM3FVPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform3i
#undef glUniform3i
#endif
#ifdef PFNGLUNIFORM3IPROC
#undef PFNGLUNIFORM3IPROC
#endif
typedef void  (*PFNGLUNIFORM3IPROC)(GLint location, GLint v0, GLint v1, GLint v2);

#ifdef glUniform3iv
#undef glUniform3iv
#endif
#ifdef PFNGLUNIFORM3IVPROC
#undef PFNGLUNIFORM3IVPROC
#endif
typedef void  (*PFNGLUNIFORM3IVPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform4f
#undef glUniform4f
#endif
#ifdef PFNGLUNIFORM4FPROC
#undef PFNGLUNIFORM4FPROC
#endif
typedef void  (*PFNGLUNIFORM4FPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

#ifdef glUniform4fv
#undef glUniform4fv
#endif
#ifdef PFNGLUNIFORM4FVPROC
#undef PFNGLUNIFORM4FVPROC
#endif
typedef void  (*PFNGLUNIFORM4FVPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform4i
#undef glUniform4i
#endif
#ifdef PFNGLUNIFORM4IPROC
#undef PFNGLUNIFORM4IPROC
#endif
typedef void  (*PFNGLUNIFORM4IPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);

#ifdef glUniform4iv
#undef glUniform4iv
#endif
#ifdef PFNGLUNIFORM4IVPROC
#undef PFNGLUNIFORM4IVPROC
#endif
typedef void  (*PFNGLUNIFORM4IVPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniformMatrix2fv
#undef glUniformMatrix2fv
#endif
#ifdef PFNGLUNIFORMMATRIX2FVPROC
#undef PFNGLUNIFORMMATRIX2FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3fv
#undef glUniformMatrix3fv
#endif
#ifdef PFNGLUNIFORMMATRIX3FVPROC
#undef PFNGLUNIFORMMATRIX3FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4fv
#undef glUniformMatrix4fv
#endif
#ifdef PFNGLUNIFORMMATRIX4FVPROC
#undef PFNGLUNIFORMMATRIX4FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUseProgram
#undef glUseProgram
#endif
#ifdef PFNGLUSEPROGRAMPROC
#undef PFNGLUSEPROGRAMPROC
#endif
typedef void  (*PFNGLUSEPROGRAMPROC)(GLuint program);

#ifdef glValidateProgram
#undef glValidateProgram
#endif
#ifdef PFNGLVALIDATEPROGRAMPROC
#undef PFNGLVALIDATEPROGRAMPROC
#endif
typedef void  (*PFNGLVALIDATEPROGRAMPROC)(GLuint program);

#ifdef glVertexAttrib1f
#undef glVertexAttrib1f
#endif
#ifdef PFNGLVERTEXATTRIB1FPROC
#undef PFNGLVERTEXATTRIB1FPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FPROC)(GLuint index, GLfloat x);

#ifdef glVertexAttrib1fv
#undef glVertexAttrib1fv
#endif
#ifdef PFNGLVERTEXATTRIB1FVPROC
#undef PFNGLVERTEXATTRIB1FVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib2f
#undef glVertexAttrib2f
#endif
#ifdef PFNGLVERTEXATTRIB2FPROC
#undef PFNGLVERTEXATTRIB2FPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FPROC)(GLuint index, GLfloat x, GLfloat y);

#ifdef glVertexAttrib2fv
#undef glVertexAttrib2fv
#endif
#ifdef PFNGLVERTEXATTRIB2FVPROC
#undef PFNGLVERTEXATTRIB2FVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib3f
#undef glVertexAttrib3f
#endif
#ifdef PFNGLVERTEXATTRIB3FPROC
#undef PFNGLVERTEXATTRIB3FPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);

#ifdef glVertexAttrib3fv
#undef glVertexAttrib3fv
#endif
#ifdef PFNGLVERTEXATTRIB3FVPROC
#undef PFNGLVERTEXATTRIB3FVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib4f
#undef glVertexAttrib4f
#endif
#ifdef PFNGLVERTEXATTRIB4FPROC
#undef PFNGLVERTEXATTRIB4FPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glVertexAttrib4fv
#undef glVertexAttrib4fv
#endif
#ifdef PFNGLVERTEXATTRIB4FVPROC
#undef PFNGLVERTEXATTRIB4FVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttribPointer
#undef glVertexAttribPointer
#endif
#ifdef PFNGLVERTEXATTRIBPOINTERPROC
#undef PFNGLVERTEXATTRIBPOINTERPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);

#ifdef glViewport
#undef glViewport
#endif
#ifdef PFNGLVIEWPORTPROC
#undef PFNGLVIEWPORTPROC
#endif
typedef void  (*PFNGLVIEWPORTPROC)(GLint x, GLint y, GLsizei width, GLsizei height);

#ifndef GL_DEPTH_BUFFER_BIT
#define GL_DEPTH_BUFFER_BIT 0x00000100
#endif

#ifndef GL_STENCIL_BUFFER_BIT
#define GL_STENCIL_BUFFER_BIT 0x00000400
#endif

#ifndef GL_COLOR_BUFFER_BIT
#define GL_COLOR_BUFFER_BIT 0x00004000
#endif

#ifndef GL_FALSE
#define GL_FALSE 0
#endif

#ifndef GL_TRUE
#define GL_TRUE 1
#endif

#ifndef GL_POINTS
#define GL_POINTS 0x0000
#endif

#ifndef GL_LINES
#define GL_LINES 0x0001
#endif

#ifndef GL_LINE_LOOP
#define GL_LINE_LOOP 0x0002
#endif

#ifndef GL_LINE_STRIP
#define GL_LINE_STRIP 0x0003
#endif

#ifndef GL_TRIANGLES
#define GL_TRIANGLES 0x0004
#endif

#ifndef GL_TRIANGLE_STRIP
#define GL_TRIANGLE_STRIP 0x0005
#endif

#ifndef GL_TRIANGLE_FAN
#define GL_TRIANGLE_FAN 0x0006
#endif

#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_ONE
#define GL_ONE 1
#endif

#ifndef GL_SRC_COLOR
#define GL_SRC_COLOR 0x0300
#endif

#ifndef GL_ONE_MINUS_SRC_COLOR
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#endif

#ifndef GL_SRC_ALPHA
#define GL_SRC_ALPHA 0x0302
#endif

#ifndef GL_ONE_MINUS_SRC_ALPHA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#endif

#ifndef GL_DST_ALPHA
#define GL_DST_ALPHA 0x0304
#endif

#ifndef GL_ONE_MINUS_DST_ALPHA
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#endif

#ifndef GL_DST_COLOR
#define GL_DST_COLOR 0x0306
#endif

#ifndef GL_ONE_MINUS_DST_COLOR
#define GL_ONE_MINUS_DST_COLOR 0x0307
#endif

#ifndef GL_SRC_ALPHA_SATURATE
#define GL_SRC_ALPHA_SATURATE 0x0308
#endif

#ifndef GL_FUNC_ADD
#define GL_FUNC_ADD 0x8006
#endif

#ifndef GL_BLEND_EQUATION
#define GL_BLEND_EQUATION 0x8009
#endif

#ifndef GL_BLEND_EQUATION_RGB
#define GL_BLEND_EQUATION_RGB 0x8009
#endif

#ifndef GL_BLEND_EQUATION_ALPHA
#define GL_BLEND_EQUATION_ALPHA 0x883D
#endif

#ifndef GL_FUNC_SUBTRACT
#define GL_FUNC_SUBTRACT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#endif

#ifndef GL_BLEND_DST_RGB
#define GL_BLEND_DST_RGB 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB
#define GL_BLEND_SRC_RGB 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA
#define GL_BLEND_DST_ALPHA 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA
#define GL_BLEND_SRC_ALPHA 0x80CB
#endif

#ifndef GL_CONSTANT_COLOR
#define GL_CONSTANT_COLOR 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA
#define GL_CONSTANT_ALPHA 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#endif

#ifndef GL_BLEND_COLOR
#define GL_BLEND_COLOR 0x8005
#endif

#ifndef GL_ARRAY_BUFFER
#define GL_ARRAY_BUFFER 0x8892
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#endif

#ifndef GL_ARRAY_BUFFER_BINDING
#define GL_ARRAY_BUFFER_BINDING 0x8894
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_BINDING
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#endif

#ifndef GL_STREAM_DRAW
#define GL_STREAM_DRAW 0x88E0
#endif

#ifndef GL_STATIC_DRAW
#define GL_STATIC_DRAW 0x88E4
#endif

#ifndef GL_DYNAMIC_DRAW
#define GL_DYNAMIC_DRAW 0x88E8
#endif

#ifndef GL_BUFFER_SIZE
#define GL_BUFFER_SIZE 0x8764
#endif

#ifndef GL_BUFFER_USAGE
#define GL_BUFFER_USAGE 0x8765
#endif

#ifndef GL_CURRENT_VERTEX_ATTRIB
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#endif

#ifndef GL_FRONT
#define GL_FRONT 0x0404
#endif

#ifndef GL_BACK
#define GL_BACK 0x0405
#endif

#ifndef GL_FRONT_AND_BACK
#define GL_FRONT_AND_BACK 0x0408
#endif

#ifndef GL_TEXTURE_2D
#define GL_TEXTURE_2D 0x0DE1
#endif

#ifndef GL_CULL_FACE
#define GL_CULL_FACE 0x0B44
#endif

#ifndef GL_BLEND
#define GL_BLEND 0x0BE2
#endif

#ifndef GL_DITHER
#define GL_DITHER 0x0BD0
#endif

#ifndef GL_STENCIL_TEST
#define GL_STENCIL_TEST 0x0B90
#endif

#ifndef GL_DEPTH_TEST
#define GL_DEPTH_TEST 0x0B71
#endif

#ifndef GL_SCISSOR_TEST
#define GL_SCISSOR_TEST 0x0C11
#endif

#ifndef GL_POLYGON_OFFSET_FILL
#define GL_POLYGON_OFFSET_FILL 0x8037
#endif

#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#endif

#ifndef GL_SAMPLE_COVERAGE
#define GL_SAMPLE_COVERAGE 0x80A0
#endif

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_INVALID_ENUM
#define GL_INVALID_ENUM 0x0500
#endif

#ifndef GL_INVALID_VALUE
#define GL_INVALID_VALUE 0x0501
#endif

#ifndef GL_INVALID_OPERATION
#define GL_INVALID_OPERATION 0x0502
#endif

#ifndef GL_OUT_OF_MEMORY
#define GL_OUT_OF_MEMORY 0x0505
#endif

#ifndef GL_CW
#define GL_CW 0x0900
#endif

#ifndef GL_CCW
#define GL_CCW 0x0901
#endif

#ifndef GL_LINE_WIDTH
#define GL_LINE_WIDTH 0x0B21
#endif

#ifndef GL_ALIASED_POINT_SIZE_RANGE
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#endif

#ifndef GL_ALIASED_LINE_WIDTH_RANGE
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#endif

#ifndef GL_CULL_FACE_MODE
#define GL_CULL_FACE_MODE 0x0B45
#endif

#ifndef GL_FRONT_FACE
#define GL_FRONT_FACE 0x0B46
#endif

#ifndef GL_DEPTH_RANGE
#define GL_DEPTH_RANGE 0x0B70
#endif

#ifndef GL_DEPTH_WRITEMASK
#define GL_DEPTH_WRITEMASK 0x0B72
#endif

#ifndef GL_DEPTH_CLEAR_VALUE
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#endif

#ifndef GL_DEPTH_FUNC
#define GL_DEPTH_FUNC 0x0B74
#endif

#ifndef GL_STENCIL_CLEAR_VALUE
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#endif

#ifndef GL_STENCIL_FUNC
#define GL_STENCIL_FUNC 0x0B92
#endif

#ifndef GL_STENCIL_FAIL
#define GL_STENCIL_FAIL 0x0B94
#endif

#ifndef GL_STENCIL_PASS_DEPTH_FAIL
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#endif

#ifndef GL_STENCIL_PASS_DEPTH_PASS
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#endif

#ifndef GL_STENCIL_REF
#define GL_STENCIL_REF 0x0B97
#endif

#ifndef GL_STENCIL_VALUE_MASK
#define GL_STENCIL_VALUE_MASK 0x0B93
#endif

#ifndef GL_STENCIL_WRITEMASK
#define GL_STENCIL_WRITEMASK 0x0B98
#endif

#ifndef GL_STENCIL_BACK_FUNC
#define GL_STENCIL_BACK_FUNC 0x8800
#endif

#ifndef GL_STENCIL_BACK_FAIL
#define GL_STENCIL_BACK_FAIL 0x8801
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#endif

#ifndef GL_STENCIL_BACK_REF
#define GL_STENCIL_BACK_REF 0x8CA3
#endif

#ifndef GL_STENCIL_BACK_VALUE_MASK
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#endif

#ifndef GL_STENCIL_BACK_WRITEMASK
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#endif

#ifndef GL_VIEWPORT
#define GL_VIEWPORT 0x0BA2
#endif

#ifndef GL_SCISSOR_BOX
#define GL_SCISSOR_BOX 0x0C10
#endif

#ifndef GL_COLOR_CLEAR_VALUE
#define GL_COLOR_CLEAR_VALUE 0x0C22
#endif

#ifndef GL_COLOR_WRITEMASK
#define GL_COLOR_WRITEMASK 0x0C23
#endif

#ifndef GL_UNPACK_ALIGNMENT
#define GL_UNPACK_ALIGNMENT 0x0CF5
#endif

#ifndef GL_PACK_ALIGNMENT
#define GL_PACK_ALIGNMENT 0x0D05
#endif

#ifndef GL_MAX_TEXTURE_SIZE
#define GL_MAX_TEXTURE_SIZE 0x0D33
#endif

#ifndef GL_MAX_VIEWPORT_DIMS
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#endif

#ifndef GL_SUBPIXEL_BITS
#define GL_SUBPIXEL_BITS 0x0D50
#endif

#ifndef GL_RED_BITS
#define GL_RED_BITS 0x0D52
#endif

#ifndef GL_GREEN_BITS
#define GL_GREEN_BITS 0x0D53
#endif

#ifndef GL_BLUE_BITS
#define GL_BLUE_BITS 0x0D54
#endif

#ifndef GL_ALPHA_BITS
#define GL_ALPHA_BITS 0x0D55
#endif

#ifndef GL_DEPTH_BITS
#define GL_DEPTH_BITS 0x0D56
#endif

#ifndef GL_STENCIL_BITS
#define GL_STENCIL_BITS 0x0D57
#endif

#ifndef GL_POLYGON_OFFSET_UNITS
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#endif

#ifndef GL_POLYGON_OFFSET_FACTOR
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#endif

#ifndef GL_TEXTURE_BINDING_2D
#define GL_TEXTURE_BINDING_2D 0x8069
#endif

#ifndef GL_SAMPLE_BUFFERS
#define GL_SAMPLE_BUFFERS 0x80A8
#endif

#ifndef GL_SAMPLES
#define GL_SAMPLES 0x80A9
#endif

#ifndef GL_SAMPLE_COVERAGE_VALUE
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#endif

#ifndef GL_SAMPLE_COVERAGE_INVERT
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#endif

#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#endif

#ifndef GL_COMPRESSED_TEXTURE_FORMATS
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#endif

#ifndef GL_DONT_CARE
#define GL_DONT_CARE 0x1100
#endif

#ifndef GL_FASTEST
#define GL_FASTEST 0x1101
#endif

#ifndef GL_NICEST
#define GL_NICEST 0x1102
#endif

#ifndef GL_GENERATE_MIPMAP_HINT
#define GL_GENERATE_MIPMAP_HINT 0x8192
#endif

#ifndef GL_BYTE
#define GL_BYTE 0x1400
#endif

#ifndef GL_UNSIGNED_BYTE
#define GL_UNSIGNED_BYTE 0x1401
#endif

#ifndef GL_SHORT
#define GL_SHORT 0x1402
#endif

#ifndef GL_UNSIGNED_SHORT
#define GL_UNSIGNED_SHORT 0x1403
#endif

#ifndef GL_INT
#define GL_INT 0x1404
#endif

#ifndef GL_UNSIGNED_INT
#define GL_UNSIGNED_INT 0x1405
#endif

#ifndef GL_FLOAT
#define GL_FLOAT 0x1406
#endif

#ifndef GL_FIXED
#define GL_FIXED 0x140C
#endif

#ifndef GL_DEPTH_COMPONENT
#define GL_DEPTH_COMPONENT 0x1902
#endif

#ifndef GL_ALPHA
#define GL_ALPHA 0x1906
#endif

#ifndef GL_RGB
#define GL_RGB 0x1907
#endif

#ifndef GL_RGBA
#define GL_RGBA 0x1908
#endif

#ifndef GL_LUMINANCE
#define GL_LUMINANCE 0x1909
#endif

#ifndef GL_LUMINANCE_ALPHA
#define GL_LUMINANCE_ALPHA 0x190A
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#endif

#ifndef GL_UNSIGNED_SHORT_5_5_5_1
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#endif

#ifndef GL_UNSIGNED_SHORT_5_6_5
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#endif

#ifndef GL_FRAGMENT_SHADER
#define GL_FRAGMENT_SHADER 0x8B30
#endif

#ifndef GL_VERTEX_SHADER
#define GL_VERTEX_SHADER 0x8B31
#endif

#ifndef GL_MAX_VERTEX_ATTRIBS
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif

#ifndef GL_MAX_VARYING_VECTORS
#define GL_MAX_VARYING_VECTORS 0x8DFC
#endif

#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#endif

#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif

#ifndef GL_SHADER_TYPE
#define GL_SHADER_TYPE 0x8B4F
#endif

#ifndef GL_DELETE_STATUS
#define GL_DELETE_STATUS 0x8B80
#endif

#ifndef GL_LINK_STATUS
#define GL_LINK_STATUS 0x8B82
#endif

#ifndef GL_VALIDATE_STATUS
#define GL_VALIDATE_STATUS 0x8B83
#endif

#ifndef GL_ATTACHED_SHADERS
#define GL_ATTACHED_SHADERS 0x8B85
#endif

#ifndef GL_ACTIVE_UNIFORMS
#define GL_ACTIVE_UNIFORMS 0x8B86
#endif

#ifndef GL_ACTIVE_UNIFORM_MAX_LENGTH
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#endif

#ifndef GL_ACTIVE_ATTRIBUTES
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#endif

#ifndef GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#endif

#ifndef GL_SHADING_LANGUAGE_VERSION
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#endif

#ifndef GL_CURRENT_PROGRAM
#define GL_CURRENT_PROGRAM 0x8B8D
#endif

#ifndef GL_NEVER
#define GL_NEVER 0x0200
#endif

#ifndef GL_LESS
#define GL_LESS 0x0201
#endif

#ifndef GL_EQUAL
#define GL_EQUAL 0x0202
#endif

#ifndef GL_LEQUAL
#define GL_LEQUAL 0x0203
#endif

#ifndef GL_GREATER
#define GL_GREATER 0x0204
#endif

#ifndef GL_NOTEQUAL
#define GL_NOTEQUAL 0x0205
#endif

#ifndef GL_GEQUAL
#define GL_GEQUAL 0x0206
#endif

#ifndef GL_ALWAYS
#define GL_ALWAYS 0x0207
#endif

#ifndef GL_KEEP
#define GL_KEEP 0x1E00
#endif

#ifndef GL_REPLACE
#define GL_REPLACE 0x1E01
#endif

#ifndef GL_INCR
#define GL_INCR 0x1E02
#endif

#ifndef GL_DECR
#define GL_DECR 0x1E03
#endif

#ifndef GL_INVERT
#define GL_INVERT 0x150A
#endif

#ifndef GL_INCR_WRAP
#define GL_INCR_WRAP 0x8507
#endif

#ifndef GL_DECR_WRAP
#define GL_DECR_WRAP 0x8508
#endif

#ifndef GL_VENDOR
#define GL_VENDOR 0x1F00
#endif

#ifndef GL_RENDERER
#define GL_RENDERER 0x1F01
#endif

#ifndef GL_VERSION
#define GL_VERSION 0x1F02
#endif

#ifndef GL_EXTENSIONS
#define GL_EXTENSIONS 0x1F03
#endif

#ifndef GL_NEAREST
#define GL_NEAREST 0x2600
#endif

#ifndef GL_LINEAR
#define GL_LINEAR 0x2601
#endif

#ifndef GL_NEAREST_MIPMAP_NEAREST
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#endif

#ifndef GL_LINEAR_MIPMAP_NEAREST
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#endif

#ifndef GL_NEAREST_MIPMAP_LINEAR
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#endif

#ifndef GL_LINEAR_MIPMAP_LINEAR
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#endif

#ifndef GL_TEXTURE_MAG_FILTER
#define GL_TEXTURE_MAG_FILTER 0x2800
#endif

#ifndef GL_TEXTURE_MIN_FILTER
#define GL_TEXTURE_MIN_FILTER 0x2801
#endif

#ifndef GL_TEXTURE_WRAP_S
#define GL_TEXTURE_WRAP_S 0x2802
#endif

#ifndef GL_TEXTURE_WRAP_T
#define GL_TEXTURE_WRAP_T 0x2803
#endif

#ifndef GL_TEXTURE
#define GL_TEXTURE 0x1702
#endif

#ifndef GL_TEXTURE_CUBE_MAP
#define GL_TEXTURE_CUBE_MAP 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#endif

#ifndef GL_TEXTURE0
#define GL_TEXTURE0 0x84C0
#endif

#ifndef GL_TEXTURE1
#define GL_TEXTURE1 0x84C1
#endif

#ifndef GL_TEXTURE2
#define GL_TEXTURE2 0x84C2
#endif

#ifndef GL_TEXTURE3
#define GL_TEXTURE3 0x84C3
#endif

#ifndef GL_TEXTURE4
#define GL_TEXTURE4 0x84C4
#endif

#ifndef GL_TEXTURE5
#define GL_TEXTURE5 0x84C5
#endif

#ifndef GL_TEXTURE6
#define GL_TEXTURE6 0x84C6
#endif

#ifndef GL_TEXTURE7
#define GL_TEXTURE7 0x84C7
#endif

#ifndef GL_TEXTURE8
#define GL_TEXTURE8 0x84C8
#endif

#ifndef GL_TEXTURE9
#define GL_TEXTURE9 0x84C9
#endif

#ifndef GL_TEXTURE10
#define GL_TEXTURE10 0x84CA
#endif

#ifndef GL_TEXTURE11
#define GL_TEXTURE11 0x84CB
#endif

#ifndef GL_TEXTURE12
#define GL_TEXTURE12 0x84CC
#endif

#ifndef GL_TEXTURE13
#define GL_TEXTURE13 0x84CD
#endif

#ifndef GL_TEXTURE14
#define GL_TEXTURE14 0x84CE
#endif

#ifndef GL_TEXTURE15
#define GL_TEXTURE15 0x84CF
#endif

#ifndef GL_TEXTURE16
#define GL_TEXTURE16 0x84D0
#endif

#ifndef GL_TEXTURE17
#define GL_TEXTURE17 0x84D1
#endif

#ifndef GL_TEXTURE18
#define GL_TEXTURE18 0x84D2
#endif

#ifndef GL_TEXTURE19
#define GL_TEXTURE19 0x84D3
#endif

#ifndef GL_TEXTURE20
#define GL_TEXTURE20 0x84D4
#endif

#ifndef GL_TEXTURE21
#define GL_TEXTURE21 0x84D5
#endif

#ifndef GL_TEXTURE22
#define GL_TEXTURE22 0x84D6
#endif

#ifndef GL_TEXTURE23
#define GL_TEXTURE23 0x84D7
#endif

#ifndef GL_TEXTURE24
#define GL_TEXTURE24 0x84D8
#endif

#ifndef GL_TEXTURE25
#define GL_TEXTURE25 0x84D9
#endif

#ifndef GL_TEXTURE26
#define GL_TEXTURE26 0x84DA
#endif

#ifndef GL_TEXTURE27
#define GL_TEXTURE27 0x84DB
#endif

#ifndef GL_TEXTURE28
#define GL_TEXTURE28 0x84DC
#endif

#ifndef GL_TEXTURE29
#define GL_TEXTURE29 0x84DD
#endif

#ifndef GL_TEXTURE30
#define GL_TEXTURE30 0x84DE
#endif

#ifndef GL_TEXTURE31
#define GL_TEXTURE31 0x84DF
#endif

#ifndef GL_ACTIVE_TEXTURE
#define GL_ACTIVE_TEXTURE 0x84E0
#endif

#ifndef GL_REPEAT
#define GL_REPEAT 0x2901
#endif

#ifndef GL_CLAMP_TO_EDGE
#define GL_CLAMP_TO_EDGE 0x812F
#endif

#ifndef GL_MIRRORED_REPEAT
#define GL_MIRRORED_REPEAT 0x8370
#endif

#ifndef GL_FLOAT_VEC2
#define GL_FLOAT_VEC2 0x8B50
#endif

#ifndef GL_FLOAT_VEC3
#define GL_FLOAT_VEC3 0x8B51
#endif

#ifndef GL_FLOAT_VEC4
#define GL_FLOAT_VEC4 0x8B52
#endif

#ifndef GL_INT_VEC2
#define GL_INT_VEC2 0x8B53
#endif

#ifndef GL_INT_VEC3
#define GL_INT_VEC3 0x8B54
#endif

#ifndef GL_INT_VEC4
#define GL_INT_VEC4 0x8B55
#endif

#ifndef GL_BOOL
#define GL_BOOL 0x8B56
#endif

#ifndef GL_BOOL_VEC2
#define GL_BOOL_VEC2 0x8B57
#endif

#ifndef GL_BOOL_VEC3
#define GL_BOOL_VEC3 0x8B58
#endif

#ifndef GL_BOOL_VEC4
#define GL_BOOL_VEC4 0x8B59
#endif

#ifndef GL_FLOAT_MAT2
#define GL_FLOAT_MAT2 0x8B5A
#endif

#ifndef GL_FLOAT_MAT3
#define GL_FLOAT_MAT3 0x8B5B
#endif

#ifndef GL_FLOAT_MAT4
#define GL_FLOAT_MAT4 0x8B5C
#endif

#ifndef GL_SAMPLER_2D
#define GL_SAMPLER_2D 0x8B5E
#endif

#ifndef GL_SAMPLER_CUBE
#define GL_SAMPLER_CUBE 0x8B60
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif

#ifndef GL_COMPILE_STATUS
#define GL_COMPILE_STATUS 0x8B81
#endif

#ifndef GL_INFO_LOG_LENGTH
#define GL_INFO_LOG_LENGTH 0x8B84
#endif

#ifndef GL_SHADER_SOURCE_LENGTH
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#endif

#ifndef GL_SHADER_COMPILER
#define GL_SHADER_COMPILER 0x8DFA
#endif

#ifndef GL_SHADER_BINARY_FORMATS
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif

#ifndef GL_NUM_SHADER_BINARY_FORMATS
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif

#ifndef GL_LOW_FLOAT
#define GL_LOW_FLOAT 0x8DF0
#endif

#ifndef GL_MEDIUM_FLOAT
#define GL_MEDIUM_FLOAT 0x8DF1
#endif

#ifndef GL_HIGH_FLOAT
#define GL_HIGH_FLOAT 0x8DF2
#endif

#ifndef GL_LOW_INT
#define GL_LOW_INT 0x8DF3
#endif

#ifndef GL_MEDIUM_INT
#define GL_MEDIUM_INT 0x8DF4
#endif

#ifndef GL_HIGH_INT
#define GL_HIGH_INT 0x8DF5
#endif

#ifndef GL_FRAMEBUFFER
#define GL_FRAMEBUFFER 0x8D40
#endif

#ifndef GL_RENDERBUFFER
#define GL_RENDERBUFFER 0x8D41
#endif

#ifndef GL_RGBA4
#define GL_RGBA4 0x8056
#endif

#ifndef GL_RGB5_A1
#define GL_RGB5_A1 0x8057
#endif

#ifndef GL_RGB565
#define GL_RGB565 0x8D62
#endif

#ifndef GL_DEPTH_COMPONENT16
#define GL_DEPTH_COMPONENT16 0x81A5
#endif

#ifndef GL_STENCIL_INDEX8
#define GL_STENCIL_INDEX8 0x8D48
#endif

#ifndef GL_RENDERBUFFER_WIDTH
#define GL_RENDERBUFFER_WIDTH 0x8D42
#endif

#ifndef GL_RENDERBUFFER_HEIGHT
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif

#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif

#ifndef GL_RENDERBUFFER_RED_SIZE
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif

#ifndef GL_RENDERBUFFER_GREEN_SIZE
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif

#ifndef GL_RENDERBUFFER_BLUE_SIZE
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif

#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif

#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif

#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif

#ifndef GL_COLOR_ATTACHMENT0
#define GL_COLOR_ATTACHMENT0 0x8CE0
#endif

#ifndef GL_DEPTH_ATTACHMENT
#define GL_DEPTH_ATTACHMENT 0x8D00
#endif

#ifndef GL_STENCIL_ATTACHMENT
#define GL_STENCIL_ATTACHMENT 0x8D20
#endif

#ifndef GL_NONE
#define GL_NONE 0
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x8CD9
#endif

#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif

#ifndef GL_FRAMEBUFFER_BINDING
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING
#define GL_RENDERBUFFER_BINDING 0x8CA7
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif

#ifndef GL_ES_VERSION_3_0
#define GL_ES_VERSION_3_0 1
#endif

#ifdef glReadBuffer
#undef glReadBuffer
#endif
#ifdef PFNGLREADBUFFERPROC
#undef PFNGLREADBUFFERPROC
#endif
typedef void  (*PFNGLREADBUFFERPROC)(GLenum src);

#ifdef glDrawRangeElements
#undef glDrawRangeElements
#endif
#ifdef PFNGLDRAWRANGEELEMENTSPROC
#undef PFNGLDRAWRANGEELEMENTSPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);

#ifdef glTexImage3D
#undef glTexImage3D
#endif
#ifdef PFNGLTEXIMAGE3DPROC
#undef PFNGLTEXIMAGE3DPROC
#endif
typedef void  (*PFNGLTEXIMAGE3DPROC)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTexSubImage3D
#undef glTexSubImage3D
#endif
#ifdef PFNGLTEXSUBIMAGE3DPROC
#undef PFNGLTEXSUBIMAGE3DPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);

#ifdef glCopyTexSubImage3D
#undef glCopyTexSubImage3D
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE3DPROC
#undef PFNGLCOPYTEXSUBIMAGE3DPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glCompressedTexImage3D
#undef glCompressedTexImage3D
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE3DPROC
#undef PFNGLCOMPRESSEDTEXIMAGE3DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage3D
#undef glCompressedTexSubImage3D
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);

#ifdef glGenQueries
#undef glGenQueries
#endif
#ifdef PFNGLGENQUERIESPROC
#undef PFNGLGENQUERIESPROC
#endif
typedef void  (*PFNGLGENQUERIESPROC)(GLsizei n, GLuint *ids);

#ifdef glDeleteQueries
#undef glDeleteQueries
#endif
#ifdef PFNGLDELETEQUERIESPROC
#undef PFNGLDELETEQUERIESPROC
#endif
typedef void  (*PFNGLDELETEQUERIESPROC)(GLsizei n, const GLuint *ids);

#ifdef glIsQuery
#undef glIsQuery
#endif
#ifdef PFNGLISQUERYPROC
#undef PFNGLISQUERYPROC
#endif
typedef GLboolean  (*PFNGLISQUERYPROC)(GLuint id);

#ifdef glBeginQuery
#undef glBeginQuery
#endif
#ifdef PFNGLBEGINQUERYPROC
#undef PFNGLBEGINQUERYPROC
#endif
typedef void  (*PFNGLBEGINQUERYPROC)(GLenum target, GLuint id);

#ifdef glEndQuery
#undef glEndQuery
#endif
#ifdef PFNGLENDQUERYPROC
#undef PFNGLENDQUERYPROC
#endif
typedef void  (*PFNGLENDQUERYPROC)(GLenum target);

#ifdef glGetQueryiv
#undef glGetQueryiv
#endif
#ifdef PFNGLGETQUERYIVPROC
#undef PFNGLGETQUERYIVPROC
#endif
typedef void  (*PFNGLGETQUERYIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetQueryObjectuiv
#undef glGetQueryObjectuiv
#endif
#ifdef PFNGLGETQUERYOBJECTUIVPROC
#undef PFNGLGETQUERYOBJECTUIVPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUIVPROC)(GLuint id, GLenum pname, GLuint *params);

#ifdef glUnmapBuffer
#undef glUnmapBuffer
#endif
#ifdef PFNGLUNMAPBUFFERPROC
#undef PFNGLUNMAPBUFFERPROC
#endif
typedef GLboolean  (*PFNGLUNMAPBUFFERPROC)(GLenum target);

#ifdef glGetBufferPointerv
#undef glGetBufferPointerv
#endif
#ifdef PFNGLGETBUFFERPOINTERVPROC
#undef PFNGLGETBUFFERPOINTERVPROC
#endif
typedef void  (*PFNGLGETBUFFERPOINTERVPROC)(GLenum target, GLenum pname, void **params);

#ifdef glDrawBuffers
#undef glDrawBuffers
#endif
#ifdef PFNGLDRAWBUFFERSPROC
#undef PFNGLDRAWBUFFERSPROC
#endif
typedef void  (*PFNGLDRAWBUFFERSPROC)(GLsizei n, const GLenum *bufs);

#ifdef glUniformMatrix2x3fv
#undef glUniformMatrix2x3fv
#endif
#ifdef PFNGLUNIFORMMATRIX2X3FVPROC
#undef PFNGLUNIFORMMATRIX2X3FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3x2fv
#undef glUniformMatrix3x2fv
#endif
#ifdef PFNGLUNIFORMMATRIX3X2FVPROC
#undef PFNGLUNIFORMMATRIX3X2FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix2x4fv
#undef glUniformMatrix2x4fv
#endif
#ifdef PFNGLUNIFORMMATRIX2X4FVPROC
#undef PFNGLUNIFORMMATRIX2X4FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4x2fv
#undef glUniformMatrix4x2fv
#endif
#ifdef PFNGLUNIFORMMATRIX4X2FVPROC
#undef PFNGLUNIFORMMATRIX4X2FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3x4fv
#undef glUniformMatrix3x4fv
#endif
#ifdef PFNGLUNIFORMMATRIX3X4FVPROC
#undef PFNGLUNIFORMMATRIX3X4FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4x3fv
#undef glUniformMatrix4x3fv
#endif
#ifdef PFNGLUNIFORMMATRIX4X3FVPROC
#undef PFNGLUNIFORMMATRIX4X3FVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glBlitFramebuffer
#undef glBlitFramebuffer
#endif
#ifdef PFNGLBLITFRAMEBUFFERPROC
#undef PFNGLBLITFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#ifdef glRenderbufferStorageMultisample
#undef glRenderbufferStorageMultisample
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glFramebufferTextureLayer
#undef glFramebufferTextureLayer
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURELAYERPROC
#undef PFNGLFRAMEBUFFERTEXTURELAYERPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifdef glMapBufferRange
#undef glMapBufferRange
#endif
#ifdef PFNGLMAPBUFFERRANGEPROC
#undef PFNGLMAPBUFFERRANGEPROC
#endif
typedef void * (*PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);

#ifdef glFlushMappedBufferRange
#undef glFlushMappedBufferRange
#endif
#ifdef PFNGLFLUSHMAPPEDBUFFERRANGEPROC
#undef PFNGLFLUSHMAPPEDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);

#ifdef glBindVertexArray
#undef glBindVertexArray
#endif
#ifdef PFNGLBINDVERTEXARRAYPROC
#undef PFNGLBINDVERTEXARRAYPROC
#endif
typedef void  (*PFNGLBINDVERTEXARRAYPROC)(GLuint array);

#ifdef glDeleteVertexArrays
#undef glDeleteVertexArrays
#endif
#ifdef PFNGLDELETEVERTEXARRAYSPROC
#undef PFNGLDELETEVERTEXARRAYSPROC
#endif
typedef void  (*PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint *arrays);

#ifdef glGenVertexArrays
#undef glGenVertexArrays
#endif
#ifdef PFNGLGENVERTEXARRAYSPROC
#undef PFNGLGENVERTEXARRAYSPROC
#endif
typedef void  (*PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);

#ifdef glIsVertexArray
#undef glIsVertexArray
#endif
#ifdef PFNGLISVERTEXARRAYPROC
#undef PFNGLISVERTEXARRAYPROC
#endif
typedef GLboolean  (*PFNGLISVERTEXARRAYPROC)(GLuint array);

#ifdef glGetIntegeri_v
#undef glGetIntegeri_v
#endif
#ifdef PFNGLGETINTEGERI_VPROC
#undef PFNGLGETINTEGERI_VPROC
#endif
typedef void  (*PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint *data);

#ifdef glBeginTransformFeedback
#undef glBeginTransformFeedback
#endif
#ifdef PFNGLBEGINTRANSFORMFEEDBACKPROC
#undef PFNGLBEGINTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);

#ifdef glEndTransformFeedback
#undef glEndTransformFeedback
#endif
#ifdef PFNGLENDTRANSFORMFEEDBACKPROC
#undef PFNGLENDTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLENDTRANSFORMFEEDBACKPROC)(void);

#ifdef glBindBufferRange
#undef glBindBufferRange
#endif
#ifdef PFNGLBINDBUFFERRANGEPROC
#undef PFNGLBINDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glBindBufferBase
#undef glBindBufferBase
#endif
#ifdef PFNGLBINDBUFFERBASEPROC
#undef PFNGLBINDBUFFERBASEPROC
#endif
typedef void  (*PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);

#ifdef glTransformFeedbackVaryings
#undef glTransformFeedbackVaryings
#endif
#ifdef PFNGLTRANSFORMFEEDBACKVARYINGSPROC
#undef PFNGLTRANSFORMFEEDBACKVARYINGSPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);

#ifdef glGetTransformFeedbackVarying
#undef glGetTransformFeedbackVarying
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
#undef PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);

#ifdef glVertexAttribIPointer
#undef glVertexAttribIPointer
#endif
#ifdef PFNGLVERTEXATTRIBIPOINTERPROC
#undef PFNGLVERTEXATTRIBIPOINTERPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glGetVertexAttribIiv
#undef glGetVertexAttribIiv
#endif
#ifdef PFNGLGETVERTEXATTRIBIIVPROC
#undef PFNGLGETVERTEXATTRIBIIVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index, GLenum pname, GLint *params);

#ifdef glGetVertexAttribIuiv
#undef glGetVertexAttribIuiv
#endif
#ifdef PFNGLGETVERTEXATTRIBIUIVPROC
#undef PFNGLGETVERTEXATTRIBIUIVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index, GLenum pname, GLuint *params);

#ifdef glVertexAttribI4i
#undef glVertexAttribI4i
#endif
#ifdef PFNGLVERTEXATTRIBI4IPROC
#undef PFNGLVERTEXATTRIBI4IPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4IPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);

#ifdef glVertexAttribI4ui
#undef glVertexAttribI4ui
#endif
#ifdef PFNGLVERTEXATTRIBI4UIPROC
#undef PFNGLVERTEXATTRIBI4UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4UIPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);

#ifdef glVertexAttribI4iv
#undef glVertexAttribI4iv
#endif
#ifdef PFNGLVERTEXATTRIBI4IVPROC
#undef PFNGLVERTEXATTRIBI4IVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4IVPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI4uiv
#undef glVertexAttribI4uiv
#endif
#ifdef PFNGLVERTEXATTRIBI4UIVPROC
#undef PFNGLVERTEXATTRIBI4UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index, const GLuint *v);

#ifdef glGetUniformuiv
#undef glGetUniformuiv
#endif
#ifdef PFNGLGETUNIFORMUIVPROC
#undef PFNGLGETUNIFORMUIVPROC
#endif
typedef void  (*PFNGLGETUNIFORMUIVPROC)(GLuint program, GLint location, GLuint *params);

#ifdef glGetFragDataLocation
#undef glGetFragDataLocation
#endif
#ifdef PFNGLGETFRAGDATALOCATIONPROC
#undef PFNGLGETFRAGDATALOCATIONPROC
#endif
typedef GLint  (*PFNGLGETFRAGDATALOCATIONPROC)(GLuint program, const GLchar *name);

#ifdef glUniform1ui
#undef glUniform1ui
#endif
#ifdef PFNGLUNIFORM1UIPROC
#undef PFNGLUNIFORM1UIPROC
#endif
typedef void  (*PFNGLUNIFORM1UIPROC)(GLint location, GLuint v0);

#ifdef glUniform2ui
#undef glUniform2ui
#endif
#ifdef PFNGLUNIFORM2UIPROC
#undef PFNGLUNIFORM2UIPROC
#endif
typedef void  (*PFNGLUNIFORM2UIPROC)(GLint location, GLuint v0, GLuint v1);

#ifdef glUniform3ui
#undef glUniform3ui
#endif
#ifdef PFNGLUNIFORM3UIPROC
#undef PFNGLUNIFORM3UIPROC
#endif
typedef void  (*PFNGLUNIFORM3UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);

#ifdef glUniform4ui
#undef glUniform4ui
#endif
#ifdef PFNGLUNIFORM4UIPROC
#undef PFNGLUNIFORM4UIPROC
#endif
typedef void  (*PFNGLUNIFORM4UIPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

#ifdef glUniform1uiv
#undef glUniform1uiv
#endif
#ifdef PFNGLUNIFORM1UIVPROC
#undef PFNGLUNIFORM1UIVPROC
#endif
typedef void  (*PFNGLUNIFORM1UIVPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform2uiv
#undef glUniform2uiv
#endif
#ifdef PFNGLUNIFORM2UIVPROC
#undef PFNGLUNIFORM2UIVPROC
#endif
typedef void  (*PFNGLUNIFORM2UIVPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform3uiv
#undef glUniform3uiv
#endif
#ifdef PFNGLUNIFORM3UIVPROC
#undef PFNGLUNIFORM3UIVPROC
#endif
typedef void  (*PFNGLUNIFORM3UIVPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform4uiv
#undef glUniform4uiv
#endif
#ifdef PFNGLUNIFORM4UIVPROC
#undef PFNGLUNIFORM4UIVPROC
#endif
typedef void  (*PFNGLUNIFORM4UIVPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glClearBufferiv
#undef glClearBufferiv
#endif
#ifdef PFNGLCLEARBUFFERIVPROC
#undef PFNGLCLEARBUFFERIVPROC
#endif
typedef void  (*PFNGLCLEARBUFFERIVPROC)(GLenum buffer, GLint drawbuffer, const GLint *value);

#ifdef glClearBufferuiv
#undef glClearBufferuiv
#endif
#ifdef PFNGLCLEARBUFFERUIVPROC
#undef PFNGLCLEARBUFFERUIVPROC
#endif
typedef void  (*PFNGLCLEARBUFFERUIVPROC)(GLenum buffer, GLint drawbuffer, const GLuint *value);

#ifdef glClearBufferfv
#undef glClearBufferfv
#endif
#ifdef PFNGLCLEARBUFFERFVPROC
#undef PFNGLCLEARBUFFERFVPROC
#endif
typedef void  (*PFNGLCLEARBUFFERFVPROC)(GLenum buffer, GLint drawbuffer, const GLfloat *value);

#ifdef glClearBufferfi
#undef glClearBufferfi
#endif
#ifdef PFNGLCLEARBUFFERFIPROC
#undef PFNGLCLEARBUFFERFIPROC
#endif
typedef void  (*PFNGLCLEARBUFFERFIPROC)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);

#ifdef glGetStringi
#undef glGetStringi
#endif
#ifdef PFNGLGETSTRINGIPROC
#undef PFNGLGETSTRINGIPROC
#endif
typedef const GLubyte * (*PFNGLGETSTRINGIPROC)(GLenum name, GLuint index);

#ifdef glCopyBufferSubData
#undef glCopyBufferSubData
#endif
#ifdef PFNGLCOPYBUFFERSUBDATAPROC
#undef PFNGLCOPYBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

#ifdef glGetUniformIndices
#undef glGetUniformIndices
#endif
#ifdef PFNGLGETUNIFORMINDICESPROC
#undef PFNGLGETUNIFORMINDICESPROC
#endif
typedef void  (*PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);

#ifdef glGetActiveUniformsiv
#undef glGetActiveUniformsiv
#endif
#ifdef PFNGLGETACTIVEUNIFORMSIVPROC
#undef PFNGLGETACTIVEUNIFORMSIVPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);

#ifdef glGetUniformBlockIndex
#undef glGetUniformBlockIndex
#endif
#ifdef PFNGLGETUNIFORMBLOCKINDEXPROC
#undef PFNGLGETUNIFORMBLOCKINDEXPROC
#endif
typedef GLuint  (*PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar *uniformBlockName);

#ifdef glGetActiveUniformBlockiv
#undef glGetActiveUniformBlockiv
#endif
#ifdef PFNGLGETACTIVEUNIFORMBLOCKIVPROC
#undef PFNGLGETACTIVEUNIFORMBLOCKIVPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);

#ifdef glGetActiveUniformBlockName
#undef glGetActiveUniformBlockName
#endif
#ifdef PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
#undef PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);

#ifdef glUniformBlockBinding
#undef glUniformBlockBinding
#endif
#ifdef PFNGLUNIFORMBLOCKBINDINGPROC
#undef PFNGLUNIFORMBLOCKBINDINGPROC
#endif
typedef void  (*PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

#ifdef glDrawArraysInstanced
#undef glDrawArraysInstanced
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDPROC
#undef PFNGLDRAWARRAYSINSTANCEDPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);

#ifdef glDrawElementsInstanced
#undef glDrawElementsInstanced
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDPROC
#undef PFNGLDRAWELEMENTSINSTANCEDPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);

#ifdef glFenceSync
#undef glFenceSync
#endif
#ifdef PFNGLFENCESYNCPROC
#undef PFNGLFENCESYNCPROC
#endif
typedef GLsync  (*PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);

#ifdef glIsSync
#undef glIsSync
#endif
#ifdef PFNGLISSYNCPROC
#undef PFNGLISSYNCPROC
#endif
typedef GLboolean  (*PFNGLISSYNCPROC)(GLsync sync);

#ifdef glDeleteSync
#undef glDeleteSync
#endif
#ifdef PFNGLDELETESYNCPROC
#undef PFNGLDELETESYNCPROC
#endif
typedef void  (*PFNGLDELETESYNCPROC)(GLsync sync);

#ifdef glClientWaitSync
#undef glClientWaitSync
#endif
#ifdef PFNGLCLIENTWAITSYNCPROC
#undef PFNGLCLIENTWAITSYNCPROC
#endif
typedef GLenum  (*PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

#ifdef glWaitSync
#undef glWaitSync
#endif
#ifdef PFNGLWAITSYNCPROC
#undef PFNGLWAITSYNCPROC
#endif
typedef void  (*PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

#ifdef glGetInteger64v
#undef glGetInteger64v
#endif
#ifdef PFNGLGETINTEGER64VPROC
#undef PFNGLGETINTEGER64VPROC
#endif
typedef void  (*PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 *data);

#ifdef glGetSynciv
#undef glGetSynciv
#endif
#ifdef PFNGLGETSYNCIVPROC
#undef PFNGLGETSYNCIVPROC
#endif
typedef void  (*PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);

#ifdef glGetInteger64i_v
#undef glGetInteger64i_v
#endif
#ifdef PFNGLGETINTEGER64I_VPROC
#undef PFNGLGETINTEGER64I_VPROC
#endif
typedef void  (*PFNGLGETINTEGER64I_VPROC)(GLenum target, GLuint index, GLint64 *data);

#ifdef glGetBufferParameteri64v
#undef glGetBufferParameteri64v
#endif
#ifdef PFNGLGETBUFFERPARAMETERI64VPROC
#undef PFNGLGETBUFFERPARAMETERI64VPROC
#endif
typedef void  (*PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target, GLenum pname, GLint64 *params);

#ifdef glGenSamplers
#undef glGenSamplers
#endif
#ifdef PFNGLGENSAMPLERSPROC
#undef PFNGLGENSAMPLERSPROC
#endif
typedef void  (*PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint *samplers);

#ifdef glDeleteSamplers
#undef glDeleteSamplers
#endif
#ifdef PFNGLDELETESAMPLERSPROC
#undef PFNGLDELETESAMPLERSPROC
#endif
typedef void  (*PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint *samplers);

#ifdef glIsSampler
#undef glIsSampler
#endif
#ifdef PFNGLISSAMPLERPROC
#undef PFNGLISSAMPLERPROC
#endif
typedef GLboolean  (*PFNGLISSAMPLERPROC)(GLuint sampler);

#ifdef glBindSampler
#undef glBindSampler
#endif
#ifdef PFNGLBINDSAMPLERPROC
#undef PFNGLBINDSAMPLERPROC
#endif
typedef void  (*PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);

#ifdef glSamplerParameteri
#undef glSamplerParameteri
#endif
#ifdef PFNGLSAMPLERPARAMETERIPROC
#undef PFNGLSAMPLERPARAMETERIPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);

#ifdef glSamplerParameteriv
#undef glSamplerParameteriv
#endif
#ifdef PFNGLSAMPLERPARAMETERIVPROC
#undef PFNGLSAMPLERPARAMETERIVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint *param);

#ifdef glSamplerParameterf
#undef glSamplerParameterf
#endif
#ifdef PFNGLSAMPLERPARAMETERFPROC
#undef PFNGLSAMPLERPARAMETERFPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);

#ifdef glSamplerParameterfv
#undef glSamplerParameterfv
#endif
#ifdef PFNGLSAMPLERPARAMETERFVPROC
#undef PFNGLSAMPLERPARAMETERFVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat *param);

#ifdef glGetSamplerParameteriv
#undef glGetSamplerParameteriv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIVPROC
#undef PFNGLGETSAMPLERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint *params);

#ifdef glGetSamplerParameterfv
#undef glGetSamplerParameterfv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERFVPROC
#undef PFNGLGETSAMPLERPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat *params);

#ifdef glVertexAttribDivisor
#undef glVertexAttribDivisor
#endif
#ifdef PFNGLVERTEXATTRIBDIVISORPROC
#undef PFNGLVERTEXATTRIBDIVISORPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index, GLuint divisor);

#ifdef glBindTransformFeedback
#undef glBindTransformFeedback
#endif
#ifdef PFNGLBINDTRANSFORMFEEDBACKPROC
#undef PFNGLBINDTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);

#ifdef glDeleteTransformFeedbacks
#undef glDeleteTransformFeedbacks
#endif
#ifdef PFNGLDELETETRANSFORMFEEDBACKSPROC
#undef PFNGLDELETETRANSFORMFEEDBACKSPROC
#endif
typedef void  (*PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint *ids);

#ifdef glGenTransformFeedbacks
#undef glGenTransformFeedbacks
#endif
#ifdef PFNGLGENTRANSFORMFEEDBACKSPROC
#undef PFNGLGENTRANSFORMFEEDBACKSPROC
#endif
typedef void  (*PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint *ids);

#ifdef glIsTransformFeedback
#undef glIsTransformFeedback
#endif
#ifdef PFNGLISTRANSFORMFEEDBACKPROC
#undef PFNGLISTRANSFORMFEEDBACKPROC
#endif
typedef GLboolean  (*PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);

#ifdef glPauseTransformFeedback
#undef glPauseTransformFeedback
#endif
#ifdef PFNGLPAUSETRANSFORMFEEDBACKPROC
#undef PFNGLPAUSETRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);

#ifdef glResumeTransformFeedback
#undef glResumeTransformFeedback
#endif
#ifdef PFNGLRESUMETRANSFORMFEEDBACKPROC
#undef PFNGLRESUMETRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);

#ifdef glGetProgramBinary
#undef glGetProgramBinary
#endif
#ifdef PFNGLGETPROGRAMBINARYPROC
#undef PFNGLGETPROGRAMBINARYPROC
#endif
typedef void  (*PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);

#ifdef glProgramBinary
#undef glProgramBinary
#endif
#ifdef PFNGLPROGRAMBINARYPROC
#undef PFNGLPROGRAMBINARYPROC
#endif
typedef void  (*PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);

#ifdef glProgramParameteri
#undef glProgramParameteri
#endif
#ifdef PFNGLPROGRAMPARAMETERIPROC
#undef PFNGLPROGRAMPARAMETERIPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);

#ifdef glInvalidateFramebuffer
#undef glInvalidateFramebuffer
#endif
#ifdef PFNGLINVALIDATEFRAMEBUFFERPROC
#undef PFNGLINVALIDATEFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments);

#ifdef glInvalidateSubFramebuffer
#undef glInvalidateSubFramebuffer
#endif
#ifdef PFNGLINVALIDATESUBFRAMEBUFFERPROC
#undef PFNGLINVALIDATESUBFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glTexStorage2D
#undef glTexStorage2D
#endif
#ifdef PFNGLTEXSTORAGE2DPROC
#undef PFNGLTEXSTORAGE2DPROC
#endif
typedef void  (*PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glTexStorage3D
#undef glTexStorage3D
#endif
#ifdef PFNGLTEXSTORAGE3DPROC
#undef PFNGLTEXSTORAGE3DPROC
#endif
typedef void  (*PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

#ifdef glGetInternalformativ
#undef glGetInternalformativ
#endif
#ifdef PFNGLGETINTERNALFORMATIVPROC
#undef PFNGLGETINTERNALFORMATIVPROC
#endif
typedef void  (*PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);

#ifndef GL_READ_BUFFER
#define GL_READ_BUFFER 0x0C02
#endif

#ifndef GL_UNPACK_ROW_LENGTH
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#endif

#ifndef GL_UNPACK_SKIP_ROWS
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#endif

#ifndef GL_UNPACK_SKIP_PIXELS
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#endif

#ifndef GL_PACK_ROW_LENGTH
#define GL_PACK_ROW_LENGTH 0x0D02
#endif

#ifndef GL_PACK_SKIP_ROWS
#define GL_PACK_SKIP_ROWS 0x0D03
#endif

#ifndef GL_PACK_SKIP_PIXELS
#define GL_PACK_SKIP_PIXELS 0x0D04
#endif

#ifndef GL_COLOR
#define GL_COLOR 0x1800
#endif

#ifndef GL_DEPTH
#define GL_DEPTH 0x1801
#endif

#ifndef GL_STENCIL
#define GL_STENCIL 0x1802
#endif

#ifndef GL_RED
#define GL_RED 0x1903
#endif

#ifndef GL_RGB8
#define GL_RGB8 0x8051
#endif

#ifndef GL_RGBA8
#define GL_RGBA8 0x8058
#endif

#ifndef GL_RGB10_A2
#define GL_RGB10_A2 0x8059
#endif

#ifndef GL_TEXTURE_BINDING_3D
#define GL_TEXTURE_BINDING_3D 0x806A
#endif

#ifndef GL_UNPACK_SKIP_IMAGES
#define GL_UNPACK_SKIP_IMAGES 0x806D
#endif

#ifndef GL_UNPACK_IMAGE_HEIGHT
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#endif

#ifndef GL_TEXTURE_3D
#define GL_TEXTURE_3D 0x806F
#endif

#ifndef GL_TEXTURE_WRAP_R
#define GL_TEXTURE_WRAP_R 0x8072
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#endif

#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif

#ifndef GL_MAX_ELEMENTS_VERTICES
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#endif

#ifndef GL_MAX_ELEMENTS_INDICES
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#endif

#ifndef GL_TEXTURE_MIN_LOD
#define GL_TEXTURE_MIN_LOD 0x813A
#endif

#ifndef GL_TEXTURE_MAX_LOD
#define GL_TEXTURE_MAX_LOD 0x813B
#endif

#ifndef GL_TEXTURE_BASE_LEVEL
#define GL_TEXTURE_BASE_LEVEL 0x813C
#endif

#ifndef GL_TEXTURE_MAX_LEVEL
#define GL_TEXTURE_MAX_LEVEL 0x813D
#endif

#ifndef GL_MIN
#define GL_MIN 0x8007
#endif

#ifndef GL_MAX
#define GL_MAX 0x8008
#endif

#ifndef GL_DEPTH_COMPONENT24
#define GL_DEPTH_COMPONENT24 0x81A6
#endif

#ifndef GL_MAX_TEXTURE_LOD_BIAS
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#endif

#ifndef GL_TEXTURE_COMPARE_MODE
#define GL_TEXTURE_COMPARE_MODE 0x884C
#endif

#ifndef GL_TEXTURE_COMPARE_FUNC
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#endif

#ifndef GL_CURRENT_QUERY
#define GL_CURRENT_QUERY 0x8865
#endif

#ifndef GL_QUERY_RESULT
#define GL_QUERY_RESULT 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#endif

#ifndef GL_BUFFER_MAPPED
#define GL_BUFFER_MAPPED 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER
#define GL_BUFFER_MAP_POINTER 0x88BD
#endif

#ifndef GL_STREAM_READ
#define GL_STREAM_READ 0x88E1
#endif

#ifndef GL_STREAM_COPY
#define GL_STREAM_COPY 0x88E2
#endif

#ifndef GL_STATIC_READ
#define GL_STATIC_READ 0x88E5
#endif

#ifndef GL_STATIC_COPY
#define GL_STATIC_COPY 0x88E6
#endif

#ifndef GL_DYNAMIC_READ
#define GL_DYNAMIC_READ 0x88E9
#endif

#ifndef GL_DYNAMIC_COPY
#define GL_DYNAMIC_COPY 0x88EA
#endif

#ifndef GL_MAX_DRAW_BUFFERS
#define GL_MAX_DRAW_BUFFERS 0x8824
#endif

#ifndef GL_DRAW_BUFFER0
#define GL_DRAW_BUFFER0 0x8825
#endif

#ifndef GL_DRAW_BUFFER1
#define GL_DRAW_BUFFER1 0x8826
#endif

#ifndef GL_DRAW_BUFFER2
#define GL_DRAW_BUFFER2 0x8827
#endif

#ifndef GL_DRAW_BUFFER3
#define GL_DRAW_BUFFER3 0x8828
#endif

#ifndef GL_DRAW_BUFFER4
#define GL_DRAW_BUFFER4 0x8829
#endif

#ifndef GL_DRAW_BUFFER5
#define GL_DRAW_BUFFER5 0x882A
#endif

#ifndef GL_DRAW_BUFFER6
#define GL_DRAW_BUFFER6 0x882B
#endif

#ifndef GL_DRAW_BUFFER7
#define GL_DRAW_BUFFER7 0x882C
#endif

#ifndef GL_DRAW_BUFFER8
#define GL_DRAW_BUFFER8 0x882D
#endif

#ifndef GL_DRAW_BUFFER9
#define GL_DRAW_BUFFER9 0x882E
#endif

#ifndef GL_DRAW_BUFFER10
#define GL_DRAW_BUFFER10 0x882F
#endif

#ifndef GL_DRAW_BUFFER11
#define GL_DRAW_BUFFER11 0x8830
#endif

#ifndef GL_DRAW_BUFFER12
#define GL_DRAW_BUFFER12 0x8831
#endif

#ifndef GL_DRAW_BUFFER13
#define GL_DRAW_BUFFER13 0x8832
#endif

#ifndef GL_DRAW_BUFFER14
#define GL_DRAW_BUFFER14 0x8833
#endif

#ifndef GL_DRAW_BUFFER15
#define GL_DRAW_BUFFER15 0x8834
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#endif

#ifndef GL_SAMPLER_3D
#define GL_SAMPLER_3D 0x8B5F
#endif

#ifndef GL_SAMPLER_2D_SHADOW
#define GL_SAMPLER_2D_SHADOW 0x8B62
#endif

#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#endif

#ifndef GL_PIXEL_PACK_BUFFER
#define GL_PIXEL_PACK_BUFFER 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#endif

#ifndef GL_FLOAT_MAT2x3
#define GL_FLOAT_MAT2x3 0x8B65
#endif

#ifndef GL_FLOAT_MAT2x4
#define GL_FLOAT_MAT2x4 0x8B66
#endif

#ifndef GL_FLOAT_MAT3x2
#define GL_FLOAT_MAT3x2 0x8B67
#endif

#ifndef GL_FLOAT_MAT3x4
#define GL_FLOAT_MAT3x4 0x8B68
#endif

#ifndef GL_FLOAT_MAT4x2
#define GL_FLOAT_MAT4x2 0x8B69
#endif

#ifndef GL_FLOAT_MAT4x3
#define GL_FLOAT_MAT4x3 0x8B6A
#endif

#ifndef GL_SRGB
#define GL_SRGB 0x8C40
#endif

#ifndef GL_SRGB8
#define GL_SRGB8 0x8C41
#endif

#ifndef GL_SRGB8_ALPHA8
#define GL_SRGB8_ALPHA8 0x8C43
#endif

#ifndef GL_COMPARE_REF_TO_TEXTURE
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#endif

#ifndef GL_MAJOR_VERSION
#define GL_MAJOR_VERSION 0x821B
#endif

#ifndef GL_MINOR_VERSION
#define GL_MINOR_VERSION 0x821C
#endif

#ifndef GL_NUM_EXTENSIONS
#define GL_NUM_EXTENSIONS 0x821D
#endif

#ifndef GL_RGBA32F
#define GL_RGBA32F 0x8814
#endif

#ifndef GL_RGB32F
#define GL_RGB32F 0x8815
#endif

#ifndef GL_RGBA16F
#define GL_RGBA16F 0x881A
#endif

#ifndef GL_RGB16F
#define GL_RGB16F 0x881B
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#endif

#ifndef GL_MAX_ARRAY_TEXTURE_LAYERS
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#endif

#ifndef GL_MIN_PROGRAM_TEXEL_OFFSET
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#endif

#ifndef GL_MAX_PROGRAM_TEXEL_OFFSET
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#endif

#ifndef GL_MAX_VARYING_COMPONENTS
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#endif

#ifndef GL_TEXTURE_2D_ARRAY
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#endif

#ifndef GL_R11F_G11F_B10F
#define GL_R11F_G11F_B10F 0x8C3A
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#endif

#ifndef GL_RGB9_E5
#define GL_RGB9_E5 0x8C3D
#endif

#ifndef GL_UNSIGNED_INT_5_9_9_9_REV
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#endif

#ifndef GL_RASTERIZER_DISCARD
#define GL_RASTERIZER_DISCARD 0x8C89
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#endif

#ifndef GL_INTERLEAVED_ATTRIBS
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#endif

#ifndef GL_SEPARATE_ATTRIBS
#define GL_SEPARATE_ATTRIBS 0x8C8D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#endif

#ifndef GL_RGBA32UI
#define GL_RGBA32UI 0x8D70
#endif

#ifndef GL_RGB32UI
#define GL_RGB32UI 0x8D71
#endif

#ifndef GL_RGBA16UI
#define GL_RGBA16UI 0x8D76
#endif

#ifndef GL_RGB16UI
#define GL_RGB16UI 0x8D77
#endif

#ifndef GL_RGBA8UI
#define GL_RGBA8UI 0x8D7C
#endif

#ifndef GL_RGB8UI
#define GL_RGB8UI 0x8D7D
#endif

#ifndef GL_RGBA32I
#define GL_RGBA32I 0x8D82
#endif

#ifndef GL_RGB32I
#define GL_RGB32I 0x8D83
#endif

#ifndef GL_RGBA16I
#define GL_RGBA16I 0x8D88
#endif

#ifndef GL_RGB16I
#define GL_RGB16I 0x8D89
#endif

#ifndef GL_RGBA8I
#define GL_RGBA8I 0x8D8E
#endif

#ifndef GL_RGB8I
#define GL_RGB8I 0x8D8F
#endif

#ifndef GL_RED_INTEGER
#define GL_RED_INTEGER 0x8D94
#endif

#ifndef GL_RGB_INTEGER
#define GL_RGB_INTEGER 0x8D98
#endif

#ifndef GL_RGBA_INTEGER
#define GL_RGBA_INTEGER 0x8D99
#endif

#ifndef GL_SAMPLER_2D_ARRAY
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#endif

#ifndef GL_SAMPLER_2D_ARRAY_SHADOW
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#endif

#ifndef GL_SAMPLER_CUBE_SHADOW
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#endif

#ifndef GL_UNSIGNED_INT_VEC2
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#endif

#ifndef GL_UNSIGNED_INT_VEC3
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#endif

#ifndef GL_UNSIGNED_INT_VEC4
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#endif

#ifndef GL_INT_SAMPLER_2D
#define GL_INT_SAMPLER_2D 0x8DCA
#endif

#ifndef GL_INT_SAMPLER_3D
#define GL_INT_SAMPLER_3D 0x8DCB
#endif

#ifndef GL_INT_SAMPLER_CUBE
#define GL_INT_SAMPLER_CUBE 0x8DCC
#endif

#ifndef GL_INT_SAMPLER_2D_ARRAY
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_3D
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#endif

#ifndef GL_BUFFER_ACCESS_FLAGS
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#endif

#ifndef GL_BUFFER_MAP_LENGTH
#define GL_BUFFER_MAP_LENGTH 0x9120
#endif

#ifndef GL_BUFFER_MAP_OFFSET
#define GL_BUFFER_MAP_OFFSET 0x9121
#endif

#ifndef GL_DEPTH_COMPONENT32F
#define GL_DEPTH_COMPONENT32F 0x8CAC
#endif

#ifndef GL_DEPTH32F_STENCIL8
#define GL_DEPTH32F_STENCIL8 0x8CAD
#endif

#ifndef GL_FLOAT_32_UNSIGNED_INT_24_8_REV
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif

#ifndef GL_FRAMEBUFFER_UNDEFINED
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif

#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif

#ifndef GL_DEPTH_STENCIL
#define GL_DEPTH_STENCIL 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8
#define GL_UNSIGNED_INT_24_8 0x84FA
#endif

#ifndef GL_DEPTH24_STENCIL8
#define GL_DEPTH24_STENCIL8 0x88F0
#endif

#ifndef GL_UNSIGNED_NORMALIZED
#define GL_UNSIGNED_NORMALIZED 0x8C17
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_READ_FRAMEBUFFER
#define GL_READ_FRAMEBUFFER 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif

#ifndef GL_RENDERBUFFER_SAMPLES
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif

#ifndef GL_MAX_COLOR_ATTACHMENTS
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif

#ifndef GL_COLOR_ATTACHMENT1
#define GL_COLOR_ATTACHMENT1 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2
#define GL_COLOR_ATTACHMENT2 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3
#define GL_COLOR_ATTACHMENT3 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4
#define GL_COLOR_ATTACHMENT4 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5
#define GL_COLOR_ATTACHMENT5 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6
#define GL_COLOR_ATTACHMENT6 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7
#define GL_COLOR_ATTACHMENT7 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8
#define GL_COLOR_ATTACHMENT8 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9
#define GL_COLOR_ATTACHMENT9 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10
#define GL_COLOR_ATTACHMENT10 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11
#define GL_COLOR_ATTACHMENT11 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12
#define GL_COLOR_ATTACHMENT12 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13
#define GL_COLOR_ATTACHMENT13 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14
#define GL_COLOR_ATTACHMENT14 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15
#define GL_COLOR_ATTACHMENT15 0x8CEF
#endif

#ifndef GL_COLOR_ATTACHMENT16
#define GL_COLOR_ATTACHMENT16 0x8CF0
#endif

#ifndef GL_COLOR_ATTACHMENT17
#define GL_COLOR_ATTACHMENT17 0x8CF1
#endif

#ifndef GL_COLOR_ATTACHMENT18
#define GL_COLOR_ATTACHMENT18 0x8CF2
#endif

#ifndef GL_COLOR_ATTACHMENT19
#define GL_COLOR_ATTACHMENT19 0x8CF3
#endif

#ifndef GL_COLOR_ATTACHMENT20
#define GL_COLOR_ATTACHMENT20 0x8CF4
#endif

#ifndef GL_COLOR_ATTACHMENT21
#define GL_COLOR_ATTACHMENT21 0x8CF5
#endif

#ifndef GL_COLOR_ATTACHMENT22
#define GL_COLOR_ATTACHMENT22 0x8CF6
#endif

#ifndef GL_COLOR_ATTACHMENT23
#define GL_COLOR_ATTACHMENT23 0x8CF7
#endif

#ifndef GL_COLOR_ATTACHMENT24
#define GL_COLOR_ATTACHMENT24 0x8CF8
#endif

#ifndef GL_COLOR_ATTACHMENT25
#define GL_COLOR_ATTACHMENT25 0x8CF9
#endif

#ifndef GL_COLOR_ATTACHMENT26
#define GL_COLOR_ATTACHMENT26 0x8CFA
#endif

#ifndef GL_COLOR_ATTACHMENT27
#define GL_COLOR_ATTACHMENT27 0x8CFB
#endif

#ifndef GL_COLOR_ATTACHMENT28
#define GL_COLOR_ATTACHMENT28 0x8CFC
#endif

#ifndef GL_COLOR_ATTACHMENT29
#define GL_COLOR_ATTACHMENT29 0x8CFD
#endif

#ifndef GL_COLOR_ATTACHMENT30
#define GL_COLOR_ATTACHMENT30 0x8CFE
#endif

#ifndef GL_COLOR_ATTACHMENT31
#define GL_COLOR_ATTACHMENT31 0x8CFF
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif

#ifndef GL_MAX_SAMPLES
#define GL_MAX_SAMPLES 0x8D57
#endif

#ifndef GL_HALF_FLOAT
#define GL_HALF_FLOAT 0x140B
#endif

#ifndef GL_MAP_READ_BIT
#define GL_MAP_READ_BIT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT
#define GL_MAP_WRITE_BIT 0x0002
#endif

#ifndef GL_MAP_INVALIDATE_RANGE_BIT
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#endif

#ifndef GL_MAP_INVALIDATE_BUFFER_BIT
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#endif

#ifndef GL_MAP_FLUSH_EXPLICIT_BIT
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#endif

#ifndef GL_MAP_UNSYNCHRONIZED_BIT
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#endif

#ifndef GL_RG
#define GL_RG 0x8227
#endif

#ifndef GL_RG_INTEGER
#define GL_RG_INTEGER 0x8228
#endif

#ifndef GL_R8
#define GL_R8 0x8229
#endif

#ifndef GL_RG8
#define GL_RG8 0x822B
#endif

#ifndef GL_R16F
#define GL_R16F 0x822D
#endif

#ifndef GL_R32F
#define GL_R32F 0x822E
#endif

#ifndef GL_RG16F
#define GL_RG16F 0x822F
#endif

#ifndef GL_RG32F
#define GL_RG32F 0x8230
#endif

#ifndef GL_R8I
#define GL_R8I 0x8231
#endif

#ifndef GL_R8UI
#define GL_R8UI 0x8232
#endif

#ifndef GL_R16I
#define GL_R16I 0x8233
#endif

#ifndef GL_R16UI
#define GL_R16UI 0x8234
#endif

#ifndef GL_R32I
#define GL_R32I 0x8235
#endif

#ifndef GL_R32UI
#define GL_R32UI 0x8236
#endif

#ifndef GL_RG8I
#define GL_RG8I 0x8237
#endif

#ifndef GL_RG8UI
#define GL_RG8UI 0x8238
#endif

#ifndef GL_RG16I
#define GL_RG16I 0x8239
#endif

#ifndef GL_RG16UI
#define GL_RG16UI 0x823A
#endif

#ifndef GL_RG32I
#define GL_RG32I 0x823B
#endif

#ifndef GL_RG32UI
#define GL_RG32UI 0x823C
#endif

#ifndef GL_VERTEX_ARRAY_BINDING
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#endif

#ifndef GL_R8_SNORM
#define GL_R8_SNORM 0x8F94
#endif

#ifndef GL_RG8_SNORM
#define GL_RG8_SNORM 0x8F95
#endif

#ifndef GL_RGB8_SNORM
#define GL_RGB8_SNORM 0x8F96
#endif

#ifndef GL_RGBA8_SNORM
#define GL_RGBA8_SNORM 0x8F97
#endif

#ifndef GL_SIGNED_NORMALIZED
#define GL_SIGNED_NORMALIZED 0x8F9C
#endif

#ifndef GL_PRIMITIVE_RESTART_FIXED_INDEX
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#endif

#ifndef GL_COPY_READ_BUFFER
#define GL_COPY_READ_BUFFER 0x8F36
#endif

#ifndef GL_COPY_WRITE_BUFFER
#define GL_COPY_WRITE_BUFFER 0x8F37
#endif

#ifndef GL_COPY_READ_BUFFER_BINDING
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#endif

#ifndef GL_COPY_WRITE_BUFFER_BINDING
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#endif

#ifndef GL_UNIFORM_BUFFER
#define GL_UNIFORM_BUFFER 0x8A11
#endif

#ifndef GL_UNIFORM_BUFFER_BINDING
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#endif

#ifndef GL_UNIFORM_BUFFER_START
#define GL_UNIFORM_BUFFER_START 0x8A29
#endif

#ifndef GL_UNIFORM_BUFFER_SIZE
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_BLOCKS
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_BLOCKS
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#endif

#ifndef GL_MAX_COMBINED_UNIFORM_BLOCKS
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#endif

#ifndef GL_MAX_UNIFORM_BUFFER_BINDINGS
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#endif

#ifndef GL_MAX_UNIFORM_BLOCK_SIZE
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#endif

#ifndef GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#endif

#ifndef GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#endif

#ifndef GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCKS
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#endif

#ifndef GL_UNIFORM_TYPE
#define GL_UNIFORM_TYPE 0x8A37
#endif

#ifndef GL_UNIFORM_SIZE
#define GL_UNIFORM_SIZE 0x8A38
#endif

#ifndef GL_UNIFORM_NAME_LENGTH
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#endif

#ifndef GL_UNIFORM_BLOCK_INDEX
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#endif

#ifndef GL_UNIFORM_OFFSET
#define GL_UNIFORM_OFFSET 0x8A3B
#endif

#ifndef GL_UNIFORM_ARRAY_STRIDE
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#endif

#ifndef GL_UNIFORM_MATRIX_STRIDE
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#endif

#ifndef GL_UNIFORM_IS_ROW_MAJOR
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#endif

#ifndef GL_UNIFORM_BLOCK_BINDING
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#endif

#ifndef GL_UNIFORM_BLOCK_DATA_SIZE
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#endif

#ifndef GL_UNIFORM_BLOCK_NAME_LENGTH
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#endif

#ifndef GL_INVALID_INDEX
#define GL_INVALID_INDEX 0xFFFFFFFF
#endif

#ifndef GL_MAX_VERTEX_OUTPUT_COMPONENTS
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#endif

#ifndef GL_MAX_FRAGMENT_INPUT_COMPONENTS
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#endif

#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif

#ifndef GL_OBJECT_TYPE
#define GL_OBJECT_TYPE 0x9112
#endif

#ifndef GL_SYNC_CONDITION
#define GL_SYNC_CONDITION 0x9113
#endif

#ifndef GL_SYNC_STATUS
#define GL_SYNC_STATUS 0x9114
#endif

#ifndef GL_SYNC_FLAGS
#define GL_SYNC_FLAGS 0x9115
#endif

#ifndef GL_SYNC_FENCE
#define GL_SYNC_FENCE 0x9116
#endif

#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif

#ifndef GL_UNSIGNALED
#define GL_UNSIGNALED 0x9118
#endif

#ifndef GL_SIGNALED
#define GL_SIGNALED 0x9119
#endif

#ifndef GL_ALREADY_SIGNALED
#define GL_ALREADY_SIGNALED 0x911A
#endif

#ifndef GL_TIMEOUT_EXPIRED
#define GL_TIMEOUT_EXPIRED 0x911B
#endif

#ifndef GL_CONDITION_SATISFIED
#define GL_CONDITION_SATISFIED 0x911C
#endif

#ifndef GL_WAIT_FAILED
#define GL_WAIT_FAILED 0x911D
#endif

#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif

#ifndef GL_TIMEOUT_IGNORED
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#endif

#ifndef GL_ANY_SAMPLES_PASSED
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#endif

#ifndef GL_ANY_SAMPLES_PASSED_CONSERVATIVE
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#endif

#ifndef GL_SAMPLER_BINDING
#define GL_SAMPLER_BINDING 0x8919
#endif

#ifndef GL_RGB10_A2UI
#define GL_RGB10_A2UI 0x906F
#endif

#ifndef GL_TEXTURE_SWIZZLE_R
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#endif

#ifndef GL_TEXTURE_SWIZZLE_G
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#endif

#ifndef GL_TEXTURE_SWIZZLE_B
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#endif

#ifndef GL_TEXTURE_SWIZZLE_A
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#endif

#ifndef GL_GREEN
#define GL_GREEN 0x1904
#endif

#ifndef GL_BLUE
#define GL_BLUE 0x1905
#endif

#ifndef GL_INT_2_10_10_10_REV
#define GL_INT_2_10_10_10_REV 0x8D9F
#endif

#ifndef GL_TRANSFORM_FEEDBACK
#define GL_TRANSFORM_FEEDBACK 0x8E22
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PAUSED
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#endif

#ifndef GL_TRANSFORM_FEEDBACK_ACTIVE
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BINDING
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#endif

#ifndef GL_PROGRAM_BINARY_RETRIEVABLE_HINT
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#endif

#ifndef GL_PROGRAM_BINARY_LENGTH
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#endif

#ifndef GL_NUM_PROGRAM_BINARY_FORMATS
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#endif

#ifndef GL_PROGRAM_BINARY_FORMATS
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#endif

#ifndef GL_COMPRESSED_R11_EAC
#define GL_COMPRESSED_R11_EAC 0x9270
#endif

#ifndef GL_COMPRESSED_SIGNED_R11_EAC
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#endif

#ifndef GL_COMPRESSED_RG11_EAC
#define GL_COMPRESSED_RG11_EAC 0x9272
#endif

#ifndef GL_COMPRESSED_SIGNED_RG11_EAC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#endif

#ifndef GL_COMPRESSED_RGB8_ETC2
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#endif

#ifndef GL_COMPRESSED_SRGB8_ETC2
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#endif

#ifndef GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#endif

#ifndef GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#endif

#ifndef GL_COMPRESSED_RGBA8_ETC2_EAC
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#endif

#ifndef GL_TEXTURE_IMMUTABLE_FORMAT
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#endif

#ifndef GL_MAX_ELEMENT_INDEX
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#endif

#ifndef GL_NUM_SAMPLE_COUNTS
#define GL_NUM_SAMPLE_COUNTS 0x9380
#endif

#ifndef GL_TEXTURE_IMMUTABLE_LEVELS
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#endif

#ifndef GL_ES_VERSION_3_1
#define GL_ES_VERSION_3_1 1
#endif

#ifdef glDispatchCompute
#undef glDispatchCompute
#endif
#ifdef PFNGLDISPATCHCOMPUTEPROC
#undef PFNGLDISPATCHCOMPUTEPROC
#endif
typedef void  (*PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);

#ifdef glDispatchComputeIndirect
#undef glDispatchComputeIndirect
#endif
#ifdef PFNGLDISPATCHCOMPUTEINDIRECTPROC
#undef PFNGLDISPATCHCOMPUTEINDIRECTPROC
#endif
typedef void  (*PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);

#ifndef GL_COMPUTE_SHADER
#define GL_COMPUTE_SHADER 0x91B9
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif

#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif

#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif

#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif

#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif

#ifndef GL_COMPUTE_WORK_GROUP_SIZE
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif

#ifndef GL_COMPUTE_SHADER_BIT
#define GL_COMPUTE_SHADER_BIT 0x00000020
#endif

#ifdef glDrawArraysIndirect
#undef glDrawArraysIndirect
#endif
#ifdef PFNGLDRAWARRAYSINDIRECTPROC
#undef PFNGLDRAWARRAYSINDIRECTPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void *indirect);

#ifdef glDrawElementsIndirect
#undef glDrawElementsIndirect
#endif
#ifdef PFNGLDRAWELEMENTSINDIRECTPROC
#undef PFNGLDRAWELEMENTSINDIRECTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void *indirect);

#ifndef GL_DRAW_INDIRECT_BUFFER
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#endif

#ifndef GL_DRAW_INDIRECT_BUFFER_BINDING
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#endif

#ifndef GL_MAX_UNIFORM_LOCATIONS
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#endif

#ifdef glFramebufferParameteri
#undef glFramebufferParameteri
#endif
#ifdef PFNGLFRAMEBUFFERPARAMETERIPROC
#undef PFNGLFRAMEBUFFERPARAMETERIPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glGetFramebufferParameteriv
#undef glGetFramebufferParameteriv
#endif
#ifdef PFNGLGETFRAMEBUFFERPARAMETERIVPROC
#undef PFNGLGETFRAMEBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifndef GL_FRAMEBUFFER_DEFAULT_WIDTH
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_HEIGHT
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_SAMPLES
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#endif

#ifndef GL_MAX_FRAMEBUFFER_WIDTH
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#endif

#ifndef GL_MAX_FRAMEBUFFER_HEIGHT
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#endif

#ifndef GL_MAX_FRAMEBUFFER_SAMPLES
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#endif

#ifdef glGetProgramInterfaceiv
#undef glGetProgramInterfaceiv
#endif
#ifdef PFNGLGETPROGRAMINTERFACEIVPROC
#undef PFNGLGETPROGRAMINTERFACEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);

#ifdef glGetProgramResourceIndex
#undef glGetProgramResourceIndex
#endif
#ifdef PFNGLGETPROGRAMRESOURCEINDEXPROC
#undef PFNGLGETPROGRAMRESOURCEINDEXPROC
#endif
typedef GLuint  (*PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar *name);

#ifdef glGetProgramResourceName
#undef glGetProgramResourceName
#endif
#ifdef PFNGLGETPROGRAMRESOURCENAMEPROC
#undef PFNGLGETPROGRAMRESOURCENAMEPROC
#endif
typedef void  (*PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);

#ifdef glGetProgramResourceiv
#undef glGetProgramResourceiv
#endif
#ifdef PFNGLGETPROGRAMRESOURCEIVPROC
#undef PFNGLGETPROGRAMRESOURCEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);

#ifdef glGetProgramResourceLocation
#undef glGetProgramResourceLocation
#endif
#ifdef PFNGLGETPROGRAMRESOURCELOCATIONPROC
#undef PFNGLGETPROGRAMRESOURCELOCATIONPROC
#endif
typedef GLint  (*PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar *name);

#ifndef GL_UNIFORM
#define GL_UNIFORM 0x92E1
#endif

#ifndef GL_UNIFORM_BLOCK
#define GL_UNIFORM_BLOCK 0x92E2
#endif

#ifndef GL_PROGRAM_INPUT
#define GL_PROGRAM_INPUT 0x92E3
#endif

#ifndef GL_PROGRAM_OUTPUT
#define GL_PROGRAM_OUTPUT 0x92E4
#endif

#ifndef GL_BUFFER_VARIABLE
#define GL_BUFFER_VARIABLE 0x92E5
#endif

#ifndef GL_SHADER_STORAGE_BLOCK
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif

#ifndef GL_ACTIVE_RESOURCES
#define GL_ACTIVE_RESOURCES 0x92F5
#endif

#ifndef GL_MAX_NAME_LENGTH
#define GL_MAX_NAME_LENGTH 0x92F6
#endif

#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif

#ifndef GL_NAME_LENGTH
#define GL_NAME_LENGTH 0x92F9
#endif

#ifndef GL_TYPE
#define GL_TYPE 0x92FA
#endif

#ifndef GL_ARRAY_SIZE
#define GL_ARRAY_SIZE 0x92FB
#endif

#ifndef GL_OFFSET
#define GL_OFFSET 0x92FC
#endif

#ifndef GL_BLOCK_INDEX
#define GL_BLOCK_INDEX 0x92FD
#endif

#ifndef GL_ARRAY_STRIDE
#define GL_ARRAY_STRIDE 0x92FE
#endif

#ifndef GL_MATRIX_STRIDE
#define GL_MATRIX_STRIDE 0x92FF
#endif

#ifndef GL_IS_ROW_MAJOR
#define GL_IS_ROW_MAJOR 0x9300
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif

#ifndef GL_BUFFER_BINDING
#define GL_BUFFER_BINDING 0x9302
#endif

#ifndef GL_BUFFER_DATA_SIZE
#define GL_BUFFER_DATA_SIZE 0x9303
#endif

#ifndef GL_NUM_ACTIVE_VARIABLES
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif

#ifndef GL_ACTIVE_VARIABLES
#define GL_ACTIVE_VARIABLES 0x9305
#endif

#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif

#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif

#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif

#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif

#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif

#ifndef GL_LOCATION
#define GL_LOCATION 0x930E
#endif

#ifdef glUseProgramStages
#undef glUseProgramStages
#endif
#ifdef PFNGLUSEPROGRAMSTAGESPROC
#undef PFNGLUSEPROGRAMSTAGESPROC
#endif
typedef void  (*PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);

#ifdef glActiveShaderProgram
#undef glActiveShaderProgram
#endif
#ifdef PFNGLACTIVESHADERPROGRAMPROC
#undef PFNGLACTIVESHADERPROGRAMPROC
#endif
typedef void  (*PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);

#ifdef glCreateShaderProgramv
#undef glCreateShaderProgramv
#endif
#ifdef PFNGLCREATESHADERPROGRAMVPROC
#undef PFNGLCREATESHADERPROGRAMVPROC
#endif
typedef GLuint  (*PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const*strings);

#ifdef glBindProgramPipeline
#undef glBindProgramPipeline
#endif
#ifdef PFNGLBINDPROGRAMPIPELINEPROC
#undef PFNGLBINDPROGRAMPIPELINEPROC
#endif
typedef void  (*PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glDeleteProgramPipelines
#undef glDeleteProgramPipelines
#endif
#ifdef PFNGLDELETEPROGRAMPIPELINESPROC
#undef PFNGLDELETEPROGRAMPIPELINESPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint *pipelines);

#ifdef glGenProgramPipelines
#undef glGenProgramPipelines
#endif
#ifdef PFNGLGENPROGRAMPIPELINESPROC
#undef PFNGLGENPROGRAMPIPELINESPROC
#endif
typedef void  (*PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint *pipelines);

#ifdef glIsProgramPipeline
#undef glIsProgramPipeline
#endif
#ifdef PFNGLISPROGRAMPIPELINEPROC
#undef PFNGLISPROGRAMPIPELINEPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glGetProgramPipelineiv
#undef glGetProgramPipelineiv
#endif
#ifdef PFNGLGETPROGRAMPIPELINEIVPROC
#undef PFNGLGETPROGRAMPIPELINEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint *params);

#ifdef glProgramUniform1i
#undef glProgramUniform1i
#endif
#ifdef PFNGLPROGRAMUNIFORM1IPROC
#undef PFNGLPROGRAMUNIFORM1IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);

#ifdef glProgramUniform2i
#undef glProgramUniform2i
#endif
#ifdef PFNGLPROGRAMUNIFORM2IPROC
#undef PFNGLPROGRAMUNIFORM2IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);

#ifdef glProgramUniform3i
#undef glProgramUniform3i
#endif
#ifdef PFNGLPROGRAMUNIFORM3IPROC
#undef PFNGLPROGRAMUNIFORM3IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);

#ifdef glProgramUniform4i
#undef glProgramUniform4i
#endif
#ifdef PFNGLPROGRAMUNIFORM4IPROC
#undef PFNGLPROGRAMUNIFORM4IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);

#ifdef glProgramUniform1ui
#undef glProgramUniform1ui
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIPROC
#undef PFNGLPROGRAMUNIFORM1UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);

#ifdef glProgramUniform2ui
#undef glProgramUniform2ui
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIPROC
#undef PFNGLPROGRAMUNIFORM2UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);

#ifdef glProgramUniform3ui
#undef glProgramUniform3ui
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIPROC
#undef PFNGLPROGRAMUNIFORM3UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);

#ifdef glProgramUniform4ui
#undef glProgramUniform4ui
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIPROC
#undef PFNGLPROGRAMUNIFORM4UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

#ifdef glProgramUniform1f
#undef glProgramUniform1f
#endif
#ifdef PFNGLPROGRAMUNIFORM1FPROC
#undef PFNGLPROGRAMUNIFORM1FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);

#ifdef glProgramUniform2f
#undef glProgramUniform2f
#endif
#ifdef PFNGLPROGRAMUNIFORM2FPROC
#undef PFNGLPROGRAMUNIFORM2FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);

#ifdef glProgramUniform3f
#undef glProgramUniform3f
#endif
#ifdef PFNGLPROGRAMUNIFORM3FPROC
#undef PFNGLPROGRAMUNIFORM3FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);

#ifdef glProgramUniform4f
#undef glProgramUniform4f
#endif
#ifdef PFNGLPROGRAMUNIFORM4FPROC
#undef PFNGLPROGRAMUNIFORM4FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

#ifdef glProgramUniform1iv
#undef glProgramUniform1iv
#endif
#ifdef PFNGLPROGRAMUNIFORM1IVPROC
#undef PFNGLPROGRAMUNIFORM1IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform2iv
#undef glProgramUniform2iv
#endif
#ifdef PFNGLPROGRAMUNIFORM2IVPROC
#undef PFNGLPROGRAMUNIFORM2IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform3iv
#undef glProgramUniform3iv
#endif
#ifdef PFNGLPROGRAMUNIFORM3IVPROC
#undef PFNGLPROGRAMUNIFORM3IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform4iv
#undef glProgramUniform4iv
#endif
#ifdef PFNGLPROGRAMUNIFORM4IVPROC
#undef PFNGLPROGRAMUNIFORM4IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform1uiv
#undef glProgramUniform1uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIVPROC
#undef PFNGLPROGRAMUNIFORM1UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform2uiv
#undef glProgramUniform2uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIVPROC
#undef PFNGLPROGRAMUNIFORM2UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform3uiv
#undef glProgramUniform3uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIVPROC
#undef PFNGLPROGRAMUNIFORM3UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform4uiv
#undef glProgramUniform4uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIVPROC
#undef PFNGLPROGRAMUNIFORM4UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform1fv
#undef glProgramUniform1fv
#endif
#ifdef PFNGLPROGRAMUNIFORM1FVPROC
#undef PFNGLPROGRAMUNIFORM1FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform2fv
#undef glProgramUniform2fv
#endif
#ifdef PFNGLPROGRAMUNIFORM2FVPROC
#undef PFNGLPROGRAMUNIFORM2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform3fv
#undef glProgramUniform3fv
#endif
#ifdef PFNGLPROGRAMUNIFORM3FVPROC
#undef PFNGLPROGRAMUNIFORM3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform4fv
#undef glProgramUniform4fv
#endif
#ifdef PFNGLPROGRAMUNIFORM4FVPROC
#undef PFNGLPROGRAMUNIFORM4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniformMatrix2fv
#undef glProgramUniformMatrix2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3fv
#undef glProgramUniformMatrix3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4fv
#undef glProgramUniformMatrix4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x3fv
#undef glProgramUniformMatrix2x3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x2fv
#undef glProgramUniformMatrix3x2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x4fv
#undef glProgramUniformMatrix2x4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x2fv
#undef glProgramUniformMatrix4x2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x4fv
#undef glProgramUniformMatrix3x4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x3fv
#undef glProgramUniformMatrix4x3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glValidateProgramPipeline
#undef glValidateProgramPipeline
#endif
#ifdef PFNGLVALIDATEPROGRAMPIPELINEPROC
#undef PFNGLVALIDATEPROGRAMPIPELINEPROC
#endif
typedef void  (*PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glGetProgramPipelineInfoLog
#undef glGetProgramPipelineInfoLog
#endif
#ifdef PFNGLGETPROGRAMPIPELINEINFOLOGPROC
#undef PFNGLGETPROGRAMPIPELINEINFOLOGPROC
#endif
typedef void  (*PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

#ifndef GL_VERTEX_SHADER_BIT
#define GL_VERTEX_SHADER_BIT 0x00000001
#endif

#ifndef GL_FRAGMENT_SHADER_BIT
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#endif

#ifndef GL_ALL_SHADER_BITS
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#endif

#ifndef GL_PROGRAM_SEPARABLE
#define GL_PROGRAM_SEPARABLE 0x8258
#endif

#ifndef GL_ACTIVE_PROGRAM
#define GL_ACTIVE_PROGRAM 0x8259
#endif

#ifndef GL_PROGRAM_PIPELINE_BINDING
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_BINDING
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_START
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTERS
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTERS
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#endif

#ifndef GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#endif

#ifndef GL_UNSIGNED_INT_ATOMIC_COUNTER
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#endif

#ifdef glBindImageTexture
#undef glBindImageTexture
#endif
#ifdef PFNGLBINDIMAGETEXTUREPROC
#undef PFNGLBINDIMAGETEXTUREPROC
#endif
typedef void  (*PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);

#ifdef glGetBooleani_v
#undef glGetBooleani_v
#endif
#ifdef PFNGLGETBOOLEANI_VPROC
#undef PFNGLGETBOOLEANI_VPROC
#endif
typedef void  (*PFNGLGETBOOLEANI_VPROC)(GLenum target, GLuint index, GLboolean *data);

#ifdef glMemoryBarrier
#undef glMemoryBarrier
#endif
#ifdef PFNGLMEMORYBARRIERPROC
#undef PFNGLMEMORYBARRIERPROC
#endif
typedef void  (*PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);

#ifdef glMemoryBarrierByRegion
#undef glMemoryBarrierByRegion
#endif
#ifdef PFNGLMEMORYBARRIERBYREGIONPROC
#undef PFNGLMEMORYBARRIERBYREGIONPROC
#endif
typedef void  (*PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);

#ifndef GL_MAX_IMAGE_UNITS
#define GL_MAX_IMAGE_UNITS 0x8F38
#endif

#ifndef GL_MAX_VERTEX_IMAGE_UNIFORMS
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#endif

#ifndef GL_MAX_FRAGMENT_IMAGE_UNIFORMS
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#endif

#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNIFORMS
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#endif

#ifndef GL_IMAGE_BINDING_NAME
#define GL_IMAGE_BINDING_NAME 0x8F3A
#endif

#ifndef GL_IMAGE_BINDING_LEVEL
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#endif

#ifndef GL_IMAGE_BINDING_LAYERED
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#endif

#ifndef GL_IMAGE_BINDING_LAYER
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#endif

#ifndef GL_IMAGE_BINDING_ACCESS
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#endif

#ifndef GL_IMAGE_BINDING_FORMAT
#define GL_IMAGE_BINDING_FORMAT 0x906E
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#endif

#ifndef GL_ELEMENT_ARRAY_BARRIER_BIT
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#endif

#ifndef GL_UNIFORM_BARRIER_BIT
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#endif

#ifndef GL_TEXTURE_FETCH_BARRIER_BIT
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#endif

#ifndef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#endif

#ifndef GL_COMMAND_BARRIER_BIT
#define GL_COMMAND_BARRIER_BIT 0x00000040
#endif

#ifndef GL_PIXEL_BUFFER_BARRIER_BIT
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#endif

#ifndef GL_TEXTURE_UPDATE_BARRIER_BIT
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#endif

#ifndef GL_BUFFER_UPDATE_BARRIER_BIT
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#endif

#ifndef GL_FRAMEBUFFER_BARRIER_BIT
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BARRIER_BIT
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#endif

#ifndef GL_ATOMIC_COUNTER_BARRIER_BIT
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#endif

#ifndef GL_ALL_BARRIER_BITS
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#endif

#ifndef GL_IMAGE_2D
#define GL_IMAGE_2D 0x904D
#endif

#ifndef GL_IMAGE_3D
#define GL_IMAGE_3D 0x904E
#endif

#ifndef GL_IMAGE_CUBE
#define GL_IMAGE_CUBE 0x9050
#endif

#ifndef GL_IMAGE_2D_ARRAY
#define GL_IMAGE_2D_ARRAY 0x9053
#endif

#ifndef GL_INT_IMAGE_2D
#define GL_INT_IMAGE_2D 0x9058
#endif

#ifndef GL_INT_IMAGE_3D
#define GL_INT_IMAGE_3D 0x9059
#endif

#ifndef GL_INT_IMAGE_CUBE
#define GL_INT_IMAGE_CUBE 0x905B
#endif

#ifndef GL_INT_IMAGE_2D_ARRAY
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_3D
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#endif

#ifndef GL_READ_ONLY
#define GL_READ_ONLY 0x88B8
#endif

#ifndef GL_WRITE_ONLY
#define GL_WRITE_ONLY 0x88B9
#endif

#ifndef GL_READ_WRITE
#define GL_READ_WRITE 0x88BA
#endif

#ifndef GL_SHADER_STORAGE_BUFFER
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_BINDING
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_START
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_SIZE
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#endif

#ifndef GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#endif

#ifndef GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#endif

#ifndef GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#endif

#ifndef GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#endif

#ifndef GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#endif

#ifndef GL_MAX_SHADER_STORAGE_BLOCK_SIZE
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#endif

#ifndef GL_SHADER_STORAGE_BARRIER_BIT
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#endif

#ifndef GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#endif

#ifndef GL_DEPTH_STENCIL_TEXTURE_MODE
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#endif

#ifndef GL_STENCIL_INDEX
#define GL_STENCIL_INDEX 0x1901
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#endif

#ifdef glTexStorage2DMultisample
#undef glTexStorage2DMultisample
#endif
#ifdef PFNGLTEXSTORAGE2DMULTISAMPLEPROC
#undef PFNGLTEXSTORAGE2DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);

#ifdef glGetMultisamplefv
#undef glGetMultisamplefv
#endif
#ifdef PFNGLGETMULTISAMPLEFVPROC
#undef PFNGLGETMULTISAMPLEFVPROC
#endif
typedef void  (*PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat *val);

#ifdef glSampleMaski
#undef glSampleMaski
#endif
#ifdef PFNGLSAMPLEMASKIPROC
#undef PFNGLSAMPLEMASKIPROC
#endif
typedef void  (*PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);

#ifdef glGetTexLevelParameteriv
#undef glGetTexLevelParameteriv
#endif
#ifdef PFNGLGETTEXLEVELPARAMETERIVPROC
#undef PFNGLGETTEXLEVELPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target, GLint level, GLenum pname, GLint *params);

#ifdef glGetTexLevelParameterfv
#undef glGetTexLevelParameterfv
#endif
#ifdef PFNGLGETTEXLEVELPARAMETERFVPROC
#undef PFNGLGETTEXLEVELPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target, GLint level, GLenum pname, GLfloat *params);

#ifndef GL_SAMPLE_POSITION
#define GL_SAMPLE_POSITION 0x8E50
#endif

#ifndef GL_SAMPLE_MASK
#define GL_SAMPLE_MASK 0x8E51
#endif

#ifndef GL_SAMPLE_MASK_VALUE
#define GL_SAMPLE_MASK_VALUE 0x8E52
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#endif

#ifndef GL_MAX_SAMPLE_MASK_WORDS
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#endif

#ifndef GL_MAX_COLOR_TEXTURE_SAMPLES
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#endif

#ifndef GL_MAX_DEPTH_TEXTURE_SAMPLES
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#endif

#ifndef GL_MAX_INTEGER_SAMPLES
#define GL_MAX_INTEGER_SAMPLES 0x9110
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#endif

#ifndef GL_TEXTURE_SAMPLES
#define GL_TEXTURE_SAMPLES 0x9106
#endif

#ifndef GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#endif

#ifndef GL_TEXTURE_WIDTH
#define GL_TEXTURE_WIDTH 0x1000
#endif

#ifndef GL_TEXTURE_HEIGHT
#define GL_TEXTURE_HEIGHT 0x1001
#endif

#ifndef GL_TEXTURE_DEPTH
#define GL_TEXTURE_DEPTH 0x8071
#endif

#ifndef GL_TEXTURE_INTERNAL_FORMAT
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#endif

#ifndef GL_TEXTURE_RED_SIZE
#define GL_TEXTURE_RED_SIZE 0x805C
#endif

#ifndef GL_TEXTURE_GREEN_SIZE
#define GL_TEXTURE_GREEN_SIZE 0x805D
#endif

#ifndef GL_TEXTURE_BLUE_SIZE
#define GL_TEXTURE_BLUE_SIZE 0x805E
#endif

#ifndef GL_TEXTURE_ALPHA_SIZE
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#endif

#ifndef GL_TEXTURE_DEPTH_SIZE
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#endif

#ifndef GL_TEXTURE_STENCIL_SIZE
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif

#ifndef GL_TEXTURE_SHARED_SIZE
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#endif

#ifndef GL_TEXTURE_RED_TYPE
#define GL_TEXTURE_RED_TYPE 0x8C10
#endif

#ifndef GL_TEXTURE_GREEN_TYPE
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#endif

#ifndef GL_TEXTURE_BLUE_TYPE
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#endif

#ifndef GL_TEXTURE_ALPHA_TYPE
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#endif

#ifndef GL_TEXTURE_DEPTH_TYPE
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#endif

#ifndef GL_TEXTURE_COMPRESSED
#define GL_TEXTURE_COMPRESSED 0x86A1
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#endif

#ifdef glBindVertexBuffer
#undef glBindVertexBuffer
#endif
#ifdef PFNGLBINDVERTEXBUFFERPROC
#undef PFNGLBINDVERTEXBUFFERPROC
#endif
typedef void  (*PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);

#ifdef glVertexAttribFormat
#undef glVertexAttribFormat
#endif
#ifdef PFNGLVERTEXATTRIBFORMATPROC
#undef PFNGLVERTEXATTRIBFORMATPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);

#ifdef glVertexAttribIFormat
#undef glVertexAttribIFormat
#endif
#ifdef PFNGLVERTEXATTRIBIFORMATPROC
#undef PFNGLVERTEXATTRIBIFORMATPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexAttribBinding
#undef glVertexAttribBinding
#endif
#ifdef PFNGLVERTEXATTRIBBINDINGPROC
#undef PFNGLVERTEXATTRIBBINDINGPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);

#ifdef glVertexBindingDivisor
#undef glVertexBindingDivisor
#endif
#ifdef PFNGLVERTEXBINDINGDIVISORPROC
#undef PFNGLVERTEXBINDINGDIVISORPROC
#endif
typedef void  (*PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);

#ifndef GL_VERTEX_ATTRIB_BINDING
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif

#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif

#ifndef GL_VERTEX_BINDING_DIVISOR
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif

#ifndef GL_VERTEX_BINDING_OFFSET
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif

#ifndef GL_VERTEX_BINDING_STRIDE
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif

#ifndef GL_VERTEX_BINDING_BUFFER
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_STRIDE
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#endif

#ifndef GL_3DFX_multisample
#define GL_3DFX_multisample 1
#endif

#ifndef GL_MULTISAMPLE_3DFX
#define GL_MULTISAMPLE_3DFX 0x86B2
#endif

#ifndef GL_SAMPLE_BUFFERS_3DFX
#define GL_SAMPLE_BUFFERS_3DFX 0x86B3
#endif

#ifndef GL_SAMPLES_3DFX
#define GL_SAMPLES_3DFX 0x86B4
#endif

#ifndef GL_MULTISAMPLE_BIT_3DFX
#define GL_MULTISAMPLE_BIT_3DFX 0x20000000
#endif

#ifndef GL_3DFX_tbuffer
#define GL_3DFX_tbuffer 1
#endif

#ifdef glTbufferMask3DFX
#undef glTbufferMask3DFX
#endif
#ifdef PFNGLTBUFFERMASK3DFXPROC
#undef PFNGLTBUFFERMASK3DFXPROC
#endif
typedef void  (*PFNGLTBUFFERMASK3DFXPROC)(GLuint mask);

#ifndef GL_3DFX_texture_compression_FXT1
#define GL_3DFX_texture_compression_FXT1 1
#endif

#ifndef GL_COMPRESSED_RGB_FXT1_3DFX
#define GL_COMPRESSED_RGB_FXT1_3DFX 0x86B0
#endif

#ifndef GL_COMPRESSED_RGBA_FXT1_3DFX
#define GL_COMPRESSED_RGBA_FXT1_3DFX 0x86B1
#endif

#ifndef GL_AMD_blend_minmax_factor
#define GL_AMD_blend_minmax_factor 1
#endif

#ifndef GL_FACTOR_MIN_AMD
#define GL_FACTOR_MIN_AMD 0x901C
#endif

#ifndef GL_FACTOR_MAX_AMD
#define GL_FACTOR_MAX_AMD 0x901D
#endif

#ifndef GL_AMD_compressed_3DC_texture
#define GL_AMD_compressed_3DC_texture 1
#endif

#ifndef GL_3DC_X_AMD
#define GL_3DC_X_AMD 0x87F9
#endif

#ifndef GL_3DC_XY_AMD
#define GL_3DC_XY_AMD 0x87FA
#endif

#ifndef GL_AMD_compressed_ATC_texture
#define GL_AMD_compressed_ATC_texture 1
#endif

#ifndef GL_ATC_RGB_AMD
#define GL_ATC_RGB_AMD 0x8C92
#endif

#ifndef GL_ATC_RGBA_EXPLICIT_ALPHA_AMD
#define GL_ATC_RGBA_EXPLICIT_ALPHA_AMD 0x8C93
#endif

#ifndef GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD
#define GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD 0x87EE
#endif

#ifndef GL_AMD_conservative_depth
#define GL_AMD_conservative_depth 1
#endif

#ifndef GL_AMD_debug_output
#define GL_AMD_debug_output 1
#endif

#ifdef glDebugMessageEnableAMD
#undef glDebugMessageEnableAMD
#endif
#ifdef PFNGLDEBUGMESSAGEENABLEAMDPROC
#undef PFNGLDEBUGMESSAGEENABLEAMDPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGEENABLEAMDPROC)(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);

#ifdef glDebugMessageInsertAMD
#undef glDebugMessageInsertAMD
#endif
#ifdef PFNGLDEBUGMESSAGEINSERTAMDPROC
#undef PFNGLDEBUGMESSAGEINSERTAMDPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGEINSERTAMDPROC)(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);

#ifdef glDebugMessageCallbackAMD
#undef glDebugMessageCallbackAMD
#endif
#ifdef PFNGLDEBUGMESSAGECALLBACKAMDPROC
#undef PFNGLDEBUGMESSAGECALLBACKAMDPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECALLBACKAMDPROC)(GLDEBUGPROCAMD callback, void *userParam);

#ifdef glGetDebugMessageLogAMD
#undef glGetDebugMessageLogAMD
#endif
#ifdef PFNGLGETDEBUGMESSAGELOGAMDPROC
#undef PFNGLGETDEBUGMESSAGELOGAMDPROC
#endif
typedef GLuint  (*PFNGLGETDEBUGMESSAGELOGAMDPROC)(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_AMD
#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_AMD
#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES_AMD
#define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH_AMD
#define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM_AMD
#define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW_AMD
#define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#endif

#ifndef GL_DEBUG_CATEGORY_API_ERROR_AMD
#define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#endif

#ifndef GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD
#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#endif

#ifndef GL_DEBUG_CATEGORY_DEPRECATION_AMD
#define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#endif

#ifndef GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD
#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#endif

#ifndef GL_DEBUG_CATEGORY_PERFORMANCE_AMD
#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#endif

#ifndef GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD
#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#endif

#ifndef GL_DEBUG_CATEGORY_APPLICATION_AMD
#define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#endif

#ifndef GL_DEBUG_CATEGORY_OTHER_AMD
#define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#endif

#ifndef GL_AMD_depth_clamp_separate
#define GL_AMD_depth_clamp_separate 1
#endif

#ifndef GL_DEPTH_CLAMP_NEAR_AMD
#define GL_DEPTH_CLAMP_NEAR_AMD 0x901E
#endif

#ifndef GL_DEPTH_CLAMP_FAR_AMD
#define GL_DEPTH_CLAMP_FAR_AMD 0x901F
#endif

#ifndef GL_AMD_draw_buffers_blend
#define GL_AMD_draw_buffers_blend 1
#endif

#ifdef glBlendFuncIndexedAMD
#undef glBlendFuncIndexedAMD
#endif
#ifdef PFNGLBLENDFUNCINDEXEDAMDPROC
#undef PFNGLBLENDFUNCINDEXEDAMDPROC
#endif
typedef void  (*PFNGLBLENDFUNCINDEXEDAMDPROC)(GLuint buf, GLenum src, GLenum dst);

#ifdef glBlendFuncSeparateIndexedAMD
#undef glBlendFuncSeparateIndexedAMD
#endif
#ifdef PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
#undef PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

#ifdef glBlendEquationIndexedAMD
#undef glBlendEquationIndexedAMD
#endif
#ifdef PFNGLBLENDEQUATIONINDEXEDAMDPROC
#undef PFNGLBLENDEQUATIONINDEXEDAMDPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONINDEXEDAMDPROC)(GLuint buf, GLenum mode);

#ifdef glBlendEquationSeparateIndexedAMD
#undef glBlendEquationSeparateIndexedAMD
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
#undef PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);

#ifndef GL_AMD_gcn_shader
#define GL_AMD_gcn_shader 1
#endif

#ifndef GL_AMD_gpu_shader_int64
#define GL_AMD_gpu_shader_int64 1
#endif

#ifdef glUniform1i64NV
#undef glUniform1i64NV
#endif
#ifdef PFNGLUNIFORM1I64NVPROC
#undef PFNGLUNIFORM1I64NVPROC
#endif
typedef void  (*PFNGLUNIFORM1I64NVPROC)(GLint location, GLint64EXT x);

#ifdef glUniform2i64NV
#undef glUniform2i64NV
#endif
#ifdef PFNGLUNIFORM2I64NVPROC
#undef PFNGLUNIFORM2I64NVPROC
#endif
typedef void  (*PFNGLUNIFORM2I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y);

#ifdef glUniform3i64NV
#undef glUniform3i64NV
#endif
#ifdef PFNGLUNIFORM3I64NVPROC
#undef PFNGLUNIFORM3I64NVPROC
#endif
typedef void  (*PFNGLUNIFORM3I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);

#ifdef glUniform4i64NV
#undef glUniform4i64NV
#endif
#ifdef PFNGLUNIFORM4I64NVPROC
#undef PFNGLUNIFORM4I64NVPROC
#endif
typedef void  (*PFNGLUNIFORM4I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);

#ifdef glUniform1i64vNV
#undef glUniform1i64vNV
#endif
#ifdef PFNGLUNIFORM1I64VNVPROC
#undef PFNGLUNIFORM1I64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM1I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glUniform2i64vNV
#undef glUniform2i64vNV
#endif
#ifdef PFNGLUNIFORM2I64VNVPROC
#undef PFNGLUNIFORM2I64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM2I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glUniform3i64vNV
#undef glUniform3i64vNV
#endif
#ifdef PFNGLUNIFORM3I64VNVPROC
#undef PFNGLUNIFORM3I64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM3I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glUniform4i64vNV
#undef glUniform4i64vNV
#endif
#ifdef PFNGLUNIFORM4I64VNVPROC
#undef PFNGLUNIFORM4I64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM4I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glUniform1ui64NV
#undef glUniform1ui64NV
#endif
#ifdef PFNGLUNIFORM1UI64NVPROC
#undef PFNGLUNIFORM1UI64NVPROC
#endif
typedef void  (*PFNGLUNIFORM1UI64NVPROC)(GLint location, GLuint64EXT x);

#ifdef glUniform2ui64NV
#undef glUniform2ui64NV
#endif
#ifdef PFNGLUNIFORM2UI64NVPROC
#undef PFNGLUNIFORM2UI64NVPROC
#endif
typedef void  (*PFNGLUNIFORM2UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y);

#ifdef glUniform3ui64NV
#undef glUniform3ui64NV
#endif
#ifdef PFNGLUNIFORM3UI64NVPROC
#undef PFNGLUNIFORM3UI64NVPROC
#endif
typedef void  (*PFNGLUNIFORM3UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);

#ifdef glUniform4ui64NV
#undef glUniform4ui64NV
#endif
#ifdef PFNGLUNIFORM4UI64NVPROC
#undef PFNGLUNIFORM4UI64NVPROC
#endif
typedef void  (*PFNGLUNIFORM4UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);

#ifdef glUniform1ui64vNV
#undef glUniform1ui64vNV
#endif
#ifdef PFNGLUNIFORM1UI64VNVPROC
#undef PFNGLUNIFORM1UI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM1UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glUniform2ui64vNV
#undef glUniform2ui64vNV
#endif
#ifdef PFNGLUNIFORM2UI64VNVPROC
#undef PFNGLUNIFORM2UI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM2UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glUniform3ui64vNV
#undef glUniform3ui64vNV
#endif
#ifdef PFNGLUNIFORM3UI64VNVPROC
#undef PFNGLUNIFORM3UI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM3UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glUniform4ui64vNV
#undef glUniform4ui64vNV
#endif
#ifdef PFNGLUNIFORM4UI64VNVPROC
#undef PFNGLUNIFORM4UI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM4UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glGetUniformi64vNV
#undef glGetUniformi64vNV
#endif
#ifdef PFNGLGETUNIFORMI64VNVPROC
#undef PFNGLGETUNIFORMI64VNVPROC
#endif
typedef void  (*PFNGLGETUNIFORMI64VNVPROC)(GLuint program, GLint location, GLint64EXT *params);

#ifdef glGetUniformui64vNV
#undef glGetUniformui64vNV
#endif
#ifdef PFNGLGETUNIFORMUI64VNVPROC
#undef PFNGLGETUNIFORMUI64VNVPROC
#endif
typedef void  (*PFNGLGETUNIFORMUI64VNVPROC)(GLuint program, GLint location, GLuint64EXT *params);

#ifndef GL_INT64_NV
#define GL_INT64_NV 0x140E
#endif

#ifndef GL_UNSIGNED_INT64_NV
#define GL_UNSIGNED_INT64_NV 0x140F
#endif

#ifndef GL_INT8_NV
#define GL_INT8_NV 0x8FE0
#endif

#ifndef GL_INT8_VEC2_NV
#define GL_INT8_VEC2_NV 0x8FE1
#endif

#ifndef GL_INT8_VEC3_NV
#define GL_INT8_VEC3_NV 0x8FE2
#endif

#ifndef GL_INT8_VEC4_NV
#define GL_INT8_VEC4_NV 0x8FE3
#endif

#ifndef GL_INT16_NV
#define GL_INT16_NV 0x8FE4
#endif

#ifndef GL_INT16_VEC2_NV
#define GL_INT16_VEC2_NV 0x8FE5
#endif

#ifndef GL_INT16_VEC3_NV
#define GL_INT16_VEC3_NV 0x8FE6
#endif

#ifndef GL_INT16_VEC4_NV
#define GL_INT16_VEC4_NV 0x8FE7
#endif

#ifndef GL_INT64_VEC2_NV
#define GL_INT64_VEC2_NV 0x8FE9
#endif

#ifndef GL_INT64_VEC3_NV
#define GL_INT64_VEC3_NV 0x8FEA
#endif

#ifndef GL_INT64_VEC4_NV
#define GL_INT64_VEC4_NV 0x8FEB
#endif

#ifndef GL_UNSIGNED_INT8_NV
#define GL_UNSIGNED_INT8_NV 0x8FEC
#endif

#ifndef GL_UNSIGNED_INT8_VEC2_NV
#define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
#endif

#ifndef GL_UNSIGNED_INT8_VEC3_NV
#define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
#endif

#ifndef GL_UNSIGNED_INT8_VEC4_NV
#define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
#endif

#ifndef GL_UNSIGNED_INT16_NV
#define GL_UNSIGNED_INT16_NV 0x8FF0
#endif

#ifndef GL_UNSIGNED_INT16_VEC2_NV
#define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
#endif

#ifndef GL_UNSIGNED_INT16_VEC3_NV
#define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
#endif

#ifndef GL_UNSIGNED_INT16_VEC4_NV
#define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
#endif

#ifndef GL_UNSIGNED_INT64_VEC2_NV
#define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
#endif

#ifndef GL_UNSIGNED_INT64_VEC3_NV
#define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
#endif

#ifndef GL_UNSIGNED_INT64_VEC4_NV
#define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
#endif

#ifndef GL_FLOAT16_NV
#define GL_FLOAT16_NV 0x8FF8
#endif

#ifndef GL_FLOAT16_VEC2_NV
#define GL_FLOAT16_VEC2_NV 0x8FF9
#endif

#ifndef GL_FLOAT16_VEC3_NV
#define GL_FLOAT16_VEC3_NV 0x8FFA
#endif

#ifndef GL_FLOAT16_VEC4_NV
#define GL_FLOAT16_VEC4_NV 0x8FFB
#endif

#ifdef glProgramUniform1i64NV
#undef glProgramUniform1i64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM1I64NVPROC
#undef PFNGLPROGRAMUNIFORM1I64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1I64NVPROC)(GLuint program, GLint location, GLint64EXT x);

#ifdef glProgramUniform2i64NV
#undef glProgramUniform2i64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM2I64NVPROC
#undef PFNGLPROGRAMUNIFORM2I64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);

#ifdef glProgramUniform3i64NV
#undef glProgramUniform3i64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM3I64NVPROC
#undef PFNGLPROGRAMUNIFORM3I64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);

#ifdef glProgramUniform4i64NV
#undef glProgramUniform4i64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM4I64NVPROC
#undef PFNGLPROGRAMUNIFORM4I64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);

#ifdef glProgramUniform1i64vNV
#undef glProgramUniform1i64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM1I64VNVPROC
#undef PFNGLPROGRAMUNIFORM1I64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glProgramUniform2i64vNV
#undef glProgramUniform2i64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM2I64VNVPROC
#undef PFNGLPROGRAMUNIFORM2I64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glProgramUniform3i64vNV
#undef glProgramUniform3i64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM3I64VNVPROC
#undef PFNGLPROGRAMUNIFORM3I64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glProgramUniform4i64vNV
#undef glProgramUniform4i64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM4I64VNVPROC
#undef PFNGLPROGRAMUNIFORM4I64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glProgramUniform1ui64NV
#undef glProgramUniform1ui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM1UI64NVPROC
#undef PFNGLPROGRAMUNIFORM1UI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x);

#ifdef glProgramUniform2ui64NV
#undef glProgramUniform2ui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM2UI64NVPROC
#undef PFNGLPROGRAMUNIFORM2UI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);

#ifdef glProgramUniform3ui64NV
#undef glProgramUniform3ui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM3UI64NVPROC
#undef PFNGLPROGRAMUNIFORM3UI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);

#ifdef glProgramUniform4ui64NV
#undef glProgramUniform4ui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM4UI64NVPROC
#undef PFNGLPROGRAMUNIFORM4UI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);

#ifdef glProgramUniform1ui64vNV
#undef glProgramUniform1ui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM1UI64VNVPROC
#undef PFNGLPROGRAMUNIFORM1UI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glProgramUniform2ui64vNV
#undef glProgramUniform2ui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM2UI64VNVPROC
#undef PFNGLPROGRAMUNIFORM2UI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glProgramUniform3ui64vNV
#undef glProgramUniform3ui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM3UI64VNVPROC
#undef PFNGLPROGRAMUNIFORM3UI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glProgramUniform4ui64vNV
#undef glProgramUniform4ui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM4UI64VNVPROC
#undef PFNGLPROGRAMUNIFORM4UI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifndef GL_AMD_interleaved_elements
#define GL_AMD_interleaved_elements 1
#endif

#ifdef glVertexAttribParameteriAMD
#undef glVertexAttribParameteriAMD
#endif
#ifdef PFNGLVERTEXATTRIBPARAMETERIAMDPROC
#undef PFNGLVERTEXATTRIBPARAMETERIAMDPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBPARAMETERIAMDPROC)(GLuint index, GLenum pname, GLint param);

#ifndef GL_VERTEX_ELEMENT_SWIZZLE_AMD
#define GL_VERTEX_ELEMENT_SWIZZLE_AMD 0x91A4
#endif

#ifndef GL_VERTEX_ID_SWIZZLE_AMD
#define GL_VERTEX_ID_SWIZZLE_AMD 0x91A5
#endif

#ifndef GL_RED
#define GL_RED 0x1903
#endif

#ifndef GL_GREEN
#define GL_GREEN 0x1904
#endif

#ifndef GL_BLUE
#define GL_BLUE 0x1905
#endif

#ifndef GL_ALPHA
#define GL_ALPHA 0x1906
#endif

#ifndef GL_RG8UI
#define GL_RG8UI 0x8238
#endif

#ifndef GL_RG16UI
#define GL_RG16UI 0x823A
#endif

#ifndef GL_RGBA8UI
#define GL_RGBA8UI 0x8D7C
#endif

#ifndef GL_AMD_multi_draw_indirect
#define GL_AMD_multi_draw_indirect 1
#endif

#ifdef glMultiDrawArraysIndirectAMD
#undef glMultiDrawArraysIndirectAMD
#endif
#ifdef PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC
#undef PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC)(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);

#ifdef glMultiDrawElementsIndirectAMD
#undef glMultiDrawElementsIndirectAMD
#endif
#ifdef PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC
#undef PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC)(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);

#ifndef GL_AMD_name_gen_delete
#define GL_AMD_name_gen_delete 1
#endif

#ifdef glGenNamesAMD
#undef glGenNamesAMD
#endif
#ifdef PFNGLGENNAMESAMDPROC
#undef PFNGLGENNAMESAMDPROC
#endif
typedef void  (*PFNGLGENNAMESAMDPROC)(GLenum identifier, GLuint num, GLuint *names);

#ifdef glDeleteNamesAMD
#undef glDeleteNamesAMD
#endif
#ifdef PFNGLDELETENAMESAMDPROC
#undef PFNGLDELETENAMESAMDPROC
#endif
typedef void  (*PFNGLDELETENAMESAMDPROC)(GLenum identifier, GLuint num, const GLuint *names);

#ifdef glIsNameAMD
#undef glIsNameAMD
#endif
#ifdef PFNGLISNAMEAMDPROC
#undef PFNGLISNAMEAMDPROC
#endif
typedef GLboolean  (*PFNGLISNAMEAMDPROC)(GLenum identifier, GLuint name);

#ifndef GL_DATA_BUFFER_AMD
#define GL_DATA_BUFFER_AMD 0x9151
#endif

#ifndef GL_PERFORMANCE_MONITOR_AMD
#define GL_PERFORMANCE_MONITOR_AMD 0x9152
#endif

#ifndef GL_QUERY_OBJECT_AMD
#define GL_QUERY_OBJECT_AMD 0x9153
#endif

#ifndef GL_VERTEX_ARRAY_OBJECT_AMD
#define GL_VERTEX_ARRAY_OBJECT_AMD 0x9154
#endif

#ifndef GL_SAMPLER_OBJECT_AMD
#define GL_SAMPLER_OBJECT_AMD 0x9155
#endif

#ifndef GL_AMD_occlusion_query_event
#define GL_AMD_occlusion_query_event 1
#endif

#ifdef glQueryObjectParameteruiAMD
#undef glQueryObjectParameteruiAMD
#endif
#ifdef PFNGLQUERYOBJECTPARAMETERUIAMDPROC
#undef PFNGLQUERYOBJECTPARAMETERUIAMDPROC
#endif
typedef void  (*PFNGLQUERYOBJECTPARAMETERUIAMDPROC)(GLenum target, GLuint id, GLenum pname, GLuint param);

#ifndef GL_OCCLUSION_QUERY_EVENT_MASK_AMD
#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD 0x874F
#endif

#ifndef GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD
#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD 0x00000001
#endif

#ifndef GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD
#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD 0x00000002
#endif

#ifndef GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD
#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD 0x00000004
#endif

#ifndef GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD
#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD 0x00000008
#endif

#ifndef GL_QUERY_ALL_EVENT_BITS_AMD
#define GL_QUERY_ALL_EVENT_BITS_AMD 0xFFFFFFFF
#endif

#ifndef GL_AMD_performance_monitor
#define GL_AMD_performance_monitor 1
#endif

#ifdef glGetPerfMonitorGroupsAMD
#undef glGetPerfMonitorGroupsAMD
#endif
#ifdef PFNGLGETPERFMONITORGROUPSAMDPROC
#undef PFNGLGETPERFMONITORGROUPSAMDPROC
#endif
typedef void  (*PFNGLGETPERFMONITORGROUPSAMDPROC)(GLint *numGroups, GLsizei groupsSize, GLuint *groups);

#ifdef glGetPerfMonitorCountersAMD
#undef glGetPerfMonitorCountersAMD
#endif
#ifdef PFNGLGETPERFMONITORCOUNTERSAMDPROC
#undef PFNGLGETPERFMONITORCOUNTERSAMDPROC
#endif
typedef void  (*PFNGLGETPERFMONITORCOUNTERSAMDPROC)(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);

#ifdef glGetPerfMonitorGroupStringAMD
#undef glGetPerfMonitorGroupStringAMD
#endif
#ifdef PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
#undef PFNGLGETPERFMONITORGROUPSTRINGAMDPROC
#endif
typedef void  (*PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);

#ifdef glGetPerfMonitorCounterStringAMD
#undef glGetPerfMonitorCounterStringAMD
#endif
#ifdef PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
#undef PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC
#endif
typedef void  (*PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);

#ifdef glGetPerfMonitorCounterInfoAMD
#undef glGetPerfMonitorCounterInfoAMD
#endif
#ifdef PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
#undef PFNGLGETPERFMONITORCOUNTERINFOAMDPROC
#endif
typedef void  (*PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)(GLuint group, GLuint counter, GLenum pname, void *data);

#ifdef glGenPerfMonitorsAMD
#undef glGenPerfMonitorsAMD
#endif
#ifdef PFNGLGENPERFMONITORSAMDPROC
#undef PFNGLGENPERFMONITORSAMDPROC
#endif
typedef void  (*PFNGLGENPERFMONITORSAMDPROC)(GLsizei n, GLuint *monitors);

#ifdef glDeletePerfMonitorsAMD
#undef glDeletePerfMonitorsAMD
#endif
#ifdef PFNGLDELETEPERFMONITORSAMDPROC
#undef PFNGLDELETEPERFMONITORSAMDPROC
#endif
typedef void  (*PFNGLDELETEPERFMONITORSAMDPROC)(GLsizei n, GLuint *monitors);

#ifdef glSelectPerfMonitorCountersAMD
#undef glSelectPerfMonitorCountersAMD
#endif
#ifdef PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
#undef PFNGLSELECTPERFMONITORCOUNTERSAMDPROC
#endif
typedef void  (*PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);

#ifdef glBeginPerfMonitorAMD
#undef glBeginPerfMonitorAMD
#endif
#ifdef PFNGLBEGINPERFMONITORAMDPROC
#undef PFNGLBEGINPERFMONITORAMDPROC
#endif
typedef void  (*PFNGLBEGINPERFMONITORAMDPROC)(GLuint monitor);

#ifdef glEndPerfMonitorAMD
#undef glEndPerfMonitorAMD
#endif
#ifdef PFNGLENDPERFMONITORAMDPROC
#undef PFNGLENDPERFMONITORAMDPROC
#endif
typedef void  (*PFNGLENDPERFMONITORAMDPROC)(GLuint monitor);

#ifdef glGetPerfMonitorCounterDataAMD
#undef glGetPerfMonitorCounterDataAMD
#endif
#ifdef PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
#undef PFNGLGETPERFMONITORCOUNTERDATAAMDPROC
#endif
typedef void  (*PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);

#ifndef GL_COUNTER_TYPE_AMD
#define GL_COUNTER_TYPE_AMD 0x8BC0
#endif

#ifndef GL_COUNTER_RANGE_AMD
#define GL_COUNTER_RANGE_AMD 0x8BC1
#endif

#ifndef GL_UNSIGNED_INT64_AMD
#define GL_UNSIGNED_INT64_AMD 0x8BC2
#endif

#ifndef GL_PERCENTAGE_AMD
#define GL_PERCENTAGE_AMD 0x8BC3
#endif

#ifndef GL_PERFMON_RESULT_AVAILABLE_AMD
#define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#endif

#ifndef GL_PERFMON_RESULT_SIZE_AMD
#define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#endif

#ifndef GL_PERFMON_RESULT_AMD
#define GL_PERFMON_RESULT_AMD 0x8BC6
#endif

#ifndef GL_AMD_pinned_memory
#define GL_AMD_pinned_memory 1
#endif

#ifndef GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD
#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
#endif

#ifndef GL_AMD_program_binary_Z400
#define GL_AMD_program_binary_Z400 1
#endif

#ifndef GL_Z400_BINARY_AMD
#define GL_Z400_BINARY_AMD 0x8740
#endif

#ifndef GL_AMD_query_buffer_object
#define GL_AMD_query_buffer_object 1
#endif

#ifndef GL_QUERY_BUFFER_AMD
#define GL_QUERY_BUFFER_AMD 0x9192
#endif

#ifndef GL_QUERY_BUFFER_BINDING_AMD
#define GL_QUERY_BUFFER_BINDING_AMD 0x9193
#endif

#ifndef GL_QUERY_RESULT_NO_WAIT_AMD
#define GL_QUERY_RESULT_NO_WAIT_AMD 0x9194
#endif

#ifndef GL_AMD_sample_positions
#define GL_AMD_sample_positions 1
#endif

#ifdef glSetMultisamplefvAMD
#undef glSetMultisamplefvAMD
#endif
#ifdef PFNGLSETMULTISAMPLEFVAMDPROC
#undef PFNGLSETMULTISAMPLEFVAMDPROC
#endif
typedef void  (*PFNGLSETMULTISAMPLEFVAMDPROC)(GLenum pname, GLuint index, const GLfloat *val);

#ifndef GL_SUBSAMPLE_DISTANCE_AMD
#define GL_SUBSAMPLE_DISTANCE_AMD 0x883F
#endif

#ifndef GL_AMD_seamless_cubemap_per_texture
#define GL_AMD_seamless_cubemap_per_texture 1
#endif

#ifndef GL_TEXTURE_CUBE_MAP_SEAMLESS
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#endif

#ifndef GL_AMD_shader_atomic_counter_ops
#define GL_AMD_shader_atomic_counter_ops 1
#endif

#ifndef GL_AMD_shader_stencil_export
#define GL_AMD_shader_stencil_export 1
#endif

#ifndef GL_AMD_shader_trinary_minmax
#define GL_AMD_shader_trinary_minmax 1
#endif

#ifndef GL_AMD_sparse_texture
#define GL_AMD_sparse_texture 1
#endif

#ifdef glTexStorageSparseAMD
#undef glTexStorageSparseAMD
#endif
#ifdef PFNGLTEXSTORAGESPARSEAMDPROC
#undef PFNGLTEXSTORAGESPARSEAMDPROC
#endif
typedef void  (*PFNGLTEXSTORAGESPARSEAMDPROC)(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);

#ifdef glTextureStorageSparseAMD
#undef glTextureStorageSparseAMD
#endif
#ifdef PFNGLTEXTURESTORAGESPARSEAMDPROC
#undef PFNGLTEXTURESTORAGESPARSEAMDPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGESPARSEAMDPROC)(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);

#ifndef GL_VIRTUAL_PAGE_SIZE_X_AMD
#define GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Y_AMD
#define GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Z_AMD
#define GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
#endif

#ifndef GL_MAX_SPARSE_TEXTURE_SIZE_AMD
#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
#endif

#ifndef GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
#endif

#ifndef GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
#endif

#ifndef GL_MIN_SPARSE_LEVEL_AMD
#define GL_MIN_SPARSE_LEVEL_AMD 0x919B
#endif

#ifndef GL_MIN_LOD_WARNING_AMD
#define GL_MIN_LOD_WARNING_AMD 0x919C
#endif

#ifndef GL_TEXTURE_STORAGE_SPARSE_BIT_AMD
#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x00000001
#endif

#ifndef GL_AMD_stencil_operation_extended
#define GL_AMD_stencil_operation_extended 1
#endif

#ifdef glStencilOpValueAMD
#undef glStencilOpValueAMD
#endif
#ifdef PFNGLSTENCILOPVALUEAMDPROC
#undef PFNGLSTENCILOPVALUEAMDPROC
#endif
typedef void  (*PFNGLSTENCILOPVALUEAMDPROC)(GLenum face, GLuint value);

#ifndef GL_SET_AMD
#define GL_SET_AMD 0x874A
#endif

#ifndef GL_REPLACE_VALUE_AMD
#define GL_REPLACE_VALUE_AMD 0x874B
#endif

#ifndef GL_STENCIL_OP_VALUE_AMD
#define GL_STENCIL_OP_VALUE_AMD 0x874C
#endif

#ifndef GL_STENCIL_BACK_OP_VALUE_AMD
#define GL_STENCIL_BACK_OP_VALUE_AMD 0x874D
#endif

#ifndef GL_AMD_texture_texture4
#define GL_AMD_texture_texture4 1
#endif

#ifndef GL_AMD_transform_feedback3_lines_triangles
#define GL_AMD_transform_feedback3_lines_triangles 1
#endif

#ifndef GL_AMD_transform_feedback4
#define GL_AMD_transform_feedback4 1
#endif

#ifndef GL_STREAM_RASTERIZATION_AMD
#define GL_STREAM_RASTERIZATION_AMD 0x91A0
#endif

#ifndef GL_AMD_vertex_shader_layer
#define GL_AMD_vertex_shader_layer 1
#endif

#ifndef GL_AMD_vertex_shader_tessellator
#define GL_AMD_vertex_shader_tessellator 1
#endif

#ifdef glTessellationFactorAMD
#undef glTessellationFactorAMD
#endif
#ifdef PFNGLTESSELLATIONFACTORAMDPROC
#undef PFNGLTESSELLATIONFACTORAMDPROC
#endif
typedef void  (*PFNGLTESSELLATIONFACTORAMDPROC)(GLfloat factor);

#ifdef glTessellationModeAMD
#undef glTessellationModeAMD
#endif
#ifdef PFNGLTESSELLATIONMODEAMDPROC
#undef PFNGLTESSELLATIONMODEAMDPROC
#endif
typedef void  (*PFNGLTESSELLATIONMODEAMDPROC)(GLenum mode);

#ifndef GL_SAMPLER_BUFFER_AMD
#define GL_SAMPLER_BUFFER_AMD 0x9001
#endif

#ifndef GL_INT_SAMPLER_BUFFER_AMD
#define GL_INT_SAMPLER_BUFFER_AMD 0x9002
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
#endif

#ifndef GL_TESSELLATION_MODE_AMD
#define GL_TESSELLATION_MODE_AMD 0x9004
#endif

#ifndef GL_TESSELLATION_FACTOR_AMD
#define GL_TESSELLATION_FACTOR_AMD 0x9005
#endif

#ifndef GL_DISCRETE_AMD
#define GL_DISCRETE_AMD 0x9006
#endif

#ifndef GL_CONTINUOUS_AMD
#define GL_CONTINUOUS_AMD 0x9007
#endif

#ifndef GL_AMD_vertex_shader_viewport_index
#define GL_AMD_vertex_shader_viewport_index 1
#endif

#ifndef GL_ANDROID_extension_pack_es31a
#define GL_ANDROID_extension_pack_es31a 1
#endif

#ifndef GL_ANGLE_depth_texture
#define GL_ANGLE_depth_texture 1
#endif

#ifndef GL_DEPTH_COMPONENT
#define GL_DEPTH_COMPONENT 0x1902
#endif

#ifndef GL_DEPTH_STENCIL_OES
#define GL_DEPTH_STENCIL_OES 0x84F9
#endif

#ifndef GL_UNSIGNED_SHORT
#define GL_UNSIGNED_SHORT 0x1403
#endif

#ifndef GL_UNSIGNED_INT
#define GL_UNSIGNED_INT 0x1405
#endif

#ifndef GL_UNSIGNED_INT_24_8_OES
#define GL_UNSIGNED_INT_24_8_OES 0x84FA
#endif

#ifndef GL_DEPTH_COMPONENT16
#define GL_DEPTH_COMPONENT16 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT32_OES
#define GL_DEPTH_COMPONENT32_OES 0x81A7
#endif

#ifndef GL_DEPTH24_STENCIL8_OES
#define GL_DEPTH24_STENCIL8_OES 0x88F0
#endif

#ifndef GL_ANGLE_framebuffer_blit
#define GL_ANGLE_framebuffer_blit 1
#endif

#ifdef glBlitFramebufferANGLE
#undef glBlitFramebufferANGLE
#endif
#ifdef PFNGLBLITFRAMEBUFFERANGLEPROC
#undef PFNGLBLITFRAMEBUFFERANGLEPROC
#endif
typedef void  (*PFNGLBLITFRAMEBUFFERANGLEPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#ifndef GL_READ_FRAMEBUFFER_ANGLE
#define GL_READ_FRAMEBUFFER_ANGLE 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER_ANGLE
#define GL_DRAW_FRAMEBUFFER_ANGLE 0x8CA9
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING_ANGLE
#define GL_DRAW_FRAMEBUFFER_BINDING_ANGLE 0x8CA6
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING_ANGLE
#define GL_READ_FRAMEBUFFER_BINDING_ANGLE 0x8CAA
#endif

#ifndef GL_ANGLE_framebuffer_multisample
#define GL_ANGLE_framebuffer_multisample 1
#endif

#ifdef glRenderbufferStorageMultisampleANGLE
#undef glRenderbufferStorageMultisampleANGLE
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifndef GL_RENDERBUFFER_SAMPLES_ANGLE
#define GL_RENDERBUFFER_SAMPLES_ANGLE 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE 0x8D56
#endif

#ifndef GL_MAX_SAMPLES_ANGLE
#define GL_MAX_SAMPLES_ANGLE 0x8D57
#endif

#ifndef GL_ANGLE_instanced_arrays
#define GL_ANGLE_instanced_arrays 1
#endif

#ifdef glDrawArraysInstancedANGLE
#undef glDrawArraysInstancedANGLE
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDANGLEPROC
#undef PFNGLDRAWARRAYSINSTANCEDANGLEPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDANGLEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);

#ifdef glDrawElementsInstancedANGLE
#undef glDrawElementsInstancedANGLE
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDANGLEPROC
#undef PFNGLDRAWELEMENTSINSTANCEDANGLEPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDANGLEPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);

#ifdef glVertexAttribDivisorANGLE
#undef glVertexAttribDivisorANGLE
#endif
#ifdef PFNGLVERTEXATTRIBDIVISORANGLEPROC
#undef PFNGLVERTEXATTRIBDIVISORANGLEPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBDIVISORANGLEPROC)(GLuint index, GLuint divisor);

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE 0x88FE
#endif

#ifndef GL_ANGLE_pack_reverse_row_order
#define GL_ANGLE_pack_reverse_row_order 1
#endif

#ifndef GL_PACK_REVERSE_ROW_ORDER_ANGLE
#define GL_PACK_REVERSE_ROW_ORDER_ANGLE 0x93A4
#endif

#ifndef GL_ANGLE_program_binary
#define GL_ANGLE_program_binary 1
#endif

#ifndef GL_PROGRAM_BINARY_ANGLE
#define GL_PROGRAM_BINARY_ANGLE 0x93A6
#endif

#ifndef GL_ANGLE_texture_compression_dxt3
#define GL_ANGLE_texture_compression_dxt3 1
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE
#define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE 0x83F2
#endif

#ifndef GL_ANGLE_texture_compression_dxt5
#define GL_ANGLE_texture_compression_dxt5 1
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE
#define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE 0x83F3
#endif

#ifndef GL_ANGLE_texture_usage
#define GL_ANGLE_texture_usage 1
#endif

#ifndef GL_TEXTURE_USAGE_ANGLE
#define GL_TEXTURE_USAGE_ANGLE 0x93A2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_ANGLE
#define GL_FRAMEBUFFER_ATTACHMENT_ANGLE 0x93A3
#endif

#ifndef GL_ANGLE_translated_shader_source
#define GL_ANGLE_translated_shader_source 1
#endif

#ifdef glGetTranslatedShaderSourceANGLE
#undef glGetTranslatedShaderSourceANGLE
#endif
#ifdef PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC
#undef PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC
#endif
typedef void  (*PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC)(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);

#ifndef GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE
#define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE 0x93A0
#endif

#ifndef GL_APPLE_aux_depth_stencil
#define GL_APPLE_aux_depth_stencil 1
#endif

#ifndef GL_AUX_DEPTH_STENCIL_APPLE
#define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14
#endif

#ifndef GL_APPLE_client_storage
#define GL_APPLE_client_storage 1
#endif

#ifndef GL_UNPACK_CLIENT_STORAGE_APPLE
#define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
#endif

#ifndef GL_APPLE_clip_distance
#define GL_APPLE_clip_distance 1
#endif

#ifndef GL_MAX_CLIP_DISTANCES_APPLE
#define GL_MAX_CLIP_DISTANCES_APPLE 0x0D32
#endif

#ifndef GL_CLIP_DISTANCE0_APPLE
#define GL_CLIP_DISTANCE0_APPLE 0x3000
#endif

#ifndef GL_CLIP_DISTANCE1_APPLE
#define GL_CLIP_DISTANCE1_APPLE 0x3001
#endif

#ifndef GL_CLIP_DISTANCE2_APPLE
#define GL_CLIP_DISTANCE2_APPLE 0x3002
#endif

#ifndef GL_CLIP_DISTANCE3_APPLE
#define GL_CLIP_DISTANCE3_APPLE 0x3003
#endif

#ifndef GL_CLIP_DISTANCE4_APPLE
#define GL_CLIP_DISTANCE4_APPLE 0x3004
#endif

#ifndef GL_CLIP_DISTANCE5_APPLE
#define GL_CLIP_DISTANCE5_APPLE 0x3005
#endif

#ifndef GL_CLIP_DISTANCE6_APPLE
#define GL_CLIP_DISTANCE6_APPLE 0x3006
#endif

#ifndef GL_CLIP_DISTANCE7_APPLE
#define GL_CLIP_DISTANCE7_APPLE 0x3007
#endif

#ifndef GL_APPLE_color_buffer_packed_float
#define GL_APPLE_color_buffer_packed_float 1
#endif

#ifndef GL_APPLE_copy_texture_levels
#define GL_APPLE_copy_texture_levels 1
#endif

#ifdef glCopyTextureLevelsAPPLE
#undef glCopyTextureLevelsAPPLE
#endif
#ifdef PFNGLCOPYTEXTURELEVELSAPPLEPROC
#undef PFNGLCOPYTEXTURELEVELSAPPLEPROC
#endif
typedef void  (*PFNGLCOPYTEXTURELEVELSAPPLEPROC)(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);

#ifndef GL_APPLE_element_array
#define GL_APPLE_element_array 1
#endif

#ifdef glElementPointerAPPLE
#undef glElementPointerAPPLE
#endif
#ifdef PFNGLELEMENTPOINTERAPPLEPROC
#undef PFNGLELEMENTPOINTERAPPLEPROC
#endif
typedef void  (*PFNGLELEMENTPOINTERAPPLEPROC)(GLenum type, const void *pointer);

#ifdef glDrawElementArrayAPPLE
#undef glDrawElementArrayAPPLE
#endif
#ifdef PFNGLDRAWELEMENTARRAYAPPLEPROC
#undef PFNGLDRAWELEMENTARRAYAPPLEPROC
#endif
typedef void  (*PFNGLDRAWELEMENTARRAYAPPLEPROC)(GLenum mode, GLint first, GLsizei count);

#ifdef glDrawRangeElementArrayAPPLE
#undef glDrawRangeElementArrayAPPLE
#endif
#ifdef PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
#undef PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);

#ifdef glMultiDrawElementArrayAPPLE
#undef glMultiDrawElementArrayAPPLE
#endif
#ifdef PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
#undef PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);

#ifdef glMultiDrawRangeElementArrayAPPLE
#undef glMultiDrawRangeElementArrayAPPLE
#endif
#ifdef PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
#undef PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC
#endif
typedef void  (*PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);

#ifndef GL_ELEMENT_ARRAY_APPLE
#define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#endif

#ifndef GL_ELEMENT_ARRAY_TYPE_APPLE
#define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#endif

#ifndef GL_ELEMENT_ARRAY_POINTER_APPLE
#define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#endif

#ifndef GL_APPLE_fence
#define GL_APPLE_fence 1
#endif

#ifdef glGenFencesAPPLE
#undef glGenFencesAPPLE
#endif
#ifdef PFNGLGENFENCESAPPLEPROC
#undef PFNGLGENFENCESAPPLEPROC
#endif
typedef void  (*PFNGLGENFENCESAPPLEPROC)(GLsizei n, GLuint *fences);

#ifdef glDeleteFencesAPPLE
#undef glDeleteFencesAPPLE
#endif
#ifdef PFNGLDELETEFENCESAPPLEPROC
#undef PFNGLDELETEFENCESAPPLEPROC
#endif
typedef void  (*PFNGLDELETEFENCESAPPLEPROC)(GLsizei n, const GLuint *fences);

#ifdef glSetFenceAPPLE
#undef glSetFenceAPPLE
#endif
#ifdef PFNGLSETFENCEAPPLEPROC
#undef PFNGLSETFENCEAPPLEPROC
#endif
typedef void  (*PFNGLSETFENCEAPPLEPROC)(GLuint fence);

#ifdef glIsFenceAPPLE
#undef glIsFenceAPPLE
#endif
#ifdef PFNGLISFENCEAPPLEPROC
#undef PFNGLISFENCEAPPLEPROC
#endif
typedef GLboolean  (*PFNGLISFENCEAPPLEPROC)(GLuint fence);

#ifdef glTestFenceAPPLE
#undef glTestFenceAPPLE
#endif
#ifdef PFNGLTESTFENCEAPPLEPROC
#undef PFNGLTESTFENCEAPPLEPROC
#endif
typedef GLboolean  (*PFNGLTESTFENCEAPPLEPROC)(GLuint fence);

#ifdef glFinishFenceAPPLE
#undef glFinishFenceAPPLE
#endif
#ifdef PFNGLFINISHFENCEAPPLEPROC
#undef PFNGLFINISHFENCEAPPLEPROC
#endif
typedef void  (*PFNGLFINISHFENCEAPPLEPROC)(GLuint fence);

#ifdef glTestObjectAPPLE
#undef glTestObjectAPPLE
#endif
#ifdef PFNGLTESTOBJECTAPPLEPROC
#undef PFNGLTESTOBJECTAPPLEPROC
#endif
typedef GLboolean  (*PFNGLTESTOBJECTAPPLEPROC)(GLenum object, GLuint name);

#ifdef glFinishObjectAPPLE
#undef glFinishObjectAPPLE
#endif
#ifdef PFNGLFINISHOBJECTAPPLEPROC
#undef PFNGLFINISHOBJECTAPPLEPROC
#endif
typedef void  (*PFNGLFINISHOBJECTAPPLEPROC)(GLenum object, GLint name);

#ifndef GL_DRAW_PIXELS_APPLE
#define GL_DRAW_PIXELS_APPLE 0x8A0A
#endif

#ifndef GL_FENCE_APPLE
#define GL_FENCE_APPLE 0x8A0B
#endif

#ifndef GL_APPLE_float_pixels
#define GL_APPLE_float_pixels 1
#endif

#ifndef GL_HALF_APPLE
#define GL_HALF_APPLE 0x140B
#endif

#ifndef GL_RGBA_FLOAT32_APPLE
#define GL_RGBA_FLOAT32_APPLE 0x8814
#endif

#ifndef GL_RGB_FLOAT32_APPLE
#define GL_RGB_FLOAT32_APPLE 0x8815
#endif

#ifndef GL_ALPHA_FLOAT32_APPLE
#define GL_ALPHA_FLOAT32_APPLE 0x8816
#endif

#ifndef GL_INTENSITY_FLOAT32_APPLE
#define GL_INTENSITY_FLOAT32_APPLE 0x8817
#endif

#ifndef GL_LUMINANCE_FLOAT32_APPLE
#define GL_LUMINANCE_FLOAT32_APPLE 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT32_APPLE
#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819
#endif

#ifndef GL_RGBA_FLOAT16_APPLE
#define GL_RGBA_FLOAT16_APPLE 0x881A
#endif

#ifndef GL_RGB_FLOAT16_APPLE
#define GL_RGB_FLOAT16_APPLE 0x881B
#endif

#ifndef GL_ALPHA_FLOAT16_APPLE
#define GL_ALPHA_FLOAT16_APPLE 0x881C
#endif

#ifndef GL_INTENSITY_FLOAT16_APPLE
#define GL_INTENSITY_FLOAT16_APPLE 0x881D
#endif

#ifndef GL_LUMINANCE_FLOAT16_APPLE
#define GL_LUMINANCE_FLOAT16_APPLE 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT16_APPLE
#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
#endif

#ifndef GL_COLOR_FLOAT_APPLE
#define GL_COLOR_FLOAT_APPLE 0x8A0F
#endif

#ifndef GL_APPLE_flush_buffer_range
#define GL_APPLE_flush_buffer_range 1
#endif

#ifdef glBufferParameteriAPPLE
#undef glBufferParameteriAPPLE
#endif
#ifdef PFNGLBUFFERPARAMETERIAPPLEPROC
#undef PFNGLBUFFERPARAMETERIAPPLEPROC
#endif
typedef void  (*PFNGLBUFFERPARAMETERIAPPLEPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glFlushMappedBufferRangeAPPLE
#undef glFlushMappedBufferRangeAPPLE
#endif
#ifdef PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
#undef PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC
#endif
typedef void  (*PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)(GLenum target, GLintptr offset, GLsizeiptr size);

#ifndef GL_BUFFER_SERIALIZED_MODIFY_APPLE
#define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
#endif

#ifndef GL_BUFFER_FLUSHING_UNMAP_APPLE
#define GL_BUFFER_FLUSHING_UNMAP_APPLE 0x8A13
#endif

#ifndef GL_APPLE_framebuffer_multisample
#define GL_APPLE_framebuffer_multisample 1
#endif

#ifdef glRenderbufferStorageMultisampleAPPLE
#undef glRenderbufferStorageMultisampleAPPLE
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glResolveMultisampleFramebufferAPPLE
#undef glResolveMultisampleFramebufferAPPLE
#endif
#ifdef PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
#undef PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC
#endif
typedef void  (*PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC)(void);

#ifndef GL_RENDERBUFFER_SAMPLES_APPLE
#define GL_RENDERBUFFER_SAMPLES_APPLE 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE 0x8D56
#endif

#ifndef GL_MAX_SAMPLES_APPLE
#define GL_MAX_SAMPLES_APPLE 0x8D57
#endif

#ifndef GL_READ_FRAMEBUFFER_APPLE
#define GL_READ_FRAMEBUFFER_APPLE 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER_APPLE
#define GL_DRAW_FRAMEBUFFER_APPLE 0x8CA9
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING_APPLE
#define GL_DRAW_FRAMEBUFFER_BINDING_APPLE 0x8CA6
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING_APPLE
#define GL_READ_FRAMEBUFFER_BINDING_APPLE 0x8CAA
#endif

#ifndef GL_APPLE_object_purgeable
#define GL_APPLE_object_purgeable 1
#endif

#ifdef glObjectPurgeableAPPLE
#undef glObjectPurgeableAPPLE
#endif
#ifdef PFNGLOBJECTPURGEABLEAPPLEPROC
#undef PFNGLOBJECTPURGEABLEAPPLEPROC
#endif
typedef GLenum  (*PFNGLOBJECTPURGEABLEAPPLEPROC)(GLenum objectType, GLuint name, GLenum option);

#ifdef glObjectUnpurgeableAPPLE
#undef glObjectUnpurgeableAPPLE
#endif
#ifdef PFNGLOBJECTUNPURGEABLEAPPLEPROC
#undef PFNGLOBJECTUNPURGEABLEAPPLEPROC
#endif
typedef GLenum  (*PFNGLOBJECTUNPURGEABLEAPPLEPROC)(GLenum objectType, GLuint name, GLenum option);

#ifdef glGetObjectParameterivAPPLE
#undef glGetObjectParameterivAPPLE
#endif
#ifdef PFNGLGETOBJECTPARAMETERIVAPPLEPROC
#undef PFNGLGETOBJECTPARAMETERIVAPPLEPROC
#endif
typedef void  (*PFNGLGETOBJECTPARAMETERIVAPPLEPROC)(GLenum objectType, GLuint name, GLenum pname, GLint *params);

#ifndef GL_BUFFER_OBJECT_APPLE
#define GL_BUFFER_OBJECT_APPLE 0x85B3
#endif

#ifndef GL_RELEASED_APPLE
#define GL_RELEASED_APPLE 0x8A19
#endif

#ifndef GL_VOLATILE_APPLE
#define GL_VOLATILE_APPLE 0x8A1A
#endif

#ifndef GL_RETAINED_APPLE
#define GL_RETAINED_APPLE 0x8A1B
#endif

#ifndef GL_UNDEFINED_APPLE
#define GL_UNDEFINED_APPLE 0x8A1C
#endif

#ifndef GL_PURGEABLE_APPLE
#define GL_PURGEABLE_APPLE 0x8A1D
#endif

#ifndef GL_APPLE_rgb_422
#define GL_APPLE_rgb_422 1
#endif

#ifndef GL_RGB_422_APPLE
#define GL_RGB_422_APPLE 0x8A1F
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_APPLE
#define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_REV_APPLE
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
#endif

#ifndef GL_RGB_RAW_422_APPLE
#define GL_RGB_RAW_422_APPLE 0x8A51
#endif

#ifndef GL_APPLE_row_bytes
#define GL_APPLE_row_bytes 1
#endif

#ifndef GL_PACK_ROW_BYTES_APPLE
#define GL_PACK_ROW_BYTES_APPLE 0x8A15
#endif

#ifndef GL_UNPACK_ROW_BYTES_APPLE
#define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
#endif

#ifndef GL_APPLE_specular_vector
#define GL_APPLE_specular_vector 1
#endif

#ifndef GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
#endif

#ifndef GL_APPLE_sync
#define GL_APPLE_sync 1
#endif

#ifdef glFenceSyncAPPLE
#undef glFenceSyncAPPLE
#endif
#ifdef PFNGLFENCESYNCAPPLEPROC
#undef PFNGLFENCESYNCAPPLEPROC
#endif
typedef GLsync  (*PFNGLFENCESYNCAPPLEPROC)(GLenum condition, GLbitfield flags);

#ifdef glIsSyncAPPLE
#undef glIsSyncAPPLE
#endif
#ifdef PFNGLISSYNCAPPLEPROC
#undef PFNGLISSYNCAPPLEPROC
#endif
typedef GLboolean  (*PFNGLISSYNCAPPLEPROC)(GLsync sync);

#ifdef glDeleteSyncAPPLE
#undef glDeleteSyncAPPLE
#endif
#ifdef PFNGLDELETESYNCAPPLEPROC
#undef PFNGLDELETESYNCAPPLEPROC
#endif
typedef void  (*PFNGLDELETESYNCAPPLEPROC)(GLsync sync);

#ifdef glClientWaitSyncAPPLE
#undef glClientWaitSyncAPPLE
#endif
#ifdef PFNGLCLIENTWAITSYNCAPPLEPROC
#undef PFNGLCLIENTWAITSYNCAPPLEPROC
#endif
typedef GLenum  (*PFNGLCLIENTWAITSYNCAPPLEPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

#ifdef glWaitSyncAPPLE
#undef glWaitSyncAPPLE
#endif
#ifdef PFNGLWAITSYNCAPPLEPROC
#undef PFNGLWAITSYNCAPPLEPROC
#endif
typedef void  (*PFNGLWAITSYNCAPPLEPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

#ifdef glGetInteger64vAPPLE
#undef glGetInteger64vAPPLE
#endif
#ifdef PFNGLGETINTEGER64VAPPLEPROC
#undef PFNGLGETINTEGER64VAPPLEPROC
#endif
typedef void  (*PFNGLGETINTEGER64VAPPLEPROC)(GLenum pname, GLint64 *params);

#ifdef glGetSyncivAPPLE
#undef glGetSyncivAPPLE
#endif
#ifdef PFNGLGETSYNCIVAPPLEPROC
#undef PFNGLGETSYNCIVAPPLEPROC
#endif
typedef void  (*PFNGLGETSYNCIVAPPLEPROC)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);

#ifndef GL_SYNC_OBJECT_APPLE
#define GL_SYNC_OBJECT_APPLE 0x8A53
#endif

#ifndef GL_MAX_SERVER_WAIT_TIMEOUT_APPLE
#define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE 0x9111
#endif

#ifndef GL_OBJECT_TYPE_APPLE
#define GL_OBJECT_TYPE_APPLE 0x9112
#endif

#ifndef GL_SYNC_CONDITION_APPLE
#define GL_SYNC_CONDITION_APPLE 0x9113
#endif

#ifndef GL_SYNC_STATUS_APPLE
#define GL_SYNC_STATUS_APPLE 0x9114
#endif

#ifndef GL_SYNC_FLAGS_APPLE
#define GL_SYNC_FLAGS_APPLE 0x9115
#endif

#ifndef GL_SYNC_FENCE_APPLE
#define GL_SYNC_FENCE_APPLE 0x9116
#endif

#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE
#define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE 0x9117
#endif

#ifndef GL_UNSIGNALED_APPLE
#define GL_UNSIGNALED_APPLE 0x9118
#endif

#ifndef GL_SIGNALED_APPLE
#define GL_SIGNALED_APPLE 0x9119
#endif

#ifndef GL_ALREADY_SIGNALED_APPLE
#define GL_ALREADY_SIGNALED_APPLE 0x911A
#endif

#ifndef GL_TIMEOUT_EXPIRED_APPLE
#define GL_TIMEOUT_EXPIRED_APPLE 0x911B
#endif

#ifndef GL_CONDITION_SATISFIED_APPLE
#define GL_CONDITION_SATISFIED_APPLE 0x911C
#endif

#ifndef GL_WAIT_FAILED_APPLE
#define GL_WAIT_FAILED_APPLE 0x911D
#endif

#ifndef GL_SYNC_FLUSH_COMMANDS_BIT_APPLE
#define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE 0x00000001
#endif

#ifndef GL_TIMEOUT_IGNORED_APPLE
#define GL_TIMEOUT_IGNORED_APPLE 0xFFFFFFFFFFFFFFFF
#endif

#ifndef GL_APPLE_texture_2D_limited_npot
#define GL_APPLE_texture_2D_limited_npot 1
#endif

#ifndef GL_APPLE_texture_format_BGRA8888
#define GL_APPLE_texture_format_BGRA8888 1
#endif

#ifndef GL_BGRA_EXT
#define GL_BGRA_EXT 0x80E1
#endif

#ifndef GL_BGRA8_EXT
#define GL_BGRA8_EXT 0x93A1
#endif

#ifndef GL_APPLE_texture_max_level
#define GL_APPLE_texture_max_level 1
#endif

#ifndef GL_TEXTURE_MAX_LEVEL_APPLE
#define GL_TEXTURE_MAX_LEVEL_APPLE 0x813D
#endif

#ifndef GL_APPLE_texture_packed_float
#define GL_APPLE_texture_packed_float 1
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE
#define GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE 0x8C3B
#endif

#ifndef GL_UNSIGNED_INT_5_9_9_9_REV_APPLE
#define GL_UNSIGNED_INT_5_9_9_9_REV_APPLE 0x8C3E
#endif

#ifndef GL_R11F_G11F_B10F_APPLE
#define GL_R11F_G11F_B10F_APPLE 0x8C3A
#endif

#ifndef GL_RGB9_E5_APPLE
#define GL_RGB9_E5_APPLE 0x8C3D
#endif

#ifndef GL_APPLE_texture_range
#define GL_APPLE_texture_range 1
#endif

#ifdef glTextureRangeAPPLE
#undef glTextureRangeAPPLE
#endif
#ifdef PFNGLTEXTURERANGEAPPLEPROC
#undef PFNGLTEXTURERANGEAPPLEPROC
#endif
typedef void  (*PFNGLTEXTURERANGEAPPLEPROC)(GLenum target, GLsizei length, const void *pointer);

#ifdef glGetTexParameterPointervAPPLE
#undef glGetTexParameterPointervAPPLE
#endif
#ifdef PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
#undef PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)(GLenum target, GLenum pname, void **params);

#ifndef GL_TEXTURE_RANGE_LENGTH_APPLE
#define GL_TEXTURE_RANGE_LENGTH_APPLE 0x85B7
#endif

#ifndef GL_TEXTURE_RANGE_POINTER_APPLE
#define GL_TEXTURE_RANGE_POINTER_APPLE 0x85B8
#endif

#ifndef GL_TEXTURE_STORAGE_HINT_APPLE
#define GL_TEXTURE_STORAGE_HINT_APPLE 0x85BC
#endif

#ifndef GL_STORAGE_PRIVATE_APPLE
#define GL_STORAGE_PRIVATE_APPLE 0x85BD
#endif

#ifndef GL_STORAGE_CACHED_APPLE
#define GL_STORAGE_CACHED_APPLE 0x85BE
#endif

#ifndef GL_STORAGE_SHARED_APPLE
#define GL_STORAGE_SHARED_APPLE 0x85BF
#endif

#ifndef GL_APPLE_transform_hint
#define GL_APPLE_transform_hint 1
#endif

#ifndef GL_TRANSFORM_HINT_APPLE
#define GL_TRANSFORM_HINT_APPLE 0x85B1
#endif

#ifndef GL_APPLE_vertex_array_object
#define GL_APPLE_vertex_array_object 1
#endif

#ifdef glBindVertexArrayAPPLE
#undef glBindVertexArrayAPPLE
#endif
#ifdef PFNGLBINDVERTEXARRAYAPPLEPROC
#undef PFNGLBINDVERTEXARRAYAPPLEPROC
#endif
typedef void  (*PFNGLBINDVERTEXARRAYAPPLEPROC)(GLuint array);

#ifdef glDeleteVertexArraysAPPLE
#undef glDeleteVertexArraysAPPLE
#endif
#ifdef PFNGLDELETEVERTEXARRAYSAPPLEPROC
#undef PFNGLDELETEVERTEXARRAYSAPPLEPROC
#endif
typedef void  (*PFNGLDELETEVERTEXARRAYSAPPLEPROC)(GLsizei n, const GLuint *arrays);

#ifdef glGenVertexArraysAPPLE
#undef glGenVertexArraysAPPLE
#endif
#ifdef PFNGLGENVERTEXARRAYSAPPLEPROC
#undef PFNGLGENVERTEXARRAYSAPPLEPROC
#endif
typedef void  (*PFNGLGENVERTEXARRAYSAPPLEPROC)(GLsizei n, GLuint *arrays);

#ifdef glIsVertexArrayAPPLE
#undef glIsVertexArrayAPPLE
#endif
#ifdef PFNGLISVERTEXARRAYAPPLEPROC
#undef PFNGLISVERTEXARRAYAPPLEPROC
#endif
typedef GLboolean  (*PFNGLISVERTEXARRAYAPPLEPROC)(GLuint array);

#ifndef GL_VERTEX_ARRAY_BINDING_APPLE
#define GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5
#endif

#ifndef GL_APPLE_vertex_array_range
#define GL_APPLE_vertex_array_range 1
#endif

#ifdef glVertexArrayRangeAPPLE
#undef glVertexArrayRangeAPPLE
#endif
#ifdef PFNGLVERTEXARRAYRANGEAPPLEPROC
#undef PFNGLVERTEXARRAYRANGEAPPLEPROC
#endif
typedef void  (*PFNGLVERTEXARRAYRANGEAPPLEPROC)(GLsizei length, void *pointer);

#ifdef glFlushVertexArrayRangeAPPLE
#undef glFlushVertexArrayRangeAPPLE
#endif
#ifdef PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
#undef PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC
#endif
typedef void  (*PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)(GLsizei length, void *pointer);

#ifdef glVertexArrayParameteriAPPLE
#undef glVertexArrayParameteriAPPLE
#endif
#ifdef PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
#undef PFNGLVERTEXARRAYPARAMETERIAPPLEPROC
#endif
typedef void  (*PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)(GLenum pname, GLint param);

#ifndef GL_VERTEX_ARRAY_RANGE_APPLE
#define GL_VERTEX_ARRAY_RANGE_APPLE 0x851D
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE
#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
#endif

#ifndef GL_VERTEX_ARRAY_STORAGE_HINT_APPLE
#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_POINTER_APPLE
#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
#endif

#ifndef GL_STORAGE_CLIENT_APPLE
#define GL_STORAGE_CLIENT_APPLE 0x85B4
#endif

#ifndef GL_STORAGE_CACHED_APPLE
#define GL_STORAGE_CACHED_APPLE 0x85BE
#endif

#ifndef GL_STORAGE_SHARED_APPLE
#define GL_STORAGE_SHARED_APPLE 0x85BF
#endif

#ifndef GL_APPLE_vertex_program_evaluators
#define GL_APPLE_vertex_program_evaluators 1
#endif

#ifdef glEnableVertexAttribAPPLE
#undef glEnableVertexAttribAPPLE
#endif
#ifdef PFNGLENABLEVERTEXATTRIBAPPLEPROC
#undef PFNGLENABLEVERTEXATTRIBAPPLEPROC
#endif
typedef void  (*PFNGLENABLEVERTEXATTRIBAPPLEPROC)(GLuint index, GLenum pname);

#ifdef glDisableVertexAttribAPPLE
#undef glDisableVertexAttribAPPLE
#endif
#ifdef PFNGLDISABLEVERTEXATTRIBAPPLEPROC
#undef PFNGLDISABLEVERTEXATTRIBAPPLEPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXATTRIBAPPLEPROC)(GLuint index, GLenum pname);

#ifdef glIsVertexAttribEnabledAPPLE
#undef glIsVertexAttribEnabledAPPLE
#endif
#ifdef PFNGLISVERTEXATTRIBENABLEDAPPLEPROC
#undef PFNGLISVERTEXATTRIBENABLEDAPPLEPROC
#endif
typedef GLboolean  (*PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)(GLuint index, GLenum pname);

#ifdef glMapVertexAttrib1dAPPLE
#undef glMapVertexAttrib1dAPPLE
#endif
#ifdef PFNGLMAPVERTEXATTRIB1DAPPLEPROC
#undef PFNGLMAPVERTEXATTRIB1DAPPLEPROC
#endif
typedef void  (*PFNGLMAPVERTEXATTRIB1DAPPLEPROC)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);

#ifdef glMapVertexAttrib1fAPPLE
#undef glMapVertexAttrib1fAPPLE
#endif
#ifdef PFNGLMAPVERTEXATTRIB1FAPPLEPROC
#undef PFNGLMAPVERTEXATTRIB1FAPPLEPROC
#endif
typedef void  (*PFNGLMAPVERTEXATTRIB1FAPPLEPROC)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);

#ifdef glMapVertexAttrib2dAPPLE
#undef glMapVertexAttrib2dAPPLE
#endif
#ifdef PFNGLMAPVERTEXATTRIB2DAPPLEPROC
#undef PFNGLMAPVERTEXATTRIB2DAPPLEPROC
#endif
typedef void  (*PFNGLMAPVERTEXATTRIB2DAPPLEPROC)(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);

#ifdef glMapVertexAttrib2fAPPLE
#undef glMapVertexAttrib2fAPPLE
#endif
#ifdef PFNGLMAPVERTEXATTRIB2FAPPLEPROC
#undef PFNGLMAPVERTEXATTRIB2FAPPLEPROC
#endif
typedef void  (*PFNGLMAPVERTEXATTRIB2FAPPLEPROC)(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);

#ifndef GL_VERTEX_ATTRIB_MAP1_APPLE
#define GL_VERTEX_ATTRIB_MAP1_APPLE 0x8A00
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_APPLE
#define GL_VERTEX_ATTRIB_MAP2_APPLE 0x8A01
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE
#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 0x8A02
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE
#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE
#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
#endif

#ifndef GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE
#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE
#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 0x8A06
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE
#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE
#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
#endif

#ifndef GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE
#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
#endif

#ifndef GL_APPLE_ycbcr_422
#define GL_APPLE_ycbcr_422 1
#endif

#ifndef GL_YCBCR_422_APPLE
#define GL_YCBCR_422_APPLE 0x85B9
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_APPLE
#define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_REV_APPLE
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
#endif

#ifndef GL_ARB_ES2_compatibility
#define GL_ARB_ES2_compatibility 1
#endif

#ifdef glReleaseShaderCompiler
#undef glReleaseShaderCompiler
#endif
#ifdef PFNGLRELEASESHADERCOMPILERPROC
#undef PFNGLRELEASESHADERCOMPILERPROC
#endif
typedef void  (*PFNGLRELEASESHADERCOMPILERPROC)(void);

#ifdef glShaderBinary
#undef glShaderBinary
#endif
#ifdef PFNGLSHADERBINARYPROC
#undef PFNGLSHADERBINARYPROC
#endif
typedef void  (*PFNGLSHADERBINARYPROC)(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);

#ifdef glGetShaderPrecisionFormat
#undef glGetShaderPrecisionFormat
#endif
#ifdef PFNGLGETSHADERPRECISIONFORMATPROC
#undef PFNGLGETSHADERPRECISIONFORMATPROC
#endif
typedef void  (*PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);

#ifdef glDepthRangef
#undef glDepthRangef
#endif
#ifdef PFNGLDEPTHRANGEFPROC
#undef PFNGLDEPTHRANGEFPROC
#endif
typedef void  (*PFNGLDEPTHRANGEFPROC)(GLfloat n, GLfloat f);

#ifdef glClearDepthf
#undef glClearDepthf
#endif
#ifdef PFNGLCLEARDEPTHFPROC
#undef PFNGLCLEARDEPTHFPROC
#endif
typedef void  (*PFNGLCLEARDEPTHFPROC)(GLfloat d);

#ifndef GL_FIXED
#define GL_FIXED 0x140C
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#endif

#ifndef GL_LOW_FLOAT
#define GL_LOW_FLOAT 0x8DF0
#endif

#ifndef GL_MEDIUM_FLOAT
#define GL_MEDIUM_FLOAT 0x8DF1
#endif

#ifndef GL_HIGH_FLOAT
#define GL_HIGH_FLOAT 0x8DF2
#endif

#ifndef GL_LOW_INT
#define GL_LOW_INT 0x8DF3
#endif

#ifndef GL_MEDIUM_INT
#define GL_MEDIUM_INT 0x8DF4
#endif

#ifndef GL_HIGH_INT
#define GL_HIGH_INT 0x8DF5
#endif

#ifndef GL_SHADER_COMPILER
#define GL_SHADER_COMPILER 0x8DFA
#endif

#ifndef GL_SHADER_BINARY_FORMATS
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#endif

#ifndef GL_NUM_SHADER_BINARY_FORMATS
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_VECTORS
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#endif

#ifndef GL_MAX_VARYING_VECTORS
#define GL_MAX_VARYING_VECTORS 0x8DFC
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_VECTORS
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#endif

#ifndef GL_RGB565
#define GL_RGB565 0x8D62
#endif

#ifndef GL_ARB_ES3_1_compatibility
#define GL_ARB_ES3_1_compatibility 1
#endif

#ifdef glMemoryBarrierByRegion
#undef glMemoryBarrierByRegion
#endif
#ifdef PFNGLMEMORYBARRIERBYREGIONPROC
#undef PFNGLMEMORYBARRIERBYREGIONPROC
#endif
typedef void  (*PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);

#ifndef GL_BACK
#define GL_BACK 0x0405
#endif

#ifndef GL_ARB_ES3_compatibility
#define GL_ARB_ES3_compatibility 1
#endif

#ifndef GL_COMPRESSED_RGB8_ETC2
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#endif

#ifndef GL_COMPRESSED_SRGB8_ETC2
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#endif

#ifndef GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#endif

#ifndef GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#endif

#ifndef GL_COMPRESSED_RGBA8_ETC2_EAC
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#endif

#ifndef GL_COMPRESSED_R11_EAC
#define GL_COMPRESSED_R11_EAC 0x9270
#endif

#ifndef GL_COMPRESSED_SIGNED_R11_EAC
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#endif

#ifndef GL_COMPRESSED_RG11_EAC
#define GL_COMPRESSED_RG11_EAC 0x9272
#endif

#ifndef GL_COMPRESSED_SIGNED_RG11_EAC
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#endif

#ifndef GL_PRIMITIVE_RESTART_FIXED_INDEX
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#endif

#ifndef GL_ANY_SAMPLES_PASSED_CONSERVATIVE
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#endif

#ifndef GL_MAX_ELEMENT_INDEX
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#endif

#ifndef GL_ARB_arrays_of_arrays
#define GL_ARB_arrays_of_arrays 1
#endif

#ifndef GL_ARB_base_instance
#define GL_ARB_base_instance 1
#endif

#ifdef glDrawArraysInstancedBaseInstance
#undef glDrawArraysInstancedBaseInstance
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
#undef PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);

#ifdef glDrawElementsInstancedBaseInstance
#undef glDrawElementsInstancedBaseInstance
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);

#ifdef glDrawElementsInstancedBaseVertexBaseInstance
#undef glDrawElementsInstancedBaseVertexBaseInstance
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);

#ifndef GL_ARB_bindless_texture
#define GL_ARB_bindless_texture 1
#endif

#ifdef glGetTextureHandleARB
#undef glGetTextureHandleARB
#endif
#ifdef PFNGLGETTEXTUREHANDLEARBPROC
#undef PFNGLGETTEXTUREHANDLEARBPROC
#endif
typedef GLuint64  (*PFNGLGETTEXTUREHANDLEARBPROC)(GLuint texture);

#ifdef glGetTextureSamplerHandleARB
#undef glGetTextureSamplerHandleARB
#endif
#ifdef PFNGLGETTEXTURESAMPLERHANDLEARBPROC
#undef PFNGLGETTEXTURESAMPLERHANDLEARBPROC
#endif
typedef GLuint64  (*PFNGLGETTEXTURESAMPLERHANDLEARBPROC)(GLuint texture, GLuint sampler);

#ifdef glMakeTextureHandleResidentARB
#undef glMakeTextureHandleResidentARB
#endif
#ifdef PFNGLMAKETEXTUREHANDLERESIDENTARBPROC
#undef PFNGLMAKETEXTUREHANDLERESIDENTARBPROC
#endif
typedef void  (*PFNGLMAKETEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle);

#ifdef glMakeTextureHandleNonResidentARB
#undef glMakeTextureHandleNonResidentARB
#endif
#ifdef PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC
#undef PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC
#endif
typedef void  (*PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC)(GLuint64 handle);

#ifdef glGetImageHandleARB
#undef glGetImageHandleARB
#endif
#ifdef PFNGLGETIMAGEHANDLEARBPROC
#undef PFNGLGETIMAGEHANDLEARBPROC
#endif
typedef GLuint64  (*PFNGLGETIMAGEHANDLEARBPROC)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);

#ifdef glMakeImageHandleResidentARB
#undef glMakeImageHandleResidentARB
#endif
#ifdef PFNGLMAKEIMAGEHANDLERESIDENTARBPROC
#undef PFNGLMAKEIMAGEHANDLERESIDENTARBPROC
#endif
typedef void  (*PFNGLMAKEIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle, GLenum access);

#ifdef glMakeImageHandleNonResidentARB
#undef glMakeImageHandleNonResidentARB
#endif
#ifdef PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC
#undef PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC
#endif
typedef void  (*PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC)(GLuint64 handle);

#ifdef glUniformHandleui64ARB
#undef glUniformHandleui64ARB
#endif
#ifdef PFNGLUNIFORMHANDLEUI64ARBPROC
#undef PFNGLUNIFORMHANDLEUI64ARBPROC
#endif
typedef void  (*PFNGLUNIFORMHANDLEUI64ARBPROC)(GLint location, GLuint64 value);

#ifdef glUniformHandleui64vARB
#undef glUniformHandleui64vARB
#endif
#ifdef PFNGLUNIFORMHANDLEUI64VARBPROC
#undef PFNGLUNIFORMHANDLEUI64VARBPROC
#endif
typedef void  (*PFNGLUNIFORMHANDLEUI64VARBPROC)(GLint location, GLsizei count, const GLuint64 *value);

#ifdef glProgramUniformHandleui64ARB
#undef glProgramUniformHandleui64ARB
#endif
#ifdef PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC
#undef PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC)(GLuint program, GLint location, GLuint64 value);

#ifdef glProgramUniformHandleui64vARB
#undef glProgramUniformHandleui64vARB
#endif
#ifdef PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC
#undef PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);

#ifdef glIsTextureHandleResidentARB
#undef glIsTextureHandleResidentARB
#endif
#ifdef PFNGLISTEXTUREHANDLERESIDENTARBPROC
#undef PFNGLISTEXTUREHANDLERESIDENTARBPROC
#endif
typedef GLboolean  (*PFNGLISTEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle);

#ifdef glIsImageHandleResidentARB
#undef glIsImageHandleResidentARB
#endif
#ifdef PFNGLISIMAGEHANDLERESIDENTARBPROC
#undef PFNGLISIMAGEHANDLERESIDENTARBPROC
#endif
typedef GLboolean  (*PFNGLISIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle);

#ifdef glVertexAttribL1ui64ARB
#undef glVertexAttribL1ui64ARB
#endif
#ifdef PFNGLVERTEXATTRIBL1UI64ARBPROC
#undef PFNGLVERTEXATTRIBL1UI64ARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1UI64ARBPROC)(GLuint index, GLuint64EXT x);

#ifdef glVertexAttribL1ui64vARB
#undef glVertexAttribL1ui64vARB
#endif
#ifdef PFNGLVERTEXATTRIBL1UI64VARBPROC
#undef PFNGLVERTEXATTRIBL1UI64VARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1UI64VARBPROC)(GLuint index, const GLuint64EXT *v);

#ifdef glGetVertexAttribLui64vARB
#undef glGetVertexAttribLui64vARB
#endif
#ifdef PFNGLGETVERTEXATTRIBLUI64VARBPROC
#undef PFNGLGETVERTEXATTRIBLUI64VARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBLUI64VARBPROC)(GLuint index, GLenum pname, GLuint64EXT *params);

#ifndef GL_UNSIGNED_INT64_ARB
#define GL_UNSIGNED_INT64_ARB 0x140F
#endif

#ifndef GL_ARB_blend_func_extended
#define GL_ARB_blend_func_extended 1
#endif

#ifdef glBindFragDataLocationIndexed
#undef glBindFragDataLocationIndexed
#endif
#ifdef PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
#undef PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
#endif
typedef void  (*PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);

#ifdef glGetFragDataIndex
#undef glGetFragDataIndex
#endif
#ifdef PFNGLGETFRAGDATAINDEXPROC
#undef PFNGLGETFRAGDATAINDEXPROC
#endif
typedef GLint  (*PFNGLGETFRAGDATAINDEXPROC)(GLuint program, const GLchar *name);

#ifndef GL_SRC1_COLOR
#define GL_SRC1_COLOR 0x88F9
#endif

#ifndef GL_SRC1_ALPHA
#define GL_SRC1_ALPHA 0x8589
#endif

#ifndef GL_ONE_MINUS_SRC1_COLOR
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#endif

#ifndef GL_ONE_MINUS_SRC1_ALPHA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#endif

#ifndef GL_MAX_DUAL_SOURCE_DRAW_BUFFERS
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#endif

#ifndef GL_ARB_buffer_storage
#define GL_ARB_buffer_storage 1
#endif

#ifdef glBufferStorage
#undef glBufferStorage
#endif
#ifdef PFNGLBUFFERSTORAGEPROC
#undef PFNGLBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLBUFFERSTORAGEPROC)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);

#ifndef GL_MAP_READ_BIT
#define GL_MAP_READ_BIT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT
#define GL_MAP_WRITE_BIT 0x0002
#endif

#ifndef GL_MAP_PERSISTENT_BIT
#define GL_MAP_PERSISTENT_BIT 0x0040
#endif

#ifndef GL_MAP_COHERENT_BIT
#define GL_MAP_COHERENT_BIT 0x0080
#endif

#ifndef GL_DYNAMIC_STORAGE_BIT
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#endif

#ifndef GL_CLIENT_STORAGE_BIT
#define GL_CLIENT_STORAGE_BIT 0x0200
#endif

#ifndef GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#endif

#ifndef GL_BUFFER_IMMUTABLE_STORAGE
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#endif

#ifndef GL_BUFFER_STORAGE_FLAGS
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#endif

#ifndef GL_ARB_cl_event
#define GL_ARB_cl_event 1
#endif

#ifdef glCreateSyncFromCLeventARB
#undef glCreateSyncFromCLeventARB
#endif
#ifdef PFNGLCREATESYNCFROMCLEVENTARBPROC
#undef PFNGLCREATESYNCFROMCLEVENTARBPROC
#endif
typedef GLsync  (*PFNGLCREATESYNCFROMCLEVENTARBPROC)(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);

#ifndef GL_SYNC_CL_EVENT_ARB
#define GL_SYNC_CL_EVENT_ARB 0x8240
#endif

#ifndef GL_SYNC_CL_EVENT_COMPLETE_ARB
#define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
#endif

#ifndef GL_ARB_clear_buffer_object
#define GL_ARB_clear_buffer_object 1
#endif

#ifdef glClearBufferData
#undef glClearBufferData
#endif
#ifdef PFNGLCLEARBUFFERDATAPROC
#undef PFNGLCLEARBUFFERDATAPROC
#endif
typedef void  (*PFNGLCLEARBUFFERDATAPROC)(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);

#ifdef glClearBufferSubData
#undef glClearBufferSubData
#endif
#ifdef PFNGLCLEARBUFFERSUBDATAPROC
#undef PFNGLCLEARBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);

#ifndef GL_ARB_clear_texture
#define GL_ARB_clear_texture 1
#endif

#ifdef glClearTexImage
#undef glClearTexImage
#endif
#ifdef PFNGLCLEARTEXIMAGEPROC
#undef PFNGLCLEARTEXIMAGEPROC
#endif
typedef void  (*PFNGLCLEARTEXIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);

#ifdef glClearTexSubImage
#undef glClearTexSubImage
#endif
#ifdef PFNGLCLEARTEXSUBIMAGEPROC
#undef PFNGLCLEARTEXSUBIMAGEPROC
#endif
typedef void  (*PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);

#ifndef GL_CLEAR_TEXTURE
#define GL_CLEAR_TEXTURE 0x9365
#endif

#ifndef GL_ARB_clip_control
#define GL_ARB_clip_control 1
#endif

#ifdef glClipControl
#undef glClipControl
#endif
#ifdef PFNGLCLIPCONTROLPROC
#undef PFNGLCLIPCONTROLPROC
#endif
typedef void  (*PFNGLCLIPCONTROLPROC)(GLenum origin, GLenum depth);

#ifndef GL_LOWER_LEFT
#define GL_LOWER_LEFT 0x8CA1
#endif

#ifndef GL_UPPER_LEFT
#define GL_UPPER_LEFT 0x8CA2
#endif

#ifndef GL_NEGATIVE_ONE_TO_ONE
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#endif

#ifndef GL_ZERO_TO_ONE
#define GL_ZERO_TO_ONE 0x935F
#endif

#ifndef GL_CLIP_ORIGIN
#define GL_CLIP_ORIGIN 0x935C
#endif

#ifndef GL_CLIP_DEPTH_MODE
#define GL_CLIP_DEPTH_MODE 0x935D
#endif

#ifndef GL_ARB_color_buffer_float
#define GL_ARB_color_buffer_float 1
#endif

#ifdef glClampColorARB
#undef glClampColorARB
#endif
#ifdef PFNGLCLAMPCOLORARBPROC
#undef PFNGLCLAMPCOLORARBPROC
#endif
typedef void  (*PFNGLCLAMPCOLORARBPROC)(GLenum target, GLenum clamp);

#ifndef GL_RGBA_FLOAT_MODE_ARB
#define GL_RGBA_FLOAT_MODE_ARB 0x8820
#endif

#ifndef GL_CLAMP_VERTEX_COLOR_ARB
#define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
#endif

#ifndef GL_CLAMP_FRAGMENT_COLOR_ARB
#define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
#endif

#ifndef GL_CLAMP_READ_COLOR_ARB
#define GL_CLAMP_READ_COLOR_ARB 0x891C
#endif

#ifndef GL_FIXED_ONLY_ARB
#define GL_FIXED_ONLY_ARB 0x891D
#endif

#ifndef GL_ARB_compatibility
#define GL_ARB_compatibility 1
#endif

#ifndef GL_ARB_compressed_texture_pixel_storage
#define GL_ARB_compressed_texture_pixel_storage 1
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_WIDTH
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_HEIGHT
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_DEPTH
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#endif

#ifndef GL_UNPACK_COMPRESSED_BLOCK_SIZE
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_WIDTH
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_HEIGHT
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_DEPTH
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#endif

#ifndef GL_PACK_COMPRESSED_BLOCK_SIZE
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#endif

#ifndef GL_ARB_compute_shader
#define GL_ARB_compute_shader 1
#endif

#ifdef glDispatchCompute
#undef glDispatchCompute
#endif
#ifdef PFNGLDISPATCHCOMPUTEPROC
#undef PFNGLDISPATCHCOMPUTEPROC
#endif
typedef void  (*PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);

#ifdef glDispatchComputeIndirect
#undef glDispatchComputeIndirect
#endif
#ifdef PFNGLDISPATCHCOMPUTEINDIRECTPROC
#undef PFNGLDISPATCHCOMPUTEINDIRECTPROC
#endif
typedef void  (*PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);

#ifndef GL_COMPUTE_SHADER
#define GL_COMPUTE_SHADER 0x91B9
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_BLOCKS
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#endif

#ifndef GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#endif

#ifndef GL_MAX_COMPUTE_IMAGE_UNIFORMS
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#endif

#ifndef GL_MAX_COMPUTE_SHARED_MEMORY_SIZE
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#endif

#ifndef GL_MAX_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#endif

#ifndef GL_MAX_COMPUTE_ATOMIC_COUNTERS
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#endif

#ifndef GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_COUNT
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#endif

#ifndef GL_MAX_COMPUTE_WORK_GROUP_SIZE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#endif

#ifndef GL_COMPUTE_WORK_GROUP_SIZE
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#endif

#ifndef GL_DISPATCH_INDIRECT_BUFFER_BINDING
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#endif

#ifndef GL_COMPUTE_SHADER_BIT
#define GL_COMPUTE_SHADER_BIT 0x00000020
#endif

#ifndef GL_ARB_compute_variable_group_size
#define GL_ARB_compute_variable_group_size 1
#endif

#ifdef glDispatchComputeGroupSizeARB
#undef glDispatchComputeGroupSizeARB
#endif
#ifdef PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC
#undef PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC
#endif
typedef void  (*PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);

#ifndef GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB
#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344
#endif

#ifndef GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB
#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB
#endif

#ifndef GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB
#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345
#endif

#ifndef GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB
#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF
#endif

#ifndef GL_ARB_conditional_render_inverted
#define GL_ARB_conditional_render_inverted 1
#endif

#ifndef GL_QUERY_WAIT_INVERTED
#define GL_QUERY_WAIT_INVERTED 0x8E17
#endif

#ifndef GL_QUERY_NO_WAIT_INVERTED
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#endif

#ifndef GL_QUERY_BY_REGION_WAIT_INVERTED
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#endif

#ifndef GL_QUERY_BY_REGION_NO_WAIT_INVERTED
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#endif

#ifndef GL_ARB_conservative_depth
#define GL_ARB_conservative_depth 1
#endif

#ifndef GL_ARB_copy_buffer
#define GL_ARB_copy_buffer 1
#endif

#ifdef glCopyBufferSubData
#undef glCopyBufferSubData
#endif
#ifdef PFNGLCOPYBUFFERSUBDATAPROC
#undef PFNGLCOPYBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

#ifndef GL_COPY_READ_BUFFER
#define GL_COPY_READ_BUFFER 0x8F36
#endif

#ifndef GL_COPY_WRITE_BUFFER
#define GL_COPY_WRITE_BUFFER 0x8F37
#endif

#ifndef GL_ARB_copy_image
#define GL_ARB_copy_image 1
#endif

#ifdef glCopyImageSubData
#undef glCopyImageSubData
#endif
#ifdef PFNGLCOPYIMAGESUBDATAPROC
#undef PFNGLCOPYIMAGESUBDATAPROC
#endif
typedef void  (*PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);

#ifndef GL_ARB_cull_distance
#define GL_ARB_cull_distance 1
#endif

#ifndef GL_MAX_CULL_DISTANCES
#define GL_MAX_CULL_DISTANCES 0x82F9
#endif

#ifndef GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#endif

#ifndef GL_ARB_debug_output
#define GL_ARB_debug_output 1
#endif

#ifdef glDebugMessageControlARB
#undef glDebugMessageControlARB
#endif
#ifdef PFNGLDEBUGMESSAGECONTROLARBPROC
#undef PFNGLDEBUGMESSAGECONTROLARBPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECONTROLARBPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);

#ifdef glDebugMessageInsertARB
#undef glDebugMessageInsertARB
#endif
#ifdef PFNGLDEBUGMESSAGEINSERTARBPROC
#undef PFNGLDEBUGMESSAGEINSERTARBPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGEINSERTARBPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);

#ifdef glDebugMessageCallbackARB
#undef glDebugMessageCallbackARB
#endif
#ifdef PFNGLDEBUGMESSAGECALLBACKARBPROC
#undef PFNGLDEBUGMESSAGECALLBACKARBPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECALLBACKARBPROC)(GLDEBUGPROCARB callback, const void *userParam);

#ifdef glGetDebugMessageLogARB
#undef glGetDebugMessageLogARB
#endif
#ifdef PFNGLGETDEBUGMESSAGELOGARBPROC
#undef PFNGLGETDEBUGMESSAGELOGARBPROC
#endif
typedef GLuint  (*PFNGLGETDEBUGMESSAGELOGARBPROC)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);

#ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#endif

#ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#endif

#ifndef GL_DEBUG_CALLBACK_FUNCTION_ARB
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#endif

#ifndef GL_DEBUG_CALLBACK_USER_PARAM_ARB
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#endif

#ifndef GL_DEBUG_SOURCE_API_ARB
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#endif

#ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#endif

#ifndef GL_DEBUG_SOURCE_SHADER_COMPILER_ARB
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#endif

#ifndef GL_DEBUG_SOURCE_THIRD_PARTY_ARB
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#endif

#ifndef GL_DEBUG_SOURCE_APPLICATION_ARB
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#endif

#ifndef GL_DEBUG_SOURCE_OTHER_ARB
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#endif

#ifndef GL_DEBUG_TYPE_ERROR_ARB
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#endif

#ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#endif

#ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#endif

#ifndef GL_DEBUG_TYPE_PORTABILITY_ARB
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#endif

#ifndef GL_DEBUG_TYPE_PERFORMANCE_ARB
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#endif

#ifndef GL_DEBUG_TYPE_OTHER_ARB
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_ARB
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_ARB
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES_ARB
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH_ARB
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM_ARB
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW_ARB
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#endif

#ifndef GL_ARB_depth_buffer_float
#define GL_ARB_depth_buffer_float 1
#endif

#ifndef GL_DEPTH_COMPONENT32F
#define GL_DEPTH_COMPONENT32F 0x8CAC
#endif

#ifndef GL_DEPTH32F_STENCIL8
#define GL_DEPTH32F_STENCIL8 0x8CAD
#endif

#ifndef GL_FLOAT_32_UNSIGNED_INT_24_8_REV
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#endif

#ifndef GL_ARB_depth_clamp
#define GL_ARB_depth_clamp 1
#endif

#ifndef GL_DEPTH_CLAMP
#define GL_DEPTH_CLAMP 0x864F
#endif

#ifndef GL_ARB_depth_texture
#define GL_ARB_depth_texture 1
#endif

#ifndef GL_DEPTH_COMPONENT16_ARB
#define GL_DEPTH_COMPONENT16_ARB 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24_ARB
#define GL_DEPTH_COMPONENT24_ARB 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32_ARB
#define GL_DEPTH_COMPONENT32_ARB 0x81A7
#endif

#ifndef GL_TEXTURE_DEPTH_SIZE_ARB
#define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
#endif

#ifndef GL_DEPTH_TEXTURE_MODE_ARB
#define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
#endif

#ifndef GL_ARB_derivative_control
#define GL_ARB_derivative_control 1
#endif

#ifndef GL_ARB_direct_state_access
#define GL_ARB_direct_state_access 1
#endif

#ifndef GL_TEXTURE_TARGET
#define GL_TEXTURE_TARGET 0x1006
#endif

#ifndef GL_QUERY_TARGET
#define GL_QUERY_TARGET 0x82EA
#endif

#ifndef GL_TEXTURE_BINDING_1D
#define GL_TEXTURE_BINDING_1D 0x8068
#endif

#ifndef GL_TEXTURE_BINDING_1D_ARRAY
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#endif

#ifndef GL_TEXTURE_BINDING_2D
#define GL_TEXTURE_BINDING_2D 0x8069
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#endif

#ifndef GL_TEXTURE_BINDING_3D
#define GL_TEXTURE_BINDING_3D 0x806A
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#endif

#ifdef glCreateTransformFeedbacks
#undef glCreateTransformFeedbacks
#endif
#ifdef PFNGLCREATETRANSFORMFEEDBACKSPROC
#undef PFNGLCREATETRANSFORMFEEDBACKSPROC
#endif
typedef void  (*PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint *ids);

#ifdef glTransformFeedbackBufferBase
#undef glTransformFeedbackBufferBase
#endif
#ifdef PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
#undef PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb, GLuint index, GLuint buffer);

#ifdef glTransformFeedbackBufferRange
#undef glTransformFeedbackBufferRange
#endif
#ifdef PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
#undef PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glGetTransformFeedbackiv
#undef glGetTransformFeedbackiv
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKIVPROC
#undef PFNGLGETTRANSFORMFEEDBACKIVPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb, GLenum pname, GLint *param);

#ifdef glGetTransformFeedbacki_v
#undef glGetTransformFeedbacki_v
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKI_VPROC
#undef PFNGLGETTRANSFORMFEEDBACKI_VPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint *param);

#ifdef glGetTransformFeedbacki64_v
#undef glGetTransformFeedbacki64_v
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKI64_VPROC
#undef PFNGLGETTRANSFORMFEEDBACKI64_VPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);

#ifdef glCreateBuffers
#undef glCreateBuffers
#endif
#ifdef PFNGLCREATEBUFFERSPROC
#undef PFNGLCREATEBUFFERSPROC
#endif
typedef void  (*PFNGLCREATEBUFFERSPROC)(GLsizei n, GLuint *buffers);

#ifdef glNamedBufferStorage
#undef glNamedBufferStorage
#endif
#ifdef PFNGLNAMEDBUFFERSTORAGEPROC
#undef PFNGLNAMEDBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);

#ifdef glNamedBufferData
#undef glNamedBufferData
#endif
#ifdef PFNGLNAMEDBUFFERDATAPROC
#undef PFNGLNAMEDBUFFERDATAPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);

#ifdef glNamedBufferSubData
#undef glNamedBufferSubData
#endif
#ifdef PFNGLNAMEDBUFFERSUBDATAPROC
#undef PFNGLNAMEDBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);

#ifdef glCopyNamedBufferSubData
#undef glCopyNamedBufferSubData
#endif
#ifdef PFNGLCOPYNAMEDBUFFERSUBDATAPROC
#undef PFNGLCOPYNAMEDBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

#ifdef glClearNamedBufferData
#undef glClearNamedBufferData
#endif
#ifdef PFNGLCLEARNAMEDBUFFERDATAPROC
#undef PFNGLCLEARNAMEDBUFFERDATAPROC
#endif
typedef void  (*PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);

#ifdef glClearNamedBufferSubData
#undef glClearNamedBufferSubData
#endif
#ifdef PFNGLCLEARNAMEDBUFFERSUBDATAPROC
#undef PFNGLCLEARNAMEDBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);

#ifdef glMapNamedBuffer
#undef glMapNamedBuffer
#endif
#ifdef PFNGLMAPNAMEDBUFFERPROC
#undef PFNGLMAPNAMEDBUFFERPROC
#endif
typedef void * (*PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer, GLenum access);

#ifdef glMapNamedBufferRange
#undef glMapNamedBufferRange
#endif
#ifdef PFNGLMAPNAMEDBUFFERRANGEPROC
#undef PFNGLMAPNAMEDBUFFERRANGEPROC
#endif
typedef void * (*PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);

#ifdef glUnmapNamedBuffer
#undef glUnmapNamedBuffer
#endif
#ifdef PFNGLUNMAPNAMEDBUFFERPROC
#undef PFNGLUNMAPNAMEDBUFFERPROC
#endif
typedef GLboolean  (*PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);

#ifdef glFlushMappedNamedBufferRange
#undef glFlushMappedNamedBufferRange
#endif
#ifdef PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
#undef PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);

#ifdef glGetNamedBufferParameteriv
#undef glGetNamedBufferParameteriv
#endif
#ifdef PFNGLGETNAMEDBUFFERPARAMETERIVPROC
#undef PFNGLGETNAMEDBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer, GLenum pname, GLint *params);

#ifdef glGetNamedBufferParameteri64v
#undef glGetNamedBufferParameteri64v
#endif
#ifdef PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
#undef PFNGLGETNAMEDBUFFERPARAMETERI64VPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer, GLenum pname, GLint64 *params);

#ifdef glGetNamedBufferPointerv
#undef glGetNamedBufferPointerv
#endif
#ifdef PFNGLGETNAMEDBUFFERPOINTERVPROC
#undef PFNGLGETNAMEDBUFFERPOINTERVPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer, GLenum pname, void **params);

#ifdef glGetNamedBufferSubData
#undef glGetNamedBufferSubData
#endif
#ifdef PFNGLGETNAMEDBUFFERSUBDATAPROC
#undef PFNGLGETNAMEDBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);

#ifdef glCreateFramebuffers
#undef glCreateFramebuffers
#endif
#ifdef PFNGLCREATEFRAMEBUFFERSPROC
#undef PFNGLCREATEFRAMEBUFFERSPROC
#endif
typedef void  (*PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);

#ifdef glNamedFramebufferRenderbuffer
#undef glNamedFramebufferRenderbuffer
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
#undef PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);

#ifdef glNamedFramebufferParameteri
#undef glNamedFramebufferParameteri
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
#undef PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer, GLenum pname, GLint param);

#ifdef glNamedFramebufferTexture
#undef glNamedFramebufferTexture
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTUREPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);

#ifdef glNamedFramebufferTextureLayer
#undef glNamedFramebufferTextureLayer
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifdef glNamedFramebufferDrawBuffer
#undef glNamedFramebufferDrawBuffer
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
#undef PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer, GLenum buf);

#ifdef glNamedFramebufferDrawBuffers
#undef glNamedFramebufferDrawBuffers
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
#undef PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer, GLsizei n, const GLenum *bufs);

#ifdef glNamedFramebufferReadBuffer
#undef glNamedFramebufferReadBuffer
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
#undef PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer, GLenum src);

#ifdef glInvalidateNamedFramebufferData
#undef glInvalidateNamedFramebufferData
#endif
#ifdef PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
#undef PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC
#endif
typedef void  (*PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);

#ifdef glInvalidateNamedFramebufferSubData
#undef glInvalidateNamedFramebufferSubData
#endif
#ifdef PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
#undef PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glClearNamedFramebufferiv
#undef glClearNamedFramebufferiv
#endif
#ifdef PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
#undef PFNGLCLEARNAMEDFRAMEBUFFERIVPROC
#endif
typedef void  (*PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);

#ifdef glClearNamedFramebufferuiv
#undef glClearNamedFramebufferuiv
#endif
#ifdef PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
#undef PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC
#endif
typedef void  (*PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);

#ifdef glClearNamedFramebufferfv
#undef glClearNamedFramebufferfv
#endif
#ifdef PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
#undef PFNGLCLEARNAMEDFRAMEBUFFERFVPROC
#endif
typedef void  (*PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);

#ifdef glClearNamedFramebufferfi
#undef glClearNamedFramebufferfi
#endif
#ifdef PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
#undef PFNGLCLEARNAMEDFRAMEBUFFERFIPROC
#endif
typedef void  (*PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer, GLenum buffer, const GLfloat depth, GLint stencil);

#ifdef glBlitNamedFramebuffer
#undef glBlitNamedFramebuffer
#endif
#ifdef PFNGLBLITNAMEDFRAMEBUFFERPROC
#undef PFNGLBLITNAMEDFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#ifdef glCheckNamedFramebufferStatus
#undef glCheckNamedFramebufferStatus
#endif
#ifdef PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
#undef PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC
#endif
typedef GLenum  (*PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer, GLenum target);

#ifdef glGetNamedFramebufferParameteriv
#undef glGetNamedFramebufferParameteriv
#endif
#ifdef PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
#undef PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer, GLenum pname, GLint *param);

#ifdef glGetNamedFramebufferAttachmentParameteriv
#undef glGetNamedFramebufferAttachmentParameteriv
#endif
#ifdef PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#undef PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);

#ifdef glCreateRenderbuffers
#undef glCreateRenderbuffers
#endif
#ifdef PFNGLCREATERENDERBUFFERSPROC
#undef PFNGLCREATERENDERBUFFERSPROC
#endif
typedef void  (*PFNGLCREATERENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);

#ifdef glNamedRenderbufferStorage
#undef glNamedRenderbufferStorage
#endif
#ifdef PFNGLNAMEDRENDERBUFFERSTORAGEPROC
#undef PFNGLNAMEDRENDERBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glNamedRenderbufferStorageMultisample
#undef glNamedRenderbufferStorageMultisample
#endif
#ifdef PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
#undef PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC
#endif
typedef void  (*PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glGetNamedRenderbufferParameteriv
#undef glGetNamedRenderbufferParameteriv
#endif
#ifdef PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
#undef PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer, GLenum pname, GLint *params);

#ifdef glCreateTextures
#undef glCreateTextures
#endif
#ifdef PFNGLCREATETEXTURESPROC
#undef PFNGLCREATETEXTURESPROC
#endif
typedef void  (*PFNGLCREATETEXTURESPROC)(GLenum target, GLsizei n, GLuint *textures);

#ifdef glTextureBuffer
#undef glTextureBuffer
#endif
#ifdef PFNGLTEXTUREBUFFERPROC
#undef PFNGLTEXTUREBUFFERPROC
#endif
typedef void  (*PFNGLTEXTUREBUFFERPROC)(GLuint texture, GLenum internalformat, GLuint buffer);

#ifdef glTextureBufferRange
#undef glTextureBufferRange
#endif
#ifdef PFNGLTEXTUREBUFFERRANGEPROC
#undef PFNGLTEXTUREBUFFERRANGEPROC
#endif
typedef void  (*PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glTextureStorage1D
#undef glTextureStorage1D
#endif
#ifdef PFNGLTEXTURESTORAGE1DPROC
#undef PFNGLTEXTURESTORAGE1DPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE1DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);

#ifdef glTextureStorage2D
#undef glTextureStorage2D
#endif
#ifdef PFNGLTEXTURESTORAGE2DPROC
#undef PFNGLTEXTURESTORAGE2DPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE2DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glTextureStorage3D
#undef glTextureStorage3D
#endif
#ifdef PFNGLTEXTURESTORAGE3DPROC
#undef PFNGLTEXTURESTORAGE3DPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE3DPROC)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

#ifdef glTextureStorage2DMultisample
#undef glTextureStorage2DMultisample
#endif
#ifdef PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
#undef PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);

#ifdef glTextureStorage3DMultisample
#undef glTextureStorage3DMultisample
#endif
#ifdef PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
#undef PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

#ifdef glTextureSubImage1D
#undef glTextureSubImage1D
#endif
#ifdef PFNGLTEXTURESUBIMAGE1DPROC
#undef PFNGLTEXTURESUBIMAGE1DPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);

#ifdef glTextureSubImage2D
#undef glTextureSubImage2D
#endif
#ifdef PFNGLTEXTURESUBIMAGE2DPROC
#undef PFNGLTEXTURESUBIMAGE2DPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifdef glTextureSubImage3D
#undef glTextureSubImage3D
#endif
#ifdef PFNGLTEXTURESUBIMAGE3DPROC
#undef PFNGLTEXTURESUBIMAGE3DPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);

#ifdef glCompressedTextureSubImage1D
#undef glCompressedTextureSubImage1D
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCompressedTextureSubImage2D
#undef glCompressedTextureSubImage2D
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCompressedTextureSubImage3D
#undef glCompressedTextureSubImage3D
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCopyTextureSubImage1D
#undef glCopyTextureSubImage1D
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE1DPROC
#undef PFNGLCOPYTEXTURESUBIMAGE1DPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);

#ifdef glCopyTextureSubImage2D
#undef glCopyTextureSubImage2D
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE2DPROC
#undef PFNGLCOPYTEXTURESUBIMAGE2DPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glCopyTextureSubImage3D
#undef glCopyTextureSubImage3D
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE3DPROC
#undef PFNGLCOPYTEXTURESUBIMAGE3DPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glTextureParameterf
#undef glTextureParameterf
#endif
#ifdef PFNGLTEXTUREPARAMETERFPROC
#undef PFNGLTEXTUREPARAMETERFPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERFPROC)(GLuint texture, GLenum pname, GLfloat param);

#ifdef glTextureParameterfv
#undef glTextureParameterfv
#endif
#ifdef PFNGLTEXTUREPARAMETERFVPROC
#undef PFNGLTEXTUREPARAMETERFVPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, const GLfloat *param);

#ifdef glTextureParameteri
#undef glTextureParameteri
#endif
#ifdef PFNGLTEXTUREPARAMETERIPROC
#undef PFNGLTEXTUREPARAMETERIPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIPROC)(GLuint texture, GLenum pname, GLint param);

#ifdef glTextureParameterIiv
#undef glTextureParameterIiv
#endif
#ifdef PFNGLTEXTUREPARAMETERIIVPROC
#undef PFNGLTEXTUREPARAMETERIIVPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, const GLint *params);

#ifdef glTextureParameterIuiv
#undef glTextureParameterIuiv
#endif
#ifdef PFNGLTEXTUREPARAMETERIUIVPROC
#undef PFNGLTEXTUREPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, const GLuint *params);

#ifdef glTextureParameteriv
#undef glTextureParameteriv
#endif
#ifdef PFNGLTEXTUREPARAMETERIVPROC
#undef PFNGLTEXTUREPARAMETERIVPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, const GLint *param);

#ifdef glGenerateTextureMipmap
#undef glGenerateTextureMipmap
#endif
#ifdef PFNGLGENERATETEXTUREMIPMAPPROC
#undef PFNGLGENERATETEXTUREMIPMAPPROC
#endif
typedef void  (*PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);

#ifdef glBindTextureUnit
#undef glBindTextureUnit
#endif
#ifdef PFNGLBINDTEXTUREUNITPROC
#undef PFNGLBINDTEXTUREUNITPROC
#endif
typedef void  (*PFNGLBINDTEXTUREUNITPROC)(GLuint unit, GLuint texture);

#ifdef glGetTextureImage
#undef glGetTextureImage
#endif
#ifdef PFNGLGETTEXTUREIMAGEPROC
#undef PFNGLGETTEXTUREIMAGEPROC
#endif
typedef void  (*PFNGLGETTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);

#ifdef glGetCompressedTextureImage
#undef glGetCompressedTextureImage
#endif
#ifdef PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
#undef PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC
#endif
typedef void  (*PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture, GLint level, GLsizei bufSize, void *pixels);

#ifdef glGetTextureLevelParameterfv
#undef glGetTextureLevelParameterfv
#endif
#ifdef PFNGLGETTEXTURELEVELPARAMETERFVPROC
#undef PFNGLGETTEXTURELEVELPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture, GLint level, GLenum pname, GLfloat *params);

#ifdef glGetTextureLevelParameteriv
#undef glGetTextureLevelParameteriv
#endif
#ifdef PFNGLGETTEXTURELEVELPARAMETERIVPROC
#undef PFNGLGETTEXTURELEVELPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture, GLint level, GLenum pname, GLint *params);

#ifdef glGetTextureParameterfv
#undef glGetTextureParameterfv
#endif
#ifdef PFNGLGETTEXTUREPARAMETERFVPROC
#undef PFNGLGETTEXTUREPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture, GLenum pname, GLfloat *params);

#ifdef glGetTextureParameterIiv
#undef glGetTextureParameterIiv
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIIVPROC
#undef PFNGLGETTEXTUREPARAMETERIIVPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture, GLenum pname, GLint *params);

#ifdef glGetTextureParameterIuiv
#undef glGetTextureParameterIuiv
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIUIVPROC
#undef PFNGLGETTEXTUREPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture, GLenum pname, GLuint *params);

#ifdef glGetTextureParameteriv
#undef glGetTextureParameteriv
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIVPROC
#undef PFNGLGETTEXTUREPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture, GLenum pname, GLint *params);

#ifdef glCreateVertexArrays
#undef glCreateVertexArrays
#endif
#ifdef PFNGLCREATEVERTEXARRAYSPROC
#undef PFNGLCREATEVERTEXARRAYSPROC
#endif
typedef void  (*PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);

#ifdef glDisableVertexArrayAttrib
#undef glDisableVertexArrayAttrib
#endif
#ifdef PFNGLDISABLEVERTEXARRAYATTRIBPROC
#undef PFNGLDISABLEVERTEXARRAYATTRIBPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);

#ifdef glEnableVertexArrayAttrib
#undef glEnableVertexArrayAttrib
#endif
#ifdef PFNGLENABLEVERTEXARRAYATTRIBPROC
#undef PFNGLENABLEVERTEXARRAYATTRIBPROC
#endif
typedef void  (*PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj, GLuint index);

#ifdef glVertexArrayElementBuffer
#undef glVertexArrayElementBuffer
#endif
#ifdef PFNGLVERTEXARRAYELEMENTBUFFERPROC
#undef PFNGLVERTEXARRAYELEMENTBUFFERPROC
#endif
typedef void  (*PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj, GLuint buffer);

#ifdef glVertexArrayVertexBuffer
#undef glVertexArrayVertexBuffer
#endif
#ifdef PFNGLVERTEXARRAYVERTEXBUFFERPROC
#undef PFNGLVERTEXARRAYVERTEXBUFFERPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);

#ifdef glVertexArrayVertexBuffers
#undef glVertexArrayVertexBuffers
#endif
#ifdef PFNGLVERTEXARRAYVERTEXBUFFERSPROC
#undef PFNGLVERTEXARRAYVERTEXBUFFERSPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);

#ifdef glVertexArrayAttribBinding
#undef glVertexArrayAttribBinding
#endif
#ifdef PFNGLVERTEXARRAYATTRIBBINDINGPROC
#undef PFNGLVERTEXARRAYATTRIBBINDINGPROC
#endif
typedef void  (*PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);

#ifdef glVertexArrayAttribFormat
#undef glVertexArrayAttribFormat
#endif
#ifdef PFNGLVERTEXARRAYATTRIBFORMATPROC
#undef PFNGLVERTEXARRAYATTRIBFORMATPROC
#endif
typedef void  (*PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);

#ifdef glVertexArrayAttribIFormat
#undef glVertexArrayAttribIFormat
#endif
#ifdef PFNGLVERTEXARRAYATTRIBIFORMATPROC
#undef PFNGLVERTEXARRAYATTRIBIFORMATPROC
#endif
typedef void  (*PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexArrayAttribLFormat
#undef glVertexArrayAttribLFormat
#endif
#ifdef PFNGLVERTEXARRAYATTRIBLFORMATPROC
#undef PFNGLVERTEXARRAYATTRIBLFORMATPROC
#endif
typedef void  (*PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexArrayBindingDivisor
#undef glVertexArrayBindingDivisor
#endif
#ifdef PFNGLVERTEXARRAYBINDINGDIVISORPROC
#undef PFNGLVERTEXARRAYBINDINGDIVISORPROC
#endif
typedef void  (*PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);

#ifdef glGetVertexArrayiv
#undef glGetVertexArrayiv
#endif
#ifdef PFNGLGETVERTEXARRAYIVPROC
#undef PFNGLGETVERTEXARRAYIVPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj, GLenum pname, GLint *param);

#ifdef glGetVertexArrayIndexediv
#undef glGetVertexArrayIndexediv
#endif
#ifdef PFNGLGETVERTEXARRAYINDEXEDIVPROC
#undef PFNGLGETVERTEXARRAYINDEXEDIVPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);

#ifdef glGetVertexArrayIndexed64iv
#undef glGetVertexArrayIndexed64iv
#endif
#ifdef PFNGLGETVERTEXARRAYINDEXED64IVPROC
#undef PFNGLGETVERTEXARRAYINDEXED64IVPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);

#ifdef glCreateSamplers
#undef glCreateSamplers
#endif
#ifdef PFNGLCREATESAMPLERSPROC
#undef PFNGLCREATESAMPLERSPROC
#endif
typedef void  (*PFNGLCREATESAMPLERSPROC)(GLsizei n, GLuint *samplers);

#ifdef glCreateProgramPipelines
#undef glCreateProgramPipelines
#endif
#ifdef PFNGLCREATEPROGRAMPIPELINESPROC
#undef PFNGLCREATEPROGRAMPIPELINESPROC
#endif
typedef void  (*PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n, GLuint *pipelines);

#ifdef glCreateQueries
#undef glCreateQueries
#endif
#ifdef PFNGLCREATEQUERIESPROC
#undef PFNGLCREATEQUERIESPROC
#endif
typedef void  (*PFNGLCREATEQUERIESPROC)(GLenum target, GLsizei n, GLuint *ids);

#ifdef glGetQueryBufferObjecti64v
#undef glGetQueryBufferObjecti64v
#endif
#ifdef PFNGLGETQUERYBUFFEROBJECTI64VPROC
#undef PFNGLGETQUERYBUFFEROBJECTI64VPROC
#endif
typedef void  (*PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);

#ifdef glGetQueryBufferObjectiv
#undef glGetQueryBufferObjectiv
#endif
#ifdef PFNGLGETQUERYBUFFEROBJECTIVPROC
#undef PFNGLGETQUERYBUFFEROBJECTIVPROC
#endif
typedef void  (*PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);

#ifdef glGetQueryBufferObjectui64v
#undef glGetQueryBufferObjectui64v
#endif
#ifdef PFNGLGETQUERYBUFFEROBJECTUI64VPROC
#undef PFNGLGETQUERYBUFFEROBJECTUI64VPROC
#endif
typedef void  (*PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);

#ifdef glGetQueryBufferObjectuiv
#undef glGetQueryBufferObjectuiv
#endif
#ifdef PFNGLGETQUERYBUFFEROBJECTUIVPROC
#undef PFNGLGETQUERYBUFFEROBJECTUIVPROC
#endif
typedef void  (*PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);

#ifndef GL_ARB_draw_buffers
#define GL_ARB_draw_buffers 1
#endif

#ifdef glDrawBuffersARB
#undef glDrawBuffersARB
#endif
#ifdef PFNGLDRAWBUFFERSARBPROC
#undef PFNGLDRAWBUFFERSARBPROC
#endif
typedef void  (*PFNGLDRAWBUFFERSARBPROC)(GLsizei n, const GLenum *bufs);

#ifndef GL_MAX_DRAW_BUFFERS_ARB
#define GL_MAX_DRAW_BUFFERS_ARB 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_ARB
#define GL_DRAW_BUFFER0_ARB 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_ARB
#define GL_DRAW_BUFFER1_ARB 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_ARB
#define GL_DRAW_BUFFER2_ARB 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_ARB
#define GL_DRAW_BUFFER3_ARB 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_ARB
#define GL_DRAW_BUFFER4_ARB 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_ARB
#define GL_DRAW_BUFFER5_ARB 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_ARB
#define GL_DRAW_BUFFER6_ARB 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_ARB
#define GL_DRAW_BUFFER7_ARB 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_ARB
#define GL_DRAW_BUFFER8_ARB 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_ARB
#define GL_DRAW_BUFFER9_ARB 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_ARB
#define GL_DRAW_BUFFER10_ARB 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_ARB
#define GL_DRAW_BUFFER11_ARB 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_ARB
#define GL_DRAW_BUFFER12_ARB 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_ARB
#define GL_DRAW_BUFFER13_ARB 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_ARB
#define GL_DRAW_BUFFER14_ARB 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_ARB
#define GL_DRAW_BUFFER15_ARB 0x8834
#endif

#ifndef GL_ARB_draw_buffers_blend
#define GL_ARB_draw_buffers_blend 1
#endif

#ifdef glBlendEquationiARB
#undef glBlendEquationiARB
#endif
#ifdef PFNGLBLENDEQUATIONIARBPROC
#undef PFNGLBLENDEQUATIONIARBPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONIARBPROC)(GLuint buf, GLenum mode);

#ifdef glBlendEquationSeparateiARB
#undef glBlendEquationSeparateiARB
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEIARBPROC
#undef PFNGLBLENDEQUATIONSEPARATEIARBPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEIARBPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);

#ifdef glBlendFunciARB
#undef glBlendFunciARB
#endif
#ifdef PFNGLBLENDFUNCIARBPROC
#undef PFNGLBLENDFUNCIARBPROC
#endif
typedef void  (*PFNGLBLENDFUNCIARBPROC)(GLuint buf, GLenum src, GLenum dst);

#ifdef glBlendFuncSeparateiARB
#undef glBlendFuncSeparateiARB
#endif
#ifdef PFNGLBLENDFUNCSEPARATEIARBPROC
#undef PFNGLBLENDFUNCSEPARATEIARBPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEIARBPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

#ifndef GL_ARB_draw_elements_base_vertex
#define GL_ARB_draw_elements_base_vertex 1
#endif

#ifdef glDrawElementsBaseVertex
#undef glDrawElementsBaseVertex
#endif
#ifdef PFNGLDRAWELEMENTSBASEVERTEXPROC
#undef PFNGLDRAWELEMENTSBASEVERTEXPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);

#ifdef glDrawRangeElementsBaseVertex
#undef glDrawRangeElementsBaseVertex
#endif
#ifdef PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
#undef PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);

#ifdef glDrawElementsInstancedBaseVertex
#undef glDrawElementsInstancedBaseVertex
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);

#ifdef glMultiDrawElementsBaseVertex
#undef glMultiDrawElementsBaseVertex
#endif
#ifdef PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
#undef PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);

#ifndef GL_ARB_draw_indirect
#define GL_ARB_draw_indirect 1
#endif

#ifdef glDrawArraysIndirect
#undef glDrawArraysIndirect
#endif
#ifdef PFNGLDRAWARRAYSINDIRECTPROC
#undef PFNGLDRAWARRAYSINDIRECTPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode, const void *indirect);

#ifdef glDrawElementsIndirect
#undef glDrawElementsIndirect
#endif
#ifdef PFNGLDRAWELEMENTSINDIRECTPROC
#undef PFNGLDRAWELEMENTSINDIRECTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void *indirect);

#ifndef GL_DRAW_INDIRECT_BUFFER
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#endif

#ifndef GL_DRAW_INDIRECT_BUFFER_BINDING
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#endif

#ifndef GL_ARB_draw_instanced
#define GL_ARB_draw_instanced 1
#endif

#ifdef glDrawArraysInstancedARB
#undef glDrawArraysInstancedARB
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDARBPROC
#undef PFNGLDRAWARRAYSINSTANCEDARBPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDARBPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);

#ifdef glDrawElementsInstancedARB
#undef glDrawElementsInstancedARB
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDARBPROC
#undef PFNGLDRAWELEMENTSINSTANCEDARBPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDARBPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);

#ifndef GL_ARB_enhanced_layouts
#define GL_ARB_enhanced_layouts 1
#endif

#ifndef GL_LOCATION_COMPONENT
#define GL_LOCATION_COMPONENT 0x934A
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_INDEX
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#endif

#ifndef GL_ARB_explicit_attrib_location
#define GL_ARB_explicit_attrib_location 1
#endif

#ifndef GL_ARB_explicit_uniform_location
#define GL_ARB_explicit_uniform_location 1
#endif

#ifndef GL_MAX_UNIFORM_LOCATIONS
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#endif

#ifndef GL_ARB_fragment_coord_conventions
#define GL_ARB_fragment_coord_conventions 1
#endif

#ifndef GL_ARB_fragment_layer_viewport
#define GL_ARB_fragment_layer_viewport 1
#endif

#ifndef GL_ARB_fragment_program
#define GL_ARB_fragment_program 1
#endif

#ifndef GL_FRAGMENT_PROGRAM_ARB
#define GL_FRAGMENT_PROGRAM_ARB 0x8804
#endif

#ifndef GL_PROGRAM_FORMAT_ASCII_ARB
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#endif

#ifndef GL_PROGRAM_LENGTH_ARB
#define GL_PROGRAM_LENGTH_ARB 0x8627
#endif

#ifndef GL_PROGRAM_FORMAT_ARB
#define GL_PROGRAM_FORMAT_ARB 0x8876
#endif

#ifndef GL_PROGRAM_BINDING_ARB
#define GL_PROGRAM_BINDING_ARB 0x8677
#endif

#ifndef GL_PROGRAM_INSTRUCTIONS_ARB
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#endif

#ifndef GL_MAX_PROGRAM_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#endif

#ifndef GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#endif

#ifndef GL_PROGRAM_TEMPORARIES_ARB
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#endif

#ifndef GL_MAX_PROGRAM_TEMPORARIES_ARB
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#endif

#ifndef GL_PROGRAM_NATIVE_TEMPORARIES_ARB
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#endif

#ifndef GL_PROGRAM_PARAMETERS_ARB
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#endif

#ifndef GL_MAX_PROGRAM_PARAMETERS_ARB
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#endif

#ifndef GL_PROGRAM_NATIVE_PARAMETERS_ARB
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#endif

#ifndef GL_PROGRAM_ATTRIBS_ARB
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#endif

#ifndef GL_MAX_PROGRAM_ATTRIBS_ARB
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#endif

#ifndef GL_PROGRAM_NATIVE_ATTRIBS_ARB
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#endif

#ifndef GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#endif

#ifndef GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#endif

#ifndef GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#endif

#ifndef GL_PROGRAM_ALU_INSTRUCTIONS_ARB
#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB 0x8805
#endif

#ifndef GL_PROGRAM_TEX_INSTRUCTIONS_ARB
#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB 0x8806
#endif

#ifndef GL_PROGRAM_TEX_INDIRECTIONS_ARB
#define GL_PROGRAM_TEX_INDIRECTIONS_ARB 0x8807
#endif

#ifndef GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
#endif

#ifndef GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
#endif

#ifndef GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
#endif

#ifndef GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
#endif

#ifndef GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
#endif

#ifndef GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB
#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
#endif

#ifndef GL_PROGRAM_STRING_ARB
#define GL_PROGRAM_STRING_ARB 0x8628
#endif

#ifndef GL_PROGRAM_ERROR_POSITION_ARB
#define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
#endif

#ifndef GL_CURRENT_MATRIX_ARB
#define GL_CURRENT_MATRIX_ARB 0x8641
#endif

#ifndef GL_TRANSPOSE_CURRENT_MATRIX_ARB
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#endif

#ifndef GL_CURRENT_MATRIX_STACK_DEPTH_ARB
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#endif

#ifndef GL_MAX_PROGRAM_MATRICES_ARB
#define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
#endif

#ifndef GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#endif

#ifndef GL_MAX_TEXTURE_COORDS_ARB
#define GL_MAX_TEXTURE_COORDS_ARB 0x8871
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
#endif

#ifndef GL_PROGRAM_ERROR_STRING_ARB
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#endif

#ifndef GL_MATRIX0_ARB
#define GL_MATRIX0_ARB 0x88C0
#endif

#ifndef GL_MATRIX1_ARB
#define GL_MATRIX1_ARB 0x88C1
#endif

#ifndef GL_MATRIX2_ARB
#define GL_MATRIX2_ARB 0x88C2
#endif

#ifndef GL_MATRIX3_ARB
#define GL_MATRIX3_ARB 0x88C3
#endif

#ifndef GL_MATRIX4_ARB
#define GL_MATRIX4_ARB 0x88C4
#endif

#ifndef GL_MATRIX5_ARB
#define GL_MATRIX5_ARB 0x88C5
#endif

#ifndef GL_MATRIX6_ARB
#define GL_MATRIX6_ARB 0x88C6
#endif

#ifndef GL_MATRIX7_ARB
#define GL_MATRIX7_ARB 0x88C7
#endif

#ifndef GL_MATRIX8_ARB
#define GL_MATRIX8_ARB 0x88C8
#endif

#ifndef GL_MATRIX9_ARB
#define GL_MATRIX9_ARB 0x88C9
#endif

#ifndef GL_MATRIX10_ARB
#define GL_MATRIX10_ARB 0x88CA
#endif

#ifndef GL_MATRIX11_ARB
#define GL_MATRIX11_ARB 0x88CB
#endif

#ifndef GL_MATRIX12_ARB
#define GL_MATRIX12_ARB 0x88CC
#endif

#ifndef GL_MATRIX13_ARB
#define GL_MATRIX13_ARB 0x88CD
#endif

#ifndef GL_MATRIX14_ARB
#define GL_MATRIX14_ARB 0x88CE
#endif

#ifndef GL_MATRIX15_ARB
#define GL_MATRIX15_ARB 0x88CF
#endif

#ifndef GL_MATRIX16_ARB
#define GL_MATRIX16_ARB 0x88D0
#endif

#ifndef GL_MATRIX17_ARB
#define GL_MATRIX17_ARB 0x88D1
#endif

#ifndef GL_MATRIX18_ARB
#define GL_MATRIX18_ARB 0x88D2
#endif

#ifndef GL_MATRIX19_ARB
#define GL_MATRIX19_ARB 0x88D3
#endif

#ifndef GL_MATRIX20_ARB
#define GL_MATRIX20_ARB 0x88D4
#endif

#ifndef GL_MATRIX21_ARB
#define GL_MATRIX21_ARB 0x88D5
#endif

#ifndef GL_MATRIX22_ARB
#define GL_MATRIX22_ARB 0x88D6
#endif

#ifndef GL_MATRIX23_ARB
#define GL_MATRIX23_ARB 0x88D7
#endif

#ifndef GL_MATRIX24_ARB
#define GL_MATRIX24_ARB 0x88D8
#endif

#ifndef GL_MATRIX25_ARB
#define GL_MATRIX25_ARB 0x88D9
#endif

#ifndef GL_MATRIX26_ARB
#define GL_MATRIX26_ARB 0x88DA
#endif

#ifndef GL_MATRIX27_ARB
#define GL_MATRIX27_ARB 0x88DB
#endif

#ifndef GL_MATRIX28_ARB
#define GL_MATRIX28_ARB 0x88DC
#endif

#ifndef GL_MATRIX29_ARB
#define GL_MATRIX29_ARB 0x88DD
#endif

#ifndef GL_MATRIX30_ARB
#define GL_MATRIX30_ARB 0x88DE
#endif

#ifndef GL_MATRIX31_ARB
#define GL_MATRIX31_ARB 0x88DF
#endif

#ifdef glProgramStringARB
#undef glProgramStringARB
#endif
#ifdef PFNGLPROGRAMSTRINGARBPROC
#undef PFNGLPROGRAMSTRINGARBPROC
#endif
typedef void  (*PFNGLPROGRAMSTRINGARBPROC)(GLenum target, GLenum format, GLsizei len, const void *string);

#ifdef glBindProgramARB
#undef glBindProgramARB
#endif
#ifdef PFNGLBINDPROGRAMARBPROC
#undef PFNGLBINDPROGRAMARBPROC
#endif
typedef void  (*PFNGLBINDPROGRAMARBPROC)(GLenum target, GLuint program);

#ifdef glDeleteProgramsARB
#undef glDeleteProgramsARB
#endif
#ifdef PFNGLDELETEPROGRAMSARBPROC
#undef PFNGLDELETEPROGRAMSARBPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMSARBPROC)(GLsizei n, const GLuint *programs);

#ifdef glGenProgramsARB
#undef glGenProgramsARB
#endif
#ifdef PFNGLGENPROGRAMSARBPROC
#undef PFNGLGENPROGRAMSARBPROC
#endif
typedef void  (*PFNGLGENPROGRAMSARBPROC)(GLsizei n, GLuint *programs);

#ifdef glProgramEnvParameter4dARB
#undef glProgramEnvParameter4dARB
#endif
#ifdef PFNGLPROGRAMENVPARAMETER4DARBPROC
#undef PFNGLPROGRAMENVPARAMETER4DARBPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glProgramEnvParameter4dvARB
#undef glProgramEnvParameter4dvARB
#endif
#ifdef PFNGLPROGRAMENVPARAMETER4DVARBPROC
#undef PFNGLPROGRAMENVPARAMETER4DVARBPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble *params);

#ifdef glProgramEnvParameter4fARB
#undef glProgramEnvParameter4fARB
#endif
#ifdef PFNGLPROGRAMENVPARAMETER4FARBPROC
#undef PFNGLPROGRAMENVPARAMETER4FARBPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glProgramEnvParameter4fvARB
#undef glProgramEnvParameter4fvARB
#endif
#ifdef PFNGLPROGRAMENVPARAMETER4FVARBPROC
#undef PFNGLPROGRAMENVPARAMETER4FVARBPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat *params);

#ifdef glProgramLocalParameter4dARB
#undef glProgramLocalParameter4dARB
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETER4DARBPROC
#undef PFNGLPROGRAMLOCALPARAMETER4DARBPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glProgramLocalParameter4dvARB
#undef glProgramLocalParameter4dvARB
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
#undef PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble *params);

#ifdef glProgramLocalParameter4fARB
#undef glProgramLocalParameter4fARB
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETER4FARBPROC
#undef PFNGLPROGRAMLOCALPARAMETER4FARBPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glProgramLocalParameter4fvARB
#undef glProgramLocalParameter4fvARB
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
#undef PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat *params);

#ifdef glGetProgramEnvParameterdvARB
#undef glGetProgramEnvParameterdvARB
#endif
#ifdef PFNGLGETPROGRAMENVPARAMETERDVARBPROC
#undef PFNGLGETPROGRAMENVPARAMETERDVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMENVPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble *params);

#ifdef glGetProgramEnvParameterfvARB
#undef glGetProgramEnvParameterfvARB
#endif
#ifdef PFNGLGETPROGRAMENVPARAMETERFVARBPROC
#undef PFNGLGETPROGRAMENVPARAMETERFVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMENVPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat *params);

#ifdef glGetProgramLocalParameterdvARB
#undef glGetProgramLocalParameterdvARB
#endif
#ifdef PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
#undef PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble *params);

#ifdef glGetProgramLocalParameterfvARB
#undef glGetProgramLocalParameterfvARB
#endif
#ifdef PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
#undef PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat *params);

#ifdef glGetProgramivARB
#undef glGetProgramivARB
#endif
#ifdef PFNGLGETPROGRAMIVARBPROC
#undef PFNGLGETPROGRAMIVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMIVARBPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetProgramStringARB
#undef glGetProgramStringARB
#endif
#ifdef PFNGLGETPROGRAMSTRINGARBPROC
#undef PFNGLGETPROGRAMSTRINGARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMSTRINGARBPROC)(GLenum target, GLenum pname, void *string);

#ifdef glIsProgramARB
#undef glIsProgramARB
#endif
#ifdef PFNGLISPROGRAMARBPROC
#undef PFNGLISPROGRAMARBPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMARBPROC)(GLuint program);

#ifndef GL_ARB_fragment_program_shadow
#define GL_ARB_fragment_program_shadow 1
#endif

#ifndef GL_ARB_fragment_shader
#define GL_ARB_fragment_shader 1
#endif

#ifndef GL_FRAGMENT_SHADER_ARB
#define GL_FRAGMENT_SHADER_ARB 0x8B30
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
#endif

#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
#endif

#ifndef GL_ARB_framebuffer_no_attachments
#define GL_ARB_framebuffer_no_attachments 1
#endif

#ifdef glFramebufferParameteri
#undef glFramebufferParameteri
#endif
#ifdef PFNGLFRAMEBUFFERPARAMETERIPROC
#undef PFNGLFRAMEBUFFERPARAMETERIPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glGetFramebufferParameteriv
#undef glGetFramebufferParameteriv
#endif
#ifdef PFNGLGETFRAMEBUFFERPARAMETERIVPROC
#undef PFNGLGETFRAMEBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifndef GL_FRAMEBUFFER_DEFAULT_WIDTH
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_HEIGHT
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_LAYERS
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_SAMPLES
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#endif

#ifndef GL_MAX_FRAMEBUFFER_WIDTH
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#endif

#ifndef GL_MAX_FRAMEBUFFER_HEIGHT
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#endif

#ifndef GL_MAX_FRAMEBUFFER_LAYERS
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#endif

#ifndef GL_MAX_FRAMEBUFFER_SAMPLES
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#endif

#ifndef GL_ARB_framebuffer_object
#define GL_ARB_framebuffer_object 1
#endif

#ifdef glIsRenderbuffer
#undef glIsRenderbuffer
#endif
#ifdef PFNGLISRENDERBUFFERPROC
#undef PFNGLISRENDERBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);

#ifdef glBindRenderbuffer
#undef glBindRenderbuffer
#endif
#ifdef PFNGLBINDRENDERBUFFERPROC
#undef PFNGLBINDRENDERBUFFERPROC
#endif
typedef void  (*PFNGLBINDRENDERBUFFERPROC)(GLenum target, GLuint renderbuffer);

#ifdef glDeleteRenderbuffers
#undef glDeleteRenderbuffers
#endif
#ifdef PFNGLDELETERENDERBUFFERSPROC
#undef PFNGLDELETERENDERBUFFERSPROC
#endif
typedef void  (*PFNGLDELETERENDERBUFFERSPROC)(GLsizei n, const GLuint *renderbuffers);

#ifdef glGenRenderbuffers
#undef glGenRenderbuffers
#endif
#ifdef PFNGLGENRENDERBUFFERSPROC
#undef PFNGLGENRENDERBUFFERSPROC
#endif
typedef void  (*PFNGLGENRENDERBUFFERSPROC)(GLsizei n, GLuint *renderbuffers);

#ifdef glRenderbufferStorage
#undef glRenderbufferStorage
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEPROC
#undef PFNGLRENDERBUFFERSTORAGEPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glGetRenderbufferParameteriv
#undef glGetRenderbufferParameteriv
#endif
#ifdef PFNGLGETRENDERBUFFERPARAMETERIVPROC
#undef PFNGLGETRENDERBUFFERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glIsFramebuffer
#undef glIsFramebuffer
#endif
#ifdef PFNGLISFRAMEBUFFERPROC
#undef PFNGLISFRAMEBUFFERPROC
#endif
typedef GLboolean  (*PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);

#ifdef glBindFramebuffer
#undef glBindFramebuffer
#endif
#ifdef PFNGLBINDFRAMEBUFFERPROC
#undef PFNGLBINDFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLBINDFRAMEBUFFERPROC)(GLenum target, GLuint framebuffer);

#ifdef glDeleteFramebuffers
#undef glDeleteFramebuffers
#endif
#ifdef PFNGLDELETEFRAMEBUFFERSPROC
#undef PFNGLDELETEFRAMEBUFFERSPROC
#endif
typedef void  (*PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n, const GLuint *framebuffers);

#ifdef glGenFramebuffers
#undef glGenFramebuffers
#endif
#ifdef PFNGLGENFRAMEBUFFERSPROC
#undef PFNGLGENFRAMEBUFFERSPROC
#endif
typedef void  (*PFNGLGENFRAMEBUFFERSPROC)(GLsizei n, GLuint *framebuffers);

#ifdef glCheckFramebufferStatus
#undef glCheckFramebufferStatus
#endif
#ifdef PFNGLCHECKFRAMEBUFFERSTATUSPROC
#undef PFNGLCHECKFRAMEBUFFERSTATUSPROC
#endif
typedef GLenum  (*PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);

#ifdef glFramebufferTexture1D
#undef glFramebufferTexture1D
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE1DPROC
#undef PFNGLFRAMEBUFFERTEXTURE1DPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glFramebufferTexture2D
#undef glFramebufferTexture2D
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE2DPROC
#undef PFNGLFRAMEBUFFERTEXTURE2DPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glFramebufferTexture3D
#undef glFramebufferTexture3D
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE3DPROC
#undef PFNGLFRAMEBUFFERTEXTURE3DPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);

#ifdef glFramebufferRenderbuffer
#undef glFramebufferRenderbuffer
#endif
#ifdef PFNGLFRAMEBUFFERRENDERBUFFERPROC
#undef PFNGLFRAMEBUFFERRENDERBUFFERPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);

#ifdef glGetFramebufferAttachmentParameteriv
#undef glGetFramebufferAttachmentParameteriv
#endif
#ifdef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#undef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target, GLenum attachment, GLenum pname, GLint *params);

#ifdef glGenerateMipmap
#undef glGenerateMipmap
#endif
#ifdef PFNGLGENERATEMIPMAPPROC
#undef PFNGLGENERATEMIPMAPPROC
#endif
typedef void  (*PFNGLGENERATEMIPMAPPROC)(GLenum target);

#ifdef glBlitFramebuffer
#undef glBlitFramebuffer
#endif
#ifdef PFNGLBLITFRAMEBUFFERPROC
#undef PFNGLBLITFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#ifdef glRenderbufferStorageMultisample
#undef glRenderbufferStorageMultisample
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glFramebufferTextureLayer
#undef glFramebufferTextureLayer
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURELAYERPROC
#undef PFNGLFRAMEBUFFERTEXTURELAYERPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#endif

#ifndef GL_FRAMEBUFFER_UNDEFINED
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#endif

#ifndef GL_DEPTH_STENCIL_ATTACHMENT
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#endif

#ifndef GL_DEPTH_STENCIL
#define GL_DEPTH_STENCIL 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8
#define GL_UNSIGNED_INT_24_8 0x84FA
#endif

#ifndef GL_DEPTH24_STENCIL8
#define GL_DEPTH24_STENCIL8 0x88F0
#endif

#ifndef GL_TEXTURE_STENCIL_SIZE
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#endif

#ifndef GL_UNSIGNED_NORMALIZED
#define GL_UNSIGNED_NORMALIZED 0x8C17
#endif

#ifndef GL_FRAMEBUFFER_BINDING
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING
#define GL_RENDERBUFFER_BINDING 0x8CA7
#endif

#ifndef GL_READ_FRAMEBUFFER
#define GL_READ_FRAMEBUFFER 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#endif

#ifndef GL_RENDERBUFFER_SAMPLES
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#endif

#ifndef GL_FRAMEBUFFER_UNSUPPORTED
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#endif

#ifndef GL_MAX_COLOR_ATTACHMENTS
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#endif

#ifndef GL_COLOR_ATTACHMENT0
#define GL_COLOR_ATTACHMENT0 0x8CE0
#endif

#ifndef GL_COLOR_ATTACHMENT1
#define GL_COLOR_ATTACHMENT1 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2
#define GL_COLOR_ATTACHMENT2 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3
#define GL_COLOR_ATTACHMENT3 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4
#define GL_COLOR_ATTACHMENT4 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5
#define GL_COLOR_ATTACHMENT5 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6
#define GL_COLOR_ATTACHMENT6 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7
#define GL_COLOR_ATTACHMENT7 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8
#define GL_COLOR_ATTACHMENT8 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9
#define GL_COLOR_ATTACHMENT9 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10
#define GL_COLOR_ATTACHMENT10 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11
#define GL_COLOR_ATTACHMENT11 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12
#define GL_COLOR_ATTACHMENT12 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13
#define GL_COLOR_ATTACHMENT13 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14
#define GL_COLOR_ATTACHMENT14 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15
#define GL_COLOR_ATTACHMENT15 0x8CEF
#endif

#ifndef GL_DEPTH_ATTACHMENT
#define GL_DEPTH_ATTACHMENT 0x8D00
#endif

#ifndef GL_STENCIL_ATTACHMENT
#define GL_STENCIL_ATTACHMENT 0x8D20
#endif

#ifndef GL_FRAMEBUFFER
#define GL_FRAMEBUFFER 0x8D40
#endif

#ifndef GL_RENDERBUFFER
#define GL_RENDERBUFFER 0x8D41
#endif

#ifndef GL_RENDERBUFFER_WIDTH
#define GL_RENDERBUFFER_WIDTH 0x8D42
#endif

#ifndef GL_RENDERBUFFER_HEIGHT
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#endif

#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#endif

#ifndef GL_STENCIL_INDEX1
#define GL_STENCIL_INDEX1 0x8D46
#endif

#ifndef GL_STENCIL_INDEX4
#define GL_STENCIL_INDEX4 0x8D47
#endif

#ifndef GL_STENCIL_INDEX8
#define GL_STENCIL_INDEX8 0x8D48
#endif

#ifndef GL_STENCIL_INDEX16
#define GL_STENCIL_INDEX16 0x8D49
#endif

#ifndef GL_RENDERBUFFER_RED_SIZE
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#endif

#ifndef GL_RENDERBUFFER_GREEN_SIZE
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#endif

#ifndef GL_RENDERBUFFER_BLUE_SIZE
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#endif

#ifndef GL_RENDERBUFFER_ALPHA_SIZE
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#endif

#ifndef GL_RENDERBUFFER_DEPTH_SIZE
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#endif

#ifndef GL_RENDERBUFFER_STENCIL_SIZE
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#endif

#ifndef GL_MAX_SAMPLES
#define GL_MAX_SAMPLES 0x8D57
#endif

#ifndef GL_INDEX
#define GL_INDEX 0x8222
#endif

#ifndef GL_ARB_framebuffer_sRGB
#define GL_ARB_framebuffer_sRGB 1
#endif

#ifndef GL_FRAMEBUFFER_SRGB
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#endif

#ifndef GL_ARB_geometry_shader4
#define GL_ARB_geometry_shader4 1
#endif

#ifdef glProgramParameteriARB
#undef glProgramParameteriARB
#endif
#ifdef PFNGLPROGRAMPARAMETERIARBPROC
#undef PFNGLPROGRAMPARAMETERIARBPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETERIARBPROC)(GLuint program, GLenum pname, GLint value);

#ifdef glFramebufferTextureARB
#undef glFramebufferTextureARB
#endif
#ifdef PFNGLFRAMEBUFFERTEXTUREARBPROC
#undef PFNGLFRAMEBUFFERTEXTUREARBPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTUREARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);

#ifdef glFramebufferTextureLayerARB
#undef glFramebufferTextureLayerARB
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURELAYERARBPROC
#undef PFNGLFRAMEBUFFERTEXTURELAYERARBPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifdef glFramebufferTextureFaceARB
#undef glFramebufferTextureFaceARB
#endif
#ifdef PFNGLFRAMEBUFFERTEXTUREFACEARBPROC
#undef PFNGLFRAMEBUFFERTEXTUREFACEARBPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);

#ifndef GL_LINES_ADJACENCY_ARB
#define GL_LINES_ADJACENCY_ARB 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_ARB
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_ARB
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_ARB
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#endif

#ifndef GL_PROGRAM_POINT_SIZE_ARB
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#endif

#ifndef GL_GEOMETRY_SHADER_ARB
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT_ARB
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE_ARB
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE_ARB
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#endif

#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#endif

#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_ARB
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#endif

#ifndef GL_MAX_VARYING_COMPONENTS
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#endif

#ifndef GL_ARB_get_program_binary
#define GL_ARB_get_program_binary 1
#endif

#ifdef glGetProgramBinary
#undef glGetProgramBinary
#endif
#ifdef PFNGLGETPROGRAMBINARYPROC
#undef PFNGLGETPROGRAMBINARYPROC
#endif
typedef void  (*PFNGLGETPROGRAMBINARYPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);

#ifdef glProgramBinary
#undef glProgramBinary
#endif
#ifdef PFNGLPROGRAMBINARYPROC
#undef PFNGLPROGRAMBINARYPROC
#endif
typedef void  (*PFNGLPROGRAMBINARYPROC)(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);

#ifdef glProgramParameteri
#undef glProgramParameteri
#endif
#ifdef PFNGLPROGRAMPARAMETERIPROC
#undef PFNGLPROGRAMPARAMETERIPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETERIPROC)(GLuint program, GLenum pname, GLint value);

#ifndef GL_PROGRAM_BINARY_RETRIEVABLE_HINT
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#endif

#ifndef GL_PROGRAM_BINARY_LENGTH
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#endif

#ifndef GL_NUM_PROGRAM_BINARY_FORMATS
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#endif

#ifndef GL_PROGRAM_BINARY_FORMATS
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#endif

#ifndef GL_ARB_get_texture_sub_image
#define GL_ARB_get_texture_sub_image 1
#endif

#ifdef glGetTextureSubImage
#undef glGetTextureSubImage
#endif
#ifdef PFNGLGETTEXTURESUBIMAGEPROC
#undef PFNGLGETTEXTURESUBIMAGEPROC
#endif
typedef void  (*PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);

#ifdef glGetCompressedTextureSubImage
#undef glGetCompressedTextureSubImage
#endif
#ifdef PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
#undef PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC
#endif
typedef void  (*PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);

#ifndef GL_ARB_gpu_shader5
#define GL_ARB_gpu_shader5 1
#endif

#ifndef GL_GEOMETRY_SHADER_INVOCATIONS
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_INVOCATIONS
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#endif

#ifndef GL_MIN_FRAGMENT_INTERPOLATION_OFFSET
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#endif

#ifndef GL_MAX_FRAGMENT_INTERPOLATION_OFFSET
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#endif

#ifndef GL_FRAGMENT_INTERPOLATION_OFFSET_BITS
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#endif

#ifndef GL_MAX_VERTEX_STREAMS
#define GL_MAX_VERTEX_STREAMS 0x8E71
#endif

#ifndef GL_ARB_gpu_shader_fp64
#define GL_ARB_gpu_shader_fp64 1
#endif

#ifdef glUniform1d
#undef glUniform1d
#endif
#ifdef PFNGLUNIFORM1DPROC
#undef PFNGLUNIFORM1DPROC
#endif
typedef void  (*PFNGLUNIFORM1DPROC)(GLint location, GLdouble x);

#ifdef glUniform2d
#undef glUniform2d
#endif
#ifdef PFNGLUNIFORM2DPROC
#undef PFNGLUNIFORM2DPROC
#endif
typedef void  (*PFNGLUNIFORM2DPROC)(GLint location, GLdouble x, GLdouble y);

#ifdef glUniform3d
#undef glUniform3d
#endif
#ifdef PFNGLUNIFORM3DPROC
#undef PFNGLUNIFORM3DPROC
#endif
typedef void  (*PFNGLUNIFORM3DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z);

#ifdef glUniform4d
#undef glUniform4d
#endif
#ifdef PFNGLUNIFORM4DPROC
#undef PFNGLUNIFORM4DPROC
#endif
typedef void  (*PFNGLUNIFORM4DPROC)(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glUniform1dv
#undef glUniform1dv
#endif
#ifdef PFNGLUNIFORM1DVPROC
#undef PFNGLUNIFORM1DVPROC
#endif
typedef void  (*PFNGLUNIFORM1DVPROC)(GLint location, GLsizei count, const GLdouble *value);

#ifdef glUniform2dv
#undef glUniform2dv
#endif
#ifdef PFNGLUNIFORM2DVPROC
#undef PFNGLUNIFORM2DVPROC
#endif
typedef void  (*PFNGLUNIFORM2DVPROC)(GLint location, GLsizei count, const GLdouble *value);

#ifdef glUniform3dv
#undef glUniform3dv
#endif
#ifdef PFNGLUNIFORM3DVPROC
#undef PFNGLUNIFORM3DVPROC
#endif
typedef void  (*PFNGLUNIFORM3DVPROC)(GLint location, GLsizei count, const GLdouble *value);

#ifdef glUniform4dv
#undef glUniform4dv
#endif
#ifdef PFNGLUNIFORM4DVPROC
#undef PFNGLUNIFORM4DVPROC
#endif
typedef void  (*PFNGLUNIFORM4DVPROC)(GLint location, GLsizei count, const GLdouble *value);

#ifdef glUniformMatrix2dv
#undef glUniformMatrix2dv
#endif
#ifdef PFNGLUNIFORMMATRIX2DVPROC
#undef PFNGLUNIFORMMATRIX2DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix3dv
#undef glUniformMatrix3dv
#endif
#ifdef PFNGLUNIFORMMATRIX3DVPROC
#undef PFNGLUNIFORMMATRIX3DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix4dv
#undef glUniformMatrix4dv
#endif
#ifdef PFNGLUNIFORMMATRIX4DVPROC
#undef PFNGLUNIFORMMATRIX4DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix2x3dv
#undef glUniformMatrix2x3dv
#endif
#ifdef PFNGLUNIFORMMATRIX2X3DVPROC
#undef PFNGLUNIFORMMATRIX2X3DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix2x4dv
#undef glUniformMatrix2x4dv
#endif
#ifdef PFNGLUNIFORMMATRIX2X4DVPROC
#undef PFNGLUNIFORMMATRIX2X4DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix3x2dv
#undef glUniformMatrix3x2dv
#endif
#ifdef PFNGLUNIFORMMATRIX3X2DVPROC
#undef PFNGLUNIFORMMATRIX3X2DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix3x4dv
#undef glUniformMatrix3x4dv
#endif
#ifdef PFNGLUNIFORMMATRIX3X4DVPROC
#undef PFNGLUNIFORMMATRIX3X4DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix4x2dv
#undef glUniformMatrix4x2dv
#endif
#ifdef PFNGLUNIFORMMATRIX4X2DVPROC
#undef PFNGLUNIFORMMATRIX4X2DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glUniformMatrix4x3dv
#undef glUniformMatrix4x3dv
#endif
#ifdef PFNGLUNIFORMMATRIX4X3DVPROC
#undef PFNGLUNIFORMMATRIX4X3DVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glGetUniformdv
#undef glGetUniformdv
#endif
#ifdef PFNGLGETUNIFORMDVPROC
#undef PFNGLGETUNIFORMDVPROC
#endif
typedef void  (*PFNGLGETUNIFORMDVPROC)(GLuint program, GLint location, GLdouble *params);

#ifndef GL_DOUBLE
#define GL_DOUBLE 0x140A
#endif

#ifndef GL_DOUBLE_VEC2
#define GL_DOUBLE_VEC2 0x8FFC
#endif

#ifndef GL_DOUBLE_VEC3
#define GL_DOUBLE_VEC3 0x8FFD
#endif

#ifndef GL_DOUBLE_VEC4
#define GL_DOUBLE_VEC4 0x8FFE
#endif

#ifndef GL_DOUBLE_MAT2
#define GL_DOUBLE_MAT2 0x8F46
#endif

#ifndef GL_DOUBLE_MAT3
#define GL_DOUBLE_MAT3 0x8F47
#endif

#ifndef GL_DOUBLE_MAT4
#define GL_DOUBLE_MAT4 0x8F48
#endif

#ifndef GL_DOUBLE_MAT2x3
#define GL_DOUBLE_MAT2x3 0x8F49
#endif

#ifndef GL_DOUBLE_MAT2x4
#define GL_DOUBLE_MAT2x4 0x8F4A
#endif

#ifndef GL_DOUBLE_MAT3x2
#define GL_DOUBLE_MAT3x2 0x8F4B
#endif

#ifndef GL_DOUBLE_MAT3x4
#define GL_DOUBLE_MAT3x4 0x8F4C
#endif

#ifndef GL_DOUBLE_MAT4x2
#define GL_DOUBLE_MAT4x2 0x8F4D
#endif

#ifndef GL_DOUBLE_MAT4x3
#define GL_DOUBLE_MAT4x3 0x8F4E
#endif

#ifndef GL_ARB_half_float_pixel
#define GL_ARB_half_float_pixel 1
#endif

#ifndef GL_HALF_FLOAT_ARB
#define GL_HALF_FLOAT_ARB 0x140B
#endif

#ifndef GL_ARB_half_float_vertex
#define GL_ARB_half_float_vertex 1
#endif

#ifndef GL_HALF_FLOAT
#define GL_HALF_FLOAT 0x140B
#endif

#ifndef GL_ARB_imaging
#define GL_ARB_imaging 1
#endif

#ifdef glBlendColor
#undef glBlendColor
#endif
#ifdef PFNGLBLENDCOLORPROC
#undef PFNGLBLENDCOLORPROC
#endif
typedef void  (*PFNGLBLENDCOLORPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifdef glBlendEquation
#undef glBlendEquation
#endif
#ifdef PFNGLBLENDEQUATIONPROC
#undef PFNGLBLENDEQUATIONPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONPROC)(GLenum mode);

#ifndef GL_CONSTANT_COLOR
#define GL_CONSTANT_COLOR 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA
#define GL_CONSTANT_ALPHA 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#endif

#ifndef GL_BLEND_COLOR
#define GL_BLEND_COLOR 0x8005
#endif

#ifndef GL_FUNC_ADD
#define GL_FUNC_ADD 0x8006
#endif

#ifndef GL_MIN
#define GL_MIN 0x8007
#endif

#ifndef GL_MAX
#define GL_MAX 0x8008
#endif

#ifndef GL_BLEND_EQUATION
#define GL_BLEND_EQUATION 0x8009
#endif

#ifndef GL_FUNC_SUBTRACT
#define GL_FUNC_SUBTRACT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#endif

#ifdef glColorTable
#undef glColorTable
#endif
#ifdef PFNGLCOLORTABLEPROC
#undef PFNGLCOLORTABLEPROC
#endif
typedef void  (*PFNGLCOLORTABLEPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);

#ifdef glColorTableParameterfv
#undef glColorTableParameterfv
#endif
#ifdef PFNGLCOLORTABLEPARAMETERFVPROC
#undef PFNGLCOLORTABLEPARAMETERFVPROC
#endif
typedef void  (*PFNGLCOLORTABLEPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glColorTableParameteriv
#undef glColorTableParameteriv
#endif
#ifdef PFNGLCOLORTABLEPARAMETERIVPROC
#undef PFNGLCOLORTABLEPARAMETERIVPROC
#endif
typedef void  (*PFNGLCOLORTABLEPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glCopyColorTable
#undef glCopyColorTable
#endif
#ifdef PFNGLCOPYCOLORTABLEPROC
#undef PFNGLCOPYCOLORTABLEPROC
#endif
typedef void  (*PFNGLCOPYCOLORTABLEPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);

#ifdef glGetColorTable
#undef glGetColorTable
#endif
#ifdef PFNGLGETCOLORTABLEPROC
#undef PFNGLGETCOLORTABLEPROC
#endif
typedef void  (*PFNGLGETCOLORTABLEPROC)(GLenum target, GLenum format, GLenum type, void *table);

#ifdef glGetColorTableParameterfv
#undef glGetColorTableParameterfv
#endif
#ifdef PFNGLGETCOLORTABLEPARAMETERFVPROC
#undef PFNGLGETCOLORTABLEPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETCOLORTABLEPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetColorTableParameteriv
#undef glGetColorTableParameteriv
#endif
#ifdef PFNGLGETCOLORTABLEPARAMETERIVPROC
#undef PFNGLGETCOLORTABLEPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETCOLORTABLEPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glColorSubTable
#undef glColorSubTable
#endif
#ifdef PFNGLCOLORSUBTABLEPROC
#undef PFNGLCOLORSUBTABLEPROC
#endif
typedef void  (*PFNGLCOLORSUBTABLEPROC)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);

#ifdef glCopyColorSubTable
#undef glCopyColorSubTable
#endif
#ifdef PFNGLCOPYCOLORSUBTABLEPROC
#undef PFNGLCOPYCOLORSUBTABLEPROC
#endif
typedef void  (*PFNGLCOPYCOLORSUBTABLEPROC)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);

#ifdef glConvolutionFilter1D
#undef glConvolutionFilter1D
#endif
#ifdef PFNGLCONVOLUTIONFILTER1DPROC
#undef PFNGLCONVOLUTIONFILTER1DPROC
#endif
typedef void  (*PFNGLCONVOLUTIONFILTER1DPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);

#ifdef glConvolutionFilter2D
#undef glConvolutionFilter2D
#endif
#ifdef PFNGLCONVOLUTIONFILTER2DPROC
#undef PFNGLCONVOLUTIONFILTER2DPROC
#endif
typedef void  (*PFNGLCONVOLUTIONFILTER2DPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);

#ifdef glConvolutionParameterf
#undef glConvolutionParameterf
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERFPROC
#undef PFNGLCONVOLUTIONPARAMETERFPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERFPROC)(GLenum target, GLenum pname, GLfloat params);

#ifdef glConvolutionParameterfv
#undef glConvolutionParameterfv
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERFVPROC
#undef PFNGLCONVOLUTIONPARAMETERFVPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERFVPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glConvolutionParameteri
#undef glConvolutionParameteri
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERIPROC
#undef PFNGLCONVOLUTIONPARAMETERIPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERIPROC)(GLenum target, GLenum pname, GLint params);

#ifdef glConvolutionParameteriv
#undef glConvolutionParameteriv
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERIVPROC
#undef PFNGLCONVOLUTIONPARAMETERIVPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERIVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glCopyConvolutionFilter1D
#undef glCopyConvolutionFilter1D
#endif
#ifdef PFNGLCOPYCONVOLUTIONFILTER1DPROC
#undef PFNGLCOPYCONVOLUTIONFILTER1DPROC
#endif
typedef void  (*PFNGLCOPYCONVOLUTIONFILTER1DPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);

#ifdef glCopyConvolutionFilter2D
#undef glCopyConvolutionFilter2D
#endif
#ifdef PFNGLCOPYCONVOLUTIONFILTER2DPROC
#undef PFNGLCOPYCONVOLUTIONFILTER2DPROC
#endif
typedef void  (*PFNGLCOPYCONVOLUTIONFILTER2DPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glGetConvolutionFilter
#undef glGetConvolutionFilter
#endif
#ifdef PFNGLGETCONVOLUTIONFILTERPROC
#undef PFNGLGETCONVOLUTIONFILTERPROC
#endif
typedef void  (*PFNGLGETCONVOLUTIONFILTERPROC)(GLenum target, GLenum format, GLenum type, void *image);

#ifdef glGetConvolutionParameterfv
#undef glGetConvolutionParameterfv
#endif
#ifdef PFNGLGETCONVOLUTIONPARAMETERFVPROC
#undef PFNGLGETCONVOLUTIONPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETCONVOLUTIONPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetConvolutionParameteriv
#undef glGetConvolutionParameteriv
#endif
#ifdef PFNGLGETCONVOLUTIONPARAMETERIVPROC
#undef PFNGLGETCONVOLUTIONPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETCONVOLUTIONPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetSeparableFilter
#undef glGetSeparableFilter
#endif
#ifdef PFNGLGETSEPARABLEFILTERPROC
#undef PFNGLGETSEPARABLEFILTERPROC
#endif
typedef void  (*PFNGLGETSEPARABLEFILTERPROC)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);

#ifdef glSeparableFilter2D
#undef glSeparableFilter2D
#endif
#ifdef PFNGLSEPARABLEFILTER2DPROC
#undef PFNGLSEPARABLEFILTER2DPROC
#endif
typedef void  (*PFNGLSEPARABLEFILTER2DPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);

#ifdef glGetHistogram
#undef glGetHistogram
#endif
#ifdef PFNGLGETHISTOGRAMPROC
#undef PFNGLGETHISTOGRAMPROC
#endif
typedef void  (*PFNGLGETHISTOGRAMPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);

#ifdef glGetHistogramParameterfv
#undef glGetHistogramParameterfv
#endif
#ifdef PFNGLGETHISTOGRAMPARAMETERFVPROC
#undef PFNGLGETHISTOGRAMPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETHISTOGRAMPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetHistogramParameteriv
#undef glGetHistogramParameteriv
#endif
#ifdef PFNGLGETHISTOGRAMPARAMETERIVPROC
#undef PFNGLGETHISTOGRAMPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETHISTOGRAMPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetMinmax
#undef glGetMinmax
#endif
#ifdef PFNGLGETMINMAXPROC
#undef PFNGLGETMINMAXPROC
#endif
typedef void  (*PFNGLGETMINMAXPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);

#ifdef glGetMinmaxParameterfv
#undef glGetMinmaxParameterfv
#endif
#ifdef PFNGLGETMINMAXPARAMETERFVPROC
#undef PFNGLGETMINMAXPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETMINMAXPARAMETERFVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetMinmaxParameteriv
#undef glGetMinmaxParameteriv
#endif
#ifdef PFNGLGETMINMAXPARAMETERIVPROC
#undef PFNGLGETMINMAXPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETMINMAXPARAMETERIVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glHistogram
#undef glHistogram
#endif
#ifdef PFNGLHISTOGRAMPROC
#undef PFNGLHISTOGRAMPROC
#endif
typedef void  (*PFNGLHISTOGRAMPROC)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);

#ifdef glMinmax
#undef glMinmax
#endif
#ifdef PFNGLMINMAXPROC
#undef PFNGLMINMAXPROC
#endif
typedef void  (*PFNGLMINMAXPROC)(GLenum target, GLenum internalformat, GLboolean sink);

#ifdef glResetHistogram
#undef glResetHistogram
#endif
#ifdef PFNGLRESETHISTOGRAMPROC
#undef PFNGLRESETHISTOGRAMPROC
#endif
typedef void  (*PFNGLRESETHISTOGRAMPROC)(GLenum target);

#ifdef glResetMinmax
#undef glResetMinmax
#endif
#ifdef PFNGLRESETMINMAXPROC
#undef PFNGLRESETMINMAXPROC
#endif
typedef void  (*PFNGLRESETMINMAXPROC)(GLenum target);

#ifndef GL_CONVOLUTION_1D
#define GL_CONVOLUTION_1D 0x8010
#endif

#ifndef GL_CONVOLUTION_2D
#define GL_CONVOLUTION_2D 0x8011
#endif

#ifndef GL_SEPARABLE_2D
#define GL_SEPARABLE_2D 0x8012
#endif

#ifndef GL_CONVOLUTION_BORDER_MODE
#define GL_CONVOLUTION_BORDER_MODE 0x8013
#endif

#ifndef GL_CONVOLUTION_FILTER_SCALE
#define GL_CONVOLUTION_FILTER_SCALE 0x8014
#endif

#ifndef GL_CONVOLUTION_FILTER_BIAS
#define GL_CONVOLUTION_FILTER_BIAS 0x8015
#endif

#ifndef GL_REDUCE
#define GL_REDUCE 0x8016
#endif

#ifndef GL_CONVOLUTION_FORMAT
#define GL_CONVOLUTION_FORMAT 0x8017
#endif

#ifndef GL_CONVOLUTION_WIDTH
#define GL_CONVOLUTION_WIDTH 0x8018
#endif

#ifndef GL_CONVOLUTION_HEIGHT
#define GL_CONVOLUTION_HEIGHT 0x8019
#endif

#ifndef GL_MAX_CONVOLUTION_WIDTH
#define GL_MAX_CONVOLUTION_WIDTH 0x801A
#endif

#ifndef GL_MAX_CONVOLUTION_HEIGHT
#define GL_MAX_CONVOLUTION_HEIGHT 0x801B
#endif

#ifndef GL_POST_CONVOLUTION_RED_SCALE
#define GL_POST_CONVOLUTION_RED_SCALE 0x801C
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_SCALE
#define GL_POST_CONVOLUTION_GREEN_SCALE 0x801D
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_SCALE
#define GL_POST_CONVOLUTION_BLUE_SCALE 0x801E
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_SCALE
#define GL_POST_CONVOLUTION_ALPHA_SCALE 0x801F
#endif

#ifndef GL_POST_CONVOLUTION_RED_BIAS
#define GL_POST_CONVOLUTION_RED_BIAS 0x8020
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_BIAS
#define GL_POST_CONVOLUTION_GREEN_BIAS 0x8021
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_BIAS
#define GL_POST_CONVOLUTION_BLUE_BIAS 0x8022
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_BIAS
#define GL_POST_CONVOLUTION_ALPHA_BIAS 0x8023
#endif

#ifndef GL_HISTOGRAM
#define GL_HISTOGRAM 0x8024
#endif

#ifndef GL_PROXY_HISTOGRAM
#define GL_PROXY_HISTOGRAM 0x8025
#endif

#ifndef GL_HISTOGRAM_WIDTH
#define GL_HISTOGRAM_WIDTH 0x8026
#endif

#ifndef GL_HISTOGRAM_FORMAT
#define GL_HISTOGRAM_FORMAT 0x8027
#endif

#ifndef GL_HISTOGRAM_RED_SIZE
#define GL_HISTOGRAM_RED_SIZE 0x8028
#endif

#ifndef GL_HISTOGRAM_GREEN_SIZE
#define GL_HISTOGRAM_GREEN_SIZE 0x8029
#endif

#ifndef GL_HISTOGRAM_BLUE_SIZE
#define GL_HISTOGRAM_BLUE_SIZE 0x802A
#endif

#ifndef GL_HISTOGRAM_ALPHA_SIZE
#define GL_HISTOGRAM_ALPHA_SIZE 0x802B
#endif

#ifndef GL_HISTOGRAM_LUMINANCE_SIZE
#define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C
#endif

#ifndef GL_HISTOGRAM_SINK
#define GL_HISTOGRAM_SINK 0x802D
#endif

#ifndef GL_MINMAX
#define GL_MINMAX 0x802E
#endif

#ifndef GL_MINMAX_FORMAT
#define GL_MINMAX_FORMAT 0x802F
#endif

#ifndef GL_MINMAX_SINK
#define GL_MINMAX_SINK 0x8030
#endif

#ifndef GL_TABLE_TOO_LARGE
#define GL_TABLE_TOO_LARGE 0x8031
#endif

#ifndef GL_COLOR_MATRIX
#define GL_COLOR_MATRIX 0x80B1
#endif

#ifndef GL_COLOR_MATRIX_STACK_DEPTH
#define GL_COLOR_MATRIX_STACK_DEPTH 0x80B2
#endif

#ifndef GL_MAX_COLOR_MATRIX_STACK_DEPTH
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH 0x80B3
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_SCALE
#define GL_POST_COLOR_MATRIX_RED_SCALE 0x80B4
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_SCALE
#define GL_POST_COLOR_MATRIX_GREEN_SCALE 0x80B5
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_SCALE
#define GL_POST_COLOR_MATRIX_BLUE_SCALE 0x80B6
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_SCALE
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE 0x80B7
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_BIAS
#define GL_POST_COLOR_MATRIX_RED_BIAS 0x80B8
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_BIAS
#define GL_POST_COLOR_MATRIX_GREEN_BIAS 0x80B9
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_BIAS
#define GL_POST_COLOR_MATRIX_BLUE_BIAS 0x80BA
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_BIAS
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS 0x80BB
#endif

#ifndef GL_COLOR_TABLE
#define GL_COLOR_TABLE 0x80D0
#endif

#ifndef GL_POST_CONVOLUTION_COLOR_TABLE
#define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#endif

#ifndef GL_POST_COLOR_MATRIX_COLOR_TABLE
#define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#endif

#ifndef GL_PROXY_COLOR_TABLE
#define GL_PROXY_COLOR_TABLE 0x80D3
#endif

#ifndef GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#endif

#ifndef GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#endif

#ifndef GL_COLOR_TABLE_SCALE
#define GL_COLOR_TABLE_SCALE 0x80D6
#endif

#ifndef GL_COLOR_TABLE_BIAS
#define GL_COLOR_TABLE_BIAS 0x80D7
#endif

#ifndef GL_COLOR_TABLE_FORMAT
#define GL_COLOR_TABLE_FORMAT 0x80D8
#endif

#ifndef GL_COLOR_TABLE_WIDTH
#define GL_COLOR_TABLE_WIDTH 0x80D9
#endif

#ifndef GL_COLOR_TABLE_RED_SIZE
#define GL_COLOR_TABLE_RED_SIZE 0x80DA
#endif

#ifndef GL_COLOR_TABLE_GREEN_SIZE
#define GL_COLOR_TABLE_GREEN_SIZE 0x80DB
#endif

#ifndef GL_COLOR_TABLE_BLUE_SIZE
#define GL_COLOR_TABLE_BLUE_SIZE 0x80DC
#endif

#ifndef GL_COLOR_TABLE_ALPHA_SIZE
#define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD
#endif

#ifndef GL_COLOR_TABLE_LUMINANCE_SIZE
#define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE
#endif

#ifndef GL_COLOR_TABLE_INTENSITY_SIZE
#define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF
#endif

#ifndef GL_CONSTANT_BORDER
#define GL_CONSTANT_BORDER 0x8151
#endif

#ifndef GL_REPLICATE_BORDER
#define GL_REPLICATE_BORDER 0x8153
#endif

#ifndef GL_CONVOLUTION_BORDER_COLOR
#define GL_CONVOLUTION_BORDER_COLOR 0x8154
#endif

#ifndef GL_ARB_indirect_parameters
#define GL_ARB_indirect_parameters 1
#endif

#ifdef glMultiDrawArraysIndirectCountARB
#undef glMultiDrawArraysIndirectCountARB
#endif
#ifdef PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC
#undef PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);

#ifdef glMultiDrawElementsIndirectCountARB
#undef glMultiDrawElementsIndirectCountARB
#endif
#ifdef PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC
#undef PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);

#ifndef GL_PARAMETER_BUFFER_ARB
#define GL_PARAMETER_BUFFER_ARB 0x80EE
#endif

#ifndef GL_PARAMETER_BUFFER_BINDING_ARB
#define GL_PARAMETER_BUFFER_BINDING_ARB 0x80EF
#endif

#ifndef GL_ARB_instanced_arrays
#define GL_ARB_instanced_arrays 1
#endif

#ifdef glVertexAttribDivisorARB
#undef glVertexAttribDivisorARB
#endif
#ifdef PFNGLVERTEXATTRIBDIVISORARBPROC
#undef PFNGLVERTEXATTRIBDIVISORARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBDIVISORARBPROC)(GLuint index, GLuint divisor);

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
#endif

#ifndef GL_ARB_internalformat_query
#define GL_ARB_internalformat_query 1
#endif

#ifdef glGetInternalformativ
#undef glGetInternalformativ
#endif
#ifdef PFNGLGETINTERNALFORMATIVPROC
#undef PFNGLGETINTERNALFORMATIVPROC
#endif
typedef void  (*PFNGLGETINTERNALFORMATIVPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);

#ifndef GL_NUM_SAMPLE_COUNTS
#define GL_NUM_SAMPLE_COUNTS 0x9380
#endif

#ifndef GL_ARB_internalformat_query2
#define GL_ARB_internalformat_query2 1
#endif

#ifdef glGetInternalformati64v
#undef glGetInternalformati64v
#endif
#ifdef PFNGLGETINTERNALFORMATI64VPROC
#undef PFNGLGETINTERNALFORMATI64VPROC
#endif
typedef void  (*PFNGLGETINTERNALFORMATI64VPROC)(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#endif

#ifndef GL_NUM_SAMPLE_COUNTS
#define GL_NUM_SAMPLE_COUNTS 0x9380
#endif

#ifndef GL_RENDERBUFFER
#define GL_RENDERBUFFER 0x8D41
#endif

#ifndef GL_SAMPLES
#define GL_SAMPLES 0x80A9
#endif

#ifndef GL_TEXTURE_1D
#define GL_TEXTURE_1D 0x0DE0
#endif

#ifndef GL_TEXTURE_1D_ARRAY
#define GL_TEXTURE_1D_ARRAY 0x8C18
#endif

#ifndef GL_TEXTURE_2D
#define GL_TEXTURE_2D 0x0DE1
#endif

#ifndef GL_TEXTURE_2D_ARRAY
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#endif

#ifndef GL_TEXTURE_3D
#define GL_TEXTURE_3D 0x806F
#endif

#ifndef GL_TEXTURE_CUBE_MAP
#define GL_TEXTURE_CUBE_MAP 0x8513
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#endif

#ifndef GL_TEXTURE_RECTANGLE
#define GL_TEXTURE_RECTANGLE 0x84F5
#endif

#ifndef GL_TEXTURE_BUFFER
#define GL_TEXTURE_BUFFER 0x8C2A
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#endif

#ifndef GL_TEXTURE_COMPRESSED
#define GL_TEXTURE_COMPRESSED 0x86A1
#endif

#ifndef GL_INTERNALFORMAT_SUPPORTED
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#endif

#ifndef GL_INTERNALFORMAT_PREFERRED
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#endif

#ifndef GL_INTERNALFORMAT_RED_SIZE
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#endif

#ifndef GL_INTERNALFORMAT_GREEN_SIZE
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#endif

#ifndef GL_INTERNALFORMAT_BLUE_SIZE
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#endif

#ifndef GL_INTERNALFORMAT_ALPHA_SIZE
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#endif

#ifndef GL_INTERNALFORMAT_DEPTH_SIZE
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#endif

#ifndef GL_INTERNALFORMAT_STENCIL_SIZE
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#endif

#ifndef GL_INTERNALFORMAT_SHARED_SIZE
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#endif

#ifndef GL_INTERNALFORMAT_RED_TYPE
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#endif

#ifndef GL_INTERNALFORMAT_GREEN_TYPE
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#endif

#ifndef GL_INTERNALFORMAT_BLUE_TYPE
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#endif

#ifndef GL_INTERNALFORMAT_ALPHA_TYPE
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#endif

#ifndef GL_INTERNALFORMAT_DEPTH_TYPE
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#endif

#ifndef GL_INTERNALFORMAT_STENCIL_TYPE
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#endif

#ifndef GL_MAX_WIDTH
#define GL_MAX_WIDTH 0x827E
#endif

#ifndef GL_MAX_HEIGHT
#define GL_MAX_HEIGHT 0x827F
#endif

#ifndef GL_MAX_DEPTH
#define GL_MAX_DEPTH 0x8280
#endif

#ifndef GL_MAX_LAYERS
#define GL_MAX_LAYERS 0x8281
#endif

#ifndef GL_MAX_COMBINED_DIMENSIONS
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#endif

#ifndef GL_COLOR_COMPONENTS
#define GL_COLOR_COMPONENTS 0x8283
#endif

#ifndef GL_DEPTH_COMPONENTS
#define GL_DEPTH_COMPONENTS 0x8284
#endif

#ifndef GL_STENCIL_COMPONENTS
#define GL_STENCIL_COMPONENTS 0x8285
#endif

#ifndef GL_COLOR_RENDERABLE
#define GL_COLOR_RENDERABLE 0x8286
#endif

#ifndef GL_DEPTH_RENDERABLE
#define GL_DEPTH_RENDERABLE 0x8287
#endif

#ifndef GL_STENCIL_RENDERABLE
#define GL_STENCIL_RENDERABLE 0x8288
#endif

#ifndef GL_FRAMEBUFFER_RENDERABLE
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#endif

#ifndef GL_FRAMEBUFFER_RENDERABLE_LAYERED
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#endif

#ifndef GL_FRAMEBUFFER_BLEND
#define GL_FRAMEBUFFER_BLEND 0x828B
#endif

#ifndef GL_READ_PIXELS
#define GL_READ_PIXELS 0x828C
#endif

#ifndef GL_READ_PIXELS_FORMAT
#define GL_READ_PIXELS_FORMAT 0x828D
#endif

#ifndef GL_READ_PIXELS_TYPE
#define GL_READ_PIXELS_TYPE 0x828E
#endif

#ifndef GL_TEXTURE_IMAGE_FORMAT
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#endif

#ifndef GL_TEXTURE_IMAGE_TYPE
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#endif

#ifndef GL_GET_TEXTURE_IMAGE_FORMAT
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#endif

#ifndef GL_GET_TEXTURE_IMAGE_TYPE
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#endif

#ifndef GL_MIPMAP
#define GL_MIPMAP 0x8293
#endif

#ifndef GL_MANUAL_GENERATE_MIPMAP
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#endif

#ifndef GL_AUTO_GENERATE_MIPMAP
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#endif

#ifndef GL_COLOR_ENCODING
#define GL_COLOR_ENCODING 0x8296
#endif

#ifndef GL_SRGB_READ
#define GL_SRGB_READ 0x8297
#endif

#ifndef GL_SRGB_WRITE
#define GL_SRGB_WRITE 0x8298
#endif

#ifndef GL_SRGB_DECODE_ARB
#define GL_SRGB_DECODE_ARB 0x8299
#endif

#ifndef GL_FILTER
#define GL_FILTER 0x829A
#endif

#ifndef GL_VERTEX_TEXTURE
#define GL_VERTEX_TEXTURE 0x829B
#endif

#ifndef GL_TESS_CONTROL_TEXTURE
#define GL_TESS_CONTROL_TEXTURE 0x829C
#endif

#ifndef GL_TESS_EVALUATION_TEXTURE
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#endif

#ifndef GL_GEOMETRY_TEXTURE
#define GL_GEOMETRY_TEXTURE 0x829E
#endif

#ifndef GL_FRAGMENT_TEXTURE
#define GL_FRAGMENT_TEXTURE 0x829F
#endif

#ifndef GL_COMPUTE_TEXTURE
#define GL_COMPUTE_TEXTURE 0x82A0
#endif

#ifndef GL_TEXTURE_SHADOW
#define GL_TEXTURE_SHADOW 0x82A1
#endif

#ifndef GL_TEXTURE_GATHER
#define GL_TEXTURE_GATHER 0x82A2
#endif

#ifndef GL_TEXTURE_GATHER_SHADOW
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#endif

#ifndef GL_SHADER_IMAGE_LOAD
#define GL_SHADER_IMAGE_LOAD 0x82A4
#endif

#ifndef GL_SHADER_IMAGE_STORE
#define GL_SHADER_IMAGE_STORE 0x82A5
#endif

#ifndef GL_SHADER_IMAGE_ATOMIC
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#endif

#ifndef GL_IMAGE_TEXEL_SIZE
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#endif

#ifndef GL_IMAGE_COMPATIBILITY_CLASS
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#endif

#ifndef GL_IMAGE_PIXEL_FORMAT
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#endif

#ifndef GL_IMAGE_PIXEL_TYPE
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#endif

#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#endif

#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#endif

#ifndef GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#endif

#ifndef GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#endif

#ifndef GL_TEXTURE_COMPRESSED_BLOCK_WIDTH
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#endif

#ifndef GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#endif

#ifndef GL_TEXTURE_COMPRESSED_BLOCK_SIZE
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#endif

#ifndef GL_CLEAR_BUFFER
#define GL_CLEAR_BUFFER 0x82B4
#endif

#ifndef GL_TEXTURE_VIEW
#define GL_TEXTURE_VIEW 0x82B5
#endif

#ifndef GL_VIEW_COMPATIBILITY_CLASS
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#endif

#ifndef GL_FULL_SUPPORT
#define GL_FULL_SUPPORT 0x82B7
#endif

#ifndef GL_CAVEAT_SUPPORT
#define GL_CAVEAT_SUPPORT 0x82B8
#endif

#ifndef GL_IMAGE_CLASS_4_X_32
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#endif

#ifndef GL_IMAGE_CLASS_2_X_32
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#endif

#ifndef GL_IMAGE_CLASS_1_X_32
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#endif

#ifndef GL_IMAGE_CLASS_4_X_16
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#endif

#ifndef GL_IMAGE_CLASS_2_X_16
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#endif

#ifndef GL_IMAGE_CLASS_1_X_16
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#endif

#ifndef GL_IMAGE_CLASS_4_X_8
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#endif

#ifndef GL_IMAGE_CLASS_2_X_8
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#endif

#ifndef GL_IMAGE_CLASS_1_X_8
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#endif

#ifndef GL_IMAGE_CLASS_11_11_10
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#endif

#ifndef GL_IMAGE_CLASS_10_10_10_2
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#endif

#ifndef GL_VIEW_CLASS_128_BITS
#define GL_VIEW_CLASS_128_BITS 0x82C4
#endif

#ifndef GL_VIEW_CLASS_96_BITS
#define GL_VIEW_CLASS_96_BITS 0x82C5
#endif

#ifndef GL_VIEW_CLASS_64_BITS
#define GL_VIEW_CLASS_64_BITS 0x82C6
#endif

#ifndef GL_VIEW_CLASS_48_BITS
#define GL_VIEW_CLASS_48_BITS 0x82C7
#endif

#ifndef GL_VIEW_CLASS_32_BITS
#define GL_VIEW_CLASS_32_BITS 0x82C8
#endif

#ifndef GL_VIEW_CLASS_24_BITS
#define GL_VIEW_CLASS_24_BITS 0x82C9
#endif

#ifndef GL_VIEW_CLASS_16_BITS
#define GL_VIEW_CLASS_16_BITS 0x82CA
#endif

#ifndef GL_VIEW_CLASS_8_BITS
#define GL_VIEW_CLASS_8_BITS 0x82CB
#endif

#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#endif

#ifndef GL_VIEW_CLASS_S3TC_DXT1_RGBA
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#endif

#ifndef GL_VIEW_CLASS_S3TC_DXT3_RGBA
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#endif

#ifndef GL_VIEW_CLASS_S3TC_DXT5_RGBA
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#endif

#ifndef GL_VIEW_CLASS_RGTC1_RED
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#endif

#ifndef GL_VIEW_CLASS_RGTC2_RG
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#endif

#ifndef GL_VIEW_CLASS_BPTC_UNORM
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#endif

#ifndef GL_VIEW_CLASS_BPTC_FLOAT
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#endif

#ifndef GL_ARB_invalidate_subdata
#define GL_ARB_invalidate_subdata 1
#endif

#ifdef glInvalidateTexSubImage
#undef glInvalidateTexSubImage
#endif
#ifdef PFNGLINVALIDATETEXSUBIMAGEPROC
#undef PFNGLINVALIDATETEXSUBIMAGEPROC
#endif
typedef void  (*PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);

#ifdef glInvalidateTexImage
#undef glInvalidateTexImage
#endif
#ifdef PFNGLINVALIDATETEXIMAGEPROC
#undef PFNGLINVALIDATETEXIMAGEPROC
#endif
typedef void  (*PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture, GLint level);

#ifdef glInvalidateBufferSubData
#undef glInvalidateBufferSubData
#endif
#ifdef PFNGLINVALIDATEBUFFERSUBDATAPROC
#undef PFNGLINVALIDATEBUFFERSUBDATAPROC
#endif
typedef void  (*PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);

#ifdef glInvalidateBufferData
#undef glInvalidateBufferData
#endif
#ifdef PFNGLINVALIDATEBUFFERDATAPROC
#undef PFNGLINVALIDATEBUFFERDATAPROC
#endif
typedef void  (*PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);

#ifdef glInvalidateFramebuffer
#undef glInvalidateFramebuffer
#endif
#ifdef PFNGLINVALIDATEFRAMEBUFFERPROC
#undef PFNGLINVALIDATEFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments);

#ifdef glInvalidateSubFramebuffer
#undef glInvalidateSubFramebuffer
#endif
#ifdef PFNGLINVALIDATESUBFRAMEBUFFERPROC
#undef PFNGLINVALIDATESUBFRAMEBUFFERPROC
#endif
typedef void  (*PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);

#ifndef GL_ARB_map_buffer_alignment
#define GL_ARB_map_buffer_alignment 1
#endif

#ifndef GL_MIN_MAP_BUFFER_ALIGNMENT
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#endif

#ifndef GL_ARB_map_buffer_range
#define GL_ARB_map_buffer_range 1
#endif

#ifdef glMapBufferRange
#undef glMapBufferRange
#endif
#ifdef PFNGLMAPBUFFERRANGEPROC
#undef PFNGLMAPBUFFERRANGEPROC
#endif
typedef void * (*PFNGLMAPBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);

#ifdef glFlushMappedBufferRange
#undef glFlushMappedBufferRange
#endif
#ifdef PFNGLFLUSHMAPPEDBUFFERRANGEPROC
#undef PFNGLFLUSHMAPPEDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target, GLintptr offset, GLsizeiptr length);

#ifndef GL_MAP_READ_BIT
#define GL_MAP_READ_BIT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT
#define GL_MAP_WRITE_BIT 0x0002
#endif

#ifndef GL_MAP_INVALIDATE_RANGE_BIT
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#endif

#ifndef GL_MAP_INVALIDATE_BUFFER_BIT
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#endif

#ifndef GL_MAP_FLUSH_EXPLICIT_BIT
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#endif

#ifndef GL_MAP_UNSYNCHRONIZED_BIT
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#endif

#ifndef GL_ARB_matrix_palette
#define GL_ARB_matrix_palette 1
#endif

#ifdef glCurrentPaletteMatrixARB
#undef glCurrentPaletteMatrixARB
#endif
#ifdef PFNGLCURRENTPALETTEMATRIXARBPROC
#undef PFNGLCURRENTPALETTEMATRIXARBPROC
#endif
typedef void  (*PFNGLCURRENTPALETTEMATRIXARBPROC)(GLint index);

#ifdef glMatrixIndexubvARB
#undef glMatrixIndexubvARB
#endif
#ifdef PFNGLMATRIXINDEXUBVARBPROC
#undef PFNGLMATRIXINDEXUBVARBPROC
#endif
typedef void  (*PFNGLMATRIXINDEXUBVARBPROC)(GLint size, const GLubyte *indices);

#ifdef glMatrixIndexusvARB
#undef glMatrixIndexusvARB
#endif
#ifdef PFNGLMATRIXINDEXUSVARBPROC
#undef PFNGLMATRIXINDEXUSVARBPROC
#endif
typedef void  (*PFNGLMATRIXINDEXUSVARBPROC)(GLint size, const GLushort *indices);

#ifdef glMatrixIndexuivARB
#undef glMatrixIndexuivARB
#endif
#ifdef PFNGLMATRIXINDEXUIVARBPROC
#undef PFNGLMATRIXINDEXUIVARBPROC
#endif
typedef void  (*PFNGLMATRIXINDEXUIVARBPROC)(GLint size, const GLuint *indices);

#ifdef glMatrixIndexPointerARB
#undef glMatrixIndexPointerARB
#endif
#ifdef PFNGLMATRIXINDEXPOINTERARBPROC
#undef PFNGLMATRIXINDEXPOINTERARBPROC
#endif
typedef void  (*PFNGLMATRIXINDEXPOINTERARBPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifndef GL_MATRIX_PALETTE_ARB
#define GL_MATRIX_PALETTE_ARB 0x8840
#endif

#ifndef GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#endif

#ifndef GL_MAX_PALETTE_MATRICES_ARB
#define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#endif

#ifndef GL_CURRENT_PALETTE_MATRIX_ARB
#define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_ARB
#define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#endif

#ifndef GL_CURRENT_MATRIX_INDEX_ARB
#define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_ARB
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_ARB
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_ARB
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_ARB
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#endif

#ifndef GL_ARB_multi_bind
#define GL_ARB_multi_bind 1
#endif

#ifdef glBindBuffersBase
#undef glBindBuffersBase
#endif
#ifdef PFNGLBINDBUFFERSBASEPROC
#undef PFNGLBINDBUFFERSBASEPROC
#endif
typedef void  (*PFNGLBINDBUFFERSBASEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);

#ifdef glBindBuffersRange
#undef glBindBuffersRange
#endif
#ifdef PFNGLBINDBUFFERSRANGEPROC
#undef PFNGLBINDBUFFERSRANGEPROC
#endif
typedef void  (*PFNGLBINDBUFFERSRANGEPROC)(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);

#ifdef glBindTextures
#undef glBindTextures
#endif
#ifdef PFNGLBINDTEXTURESPROC
#undef PFNGLBINDTEXTURESPROC
#endif
typedef void  (*PFNGLBINDTEXTURESPROC)(GLuint first, GLsizei count, const GLuint *textures);

#ifdef glBindSamplers
#undef glBindSamplers
#endif
#ifdef PFNGLBINDSAMPLERSPROC
#undef PFNGLBINDSAMPLERSPROC
#endif
typedef void  (*PFNGLBINDSAMPLERSPROC)(GLuint first, GLsizei count, const GLuint *samplers);

#ifdef glBindImageTextures
#undef glBindImageTextures
#endif
#ifdef PFNGLBINDIMAGETEXTURESPROC
#undef PFNGLBINDIMAGETEXTURESPROC
#endif
typedef void  (*PFNGLBINDIMAGETEXTURESPROC)(GLuint first, GLsizei count, const GLuint *textures);

#ifdef glBindVertexBuffers
#undef glBindVertexBuffers
#endif
#ifdef PFNGLBINDVERTEXBUFFERSPROC
#undef PFNGLBINDVERTEXBUFFERSPROC
#endif
typedef void  (*PFNGLBINDVERTEXBUFFERSPROC)(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);

#ifndef GL_ARB_multi_draw_indirect
#define GL_ARB_multi_draw_indirect 1
#endif

#ifdef glMultiDrawArraysIndirect
#undef glMultiDrawArraysIndirect
#endif
#ifdef PFNGLMULTIDRAWARRAYSINDIRECTPROC
#undef PFNGLMULTIDRAWARRAYSINDIRECTPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);

#ifdef glMultiDrawElementsIndirect
#undef glMultiDrawElementsIndirect
#endif
#ifdef PFNGLMULTIDRAWELEMENTSINDIRECTPROC
#undef PFNGLMULTIDRAWELEMENTSINDIRECTPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);

#ifndef GL_ARB_multisample
#define GL_ARB_multisample 1
#endif

#ifdef glSampleCoverageARB
#undef glSampleCoverageARB
#endif
#ifdef PFNGLSAMPLECOVERAGEARBPROC
#undef PFNGLSAMPLECOVERAGEARBPROC
#endif
typedef void  (*PFNGLSAMPLECOVERAGEARBPROC)(GLfloat value, GLboolean invert);

#ifndef GL_MULTISAMPLE_ARB
#define GL_MULTISAMPLE_ARB 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_COVERAGE_ARB
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_ARB
#define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
#endif

#ifndef GL_SAMPLE_COVERAGE_ARB
#define GL_SAMPLE_COVERAGE_ARB 0x80A0
#endif

#ifndef GL_SAMPLE_BUFFERS_ARB
#define GL_SAMPLE_BUFFERS_ARB 0x80A8
#endif

#ifndef GL_SAMPLES_ARB
#define GL_SAMPLES_ARB 0x80A9
#endif

#ifndef GL_SAMPLE_COVERAGE_VALUE_ARB
#define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
#endif

#ifndef GL_SAMPLE_COVERAGE_INVERT_ARB
#define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
#endif

#ifndef GL_MULTISAMPLE_BIT_ARB
#define GL_MULTISAMPLE_BIT_ARB 0x20000000
#endif

#ifndef GL_ARB_multitexture
#define GL_ARB_multitexture 1
#endif

#ifdef glActiveTextureARB
#undef glActiveTextureARB
#endif
#ifdef PFNGLACTIVETEXTUREARBPROC
#undef PFNGLACTIVETEXTUREARBPROC
#endif
typedef void  (*PFNGLACTIVETEXTUREARBPROC)(GLenum texture);

#ifdef glClientActiveTextureARB
#undef glClientActiveTextureARB
#endif
#ifdef PFNGLCLIENTACTIVETEXTUREARBPROC
#undef PFNGLCLIENTACTIVETEXTUREARBPROC
#endif
typedef void  (*PFNGLCLIENTACTIVETEXTUREARBPROC)(GLenum texture);

#ifdef glMultiTexCoord1dARB
#undef glMultiTexCoord1dARB
#endif
#ifdef PFNGLMULTITEXCOORD1DARBPROC
#undef PFNGLMULTITEXCOORD1DARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1DARBPROC)(GLenum target, GLdouble s);

#ifdef glMultiTexCoord1dvARB
#undef glMultiTexCoord1dvARB
#endif
#ifdef PFNGLMULTITEXCOORD1DVARBPROC
#undef PFNGLMULTITEXCOORD1DVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1DVARBPROC)(GLenum target, const GLdouble *v);

#ifdef glMultiTexCoord1fARB
#undef glMultiTexCoord1fARB
#endif
#ifdef PFNGLMULTITEXCOORD1FARBPROC
#undef PFNGLMULTITEXCOORD1FARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1FARBPROC)(GLenum target, GLfloat s);

#ifdef glMultiTexCoord1fvARB
#undef glMultiTexCoord1fvARB
#endif
#ifdef PFNGLMULTITEXCOORD1FVARBPROC
#undef PFNGLMULTITEXCOORD1FVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1FVARBPROC)(GLenum target, const GLfloat *v);

#ifdef glMultiTexCoord1iARB
#undef glMultiTexCoord1iARB
#endif
#ifdef PFNGLMULTITEXCOORD1IARBPROC
#undef PFNGLMULTITEXCOORD1IARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1IARBPROC)(GLenum target, GLint s);

#ifdef glMultiTexCoord1ivARB
#undef glMultiTexCoord1ivARB
#endif
#ifdef PFNGLMULTITEXCOORD1IVARBPROC
#undef PFNGLMULTITEXCOORD1IVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1IVARBPROC)(GLenum target, const GLint *v);

#ifdef glMultiTexCoord1sARB
#undef glMultiTexCoord1sARB
#endif
#ifdef PFNGLMULTITEXCOORD1SARBPROC
#undef PFNGLMULTITEXCOORD1SARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1SARBPROC)(GLenum target, GLshort s);

#ifdef glMultiTexCoord1svARB
#undef glMultiTexCoord1svARB
#endif
#ifdef PFNGLMULTITEXCOORD1SVARBPROC
#undef PFNGLMULTITEXCOORD1SVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1SVARBPROC)(GLenum target, const GLshort *v);

#ifdef glMultiTexCoord2dARB
#undef glMultiTexCoord2dARB
#endif
#ifdef PFNGLMULTITEXCOORD2DARBPROC
#undef PFNGLMULTITEXCOORD2DARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2DARBPROC)(GLenum target, GLdouble s, GLdouble t);

#ifdef glMultiTexCoord2dvARB
#undef glMultiTexCoord2dvARB
#endif
#ifdef PFNGLMULTITEXCOORD2DVARBPROC
#undef PFNGLMULTITEXCOORD2DVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2DVARBPROC)(GLenum target, const GLdouble *v);

#ifdef glMultiTexCoord2fARB
#undef glMultiTexCoord2fARB
#endif
#ifdef PFNGLMULTITEXCOORD2FARBPROC
#undef PFNGLMULTITEXCOORD2FARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2FARBPROC)(GLenum target, GLfloat s, GLfloat t);

#ifdef glMultiTexCoord2fvARB
#undef glMultiTexCoord2fvARB
#endif
#ifdef PFNGLMULTITEXCOORD2FVARBPROC
#undef PFNGLMULTITEXCOORD2FVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2FVARBPROC)(GLenum target, const GLfloat *v);

#ifdef glMultiTexCoord2iARB
#undef glMultiTexCoord2iARB
#endif
#ifdef PFNGLMULTITEXCOORD2IARBPROC
#undef PFNGLMULTITEXCOORD2IARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2IARBPROC)(GLenum target, GLint s, GLint t);

#ifdef glMultiTexCoord2ivARB
#undef glMultiTexCoord2ivARB
#endif
#ifdef PFNGLMULTITEXCOORD2IVARBPROC
#undef PFNGLMULTITEXCOORD2IVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2IVARBPROC)(GLenum target, const GLint *v);

#ifdef glMultiTexCoord2sARB
#undef glMultiTexCoord2sARB
#endif
#ifdef PFNGLMULTITEXCOORD2SARBPROC
#undef PFNGLMULTITEXCOORD2SARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2SARBPROC)(GLenum target, GLshort s, GLshort t);

#ifdef glMultiTexCoord2svARB
#undef glMultiTexCoord2svARB
#endif
#ifdef PFNGLMULTITEXCOORD2SVARBPROC
#undef PFNGLMULTITEXCOORD2SVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2SVARBPROC)(GLenum target, const GLshort *v);

#ifdef glMultiTexCoord3dARB
#undef glMultiTexCoord3dARB
#endif
#ifdef PFNGLMULTITEXCOORD3DARBPROC
#undef PFNGLMULTITEXCOORD3DARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3DARBPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r);

#ifdef glMultiTexCoord3dvARB
#undef glMultiTexCoord3dvARB
#endif
#ifdef PFNGLMULTITEXCOORD3DVARBPROC
#undef PFNGLMULTITEXCOORD3DVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3DVARBPROC)(GLenum target, const GLdouble *v);

#ifdef glMultiTexCoord3fARB
#undef glMultiTexCoord3fARB
#endif
#ifdef PFNGLMULTITEXCOORD3FARBPROC
#undef PFNGLMULTITEXCOORD3FARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3FARBPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r);

#ifdef glMultiTexCoord3fvARB
#undef glMultiTexCoord3fvARB
#endif
#ifdef PFNGLMULTITEXCOORD3FVARBPROC
#undef PFNGLMULTITEXCOORD3FVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3FVARBPROC)(GLenum target, const GLfloat *v);

#ifdef glMultiTexCoord3iARB
#undef glMultiTexCoord3iARB
#endif
#ifdef PFNGLMULTITEXCOORD3IARBPROC
#undef PFNGLMULTITEXCOORD3IARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3IARBPROC)(GLenum target, GLint s, GLint t, GLint r);

#ifdef glMultiTexCoord3ivARB
#undef glMultiTexCoord3ivARB
#endif
#ifdef PFNGLMULTITEXCOORD3IVARBPROC
#undef PFNGLMULTITEXCOORD3IVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3IVARBPROC)(GLenum target, const GLint *v);

#ifdef glMultiTexCoord3sARB
#undef glMultiTexCoord3sARB
#endif
#ifdef PFNGLMULTITEXCOORD3SARBPROC
#undef PFNGLMULTITEXCOORD3SARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3SARBPROC)(GLenum target, GLshort s, GLshort t, GLshort r);

#ifdef glMultiTexCoord3svARB
#undef glMultiTexCoord3svARB
#endif
#ifdef PFNGLMULTITEXCOORD3SVARBPROC
#undef PFNGLMULTITEXCOORD3SVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3SVARBPROC)(GLenum target, const GLshort *v);

#ifdef glMultiTexCoord4dARB
#undef glMultiTexCoord4dARB
#endif
#ifdef PFNGLMULTITEXCOORD4DARBPROC
#undef PFNGLMULTITEXCOORD4DARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4DARBPROC)(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);

#ifdef glMultiTexCoord4dvARB
#undef glMultiTexCoord4dvARB
#endif
#ifdef PFNGLMULTITEXCOORD4DVARBPROC
#undef PFNGLMULTITEXCOORD4DVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4DVARBPROC)(GLenum target, const GLdouble *v);

#ifdef glMultiTexCoord4fARB
#undef glMultiTexCoord4fARB
#endif
#ifdef PFNGLMULTITEXCOORD4FARBPROC
#undef PFNGLMULTITEXCOORD4FARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4FARBPROC)(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);

#ifdef glMultiTexCoord4fvARB
#undef glMultiTexCoord4fvARB
#endif
#ifdef PFNGLMULTITEXCOORD4FVARBPROC
#undef PFNGLMULTITEXCOORD4FVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4FVARBPROC)(GLenum target, const GLfloat *v);

#ifdef glMultiTexCoord4iARB
#undef glMultiTexCoord4iARB
#endif
#ifdef PFNGLMULTITEXCOORD4IARBPROC
#undef PFNGLMULTITEXCOORD4IARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4IARBPROC)(GLenum target, GLint s, GLint t, GLint r, GLint q);

#ifdef glMultiTexCoord4ivARB
#undef glMultiTexCoord4ivARB
#endif
#ifdef PFNGLMULTITEXCOORD4IVARBPROC
#undef PFNGLMULTITEXCOORD4IVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4IVARBPROC)(GLenum target, const GLint *v);

#ifdef glMultiTexCoord4sARB
#undef glMultiTexCoord4sARB
#endif
#ifdef PFNGLMULTITEXCOORD4SARBPROC
#undef PFNGLMULTITEXCOORD4SARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4SARBPROC)(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);

#ifdef glMultiTexCoord4svARB
#undef glMultiTexCoord4svARB
#endif
#ifdef PFNGLMULTITEXCOORD4SVARBPROC
#undef PFNGLMULTITEXCOORD4SVARBPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4SVARBPROC)(GLenum target, const GLshort *v);

#ifndef GL_TEXTURE0_ARB
#define GL_TEXTURE0_ARB 0x84C0
#endif

#ifndef GL_TEXTURE1_ARB
#define GL_TEXTURE1_ARB 0x84C1
#endif

#ifndef GL_TEXTURE2_ARB
#define GL_TEXTURE2_ARB 0x84C2
#endif

#ifndef GL_TEXTURE3_ARB
#define GL_TEXTURE3_ARB 0x84C3
#endif

#ifndef GL_TEXTURE4_ARB
#define GL_TEXTURE4_ARB 0x84C4
#endif

#ifndef GL_TEXTURE5_ARB
#define GL_TEXTURE5_ARB 0x84C5
#endif

#ifndef GL_TEXTURE6_ARB
#define GL_TEXTURE6_ARB 0x84C6
#endif

#ifndef GL_TEXTURE7_ARB
#define GL_TEXTURE7_ARB 0x84C7
#endif

#ifndef GL_TEXTURE8_ARB
#define GL_TEXTURE8_ARB 0x84C8
#endif

#ifndef GL_TEXTURE9_ARB
#define GL_TEXTURE9_ARB 0x84C9
#endif

#ifndef GL_TEXTURE10_ARB
#define GL_TEXTURE10_ARB 0x84CA
#endif

#ifndef GL_TEXTURE11_ARB
#define GL_TEXTURE11_ARB 0x84CB
#endif

#ifndef GL_TEXTURE12_ARB
#define GL_TEXTURE12_ARB 0x84CC
#endif

#ifndef GL_TEXTURE13_ARB
#define GL_TEXTURE13_ARB 0x84CD
#endif

#ifndef GL_TEXTURE14_ARB
#define GL_TEXTURE14_ARB 0x84CE
#endif

#ifndef GL_TEXTURE15_ARB
#define GL_TEXTURE15_ARB 0x84CF
#endif

#ifndef GL_TEXTURE16_ARB
#define GL_TEXTURE16_ARB 0x84D0
#endif

#ifndef GL_TEXTURE17_ARB
#define GL_TEXTURE17_ARB 0x84D1
#endif

#ifndef GL_TEXTURE18_ARB
#define GL_TEXTURE18_ARB 0x84D2
#endif

#ifndef GL_TEXTURE19_ARB
#define GL_TEXTURE19_ARB 0x84D3
#endif

#ifndef GL_TEXTURE20_ARB
#define GL_TEXTURE20_ARB 0x84D4
#endif

#ifndef GL_TEXTURE21_ARB
#define GL_TEXTURE21_ARB 0x84D5
#endif

#ifndef GL_TEXTURE22_ARB
#define GL_TEXTURE22_ARB 0x84D6
#endif

#ifndef GL_TEXTURE23_ARB
#define GL_TEXTURE23_ARB 0x84D7
#endif

#ifndef GL_TEXTURE24_ARB
#define GL_TEXTURE24_ARB 0x84D8
#endif

#ifndef GL_TEXTURE25_ARB
#define GL_TEXTURE25_ARB 0x84D9
#endif

#ifndef GL_TEXTURE26_ARB
#define GL_TEXTURE26_ARB 0x84DA
#endif

#ifndef GL_TEXTURE27_ARB
#define GL_TEXTURE27_ARB 0x84DB
#endif

#ifndef GL_TEXTURE28_ARB
#define GL_TEXTURE28_ARB 0x84DC
#endif

#ifndef GL_TEXTURE29_ARB
#define GL_TEXTURE29_ARB 0x84DD
#endif

#ifndef GL_TEXTURE30_ARB
#define GL_TEXTURE30_ARB 0x84DE
#endif

#ifndef GL_TEXTURE31_ARB
#define GL_TEXTURE31_ARB 0x84DF
#endif

#ifndef GL_ACTIVE_TEXTURE_ARB
#define GL_ACTIVE_TEXTURE_ARB 0x84E0
#endif

#ifndef GL_CLIENT_ACTIVE_TEXTURE_ARB
#define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#endif

#ifndef GL_MAX_TEXTURE_UNITS_ARB
#define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#endif

#ifndef GL_ARB_occlusion_query
#define GL_ARB_occlusion_query 1
#endif

#ifdef glGenQueriesARB
#undef glGenQueriesARB
#endif
#ifdef PFNGLGENQUERIESARBPROC
#undef PFNGLGENQUERIESARBPROC
#endif
typedef void  (*PFNGLGENQUERIESARBPROC)(GLsizei n, GLuint *ids);

#ifdef glDeleteQueriesARB
#undef glDeleteQueriesARB
#endif
#ifdef PFNGLDELETEQUERIESARBPROC
#undef PFNGLDELETEQUERIESARBPROC
#endif
typedef void  (*PFNGLDELETEQUERIESARBPROC)(GLsizei n, const GLuint *ids);

#ifdef glIsQueryARB
#undef glIsQueryARB
#endif
#ifdef PFNGLISQUERYARBPROC
#undef PFNGLISQUERYARBPROC
#endif
typedef GLboolean  (*PFNGLISQUERYARBPROC)(GLuint id);

#ifdef glBeginQueryARB
#undef glBeginQueryARB
#endif
#ifdef PFNGLBEGINQUERYARBPROC
#undef PFNGLBEGINQUERYARBPROC
#endif
typedef void  (*PFNGLBEGINQUERYARBPROC)(GLenum target, GLuint id);

#ifdef glEndQueryARB
#undef glEndQueryARB
#endif
#ifdef PFNGLENDQUERYARBPROC
#undef PFNGLENDQUERYARBPROC
#endif
typedef void  (*PFNGLENDQUERYARBPROC)(GLenum target);

#ifdef glGetQueryivARB
#undef glGetQueryivARB
#endif
#ifdef PFNGLGETQUERYIVARBPROC
#undef PFNGLGETQUERYIVARBPROC
#endif
typedef void  (*PFNGLGETQUERYIVARBPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetQueryObjectivARB
#undef glGetQueryObjectivARB
#endif
#ifdef PFNGLGETQUERYOBJECTIVARBPROC
#undef PFNGLGETQUERYOBJECTIVARBPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTIVARBPROC)(GLuint id, GLenum pname, GLint *params);

#ifdef glGetQueryObjectuivARB
#undef glGetQueryObjectuivARB
#endif
#ifdef PFNGLGETQUERYOBJECTUIVARBPROC
#undef PFNGLGETQUERYOBJECTUIVARBPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUIVARBPROC)(GLuint id, GLenum pname, GLuint *params);

#ifndef GL_QUERY_COUNTER_BITS_ARB
#define GL_QUERY_COUNTER_BITS_ARB 0x8864
#endif

#ifndef GL_CURRENT_QUERY_ARB
#define GL_CURRENT_QUERY_ARB 0x8865
#endif

#ifndef GL_QUERY_RESULT_ARB
#define GL_QUERY_RESULT_ARB 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE_ARB
#define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
#endif

#ifndef GL_SAMPLES_PASSED_ARB
#define GL_SAMPLES_PASSED_ARB 0x8914
#endif

#ifndef GL_ARB_occlusion_query2
#define GL_ARB_occlusion_query2 1
#endif

#ifndef GL_ANY_SAMPLES_PASSED
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#endif

#ifndef GL_ARB_pipeline_statistics_query
#define GL_ARB_pipeline_statistics_query 1
#endif

#ifndef GL_VERTICES_SUBMITTED_ARB
#define GL_VERTICES_SUBMITTED_ARB 0x82EE
#endif

#ifndef GL_PRIMITIVES_SUBMITTED_ARB
#define GL_PRIMITIVES_SUBMITTED_ARB 0x82EF
#endif

#ifndef GL_VERTEX_SHADER_INVOCATIONS_ARB
#define GL_VERTEX_SHADER_INVOCATIONS_ARB 0x82F0
#endif

#ifndef GL_TESS_CONTROL_SHADER_PATCHES_ARB
#define GL_TESS_CONTROL_SHADER_PATCHES_ARB 0x82F1
#endif

#ifndef GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB 0x82F2
#endif

#ifndef GL_GEOMETRY_SHADER_INVOCATIONS
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#endif

#ifndef GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB 0x82F3
#endif

#ifndef GL_FRAGMENT_SHADER_INVOCATIONS_ARB
#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB 0x82F4
#endif

#ifndef GL_COMPUTE_SHADER_INVOCATIONS_ARB
#define GL_COMPUTE_SHADER_INVOCATIONS_ARB 0x82F5
#endif

#ifndef GL_CLIPPING_INPUT_PRIMITIVES_ARB
#define GL_CLIPPING_INPUT_PRIMITIVES_ARB 0x82F6
#endif

#ifndef GL_CLIPPING_OUTPUT_PRIMITIVES_ARB
#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB 0x82F7
#endif

#ifndef GL_ARB_pixel_buffer_object
#define GL_ARB_pixel_buffer_object 1
#endif

#ifndef GL_PIXEL_PACK_BUFFER_ARB
#define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_ARB
#define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING_ARB
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING_ARB
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
#endif

#ifndef GL_ARB_point_parameters
#define GL_ARB_point_parameters 1
#endif

#ifdef glPointParameterfARB
#undef glPointParameterfARB
#endif
#ifdef PFNGLPOINTPARAMETERFARBPROC
#undef PFNGLPOINTPARAMETERFARBPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFARBPROC)(GLenum pname, GLfloat param);

#ifdef glPointParameterfvARB
#undef glPointParameterfvARB
#endif
#ifdef PFNGLPOINTPARAMETERFVARBPROC
#undef PFNGLPOINTPARAMETERFVARBPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFVARBPROC)(GLenum pname, const GLfloat *params);

#ifndef GL_POINT_SIZE_MIN_ARB
#define GL_POINT_SIZE_MIN_ARB 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_ARB
#define GL_POINT_SIZE_MAX_ARB 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_ARB
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
#endif

#ifndef GL_POINT_DISTANCE_ATTENUATION_ARB
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
#endif

#ifndef GL_ARB_point_sprite
#define GL_ARB_point_sprite 1
#endif

#ifndef GL_POINT_SPRITE_ARB
#define GL_POINT_SPRITE_ARB 0x8861
#endif

#ifndef GL_COORD_REPLACE_ARB
#define GL_COORD_REPLACE_ARB 0x8862
#endif

#ifndef GL_ARB_program_interface_query
#define GL_ARB_program_interface_query 1
#endif

#ifdef glGetProgramInterfaceiv
#undef glGetProgramInterfaceiv
#endif
#ifdef PFNGLGETPROGRAMINTERFACEIVPROC
#undef PFNGLGETPROGRAMINTERFACEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program, GLenum programInterface, GLenum pname, GLint *params);

#ifdef glGetProgramResourceIndex
#undef glGetProgramResourceIndex
#endif
#ifdef PFNGLGETPROGRAMRESOURCEINDEXPROC
#undef PFNGLGETPROGRAMRESOURCEINDEXPROC
#endif
typedef GLuint  (*PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program, GLenum programInterface, const GLchar *name);

#ifdef glGetProgramResourceName
#undef glGetProgramResourceName
#endif
#ifdef PFNGLGETPROGRAMRESOURCENAMEPROC
#undef PFNGLGETPROGRAMRESOURCENAMEPROC
#endif
typedef void  (*PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);

#ifdef glGetProgramResourceiv
#undef glGetProgramResourceiv
#endif
#ifdef PFNGLGETPROGRAMRESOURCEIVPROC
#undef PFNGLGETPROGRAMRESOURCEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);

#ifdef glGetProgramResourceLocation
#undef glGetProgramResourceLocation
#endif
#ifdef PFNGLGETPROGRAMRESOURCELOCATIONPROC
#undef PFNGLGETPROGRAMRESOURCELOCATIONPROC
#endif
typedef GLint  (*PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program, GLenum programInterface, const GLchar *name);

#ifdef glGetProgramResourceLocationIndex
#undef glGetProgramResourceLocationIndex
#endif
#ifdef PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
#undef PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
#endif
typedef GLint  (*PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program, GLenum programInterface, const GLchar *name);

#ifndef GL_UNIFORM
#define GL_UNIFORM 0x92E1
#endif

#ifndef GL_UNIFORM_BLOCK
#define GL_UNIFORM_BLOCK 0x92E2
#endif

#ifndef GL_PROGRAM_INPUT
#define GL_PROGRAM_INPUT 0x92E3
#endif

#ifndef GL_PROGRAM_OUTPUT
#define GL_PROGRAM_OUTPUT 0x92E4
#endif

#ifndef GL_BUFFER_VARIABLE
#define GL_BUFFER_VARIABLE 0x92E5
#endif

#ifndef GL_SHADER_STORAGE_BLOCK
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#endif

#ifndef GL_VERTEX_SUBROUTINE
#define GL_VERTEX_SUBROUTINE 0x92E8
#endif

#ifndef GL_TESS_CONTROL_SUBROUTINE
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#endif

#ifndef GL_TESS_EVALUATION_SUBROUTINE
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#endif

#ifndef GL_GEOMETRY_SUBROUTINE
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#endif

#ifndef GL_FRAGMENT_SUBROUTINE
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#endif

#ifndef GL_COMPUTE_SUBROUTINE
#define GL_COMPUTE_SUBROUTINE 0x92ED
#endif

#ifndef GL_VERTEX_SUBROUTINE_UNIFORM
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#endif

#ifndef GL_TESS_CONTROL_SUBROUTINE_UNIFORM
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#endif

#ifndef GL_TESS_EVALUATION_SUBROUTINE_UNIFORM
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#endif

#ifndef GL_GEOMETRY_SUBROUTINE_UNIFORM
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#endif

#ifndef GL_FRAGMENT_SUBROUTINE_UNIFORM
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#endif

#ifndef GL_COMPUTE_SUBROUTINE_UNIFORM
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#endif

#ifndef GL_ACTIVE_RESOURCES
#define GL_ACTIVE_RESOURCES 0x92F5
#endif

#ifndef GL_MAX_NAME_LENGTH
#define GL_MAX_NAME_LENGTH 0x92F6
#endif

#ifndef GL_MAX_NUM_ACTIVE_VARIABLES
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#endif

#ifndef GL_MAX_NUM_COMPATIBLE_SUBROUTINES
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#endif

#ifndef GL_NAME_LENGTH
#define GL_NAME_LENGTH 0x92F9
#endif

#ifndef GL_TYPE
#define GL_TYPE 0x92FA
#endif

#ifndef GL_ARRAY_SIZE
#define GL_ARRAY_SIZE 0x92FB
#endif

#ifndef GL_OFFSET
#define GL_OFFSET 0x92FC
#endif

#ifndef GL_BLOCK_INDEX
#define GL_BLOCK_INDEX 0x92FD
#endif

#ifndef GL_ARRAY_STRIDE
#define GL_ARRAY_STRIDE 0x92FE
#endif

#ifndef GL_MATRIX_STRIDE
#define GL_MATRIX_STRIDE 0x92FF
#endif

#ifndef GL_IS_ROW_MAJOR
#define GL_IS_ROW_MAJOR 0x9300
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#endif

#ifndef GL_BUFFER_BINDING
#define GL_BUFFER_BINDING 0x9302
#endif

#ifndef GL_BUFFER_DATA_SIZE
#define GL_BUFFER_DATA_SIZE 0x9303
#endif

#ifndef GL_NUM_ACTIVE_VARIABLES
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#endif

#ifndef GL_ACTIVE_VARIABLES
#define GL_ACTIVE_VARIABLES 0x9305
#endif

#ifndef GL_REFERENCED_BY_VERTEX_SHADER
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#endif

#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#endif

#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#endif

#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#endif

#ifndef GL_REFERENCED_BY_FRAGMENT_SHADER
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#endif

#ifndef GL_REFERENCED_BY_COMPUTE_SHADER
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#endif

#ifndef GL_TOP_LEVEL_ARRAY_SIZE
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#endif

#ifndef GL_TOP_LEVEL_ARRAY_STRIDE
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#endif

#ifndef GL_LOCATION
#define GL_LOCATION 0x930E
#endif

#ifndef GL_LOCATION_INDEX
#define GL_LOCATION_INDEX 0x930F
#endif

#ifndef GL_IS_PER_PATCH
#define GL_IS_PER_PATCH 0x92E7
#endif

#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif

#ifndef GL_COMPATIBLE_SUBROUTINES
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif

#ifndef GL_ARB_provoking_vertex
#define GL_ARB_provoking_vertex 1
#endif

#ifdef glProvokingVertex
#undef glProvokingVertex
#endif
#ifdef PFNGLPROVOKINGVERTEXPROC
#undef PFNGLPROVOKINGVERTEXPROC
#endif
typedef void  (*PFNGLPROVOKINGVERTEXPROC)(GLenum mode);

#ifndef GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#endif

#ifndef GL_PROVOKING_VERTEX
#define GL_PROVOKING_VERTEX 0x8E4F
#endif

#ifndef GL_ARB_query_buffer_object
#define GL_ARB_query_buffer_object 1
#endif

#ifndef GL_QUERY_BUFFER
#define GL_QUERY_BUFFER 0x9192
#endif

#ifndef GL_QUERY_BUFFER_BARRIER_BIT
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#endif

#ifndef GL_QUERY_BUFFER_BINDING
#define GL_QUERY_BUFFER_BINDING 0x9193
#endif

#ifndef GL_QUERY_RESULT_NO_WAIT
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#endif

#ifndef GL_ARB_robust_buffer_access_behavior
#define GL_ARB_robust_buffer_access_behavior 1
#endif

#ifndef GL_ARB_robustness
#define GL_ARB_robustness 1
#endif

#ifdef glGetGraphicsResetStatusARB
#undef glGetGraphicsResetStatusARB
#endif
#ifdef PFNGLGETGRAPHICSRESETSTATUSARBPROC
#undef PFNGLGETGRAPHICSRESETSTATUSARBPROC
#endif
typedef GLenum  (*PFNGLGETGRAPHICSRESETSTATUSARBPROC)(void);

#ifdef glGetnTexImageARB
#undef glGetnTexImageARB
#endif
#ifdef PFNGLGETNTEXIMAGEARBPROC
#undef PFNGLGETNTEXIMAGEARBPROC
#endif
typedef void  (*PFNGLGETNTEXIMAGEARBPROC)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);

#ifdef glReadnPixelsARB
#undef glReadnPixelsARB
#endif
#ifdef PFNGLREADNPIXELSARBPROC
#undef PFNGLREADNPIXELSARBPROC
#endif
typedef void  (*PFNGLREADNPIXELSARBPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);

#ifdef glGetnCompressedTexImageARB
#undef glGetnCompressedTexImageARB
#endif
#ifdef PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
#undef PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
#endif
typedef void  (*PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)(GLenum target, GLint lod, GLsizei bufSize, void *img);

#ifdef glGetnUniformfvARB
#undef glGetnUniformfvARB
#endif
#ifdef PFNGLGETNUNIFORMFVARBPROC
#undef PFNGLGETNUNIFORMFVARBPROC
#endif
typedef void  (*PFNGLGETNUNIFORMFVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);

#ifdef glGetnUniformivARB
#undef glGetnUniformivARB
#endif
#ifdef PFNGLGETNUNIFORMIVARBPROC
#undef PFNGLGETNUNIFORMIVARBPROC
#endif
typedef void  (*PFNGLGETNUNIFORMIVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLint *params);

#ifdef glGetnUniformuivARB
#undef glGetnUniformuivARB
#endif
#ifdef PFNGLGETNUNIFORMUIVARBPROC
#undef PFNGLGETNUNIFORMUIVARBPROC
#endif
typedef void  (*PFNGLGETNUNIFORMUIVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);

#ifdef glGetnUniformdvARB
#undef glGetnUniformdvARB
#endif
#ifdef PFNGLGETNUNIFORMDVARBPROC
#undef PFNGLGETNUNIFORMDVARBPROC
#endif
typedef void  (*PFNGLGETNUNIFORMDVARBPROC)(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#endif

#ifndef GL_LOSE_CONTEXT_ON_RESET_ARB
#define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#endif

#ifndef GL_GUILTY_CONTEXT_RESET_ARB
#define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#endif

#ifndef GL_INNOCENT_CONTEXT_RESET_ARB
#define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#endif

#ifndef GL_UNKNOWN_CONTEXT_RESET_ARB
#define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#endif

#ifndef GL_RESET_NOTIFICATION_STRATEGY_ARB
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#endif

#ifndef GL_NO_RESET_NOTIFICATION_ARB
#define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#endif

#ifdef glGetnMapdvARB
#undef glGetnMapdvARB
#endif
#ifdef PFNGLGETNMAPDVARBPROC
#undef PFNGLGETNMAPDVARBPROC
#endif
typedef void  (*PFNGLGETNMAPDVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);

#ifdef glGetnMapfvARB
#undef glGetnMapfvARB
#endif
#ifdef PFNGLGETNMAPFVARBPROC
#undef PFNGLGETNMAPFVARBPROC
#endif
typedef void  (*PFNGLGETNMAPFVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);

#ifdef glGetnMapivARB
#undef glGetnMapivARB
#endif
#ifdef PFNGLGETNMAPIVARBPROC
#undef PFNGLGETNMAPIVARBPROC
#endif
typedef void  (*PFNGLGETNMAPIVARBPROC)(GLenum target, GLenum query, GLsizei bufSize, GLint *v);

#ifdef glGetnPixelMapfvARB
#undef glGetnPixelMapfvARB
#endif
#ifdef PFNGLGETNPIXELMAPFVARBPROC
#undef PFNGLGETNPIXELMAPFVARBPROC
#endif
typedef void  (*PFNGLGETNPIXELMAPFVARBPROC)(GLenum map, GLsizei bufSize, GLfloat *values);

#ifdef glGetnPixelMapuivARB
#undef glGetnPixelMapuivARB
#endif
#ifdef PFNGLGETNPIXELMAPUIVARBPROC
#undef PFNGLGETNPIXELMAPUIVARBPROC
#endif
typedef void  (*PFNGLGETNPIXELMAPUIVARBPROC)(GLenum map, GLsizei bufSize, GLuint *values);

#ifdef glGetnPixelMapusvARB
#undef glGetnPixelMapusvARB
#endif
#ifdef PFNGLGETNPIXELMAPUSVARBPROC
#undef PFNGLGETNPIXELMAPUSVARBPROC
#endif
typedef void  (*PFNGLGETNPIXELMAPUSVARBPROC)(GLenum map, GLsizei bufSize, GLushort *values);

#ifdef glGetnPolygonStippleARB
#undef glGetnPolygonStippleARB
#endif
#ifdef PFNGLGETNPOLYGONSTIPPLEARBPROC
#undef PFNGLGETNPOLYGONSTIPPLEARBPROC
#endif
typedef void  (*PFNGLGETNPOLYGONSTIPPLEARBPROC)(GLsizei bufSize, GLubyte *pattern);

#ifdef glGetnColorTableARB
#undef glGetnColorTableARB
#endif
#ifdef PFNGLGETNCOLORTABLEARBPROC
#undef PFNGLGETNCOLORTABLEARBPROC
#endif
typedef void  (*PFNGLGETNCOLORTABLEARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);

#ifdef glGetnConvolutionFilterARB
#undef glGetnConvolutionFilterARB
#endif
#ifdef PFNGLGETNCONVOLUTIONFILTERARBPROC
#undef PFNGLGETNCONVOLUTIONFILTERARBPROC
#endif
typedef void  (*PFNGLGETNCONVOLUTIONFILTERARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);

#ifdef glGetnSeparableFilterARB
#undef glGetnSeparableFilterARB
#endif
#ifdef PFNGLGETNSEPARABLEFILTERARBPROC
#undef PFNGLGETNSEPARABLEFILTERARBPROC
#endif
typedef void  (*PFNGLGETNSEPARABLEFILTERARBPROC)(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);

#ifdef glGetnHistogramARB
#undef glGetnHistogramARB
#endif
#ifdef PFNGLGETNHISTOGRAMARBPROC
#undef PFNGLGETNHISTOGRAMARBPROC
#endif
typedef void  (*PFNGLGETNHISTOGRAMARBPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);

#ifdef glGetnMinmaxARB
#undef glGetnMinmaxARB
#endif
#ifdef PFNGLGETNMINMAXARBPROC
#undef PFNGLGETNMINMAXARBPROC
#endif
typedef void  (*PFNGLGETNMINMAXARBPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);

#ifndef GL_ARB_robustness_isolation
#define GL_ARB_robustness_isolation 1
#endif

#ifndef GL_ARB_sample_shading
#define GL_ARB_sample_shading 1
#endif

#ifdef glMinSampleShadingARB
#undef glMinSampleShadingARB
#endif
#ifdef PFNGLMINSAMPLESHADINGARBPROC
#undef PFNGLMINSAMPLESHADINGARBPROC
#endif
typedef void  (*PFNGLMINSAMPLESHADINGARBPROC)(GLfloat value);

#ifndef GL_SAMPLE_SHADING_ARB
#define GL_SAMPLE_SHADING_ARB 0x8C36
#endif

#ifndef GL_MIN_SAMPLE_SHADING_VALUE_ARB
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
#endif

#ifndef GL_ARB_sampler_objects
#define GL_ARB_sampler_objects 1
#endif

#ifdef glGenSamplers
#undef glGenSamplers
#endif
#ifdef PFNGLGENSAMPLERSPROC
#undef PFNGLGENSAMPLERSPROC
#endif
typedef void  (*PFNGLGENSAMPLERSPROC)(GLsizei count, GLuint *samplers);

#ifdef glDeleteSamplers
#undef glDeleteSamplers
#endif
#ifdef PFNGLDELETESAMPLERSPROC
#undef PFNGLDELETESAMPLERSPROC
#endif
typedef void  (*PFNGLDELETESAMPLERSPROC)(GLsizei count, const GLuint *samplers);

#ifdef glIsSampler
#undef glIsSampler
#endif
#ifdef PFNGLISSAMPLERPROC
#undef PFNGLISSAMPLERPROC
#endif
typedef GLboolean  (*PFNGLISSAMPLERPROC)(GLuint sampler);

#ifdef glBindSampler
#undef glBindSampler
#endif
#ifdef PFNGLBINDSAMPLERPROC
#undef PFNGLBINDSAMPLERPROC
#endif
typedef void  (*PFNGLBINDSAMPLERPROC)(GLuint unit, GLuint sampler);

#ifdef glSamplerParameteri
#undef glSamplerParameteri
#endif
#ifdef PFNGLSAMPLERPARAMETERIPROC
#undef PFNGLSAMPLERPARAMETERIPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler, GLenum pname, GLint param);

#ifdef glSamplerParameteriv
#undef glSamplerParameteriv
#endif
#ifdef PFNGLSAMPLERPARAMETERIVPROC
#undef PFNGLSAMPLERPARAMETERIVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, const GLint *param);

#ifdef glSamplerParameterf
#undef glSamplerParameterf
#endif
#ifdef PFNGLSAMPLERPARAMETERFPROC
#undef PFNGLSAMPLERPARAMETERFPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler, GLenum pname, GLfloat param);

#ifdef glSamplerParameterfv
#undef glSamplerParameterfv
#endif
#ifdef PFNGLSAMPLERPARAMETERFVPROC
#undef PFNGLSAMPLERPARAMETERFVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, const GLfloat *param);

#ifdef glSamplerParameterIiv
#undef glSamplerParameterIiv
#endif
#ifdef PFNGLSAMPLERPARAMETERIIVPROC
#undef PFNGLSAMPLERPARAMETERIIVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, const GLint *param);

#ifdef glSamplerParameterIuiv
#undef glSamplerParameterIuiv
#endif
#ifdef PFNGLSAMPLERPARAMETERIUIVPROC
#undef PFNGLSAMPLERPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, const GLuint *param);

#ifdef glGetSamplerParameteriv
#undef glGetSamplerParameteriv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIVPROC
#undef PFNGLGETSAMPLERPARAMETERIVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler, GLenum pname, GLint *params);

#ifdef glGetSamplerParameterIiv
#undef glGetSamplerParameterIiv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIIVPROC
#undef PFNGLGETSAMPLERPARAMETERIIVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler, GLenum pname, GLint *params);

#ifdef glGetSamplerParameterfv
#undef glGetSamplerParameterfv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERFVPROC
#undef PFNGLGETSAMPLERPARAMETERFVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler, GLenum pname, GLfloat *params);

#ifdef glGetSamplerParameterIuiv
#undef glGetSamplerParameterIuiv
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIUIVPROC
#undef PFNGLGETSAMPLERPARAMETERIUIVPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler, GLenum pname, GLuint *params);

#ifndef GL_SAMPLER_BINDING
#define GL_SAMPLER_BINDING 0x8919
#endif

#ifndef GL_ARB_seamless_cube_map
#define GL_ARB_seamless_cube_map 1
#endif

#ifndef GL_TEXTURE_CUBE_MAP_SEAMLESS
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#endif

#ifndef GL_ARB_seamless_cubemap_per_texture
#define GL_ARB_seamless_cubemap_per_texture 1
#endif

#ifndef GL_TEXTURE_CUBE_MAP_SEAMLESS
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#endif

#ifndef GL_ARB_separate_shader_objects
#define GL_ARB_separate_shader_objects 1
#endif

#ifdef glUseProgramStages
#undef glUseProgramStages
#endif
#ifdef PFNGLUSEPROGRAMSTAGESPROC
#undef PFNGLUSEPROGRAMSTAGESPROC
#endif
typedef void  (*PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline, GLbitfield stages, GLuint program);

#ifdef glActiveShaderProgram
#undef glActiveShaderProgram
#endif
#ifdef PFNGLACTIVESHADERPROGRAMPROC
#undef PFNGLACTIVESHADERPROGRAMPROC
#endif
typedef void  (*PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline, GLuint program);

#ifdef glCreateShaderProgramv
#undef glCreateShaderProgramv
#endif
#ifdef PFNGLCREATESHADERPROGRAMVPROC
#undef PFNGLCREATESHADERPROGRAMVPROC
#endif
typedef GLuint  (*PFNGLCREATESHADERPROGRAMVPROC)(GLenum type, GLsizei count, const GLchar *const*strings);

#ifdef glBindProgramPipeline
#undef glBindProgramPipeline
#endif
#ifdef PFNGLBINDPROGRAMPIPELINEPROC
#undef PFNGLBINDPROGRAMPIPELINEPROC
#endif
typedef void  (*PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glDeleteProgramPipelines
#undef glDeleteProgramPipelines
#endif
#ifdef PFNGLDELETEPROGRAMPIPELINESPROC
#undef PFNGLDELETEPROGRAMPIPELINESPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n, const GLuint *pipelines);

#ifdef glGenProgramPipelines
#undef glGenProgramPipelines
#endif
#ifdef PFNGLGENPROGRAMPIPELINESPROC
#undef PFNGLGENPROGRAMPIPELINESPROC
#endif
typedef void  (*PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n, GLuint *pipelines);

#ifdef glIsProgramPipeline
#undef glIsProgramPipeline
#endif
#ifdef PFNGLISPROGRAMPIPELINEPROC
#undef PFNGLISPROGRAMPIPELINEPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glGetProgramPipelineiv
#undef glGetProgramPipelineiv
#endif
#ifdef PFNGLGETPROGRAMPIPELINEIVPROC
#undef PFNGLGETPROGRAMPIPELINEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline, GLenum pname, GLint *params);

#ifdef glProgramUniform1i
#undef glProgramUniform1i
#endif
#ifdef PFNGLPROGRAMUNIFORM1IPROC
#undef PFNGLPROGRAMUNIFORM1IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IPROC)(GLuint program, GLint location, GLint v0);

#ifdef glProgramUniform1iv
#undef glProgramUniform1iv
#endif
#ifdef PFNGLPROGRAMUNIFORM1IVPROC
#undef PFNGLPROGRAMUNIFORM1IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform1f
#undef glProgramUniform1f
#endif
#ifdef PFNGLPROGRAMUNIFORM1FPROC
#undef PFNGLPROGRAMUNIFORM1FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FPROC)(GLuint program, GLint location, GLfloat v0);

#ifdef glProgramUniform1fv
#undef glProgramUniform1fv
#endif
#ifdef PFNGLPROGRAMUNIFORM1FVPROC
#undef PFNGLPROGRAMUNIFORM1FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform1d
#undef glProgramUniform1d
#endif
#ifdef PFNGLPROGRAMUNIFORM1DPROC
#undef PFNGLPROGRAMUNIFORM1DPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1DPROC)(GLuint program, GLint location, GLdouble v0);

#ifdef glProgramUniform1dv
#undef glProgramUniform1dv
#endif
#ifdef PFNGLPROGRAMUNIFORM1DVPROC
#undef PFNGLPROGRAMUNIFORM1DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform1ui
#undef glProgramUniform1ui
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIPROC
#undef PFNGLPROGRAMUNIFORM1UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program, GLint location, GLuint v0);

#ifdef glProgramUniform1uiv
#undef glProgramUniform1uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIVPROC
#undef PFNGLPROGRAMUNIFORM1UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform2i
#undef glProgramUniform2i
#endif
#ifdef PFNGLPROGRAMUNIFORM2IPROC
#undef PFNGLPROGRAMUNIFORM2IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IPROC)(GLuint program, GLint location, GLint v0, GLint v1);

#ifdef glProgramUniform2iv
#undef glProgramUniform2iv
#endif
#ifdef PFNGLPROGRAMUNIFORM2IVPROC
#undef PFNGLPROGRAMUNIFORM2IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform2f
#undef glProgramUniform2f
#endif
#ifdef PFNGLPROGRAMUNIFORM2FPROC
#undef PFNGLPROGRAMUNIFORM2FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);

#ifdef glProgramUniform2fv
#undef glProgramUniform2fv
#endif
#ifdef PFNGLPROGRAMUNIFORM2FVPROC
#undef PFNGLPROGRAMUNIFORM2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform2d
#undef glProgramUniform2d
#endif
#ifdef PFNGLPROGRAMUNIFORM2DPROC
#undef PFNGLPROGRAMUNIFORM2DPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1);

#ifdef glProgramUniform2dv
#undef glProgramUniform2dv
#endif
#ifdef PFNGLPROGRAMUNIFORM2DVPROC
#undef PFNGLPROGRAMUNIFORM2DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform2ui
#undef glProgramUniform2ui
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIPROC
#undef PFNGLPROGRAMUNIFORM2UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);

#ifdef glProgramUniform2uiv
#undef glProgramUniform2uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIVPROC
#undef PFNGLPROGRAMUNIFORM2UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform3i
#undef glProgramUniform3i
#endif
#ifdef PFNGLPROGRAMUNIFORM3IPROC
#undef PFNGLPROGRAMUNIFORM3IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);

#ifdef glProgramUniform3iv
#undef glProgramUniform3iv
#endif
#ifdef PFNGLPROGRAMUNIFORM3IVPROC
#undef PFNGLPROGRAMUNIFORM3IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform3f
#undef glProgramUniform3f
#endif
#ifdef PFNGLPROGRAMUNIFORM3FPROC
#undef PFNGLPROGRAMUNIFORM3FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);

#ifdef glProgramUniform3fv
#undef glProgramUniform3fv
#endif
#ifdef PFNGLPROGRAMUNIFORM3FVPROC
#undef PFNGLPROGRAMUNIFORM3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform3d
#undef glProgramUniform3d
#endif
#ifdef PFNGLPROGRAMUNIFORM3DPROC
#undef PFNGLPROGRAMUNIFORM3DPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);

#ifdef glProgramUniform3dv
#undef glProgramUniform3dv
#endif
#ifdef PFNGLPROGRAMUNIFORM3DVPROC
#undef PFNGLPROGRAMUNIFORM3DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform3ui
#undef glProgramUniform3ui
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIPROC
#undef PFNGLPROGRAMUNIFORM3UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);

#ifdef glProgramUniform3uiv
#undef glProgramUniform3uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIVPROC
#undef PFNGLPROGRAMUNIFORM3UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform4i
#undef glProgramUniform4i
#endif
#ifdef PFNGLPROGRAMUNIFORM4IPROC
#undef PFNGLPROGRAMUNIFORM4IPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);

#ifdef glProgramUniform4iv
#undef glProgramUniform4iv
#endif
#ifdef PFNGLPROGRAMUNIFORM4IVPROC
#undef PFNGLPROGRAMUNIFORM4IVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform4f
#undef glProgramUniform4f
#endif
#ifdef PFNGLPROGRAMUNIFORM4FPROC
#undef PFNGLPROGRAMUNIFORM4FPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

#ifdef glProgramUniform4fv
#undef glProgramUniform4fv
#endif
#ifdef PFNGLPROGRAMUNIFORM4FVPROC
#undef PFNGLPROGRAMUNIFORM4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform4d
#undef glProgramUniform4d
#endif
#ifdef PFNGLPROGRAMUNIFORM4DPROC
#undef PFNGLPROGRAMUNIFORM4DPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4DPROC)(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);

#ifdef glProgramUniform4dv
#undef glProgramUniform4dv
#endif
#ifdef PFNGLPROGRAMUNIFORM4DVPROC
#undef PFNGLPROGRAMUNIFORM4DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform4ui
#undef glProgramUniform4ui
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIPROC
#undef PFNGLPROGRAMUNIFORM4UIPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

#ifdef glProgramUniform4uiv
#undef glProgramUniform4uiv
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIVPROC
#undef PFNGLPROGRAMUNIFORM4UIVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniformMatrix2fv
#undef glProgramUniformMatrix2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3fv
#undef glProgramUniformMatrix3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4fv
#undef glProgramUniformMatrix4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2dv
#undef glProgramUniformMatrix2dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3dv
#undef glProgramUniformMatrix3dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4dv
#undef glProgramUniformMatrix4dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix2x3fv
#undef glProgramUniformMatrix2x3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x2fv
#undef glProgramUniformMatrix3x2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x4fv
#undef glProgramUniformMatrix2x4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x2fv
#undef glProgramUniformMatrix4x2fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x4fv
#undef glProgramUniformMatrix3x4fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x3fv
#undef glProgramUniformMatrix4x3fv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x3dv
#undef glProgramUniformMatrix2x3dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3x2dv
#undef glProgramUniformMatrix3x2dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix2x4dv
#undef glProgramUniformMatrix2x4dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4x2dv
#undef glProgramUniformMatrix4x2dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3x4dv
#undef glProgramUniformMatrix3x4dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4x3dv
#undef glProgramUniformMatrix4x3dv
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glValidateProgramPipeline
#undef glValidateProgramPipeline
#endif
#ifdef PFNGLVALIDATEPROGRAMPIPELINEPROC
#undef PFNGLVALIDATEPROGRAMPIPELINEPROC
#endif
typedef void  (*PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);

#ifdef glGetProgramPipelineInfoLog
#undef glGetProgramPipelineInfoLog
#endif
#ifdef PFNGLGETPROGRAMPIPELINEINFOLOGPROC
#undef PFNGLGETPROGRAMPIPELINEINFOLOGPROC
#endif
typedef void  (*PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

#ifndef GL_VERTEX_SHADER_BIT
#define GL_VERTEX_SHADER_BIT 0x00000001
#endif

#ifndef GL_FRAGMENT_SHADER_BIT
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#endif

#ifndef GL_GEOMETRY_SHADER_BIT
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#endif

#ifndef GL_TESS_CONTROL_SHADER_BIT
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#endif

#ifndef GL_TESS_EVALUATION_SHADER_BIT
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#endif

#ifndef GL_ALL_SHADER_BITS
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#endif

#ifndef GL_PROGRAM_SEPARABLE
#define GL_PROGRAM_SEPARABLE 0x8258
#endif

#ifndef GL_ACTIVE_PROGRAM
#define GL_ACTIVE_PROGRAM 0x8259
#endif

#ifndef GL_PROGRAM_PIPELINE_BINDING
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#endif

#ifndef GL_ARB_shader_atomic_counters
#define GL_ARB_shader_atomic_counters 1
#endif

#ifdef glGetActiveAtomicCounterBufferiv
#undef glGetActiveAtomicCounterBufferiv
#endif
#ifdef PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
#undef PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
#endif
typedef void  (*PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);

#ifndef GL_ATOMIC_COUNTER_BUFFER
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_BINDING
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_START
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#endif

#ifndef GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#endif

#ifndef GL_MAX_VERTEX_ATOMIC_COUNTERS
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTERS
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#endif

#ifndef GL_MAX_FRAGMENT_ATOMIC_COUNTERS
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#endif

#ifndef GL_MAX_COMBINED_ATOMIC_COUNTERS
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#endif

#ifndef GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#endif

#ifndef GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#endif

#ifndef GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#endif

#ifndef GL_UNSIGNED_INT_ATOMIC_COUNTER
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#endif

#ifndef GL_ARB_shader_bit_encoding
#define GL_ARB_shader_bit_encoding 1
#endif

#ifndef GL_ARB_shader_draw_parameters
#define GL_ARB_shader_draw_parameters 1
#endif

#ifndef GL_ARB_shader_group_vote
#define GL_ARB_shader_group_vote 1
#endif

#ifndef GL_ARB_shader_image_load_store
#define GL_ARB_shader_image_load_store 1
#endif

#ifdef glBindImageTexture
#undef glBindImageTexture
#endif
#ifdef PFNGLBINDIMAGETEXTUREPROC
#undef PFNGLBINDIMAGETEXTUREPROC
#endif
typedef void  (*PFNGLBINDIMAGETEXTUREPROC)(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);

#ifdef glMemoryBarrier
#undef glMemoryBarrier
#endif
#ifdef PFNGLMEMORYBARRIERPROC
#undef PFNGLMEMORYBARRIERPROC
#endif
typedef void  (*PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);

#ifndef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#endif

#ifndef GL_ELEMENT_ARRAY_BARRIER_BIT
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#endif

#ifndef GL_UNIFORM_BARRIER_BIT
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#endif

#ifndef GL_TEXTURE_FETCH_BARRIER_BIT
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#endif

#ifndef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#endif

#ifndef GL_COMMAND_BARRIER_BIT
#define GL_COMMAND_BARRIER_BIT 0x00000040
#endif

#ifndef GL_PIXEL_BUFFER_BARRIER_BIT
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#endif

#ifndef GL_TEXTURE_UPDATE_BARRIER_BIT
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#endif

#ifndef GL_BUFFER_UPDATE_BARRIER_BIT
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#endif

#ifndef GL_FRAMEBUFFER_BARRIER_BIT
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BARRIER_BIT
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#endif

#ifndef GL_ATOMIC_COUNTER_BARRIER_BIT
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#endif

#ifndef GL_ALL_BARRIER_BITS
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#endif

#ifndef GL_MAX_IMAGE_UNITS
#define GL_MAX_IMAGE_UNITS 0x8F38
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#endif

#ifndef GL_IMAGE_BINDING_NAME
#define GL_IMAGE_BINDING_NAME 0x8F3A
#endif

#ifndef GL_IMAGE_BINDING_LEVEL
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#endif

#ifndef GL_IMAGE_BINDING_LAYERED
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#endif

#ifndef GL_IMAGE_BINDING_LAYER
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#endif

#ifndef GL_IMAGE_BINDING_ACCESS
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#endif

#ifndef GL_IMAGE_1D
#define GL_IMAGE_1D 0x904C
#endif

#ifndef GL_IMAGE_2D
#define GL_IMAGE_2D 0x904D
#endif

#ifndef GL_IMAGE_3D
#define GL_IMAGE_3D 0x904E
#endif

#ifndef GL_IMAGE_2D_RECT
#define GL_IMAGE_2D_RECT 0x904F
#endif

#ifndef GL_IMAGE_CUBE
#define GL_IMAGE_CUBE 0x9050
#endif

#ifndef GL_IMAGE_BUFFER
#define GL_IMAGE_BUFFER 0x9051
#endif

#ifndef GL_IMAGE_1D_ARRAY
#define GL_IMAGE_1D_ARRAY 0x9052
#endif

#ifndef GL_IMAGE_2D_ARRAY
#define GL_IMAGE_2D_ARRAY 0x9053
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#endif

#ifndef GL_INT_IMAGE_1D
#define GL_INT_IMAGE_1D 0x9057
#endif

#ifndef GL_INT_IMAGE_2D
#define GL_INT_IMAGE_2D 0x9058
#endif

#ifndef GL_INT_IMAGE_3D
#define GL_INT_IMAGE_3D 0x9059
#endif

#ifndef GL_INT_IMAGE_2D_RECT
#define GL_INT_IMAGE_2D_RECT 0x905A
#endif

#ifndef GL_INT_IMAGE_CUBE
#define GL_INT_IMAGE_CUBE 0x905B
#endif

#ifndef GL_INT_IMAGE_BUFFER
#define GL_INT_IMAGE_BUFFER 0x905C
#endif

#ifndef GL_INT_IMAGE_1D_ARRAY
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#endif

#ifndef GL_INT_IMAGE_2D_ARRAY
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_3D
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_RECT
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#endif

#ifndef GL_MAX_IMAGE_SAMPLES
#define GL_MAX_IMAGE_SAMPLES 0x906D
#endif

#ifndef GL_IMAGE_BINDING_FORMAT
#define GL_IMAGE_BINDING_FORMAT 0x906E
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_TYPE
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#endif

#ifndef GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#endif

#ifndef GL_MAX_VERTEX_IMAGE_UNIFORMS
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#endif

#ifndef GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#endif

#ifndef GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#endif

#ifndef GL_MAX_GEOMETRY_IMAGE_UNIFORMS
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#endif

#ifndef GL_MAX_FRAGMENT_IMAGE_UNIFORMS
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNIFORMS
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#endif

#ifndef GL_ARB_shader_image_size
#define GL_ARB_shader_image_size 1
#endif

#ifndef GL_ARB_shader_objects
#define GL_ARB_shader_objects 1
#endif

#ifdef glDeleteObjectARB
#undef glDeleteObjectARB
#endif
#ifdef PFNGLDELETEOBJECTARBPROC
#undef PFNGLDELETEOBJECTARBPROC
#endif
typedef void  (*PFNGLDELETEOBJECTARBPROC)(GLhandleARB obj);

#ifdef glGetHandleARB
#undef glGetHandleARB
#endif
#ifdef PFNGLGETHANDLEARBPROC
#undef PFNGLGETHANDLEARBPROC
#endif
typedef GLhandleARB  (*PFNGLGETHANDLEARBPROC)(GLenum pname);

#ifdef glDetachObjectARB
#undef glDetachObjectARB
#endif
#ifdef PFNGLDETACHOBJECTARBPROC
#undef PFNGLDETACHOBJECTARBPROC
#endif
typedef void  (*PFNGLDETACHOBJECTARBPROC)(GLhandleARB containerObj, GLhandleARB attachedObj);

#ifdef glCreateShaderObjectARB
#undef glCreateShaderObjectARB
#endif
#ifdef PFNGLCREATESHADEROBJECTARBPROC
#undef PFNGLCREATESHADEROBJECTARBPROC
#endif
typedef GLhandleARB  (*PFNGLCREATESHADEROBJECTARBPROC)(GLenum shaderType);

#ifdef glShaderSourceARB
#undef glShaderSourceARB
#endif
#ifdef PFNGLSHADERSOURCEARBPROC
#undef PFNGLSHADERSOURCEARBPROC
#endif
typedef void  (*PFNGLSHADERSOURCEARBPROC)(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);

#ifdef glCompileShaderARB
#undef glCompileShaderARB
#endif
#ifdef PFNGLCOMPILESHADERARBPROC
#undef PFNGLCOMPILESHADERARBPROC
#endif
typedef void  (*PFNGLCOMPILESHADERARBPROC)(GLhandleARB shaderObj);

#ifdef glCreateProgramObjectARB
#undef glCreateProgramObjectARB
#endif
#ifdef PFNGLCREATEPROGRAMOBJECTARBPROC
#undef PFNGLCREATEPROGRAMOBJECTARBPROC
#endif
typedef GLhandleARB  (*PFNGLCREATEPROGRAMOBJECTARBPROC)(void);

#ifdef glAttachObjectARB
#undef glAttachObjectARB
#endif
#ifdef PFNGLATTACHOBJECTARBPROC
#undef PFNGLATTACHOBJECTARBPROC
#endif
typedef void  (*PFNGLATTACHOBJECTARBPROC)(GLhandleARB containerObj, GLhandleARB obj);

#ifdef glLinkProgramARB
#undef glLinkProgramARB
#endif
#ifdef PFNGLLINKPROGRAMARBPROC
#undef PFNGLLINKPROGRAMARBPROC
#endif
typedef void  (*PFNGLLINKPROGRAMARBPROC)(GLhandleARB programObj);

#ifdef glUseProgramObjectARB
#undef glUseProgramObjectARB
#endif
#ifdef PFNGLUSEPROGRAMOBJECTARBPROC
#undef PFNGLUSEPROGRAMOBJECTARBPROC
#endif
typedef void  (*PFNGLUSEPROGRAMOBJECTARBPROC)(GLhandleARB programObj);

#ifdef glValidateProgramARB
#undef glValidateProgramARB
#endif
#ifdef PFNGLVALIDATEPROGRAMARBPROC
#undef PFNGLVALIDATEPROGRAMARBPROC
#endif
typedef void  (*PFNGLVALIDATEPROGRAMARBPROC)(GLhandleARB programObj);

#ifdef glUniform1fARB
#undef glUniform1fARB
#endif
#ifdef PFNGLUNIFORM1FARBPROC
#undef PFNGLUNIFORM1FARBPROC
#endif
typedef void  (*PFNGLUNIFORM1FARBPROC)(GLint location, GLfloat v0);

#ifdef glUniform2fARB
#undef glUniform2fARB
#endif
#ifdef PFNGLUNIFORM2FARBPROC
#undef PFNGLUNIFORM2FARBPROC
#endif
typedef void  (*PFNGLUNIFORM2FARBPROC)(GLint location, GLfloat v0, GLfloat v1);

#ifdef glUniform3fARB
#undef glUniform3fARB
#endif
#ifdef PFNGLUNIFORM3FARBPROC
#undef PFNGLUNIFORM3FARBPROC
#endif
typedef void  (*PFNGLUNIFORM3FARBPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);

#ifdef glUniform4fARB
#undef glUniform4fARB
#endif
#ifdef PFNGLUNIFORM4FARBPROC
#undef PFNGLUNIFORM4FARBPROC
#endif
typedef void  (*PFNGLUNIFORM4FARBPROC)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

#ifdef glUniform1iARB
#undef glUniform1iARB
#endif
#ifdef PFNGLUNIFORM1IARBPROC
#undef PFNGLUNIFORM1IARBPROC
#endif
typedef void  (*PFNGLUNIFORM1IARBPROC)(GLint location, GLint v0);

#ifdef glUniform2iARB
#undef glUniform2iARB
#endif
#ifdef PFNGLUNIFORM2IARBPROC
#undef PFNGLUNIFORM2IARBPROC
#endif
typedef void  (*PFNGLUNIFORM2IARBPROC)(GLint location, GLint v0, GLint v1);

#ifdef glUniform3iARB
#undef glUniform3iARB
#endif
#ifdef PFNGLUNIFORM3IARBPROC
#undef PFNGLUNIFORM3IARBPROC
#endif
typedef void  (*PFNGLUNIFORM3IARBPROC)(GLint location, GLint v0, GLint v1, GLint v2);

#ifdef glUniform4iARB
#undef glUniform4iARB
#endif
#ifdef PFNGLUNIFORM4IARBPROC
#undef PFNGLUNIFORM4IARBPROC
#endif
typedef void  (*PFNGLUNIFORM4IARBPROC)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);

#ifdef glUniform1fvARB
#undef glUniform1fvARB
#endif
#ifdef PFNGLUNIFORM1FVARBPROC
#undef PFNGLUNIFORM1FVARBPROC
#endif
typedef void  (*PFNGLUNIFORM1FVARBPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform2fvARB
#undef glUniform2fvARB
#endif
#ifdef PFNGLUNIFORM2FVARBPROC
#undef PFNGLUNIFORM2FVARBPROC
#endif
typedef void  (*PFNGLUNIFORM2FVARBPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform3fvARB
#undef glUniform3fvARB
#endif
#ifdef PFNGLUNIFORM3FVARBPROC
#undef PFNGLUNIFORM3FVARBPROC
#endif
typedef void  (*PFNGLUNIFORM3FVARBPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform4fvARB
#undef glUniform4fvARB
#endif
#ifdef PFNGLUNIFORM4FVARBPROC
#undef PFNGLUNIFORM4FVARBPROC
#endif
typedef void  (*PFNGLUNIFORM4FVARBPROC)(GLint location, GLsizei count, const GLfloat *value);

#ifdef glUniform1ivARB
#undef glUniform1ivARB
#endif
#ifdef PFNGLUNIFORM1IVARBPROC
#undef PFNGLUNIFORM1IVARBPROC
#endif
typedef void  (*PFNGLUNIFORM1IVARBPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform2ivARB
#undef glUniform2ivARB
#endif
#ifdef PFNGLUNIFORM2IVARBPROC
#undef PFNGLUNIFORM2IVARBPROC
#endif
typedef void  (*PFNGLUNIFORM2IVARBPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform3ivARB
#undef glUniform3ivARB
#endif
#ifdef PFNGLUNIFORM3IVARBPROC
#undef PFNGLUNIFORM3IVARBPROC
#endif
typedef void  (*PFNGLUNIFORM3IVARBPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniform4ivARB
#undef glUniform4ivARB
#endif
#ifdef PFNGLUNIFORM4IVARBPROC
#undef PFNGLUNIFORM4IVARBPROC
#endif
typedef void  (*PFNGLUNIFORM4IVARBPROC)(GLint location, GLsizei count, const GLint *value);

#ifdef glUniformMatrix2fvARB
#undef glUniformMatrix2fvARB
#endif
#ifdef PFNGLUNIFORMMATRIX2FVARBPROC
#undef PFNGLUNIFORMMATRIX2FVARBPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3fvARB
#undef glUniformMatrix3fvARB
#endif
#ifdef PFNGLUNIFORMMATRIX3FVARBPROC
#undef PFNGLUNIFORMMATRIX3FVARBPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4fvARB
#undef glUniformMatrix4fvARB
#endif
#ifdef PFNGLUNIFORMMATRIX4FVARBPROC
#undef PFNGLUNIFORMMATRIX4FVARBPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4FVARBPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glGetObjectParameterfvARB
#undef glGetObjectParameterfvARB
#endif
#ifdef PFNGLGETOBJECTPARAMETERFVARBPROC
#undef PFNGLGETOBJECTPARAMETERFVARBPROC
#endif
typedef void  (*PFNGLGETOBJECTPARAMETERFVARBPROC)(GLhandleARB obj, GLenum pname, GLfloat *params);

#ifdef glGetObjectParameterivARB
#undef glGetObjectParameterivARB
#endif
#ifdef PFNGLGETOBJECTPARAMETERIVARBPROC
#undef PFNGLGETOBJECTPARAMETERIVARBPROC
#endif
typedef void  (*PFNGLGETOBJECTPARAMETERIVARBPROC)(GLhandleARB obj, GLenum pname, GLint *params);

#ifdef glGetInfoLogARB
#undef glGetInfoLogARB
#endif
#ifdef PFNGLGETINFOLOGARBPROC
#undef PFNGLGETINFOLOGARBPROC
#endif
typedef void  (*PFNGLGETINFOLOGARBPROC)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);

#ifdef glGetAttachedObjectsARB
#undef glGetAttachedObjectsARB
#endif
#ifdef PFNGLGETATTACHEDOBJECTSARBPROC
#undef PFNGLGETATTACHEDOBJECTSARBPROC
#endif
typedef void  (*PFNGLGETATTACHEDOBJECTSARBPROC)(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);

#ifdef glGetUniformLocationARB
#undef glGetUniformLocationARB
#endif
#ifdef PFNGLGETUNIFORMLOCATIONARBPROC
#undef PFNGLGETUNIFORMLOCATIONARBPROC
#endif
typedef GLint  (*PFNGLGETUNIFORMLOCATIONARBPROC)(GLhandleARB programObj, const GLcharARB *name);

#ifdef glGetActiveUniformARB
#undef glGetActiveUniformARB
#endif
#ifdef PFNGLGETACTIVEUNIFORMARBPROC
#undef PFNGLGETACTIVEUNIFORMARBPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMARBPROC)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);

#ifdef glGetUniformfvARB
#undef glGetUniformfvARB
#endif
#ifdef PFNGLGETUNIFORMFVARBPROC
#undef PFNGLGETUNIFORMFVARBPROC
#endif
typedef void  (*PFNGLGETUNIFORMFVARBPROC)(GLhandleARB programObj, GLint location, GLfloat *params);

#ifdef glGetUniformivARB
#undef glGetUniformivARB
#endif
#ifdef PFNGLGETUNIFORMIVARBPROC
#undef PFNGLGETUNIFORMIVARBPROC
#endif
typedef void  (*PFNGLGETUNIFORMIVARBPROC)(GLhandleARB programObj, GLint location, GLint *params);

#ifdef glGetShaderSourceARB
#undef glGetShaderSourceARB
#endif
#ifdef PFNGLGETSHADERSOURCEARBPROC
#undef PFNGLGETSHADERSOURCEARBPROC
#endif
typedef void  (*PFNGLGETSHADERSOURCEARBPROC)(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);

#ifndef GL_PROGRAM_OBJECT_ARB
#define GL_PROGRAM_OBJECT_ARB 0x8B40
#endif

#ifndef GL_SHADER_OBJECT_ARB
#define GL_SHADER_OBJECT_ARB 0x8B48
#endif

#ifndef GL_OBJECT_TYPE_ARB
#define GL_OBJECT_TYPE_ARB 0x8B4E
#endif

#ifndef GL_OBJECT_SUBTYPE_ARB
#define GL_OBJECT_SUBTYPE_ARB 0x8B4F
#endif

#ifndef GL_FLOAT_VEC2_ARB
#define GL_FLOAT_VEC2_ARB 0x8B50
#endif

#ifndef GL_FLOAT_VEC3_ARB
#define GL_FLOAT_VEC3_ARB 0x8B51
#endif

#ifndef GL_FLOAT_VEC4_ARB
#define GL_FLOAT_VEC4_ARB 0x8B52
#endif

#ifndef GL_INT_VEC2_ARB
#define GL_INT_VEC2_ARB 0x8B53
#endif

#ifndef GL_INT_VEC3_ARB
#define GL_INT_VEC3_ARB 0x8B54
#endif

#ifndef GL_INT_VEC4_ARB
#define GL_INT_VEC4_ARB 0x8B55
#endif

#ifndef GL_BOOL_ARB
#define GL_BOOL_ARB 0x8B56
#endif

#ifndef GL_BOOL_VEC2_ARB
#define GL_BOOL_VEC2_ARB 0x8B57
#endif

#ifndef GL_BOOL_VEC3_ARB
#define GL_BOOL_VEC3_ARB 0x8B58
#endif

#ifndef GL_BOOL_VEC4_ARB
#define GL_BOOL_VEC4_ARB 0x8B59
#endif

#ifndef GL_FLOAT_MAT2_ARB
#define GL_FLOAT_MAT2_ARB 0x8B5A
#endif

#ifndef GL_FLOAT_MAT3_ARB
#define GL_FLOAT_MAT3_ARB 0x8B5B
#endif

#ifndef GL_FLOAT_MAT4_ARB
#define GL_FLOAT_MAT4_ARB 0x8B5C
#endif

#ifndef GL_SAMPLER_1D_ARB
#define GL_SAMPLER_1D_ARB 0x8B5D
#endif

#ifndef GL_SAMPLER_2D_ARB
#define GL_SAMPLER_2D_ARB 0x8B5E
#endif

#ifndef GL_SAMPLER_3D_ARB
#define GL_SAMPLER_3D_ARB 0x8B5F
#endif

#ifndef GL_SAMPLER_CUBE_ARB
#define GL_SAMPLER_CUBE_ARB 0x8B60
#endif

#ifndef GL_SAMPLER_1D_SHADOW_ARB
#define GL_SAMPLER_1D_SHADOW_ARB 0x8B61
#endif

#ifndef GL_SAMPLER_2D_SHADOW_ARB
#define GL_SAMPLER_2D_SHADOW_ARB 0x8B62
#endif

#ifndef GL_SAMPLER_2D_RECT_ARB
#define GL_SAMPLER_2D_RECT_ARB 0x8B63
#endif

#ifndef GL_SAMPLER_2D_RECT_SHADOW_ARB
#define GL_SAMPLER_2D_RECT_SHADOW_ARB 0x8B64
#endif

#ifndef GL_OBJECT_DELETE_STATUS_ARB
#define GL_OBJECT_DELETE_STATUS_ARB 0x8B80
#endif

#ifndef GL_OBJECT_COMPILE_STATUS_ARB
#define GL_OBJECT_COMPILE_STATUS_ARB 0x8B81
#endif

#ifndef GL_OBJECT_LINK_STATUS_ARB
#define GL_OBJECT_LINK_STATUS_ARB 0x8B82
#endif

#ifndef GL_OBJECT_VALIDATE_STATUS_ARB
#define GL_OBJECT_VALIDATE_STATUS_ARB 0x8B83
#endif

#ifndef GL_OBJECT_INFO_LOG_LENGTH_ARB
#define GL_OBJECT_INFO_LOG_LENGTH_ARB 0x8B84
#endif

#ifndef GL_OBJECT_ATTACHED_OBJECTS_ARB
#define GL_OBJECT_ATTACHED_OBJECTS_ARB 0x8B85
#endif

#ifndef GL_OBJECT_ACTIVE_UNIFORMS_ARB
#define GL_OBJECT_ACTIVE_UNIFORMS_ARB 0x8B86
#endif

#ifndef GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB
#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 0x8B87
#endif

#ifndef GL_OBJECT_SHADER_SOURCE_LENGTH_ARB
#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 0x8B88
#endif

#ifndef GL_ARB_shader_precision
#define GL_ARB_shader_precision 1
#endif

#ifndef GL_ARB_shader_stencil_export
#define GL_ARB_shader_stencil_export 1
#endif

#ifndef GL_ARB_shader_storage_buffer_object
#define GL_ARB_shader_storage_buffer_object 1
#endif

#ifdef glShaderStorageBlockBinding
#undef glShaderStorageBlockBinding
#endif
#ifdef PFNGLSHADERSTORAGEBLOCKBINDINGPROC
#undef PFNGLSHADERSTORAGEBLOCKBINDINGPROC
#endif
typedef void  (*PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);

#ifndef GL_SHADER_STORAGE_BUFFER
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_BINDING
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_START
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_SIZE
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#endif

#ifndef GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#endif

#ifndef GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#endif

#ifndef GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#endif

#ifndef GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#endif

#ifndef GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#endif

#ifndef GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#endif

#ifndef GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#endif

#ifndef GL_MAX_SHADER_STORAGE_BLOCK_SIZE
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#endif

#ifndef GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#endif

#ifndef GL_SHADER_STORAGE_BARRIER_BIT
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#endif

#ifndef GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#endif

#ifndef GL_ARB_shader_subroutine
#define GL_ARB_shader_subroutine 1
#endif

#ifdef glGetSubroutineUniformLocation
#undef glGetSubroutineUniformLocation
#endif
#ifdef PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
#undef PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
#endif
typedef GLint  (*PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program, GLenum shadertype, const GLchar *name);

#ifdef glGetSubroutineIndex
#undef glGetSubroutineIndex
#endif
#ifdef PFNGLGETSUBROUTINEINDEXPROC
#undef PFNGLGETSUBROUTINEINDEXPROC
#endif
typedef GLuint  (*PFNGLGETSUBROUTINEINDEXPROC)(GLuint program, GLenum shadertype, const GLchar *name);

#ifdef glGetActiveSubroutineUniformiv
#undef glGetActiveSubroutineUniformiv
#endif
#ifdef PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
#undef PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
#endif
typedef void  (*PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);

#ifdef glGetActiveSubroutineUniformName
#undef glGetActiveSubroutineUniformName
#endif
#ifdef PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
#undef PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
#endif
typedef void  (*PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);

#ifdef glGetActiveSubroutineName
#undef glGetActiveSubroutineName
#endif
#ifdef PFNGLGETACTIVESUBROUTINENAMEPROC
#undef PFNGLGETACTIVESUBROUTINENAMEPROC
#endif
typedef void  (*PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);

#ifdef glUniformSubroutinesuiv
#undef glUniformSubroutinesuiv
#endif
#ifdef PFNGLUNIFORMSUBROUTINESUIVPROC
#undef PFNGLUNIFORMSUBROUTINESUIVPROC
#endif
typedef void  (*PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype, GLsizei count, const GLuint *indices);

#ifdef glGetUniformSubroutineuiv
#undef glGetUniformSubroutineuiv
#endif
#ifdef PFNGLGETUNIFORMSUBROUTINEUIVPROC
#undef PFNGLGETUNIFORMSUBROUTINEUIVPROC
#endif
typedef void  (*PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype, GLint location, GLuint *params);

#ifdef glGetProgramStageiv
#undef glGetProgramStageiv
#endif
#ifdef PFNGLGETPROGRAMSTAGEIVPROC
#undef PFNGLGETPROGRAMSTAGEIVPROC
#endif
typedef void  (*PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program, GLenum shadertype, GLenum pname, GLint *values);

#ifndef GL_ACTIVE_SUBROUTINES
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORMS
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#endif

#ifndef GL_ACTIVE_SUBROUTINE_MAX_LENGTH
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#endif

#ifndef GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#endif

#ifndef GL_MAX_SUBROUTINES
#define GL_MAX_SUBROUTINES 0x8DE7
#endif

#ifndef GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#endif

#ifndef GL_NUM_COMPATIBLE_SUBROUTINES
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#endif

#ifndef GL_COMPATIBLE_SUBROUTINES
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#endif

#ifndef GL_UNIFORM_SIZE
#define GL_UNIFORM_SIZE 0x8A38
#endif

#ifndef GL_UNIFORM_NAME_LENGTH
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#endif

#ifndef GL_ARB_shader_texture_image_samples
#define GL_ARB_shader_texture_image_samples 1
#endif

#ifndef GL_ARB_shader_texture_lod
#define GL_ARB_shader_texture_lod 1
#endif

#ifndef GL_ARB_shading_language_100
#define GL_ARB_shading_language_100 1
#endif

#ifndef GL_SHADING_LANGUAGE_VERSION_ARB
#define GL_SHADING_LANGUAGE_VERSION_ARB 0x8B8C
#endif

#ifndef GL_ARB_shading_language_420pack
#define GL_ARB_shading_language_420pack 1
#endif

#ifndef GL_ARB_shading_language_include
#define GL_ARB_shading_language_include 1
#endif

#ifdef glNamedStringARB
#undef glNamedStringARB
#endif
#ifdef PFNGLNAMEDSTRINGARBPROC
#undef PFNGLNAMEDSTRINGARBPROC
#endif
typedef void  (*PFNGLNAMEDSTRINGARBPROC)(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);

#ifdef glDeleteNamedStringARB
#undef glDeleteNamedStringARB
#endif
#ifdef PFNGLDELETENAMEDSTRINGARBPROC
#undef PFNGLDELETENAMEDSTRINGARBPROC
#endif
typedef void  (*PFNGLDELETENAMEDSTRINGARBPROC)(GLint namelen, const GLchar *name);

#ifdef glCompileShaderIncludeARB
#undef glCompileShaderIncludeARB
#endif
#ifdef PFNGLCOMPILESHADERINCLUDEARBPROC
#undef PFNGLCOMPILESHADERINCLUDEARBPROC
#endif
typedef void  (*PFNGLCOMPILESHADERINCLUDEARBPROC)(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);

#ifdef glIsNamedStringARB
#undef glIsNamedStringARB
#endif
#ifdef PFNGLISNAMEDSTRINGARBPROC
#undef PFNGLISNAMEDSTRINGARBPROC
#endif
typedef GLboolean  (*PFNGLISNAMEDSTRINGARBPROC)(GLint namelen, const GLchar *name);

#ifdef glGetNamedStringARB
#undef glGetNamedStringARB
#endif
#ifdef PFNGLGETNAMEDSTRINGARBPROC
#undef PFNGLGETNAMEDSTRINGARBPROC
#endif
typedef void  (*PFNGLGETNAMEDSTRINGARBPROC)(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);

#ifdef glGetNamedStringivARB
#undef glGetNamedStringivARB
#endif
#ifdef PFNGLGETNAMEDSTRINGIVARBPROC
#undef PFNGLGETNAMEDSTRINGIVARBPROC
#endif
typedef void  (*PFNGLGETNAMEDSTRINGIVARBPROC)(GLint namelen, const GLchar *name, GLenum pname, GLint *params);

#ifndef GL_SHADER_INCLUDE_ARB
#define GL_SHADER_INCLUDE_ARB 0x8DAE
#endif

#ifndef GL_NAMED_STRING_LENGTH_ARB
#define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#endif

#ifndef GL_NAMED_STRING_TYPE_ARB
#define GL_NAMED_STRING_TYPE_ARB 0x8DEA
#endif

#ifndef GL_ARB_shading_language_packing
#define GL_ARB_shading_language_packing 1
#endif

#ifndef GL_ARB_shadow
#define GL_ARB_shadow 1
#endif

#ifndef GL_TEXTURE_COMPARE_MODE_ARB
#define GL_TEXTURE_COMPARE_MODE_ARB 0x884C
#endif

#ifndef GL_TEXTURE_COMPARE_FUNC_ARB
#define GL_TEXTURE_COMPARE_FUNC_ARB 0x884D
#endif

#ifndef GL_COMPARE_R_TO_TEXTURE_ARB
#define GL_COMPARE_R_TO_TEXTURE_ARB 0x884E
#endif

#ifndef GL_ARB_shadow_ambient
#define GL_ARB_shadow_ambient 1
#endif

#ifndef GL_TEXTURE_COMPARE_FAIL_VALUE_ARB
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
#endif

#ifndef GL_ARB_sparse_buffer
#define GL_ARB_sparse_buffer 1
#endif

#ifdef glBufferPageCommitmentARB
#undef glBufferPageCommitmentARB
#endif
#ifdef PFNGLBUFFERPAGECOMMITMENTARBPROC
#undef PFNGLBUFFERPAGECOMMITMENTARBPROC
#endif
typedef void  (*PFNGLBUFFERPAGECOMMITMENTARBPROC)(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);

#ifndef GL_SPARSE_STORAGE_BIT_ARB
#define GL_SPARSE_STORAGE_BIT_ARB 0x0400
#endif

#ifndef GL_SPARSE_BUFFER_PAGE_SIZE_ARB
#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB 0x82F8
#endif

#ifdef glNamedBufferPageCommitmentEXT
#undef glNamedBufferPageCommitmentEXT
#endif
#ifdef PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC
#undef PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);

#ifdef glNamedBufferPageCommitmentARB
#undef glNamedBufferPageCommitmentARB
#endif
#ifdef PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC
#undef PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);

#ifndef GL_ARB_sparse_texture
#define GL_ARB_sparse_texture 1
#endif

#ifdef glTexPageCommitmentARB
#undef glTexPageCommitmentARB
#endif
#ifdef PFNGLTEXPAGECOMMITMENTARBPROC
#undef PFNGLTEXPAGECOMMITMENTARBPROC
#endif
typedef void  (*PFNGLTEXPAGECOMMITMENTARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);

#ifndef GL_TEXTURE_SPARSE_ARB
#define GL_TEXTURE_SPARSE_ARB 0x91A6
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_INDEX_ARB
#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB 0x91A7
#endif

#ifndef GL_NUM_SPARSE_LEVELS_ARB
#define GL_NUM_SPARSE_LEVELS_ARB 0x91AA
#endif

#ifndef GL_NUM_VIRTUAL_PAGE_SIZES_ARB
#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB 0x91A8
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_X_ARB
#define GL_VIRTUAL_PAGE_SIZE_X_ARB 0x9195
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Y_ARB
#define GL_VIRTUAL_PAGE_SIZE_Y_ARB 0x9196
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Z_ARB
#define GL_VIRTUAL_PAGE_SIZE_Z_ARB 0x9197
#endif

#ifndef GL_MAX_SPARSE_TEXTURE_SIZE_ARB
#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB 0x9198
#endif

#ifndef GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199
#endif

#ifndef GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A
#endif

#ifndef GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9
#endif

#ifndef GL_ARB_stencil_texturing
#define GL_ARB_stencil_texturing 1
#endif

#ifndef GL_DEPTH_STENCIL_TEXTURE_MODE
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#endif

#ifndef GL_ARB_sync
#define GL_ARB_sync 1
#endif

#ifdef glFenceSync
#undef glFenceSync
#endif
#ifdef PFNGLFENCESYNCPROC
#undef PFNGLFENCESYNCPROC
#endif
typedef GLsync  (*PFNGLFENCESYNCPROC)(GLenum condition, GLbitfield flags);

#ifdef glIsSync
#undef glIsSync
#endif
#ifdef PFNGLISSYNCPROC
#undef PFNGLISSYNCPROC
#endif
typedef GLboolean  (*PFNGLISSYNCPROC)(GLsync sync);

#ifdef glDeleteSync
#undef glDeleteSync
#endif
#ifdef PFNGLDELETESYNCPROC
#undef PFNGLDELETESYNCPROC
#endif
typedef void  (*PFNGLDELETESYNCPROC)(GLsync sync);

#ifdef glClientWaitSync
#undef glClientWaitSync
#endif
#ifdef PFNGLCLIENTWAITSYNCPROC
#undef PFNGLCLIENTWAITSYNCPROC
#endif
typedef GLenum  (*PFNGLCLIENTWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

#ifdef glWaitSync
#undef glWaitSync
#endif
#ifdef PFNGLWAITSYNCPROC
#undef PFNGLWAITSYNCPROC
#endif
typedef void  (*PFNGLWAITSYNCPROC)(GLsync sync, GLbitfield flags, GLuint64 timeout);

#ifdef glGetInteger64v
#undef glGetInteger64v
#endif
#ifdef PFNGLGETINTEGER64VPROC
#undef PFNGLGETINTEGER64VPROC
#endif
typedef void  (*PFNGLGETINTEGER64VPROC)(GLenum pname, GLint64 *data);

#ifdef glGetSynciv
#undef glGetSynciv
#endif
#ifdef PFNGLGETSYNCIVPROC
#undef PFNGLGETSYNCIVPROC
#endif
typedef void  (*PFNGLGETSYNCIVPROC)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);

#ifndef GL_MAX_SERVER_WAIT_TIMEOUT
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#endif

#ifndef GL_OBJECT_TYPE
#define GL_OBJECT_TYPE 0x9112
#endif

#ifndef GL_SYNC_CONDITION
#define GL_SYNC_CONDITION 0x9113
#endif

#ifndef GL_SYNC_STATUS
#define GL_SYNC_STATUS 0x9114
#endif

#ifndef GL_SYNC_FLAGS
#define GL_SYNC_FLAGS 0x9115
#endif

#ifndef GL_SYNC_FENCE
#define GL_SYNC_FENCE 0x9116
#endif

#ifndef GL_SYNC_GPU_COMMANDS_COMPLETE
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#endif

#ifndef GL_UNSIGNALED
#define GL_UNSIGNALED 0x9118
#endif

#ifndef GL_SIGNALED
#define GL_SIGNALED 0x9119
#endif

#ifndef GL_ALREADY_SIGNALED
#define GL_ALREADY_SIGNALED 0x911A
#endif

#ifndef GL_TIMEOUT_EXPIRED
#define GL_TIMEOUT_EXPIRED 0x911B
#endif

#ifndef GL_CONDITION_SATISFIED
#define GL_CONDITION_SATISFIED 0x911C
#endif

#ifndef GL_WAIT_FAILED
#define GL_WAIT_FAILED 0x911D
#endif

#ifndef GL_SYNC_FLUSH_COMMANDS_BIT
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#endif

#ifndef GL_TIMEOUT_IGNORED
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFF
#endif

#ifndef GL_ARB_tessellation_shader
#define GL_ARB_tessellation_shader 1
#endif

#ifdef glPatchParameteri
#undef glPatchParameteri
#endif
#ifdef PFNGLPATCHPARAMETERIPROC
#undef PFNGLPATCHPARAMETERIPROC
#endif
typedef void  (*PFNGLPATCHPARAMETERIPROC)(GLenum pname, GLint value);

#ifdef glPatchParameterfv
#undef glPatchParameterfv
#endif
#ifdef PFNGLPATCHPARAMETERFVPROC
#undef PFNGLPATCHPARAMETERFVPROC
#endif
typedef void  (*PFNGLPATCHPARAMETERFVPROC)(GLenum pname, const GLfloat *values);

#ifndef GL_PATCHES
#define GL_PATCHES 0x000E
#endif

#ifndef GL_PATCH_VERTICES
#define GL_PATCH_VERTICES 0x8E72
#endif

#ifndef GL_PATCH_DEFAULT_INNER_LEVEL
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#endif

#ifndef GL_PATCH_DEFAULT_OUTER_LEVEL
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#endif

#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#endif

#ifndef GL_TESS_GEN_MODE
#define GL_TESS_GEN_MODE 0x8E76
#endif

#ifndef GL_TESS_GEN_SPACING
#define GL_TESS_GEN_SPACING 0x8E77
#endif

#ifndef GL_TESS_GEN_VERTEX_ORDER
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#endif

#ifndef GL_TESS_GEN_POINT_MODE
#define GL_TESS_GEN_POINT_MODE 0x8E79
#endif

#ifndef GL_TRIANGLES
#define GL_TRIANGLES 0x0004
#endif

#ifndef GL_ISOLINES
#define GL_ISOLINES 0x8E7A
#endif

#ifndef GL_QUADS
#define GL_QUADS 0x0007
#endif

#ifndef GL_EQUAL
#define GL_EQUAL 0x0202
#endif

#ifndef GL_FRACTIONAL_ODD
#define GL_FRACTIONAL_ODD 0x8E7B
#endif

#ifndef GL_FRACTIONAL_EVEN
#define GL_FRACTIONAL_EVEN 0x8E7C
#endif

#ifndef GL_CCW
#define GL_CCW 0x0901
#endif

#ifndef GL_CW
#define GL_CW 0x0900
#endif

#ifndef GL_MAX_PATCH_VERTICES
#define GL_MAX_PATCH_VERTICES 0x8E7D
#endif

#ifndef GL_MAX_TESS_GEN_LEVEL
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#endif

#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#endif

#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#endif

#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#endif

#ifndef GL_MAX_TESS_PATCH_COMPONENTS
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#endif

#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#endif

#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#endif

#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#endif

#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#endif

#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#endif

#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#endif

#ifndef GL_TESS_EVALUATION_SHADER
#define GL_TESS_EVALUATION_SHADER 0x8E87
#endif

#ifndef GL_TESS_CONTROL_SHADER
#define GL_TESS_CONTROL_SHADER 0x8E88
#endif

#ifndef GL_ARB_texture_barrier
#define GL_ARB_texture_barrier 1
#endif

#ifdef glTextureBarrier
#undef glTextureBarrier
#endif
#ifdef PFNGLTEXTUREBARRIERPROC
#undef PFNGLTEXTUREBARRIERPROC
#endif
typedef void  (*PFNGLTEXTUREBARRIERPROC)(void);

#ifndef GL_ARB_texture_border_clamp
#define GL_ARB_texture_border_clamp 1
#endif

#ifndef GL_CLAMP_TO_BORDER_ARB
#define GL_CLAMP_TO_BORDER_ARB 0x812D
#endif

#ifndef GL_ARB_texture_buffer_object
#define GL_ARB_texture_buffer_object 1
#endif

#ifdef glTexBufferARB
#undef glTexBufferARB
#endif
#ifdef PFNGLTEXBUFFERARBPROC
#undef PFNGLTEXBUFFERARBPROC
#endif
typedef void  (*PFNGLTEXBUFFERARBPROC)(GLenum target, GLenum internalformat, GLuint buffer);

#ifndef GL_TEXTURE_BUFFER_ARB
#define GL_TEXTURE_BUFFER_ARB 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE_ARB
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER_ARB
#define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_FORMAT_ARB
#define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
#endif

#ifndef GL_ARB_texture_buffer_object_rgb32
#define GL_ARB_texture_buffer_object_rgb32 1
#endif

#ifndef GL_RGB32F
#define GL_RGB32F 0x8815
#endif

#ifndef GL_RGB32UI
#define GL_RGB32UI 0x8D71
#endif

#ifndef GL_RGB32I
#define GL_RGB32I 0x8D83
#endif

#ifndef GL_ARB_texture_buffer_range
#define GL_ARB_texture_buffer_range 1
#endif

#ifdef glTexBufferRange
#undef glTexBufferRange
#endif
#ifdef PFNGLTEXBUFFERRANGEPROC
#undef PFNGLTEXBUFFERRANGEPROC
#endif
typedef void  (*PFNGLTEXBUFFERRANGEPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifndef GL_TEXTURE_BUFFER_OFFSET
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#endif

#ifndef GL_TEXTURE_BUFFER_SIZE
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#endif

#ifndef GL_ARB_texture_compression
#define GL_ARB_texture_compression 1
#endif

#ifdef glCompressedTexImage3DARB
#undef glCompressedTexImage3DARB
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
#undef PFNGLCOMPRESSEDTEXIMAGE3DARBPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexImage2DARB
#undef glCompressedTexImage2DARB
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
#undef PFNGLCOMPRESSEDTEXIMAGE2DARBPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexImage1DARB
#undef glCompressedTexImage1DARB
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
#undef PFNGLCOMPRESSEDTEXIMAGE1DARBPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage3DARB
#undef glCompressedTexSubImage3DARB
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage2DARB
#undef glCompressedTexSubImage2DARB
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage1DARB
#undef glCompressedTexSubImage1DARB
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);

#ifdef glGetCompressedTexImageARB
#undef glGetCompressedTexImageARB
#endif
#ifdef PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
#undef PFNGLGETCOMPRESSEDTEXIMAGEARBPROC
#endif
typedef void  (*PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)(GLenum target, GLint level, void *img);

#ifndef GL_COMPRESSED_ALPHA_ARB
#define GL_COMPRESSED_ALPHA_ARB 0x84E9
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ARB
#define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_ARB
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#endif

#ifndef GL_COMPRESSED_INTENSITY_ARB
#define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#endif

#ifndef GL_COMPRESSED_RGB_ARB
#define GL_COMPRESSED_RGB_ARB 0x84ED
#endif

#ifndef GL_COMPRESSED_RGBA_ARB
#define GL_COMPRESSED_RGBA_ARB 0x84EE
#endif

#ifndef GL_TEXTURE_COMPRESSION_HINT_ARB
#define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#endif

#ifndef GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#endif

#ifndef GL_TEXTURE_COMPRESSED_ARB
#define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#endif

#ifndef GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#endif

#ifndef GL_COMPRESSED_TEXTURE_FORMATS_ARB
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#endif

#ifndef GL_ARB_texture_compression_bptc
#define GL_ARB_texture_compression_bptc 1
#endif

#ifndef GL_COMPRESSED_RGBA_BPTC_UNORM_ARB
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#endif

#ifndef GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#endif

#ifndef GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
#endif

#ifndef GL_ARB_texture_compression_rgtc
#define GL_ARB_texture_compression_rgtc 1
#endif

#ifndef GL_COMPRESSED_RED_RGTC1
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_RGTC1
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#endif

#ifndef GL_COMPRESSED_RG_RGTC2
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#endif

#ifndef GL_COMPRESSED_SIGNED_RG_RGTC2
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#endif

#ifndef GL_ARB_texture_cube_map
#define GL_ARB_texture_cube_map 1
#endif

#ifndef GL_NORMAL_MAP_ARB
#define GL_NORMAL_MAP_ARB 0x8511
#endif

#ifndef GL_REFLECTION_MAP_ARB
#define GL_REFLECTION_MAP_ARB 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARB
#define GL_TEXTURE_CUBE_MAP_ARB 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARB
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARB
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
#endif

#ifndef GL_ARB_texture_cube_map_array
#define GL_ARB_texture_cube_map_array 1
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY_ARB
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB 0x9009
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_ARB
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900C
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
#endif

#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
#endif

#ifndef GL_ARB_texture_env_add
#define GL_ARB_texture_env_add 1
#endif

#ifndef GL_ARB_texture_env_combine
#define GL_ARB_texture_env_combine 1
#endif

#ifndef GL_COMBINE_ARB
#define GL_COMBINE_ARB 0x8570
#endif

#ifndef GL_COMBINE_RGB_ARB
#define GL_COMBINE_RGB_ARB 0x8571
#endif

#ifndef GL_COMBINE_ALPHA_ARB
#define GL_COMBINE_ALPHA_ARB 0x8572
#endif

#ifndef GL_SOURCE0_RGB_ARB
#define GL_SOURCE0_RGB_ARB 0x8580
#endif

#ifndef GL_SOURCE1_RGB_ARB
#define GL_SOURCE1_RGB_ARB 0x8581
#endif

#ifndef GL_SOURCE2_RGB_ARB
#define GL_SOURCE2_RGB_ARB 0x8582
#endif

#ifndef GL_SOURCE0_ALPHA_ARB
#define GL_SOURCE0_ALPHA_ARB 0x8588
#endif

#ifndef GL_SOURCE1_ALPHA_ARB
#define GL_SOURCE1_ALPHA_ARB 0x8589
#endif

#ifndef GL_SOURCE2_ALPHA_ARB
#define GL_SOURCE2_ALPHA_ARB 0x858A
#endif

#ifndef GL_OPERAND0_RGB_ARB
#define GL_OPERAND0_RGB_ARB 0x8590
#endif

#ifndef GL_OPERAND1_RGB_ARB
#define GL_OPERAND1_RGB_ARB 0x8591
#endif

#ifndef GL_OPERAND2_RGB_ARB
#define GL_OPERAND2_RGB_ARB 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA_ARB
#define GL_OPERAND0_ALPHA_ARB 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA_ARB
#define GL_OPERAND1_ALPHA_ARB 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA_ARB
#define GL_OPERAND2_ALPHA_ARB 0x859A
#endif

#ifndef GL_RGB_SCALE_ARB
#define GL_RGB_SCALE_ARB 0x8573
#endif

#ifndef GL_ADD_SIGNED_ARB
#define GL_ADD_SIGNED_ARB 0x8574
#endif

#ifndef GL_INTERPOLATE_ARB
#define GL_INTERPOLATE_ARB 0x8575
#endif

#ifndef GL_SUBTRACT_ARB
#define GL_SUBTRACT_ARB 0x84E7
#endif

#ifndef GL_CONSTANT_ARB
#define GL_CONSTANT_ARB 0x8576
#endif

#ifndef GL_PRIMARY_COLOR_ARB
#define GL_PRIMARY_COLOR_ARB 0x8577
#endif

#ifndef GL_PREVIOUS_ARB
#define GL_PREVIOUS_ARB 0x8578
#endif

#ifndef GL_ARB_texture_env_crossbar
#define GL_ARB_texture_env_crossbar 1
#endif

#ifndef GL_ARB_texture_env_dot3
#define GL_ARB_texture_env_dot3 1
#endif

#ifndef GL_DOT3_RGB_ARB
#define GL_DOT3_RGB_ARB 0x86AE
#endif

#ifndef GL_DOT3_RGBA_ARB
#define GL_DOT3_RGBA_ARB 0x86AF
#endif

#ifndef GL_ARB_texture_float
#define GL_ARB_texture_float 1
#endif

#ifndef GL_TEXTURE_RED_TYPE_ARB
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#endif

#ifndef GL_TEXTURE_GREEN_TYPE_ARB
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#endif

#ifndef GL_TEXTURE_BLUE_TYPE_ARB
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#endif

#ifndef GL_TEXTURE_ALPHA_TYPE_ARB
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#endif

#ifndef GL_TEXTURE_LUMINANCE_TYPE_ARB
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#endif

#ifndef GL_TEXTURE_INTENSITY_TYPE_ARB
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#endif

#ifndef GL_TEXTURE_DEPTH_TYPE_ARB
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#endif

#ifndef GL_UNSIGNED_NORMALIZED_ARB
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#endif

#ifndef GL_RGBA32F_ARB
#define GL_RGBA32F_ARB 0x8814
#endif

#ifndef GL_RGB32F_ARB
#define GL_RGB32F_ARB 0x8815
#endif

#ifndef GL_ALPHA32F_ARB
#define GL_ALPHA32F_ARB 0x8816
#endif

#ifndef GL_INTENSITY32F_ARB
#define GL_INTENSITY32F_ARB 0x8817
#endif

#ifndef GL_LUMINANCE32F_ARB
#define GL_LUMINANCE32F_ARB 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA32F_ARB
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#endif

#ifndef GL_RGBA16F_ARB
#define GL_RGBA16F_ARB 0x881A
#endif

#ifndef GL_RGB16F_ARB
#define GL_RGB16F_ARB 0x881B
#endif

#ifndef GL_ALPHA16F_ARB
#define GL_ALPHA16F_ARB 0x881C
#endif

#ifndef GL_INTENSITY16F_ARB
#define GL_INTENSITY16F_ARB 0x881D
#endif

#ifndef GL_LUMINANCE16F_ARB
#define GL_LUMINANCE16F_ARB 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA16F_ARB
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
#endif

#ifndef GL_ARB_texture_gather
#define GL_ARB_texture_gather 1
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
#endif

#ifndef GL_ARB_texture_mirror_clamp_to_edge
#define GL_ARB_texture_mirror_clamp_to_edge 1
#endif

#ifndef GL_MIRROR_CLAMP_TO_EDGE
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#endif

#ifndef GL_ARB_texture_mirrored_repeat
#define GL_ARB_texture_mirrored_repeat 1
#endif

#ifndef GL_MIRRORED_REPEAT_ARB
#define GL_MIRRORED_REPEAT_ARB 0x8370
#endif

#ifndef GL_ARB_texture_multisample
#define GL_ARB_texture_multisample 1
#endif

#ifdef glTexImage2DMultisample
#undef glTexImage2DMultisample
#endif
#ifdef PFNGLTEXIMAGE2DMULTISAMPLEPROC
#undef PFNGLTEXIMAGE2DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);

#ifdef glTexImage3DMultisample
#undef glTexImage3DMultisample
#endif
#ifdef PFNGLTEXIMAGE3DMULTISAMPLEPROC
#undef PFNGLTEXIMAGE3DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

#ifdef glGetMultisamplefv
#undef glGetMultisamplefv
#endif
#ifdef PFNGLGETMULTISAMPLEFVPROC
#undef PFNGLGETMULTISAMPLEFVPROC
#endif
typedef void  (*PFNGLGETMULTISAMPLEFVPROC)(GLenum pname, GLuint index, GLfloat *val);

#ifdef glSampleMaski
#undef glSampleMaski
#endif
#ifdef PFNGLSAMPLEMASKIPROC
#undef PFNGLSAMPLEMASKIPROC
#endif
typedef void  (*PFNGLSAMPLEMASKIPROC)(GLuint maskNumber, GLbitfield mask);

#ifndef GL_SAMPLE_POSITION
#define GL_SAMPLE_POSITION 0x8E50
#endif

#ifndef GL_SAMPLE_MASK
#define GL_SAMPLE_MASK 0x8E51
#endif

#ifndef GL_SAMPLE_MASK_VALUE
#define GL_SAMPLE_MASK_VALUE 0x8E52
#endif

#ifndef GL_MAX_SAMPLE_MASK_WORDS
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#endif

#ifndef GL_PROXY_TEXTURE_2D_MULTISAMPLE
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#endif

#ifndef GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#endif

#ifndef GL_TEXTURE_SAMPLES
#define GL_TEXTURE_SAMPLES 0x9106
#endif

#ifndef GL_TEXTURE_FIXED_SAMPLE_LOCATIONS
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#endif

#ifndef GL_MAX_COLOR_TEXTURE_SAMPLES
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#endif

#ifndef GL_MAX_DEPTH_TEXTURE_SAMPLES
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#endif

#ifndef GL_MAX_INTEGER_SAMPLES
#define GL_MAX_INTEGER_SAMPLES 0x9110
#endif

#ifndef GL_ARB_texture_non_power_of_two
#define GL_ARB_texture_non_power_of_two 1
#endif

#ifndef GL_ARB_texture_query_levels
#define GL_ARB_texture_query_levels 1
#endif

#ifndef GL_ARB_texture_query_lod
#define GL_ARB_texture_query_lod 1
#endif

#ifndef GL_ARB_texture_rectangle
#define GL_ARB_texture_rectangle 1
#endif

#ifndef GL_TEXTURE_RECTANGLE_ARB
#define GL_TEXTURE_RECTANGLE_ARB 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE_ARB
#define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE_ARB
#define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
#endif

#ifndef GL_ARB_texture_rg
#define GL_ARB_texture_rg 1
#endif

#ifndef GL_RG
#define GL_RG 0x8227
#endif

#ifndef GL_RG_INTEGER
#define GL_RG_INTEGER 0x8228
#endif

#ifndef GL_R8
#define GL_R8 0x8229
#endif

#ifndef GL_R16
#define GL_R16 0x822A
#endif

#ifndef GL_RG8
#define GL_RG8 0x822B
#endif

#ifndef GL_RG16
#define GL_RG16 0x822C
#endif

#ifndef GL_R16F
#define GL_R16F 0x822D
#endif

#ifndef GL_R32F
#define GL_R32F 0x822E
#endif

#ifndef GL_RG16F
#define GL_RG16F 0x822F
#endif

#ifndef GL_RG32F
#define GL_RG32F 0x8230
#endif

#ifndef GL_R8I
#define GL_R8I 0x8231
#endif

#ifndef GL_R8UI
#define GL_R8UI 0x8232
#endif

#ifndef GL_R16I
#define GL_R16I 0x8233
#endif

#ifndef GL_R16UI
#define GL_R16UI 0x8234
#endif

#ifndef GL_R32I
#define GL_R32I 0x8235
#endif

#ifndef GL_R32UI
#define GL_R32UI 0x8236
#endif

#ifndef GL_RG8I
#define GL_RG8I 0x8237
#endif

#ifndef GL_RG8UI
#define GL_RG8UI 0x8238
#endif

#ifndef GL_RG16I
#define GL_RG16I 0x8239
#endif

#ifndef GL_RG16UI
#define GL_RG16UI 0x823A
#endif

#ifndef GL_RG32I
#define GL_RG32I 0x823B
#endif

#ifndef GL_RG32UI
#define GL_RG32UI 0x823C
#endif

#ifndef GL_ARB_texture_rgb10_a2ui
#define GL_ARB_texture_rgb10_a2ui 1
#endif

#ifndef GL_RGB10_A2UI
#define GL_RGB10_A2UI 0x906F
#endif

#ifndef GL_ARB_texture_stencil8
#define GL_ARB_texture_stencil8 1
#endif

#ifndef GL_STENCIL_INDEX
#define GL_STENCIL_INDEX 0x1901
#endif

#ifndef GL_STENCIL_INDEX8
#define GL_STENCIL_INDEX8 0x8D48
#endif

#ifndef GL_ARB_texture_storage
#define GL_ARB_texture_storage 1
#endif

#ifdef glTexStorage1D
#undef glTexStorage1D
#endif
#ifdef PFNGLTEXSTORAGE1DPROC
#undef PFNGLTEXSTORAGE1DPROC
#endif
typedef void  (*PFNGLTEXSTORAGE1DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);

#ifdef glTexStorage2D
#undef glTexStorage2D
#endif
#ifdef PFNGLTEXSTORAGE2DPROC
#undef PFNGLTEXSTORAGE2DPROC
#endif
typedef void  (*PFNGLTEXSTORAGE2DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glTexStorage3D
#undef glTexStorage3D
#endif
#ifdef PFNGLTEXSTORAGE3DPROC
#undef PFNGLTEXSTORAGE3DPROC
#endif
typedef void  (*PFNGLTEXSTORAGE3DPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

#ifndef GL_TEXTURE_IMMUTABLE_FORMAT
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#endif

#ifndef GL_ARB_texture_storage_multisample
#define GL_ARB_texture_storage_multisample 1
#endif

#ifdef glTexStorage2DMultisample
#undef glTexStorage2DMultisample
#endif
#ifdef PFNGLTEXSTORAGE2DMULTISAMPLEPROC
#undef PFNGLTEXSTORAGE2DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);

#ifdef glTexStorage3DMultisample
#undef glTexStorage3DMultisample
#endif
#ifdef PFNGLTEXSTORAGE3DMULTISAMPLEPROC
#undef PFNGLTEXSTORAGE3DMULTISAMPLEPROC
#endif
typedef void  (*PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

#ifndef GL_ARB_texture_swizzle
#define GL_ARB_texture_swizzle 1
#endif

#ifndef GL_TEXTURE_SWIZZLE_R
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#endif

#ifndef GL_TEXTURE_SWIZZLE_G
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#endif

#ifndef GL_TEXTURE_SWIZZLE_B
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#endif

#ifndef GL_TEXTURE_SWIZZLE_A
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#endif

#ifndef GL_TEXTURE_SWIZZLE_RGBA
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#endif

#ifndef GL_ARB_texture_view
#define GL_ARB_texture_view 1
#endif

#ifdef glTextureView
#undef glTextureView
#endif
#ifdef PFNGLTEXTUREVIEWPROC
#undef PFNGLTEXTUREVIEWPROC
#endif
typedef void  (*PFNGLTEXTUREVIEWPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);

#ifndef GL_TEXTURE_VIEW_MIN_LEVEL
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LEVELS
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LAYER
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LAYERS
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#endif

#ifndef GL_TEXTURE_IMMUTABLE_LEVELS
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#endif

#ifndef GL_ARB_timer_query
#define GL_ARB_timer_query 1
#endif

#ifdef glQueryCounter
#undef glQueryCounter
#endif
#ifdef PFNGLQUERYCOUNTERPROC
#undef PFNGLQUERYCOUNTERPROC
#endif
typedef void  (*PFNGLQUERYCOUNTERPROC)(GLuint id, GLenum target);

#ifdef glGetQueryObjecti64v
#undef glGetQueryObjecti64v
#endif
#ifdef PFNGLGETQUERYOBJECTI64VPROC
#undef PFNGLGETQUERYOBJECTI64VPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTI64VPROC)(GLuint id, GLenum pname, GLint64 *params);

#ifdef glGetQueryObjectui64v
#undef glGetQueryObjectui64v
#endif
#ifdef PFNGLGETQUERYOBJECTUI64VPROC
#undef PFNGLGETQUERYOBJECTUI64VPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id, GLenum pname, GLuint64 *params);

#ifndef GL_TIME_ELAPSED
#define GL_TIME_ELAPSED 0x88BF
#endif

#ifndef GL_TIMESTAMP
#define GL_TIMESTAMP 0x8E28
#endif

#ifndef GL_ARB_transform_feedback2
#define GL_ARB_transform_feedback2 1
#endif

#ifdef glBindTransformFeedback
#undef glBindTransformFeedback
#endif
#ifdef PFNGLBINDTRANSFORMFEEDBACKPROC
#undef PFNGLBINDTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target, GLuint id);

#ifdef glDeleteTransformFeedbacks
#undef glDeleteTransformFeedbacks
#endif
#ifdef PFNGLDELETETRANSFORMFEEDBACKSPROC
#undef PFNGLDELETETRANSFORMFEEDBACKSPROC
#endif
typedef void  (*PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n, const GLuint *ids);

#ifdef glGenTransformFeedbacks
#undef glGenTransformFeedbacks
#endif
#ifdef PFNGLGENTRANSFORMFEEDBACKSPROC
#undef PFNGLGENTRANSFORMFEEDBACKSPROC
#endif
typedef void  (*PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n, GLuint *ids);

#ifdef glIsTransformFeedback
#undef glIsTransformFeedback
#endif
#ifdef PFNGLISTRANSFORMFEEDBACKPROC
#undef PFNGLISTRANSFORMFEEDBACKPROC
#endif
typedef GLboolean  (*PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);

#ifdef glPauseTransformFeedback
#undef glPauseTransformFeedback
#endif
#ifdef PFNGLPAUSETRANSFORMFEEDBACKPROC
#undef PFNGLPAUSETRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);

#ifdef glResumeTransformFeedback
#undef glResumeTransformFeedback
#endif
#ifdef PFNGLRESUMETRANSFORMFEEDBACKPROC
#undef PFNGLRESUMETRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);

#ifdef glDrawTransformFeedback
#undef glDrawTransformFeedback
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode, GLuint id);

#ifndef GL_TRANSFORM_FEEDBACK
#define GL_TRANSFORM_FEEDBACK 0x8E22
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BINDING
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#endif

#ifndef GL_ARB_transform_feedback3
#define GL_ARB_transform_feedback3 1
#endif

#ifdef glDrawTransformFeedbackStream
#undef glDrawTransformFeedbackStream
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode, GLuint id, GLuint stream);

#ifdef glBeginQueryIndexed
#undef glBeginQueryIndexed
#endif
#ifdef PFNGLBEGINQUERYINDEXEDPROC
#undef PFNGLBEGINQUERYINDEXEDPROC
#endif
typedef void  (*PFNGLBEGINQUERYINDEXEDPROC)(GLenum target, GLuint index, GLuint id);

#ifdef glEndQueryIndexed
#undef glEndQueryIndexed
#endif
#ifdef PFNGLENDQUERYINDEXEDPROC
#undef PFNGLENDQUERYINDEXEDPROC
#endif
typedef void  (*PFNGLENDQUERYINDEXEDPROC)(GLenum target, GLuint index);

#ifdef glGetQueryIndexediv
#undef glGetQueryIndexediv
#endif
#ifdef PFNGLGETQUERYINDEXEDIVPROC
#undef PFNGLGETQUERYINDEXEDIVPROC
#endif
typedef void  (*PFNGLGETQUERYINDEXEDIVPROC)(GLenum target, GLuint index, GLenum pname, GLint *params);

#ifndef GL_MAX_TRANSFORM_FEEDBACK_BUFFERS
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#endif

#ifndef GL_MAX_VERTEX_STREAMS
#define GL_MAX_VERTEX_STREAMS 0x8E71
#endif

#ifndef GL_ARB_transform_feedback_instanced
#define GL_ARB_transform_feedback_instanced 1
#endif

#ifdef glDrawTransformFeedbackInstanced
#undef glDrawTransformFeedbackInstanced
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode, GLuint id, GLsizei instancecount);

#ifdef glDrawTransformFeedbackStreamInstanced
#undef glDrawTransformFeedbackStreamInstanced
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);

#ifndef GL_ARB_transform_feedback_overflow_query
#define GL_ARB_transform_feedback_overflow_query 1
#endif

#ifndef GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB
#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB 0x82EC
#endif

#ifndef GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB 0x82ED
#endif

#ifndef GL_ARB_transpose_matrix
#define GL_ARB_transpose_matrix 1
#endif

#ifdef glLoadTransposeMatrixfARB
#undef glLoadTransposeMatrixfARB
#endif
#ifdef PFNGLLOADTRANSPOSEMATRIXFARBPROC
#undef PFNGLLOADTRANSPOSEMATRIXFARBPROC
#endif
typedef void  (*PFNGLLOADTRANSPOSEMATRIXFARBPROC)(const GLfloat *m);

#ifdef glLoadTransposeMatrixdARB
#undef glLoadTransposeMatrixdARB
#endif
#ifdef PFNGLLOADTRANSPOSEMATRIXDARBPROC
#undef PFNGLLOADTRANSPOSEMATRIXDARBPROC
#endif
typedef void  (*PFNGLLOADTRANSPOSEMATRIXDARBPROC)(const GLdouble *m);

#ifdef glMultTransposeMatrixfARB
#undef glMultTransposeMatrixfARB
#endif
#ifdef PFNGLMULTTRANSPOSEMATRIXFARBPROC
#undef PFNGLMULTTRANSPOSEMATRIXFARBPROC
#endif
typedef void  (*PFNGLMULTTRANSPOSEMATRIXFARBPROC)(const GLfloat *m);

#ifdef glMultTransposeMatrixdARB
#undef glMultTransposeMatrixdARB
#endif
#ifdef PFNGLMULTTRANSPOSEMATRIXDARBPROC
#undef PFNGLMULTTRANSPOSEMATRIXDARBPROC
#endif
typedef void  (*PFNGLMULTTRANSPOSEMATRIXDARBPROC)(const GLdouble *m);

#ifndef GL_TRANSPOSE_MODELVIEW_MATRIX_ARB
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
#endif

#ifndef GL_TRANSPOSE_PROJECTION_MATRIX_ARB
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
#endif

#ifndef GL_TRANSPOSE_TEXTURE_MATRIX_ARB
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
#endif

#ifndef GL_TRANSPOSE_COLOR_MATRIX_ARB
#define GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6
#endif

#ifndef GL_ARB_uniform_buffer_object
#define GL_ARB_uniform_buffer_object 1
#endif

#ifdef glGetUniformIndices
#undef glGetUniformIndices
#endif
#ifdef PFNGLGETUNIFORMINDICESPROC
#undef PFNGLGETUNIFORMINDICESPROC
#endif
typedef void  (*PFNGLGETUNIFORMINDICESPROC)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);

#ifdef glGetActiveUniformsiv
#undef glGetActiveUniformsiv
#endif
#ifdef PFNGLGETACTIVEUNIFORMSIVPROC
#undef PFNGLGETACTIVEUNIFORMSIVPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);

#ifdef glGetActiveUniformName
#undef glGetActiveUniformName
#endif
#ifdef PFNGLGETACTIVEUNIFORMNAMEPROC
#undef PFNGLGETACTIVEUNIFORMNAMEPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);

#ifdef glGetUniformBlockIndex
#undef glGetUniformBlockIndex
#endif
#ifdef PFNGLGETUNIFORMBLOCKINDEXPROC
#undef PFNGLGETUNIFORMBLOCKINDEXPROC
#endif
typedef GLuint  (*PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program, const GLchar *uniformBlockName);

#ifdef glGetActiveUniformBlockiv
#undef glGetActiveUniformBlockiv
#endif
#ifdef PFNGLGETACTIVEUNIFORMBLOCKIVPROC
#undef PFNGLGETACTIVEUNIFORMBLOCKIVPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);

#ifdef glGetActiveUniformBlockName
#undef glGetActiveUniformBlockName
#endif
#ifdef PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
#undef PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
#endif
typedef void  (*PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);

#ifdef glUniformBlockBinding
#undef glUniformBlockBinding
#endif
#ifdef PFNGLUNIFORMBLOCKBINDINGPROC
#undef PFNGLUNIFORMBLOCKBINDINGPROC
#endif
typedef void  (*PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

#ifdef glBindBufferRange
#undef glBindBufferRange
#endif
#ifdef PFNGLBINDBUFFERRANGEPROC
#undef PFNGLBINDBUFFERRANGEPROC
#endif
typedef void  (*PFNGLBINDBUFFERRANGEPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glBindBufferBase
#undef glBindBufferBase
#endif
#ifdef PFNGLBINDBUFFERBASEPROC
#undef PFNGLBINDBUFFERBASEPROC
#endif
typedef void  (*PFNGLBINDBUFFERBASEPROC)(GLenum target, GLuint index, GLuint buffer);

#ifdef glGetIntegeri_v
#undef glGetIntegeri_v
#endif
#ifdef PFNGLGETINTEGERI_VPROC
#undef PFNGLGETINTEGERI_VPROC
#endif
typedef void  (*PFNGLGETINTEGERI_VPROC)(GLenum target, GLuint index, GLint *data);

#ifndef GL_UNIFORM_BUFFER
#define GL_UNIFORM_BUFFER 0x8A11
#endif

#ifndef GL_UNIFORM_BUFFER_BINDING
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#endif

#ifndef GL_UNIFORM_BUFFER_START
#define GL_UNIFORM_BUFFER_START 0x8A29
#endif

#ifndef GL_UNIFORM_BUFFER_SIZE
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_BLOCKS
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_BLOCKS
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#endif

#ifndef GL_MAX_FRAGMENT_UNIFORM_BLOCKS
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#endif

#ifndef GL_MAX_COMBINED_UNIFORM_BLOCKS
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#endif

#ifndef GL_MAX_UNIFORM_BUFFER_BINDINGS
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#endif

#ifndef GL_MAX_UNIFORM_BLOCK_SIZE
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#endif

#ifndef GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#endif

#ifndef GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#endif

#ifndef GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#endif

#ifndef GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#endif

#ifndef GL_ACTIVE_UNIFORM_BLOCKS
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#endif

#ifndef GL_UNIFORM_TYPE
#define GL_UNIFORM_TYPE 0x8A37
#endif

#ifndef GL_UNIFORM_SIZE
#define GL_UNIFORM_SIZE 0x8A38
#endif

#ifndef GL_UNIFORM_NAME_LENGTH
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#endif

#ifndef GL_UNIFORM_BLOCK_INDEX
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#endif

#ifndef GL_UNIFORM_OFFSET
#define GL_UNIFORM_OFFSET 0x8A3B
#endif

#ifndef GL_UNIFORM_ARRAY_STRIDE
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#endif

#ifndef GL_UNIFORM_MATRIX_STRIDE
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#endif

#ifndef GL_UNIFORM_IS_ROW_MAJOR
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#endif

#ifndef GL_UNIFORM_BLOCK_BINDING
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#endif

#ifndef GL_UNIFORM_BLOCK_DATA_SIZE
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#endif

#ifndef GL_UNIFORM_BLOCK_NAME_LENGTH
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#endif

#ifndef GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#endif

#ifndef GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#endif

#ifndef GL_INVALID_INDEX
#define GL_INVALID_INDEX 0xFFFFFFFF
#endif

#ifndef GL_ARB_vertex_array_bgra
#define GL_ARB_vertex_array_bgra 1
#endif

#ifndef GL_BGRA
#define GL_BGRA 0x80E1
#endif

#ifndef GL_ARB_vertex_array_object
#define GL_ARB_vertex_array_object 1
#endif

#ifdef glBindVertexArray
#undef glBindVertexArray
#endif
#ifdef PFNGLBINDVERTEXARRAYPROC
#undef PFNGLBINDVERTEXARRAYPROC
#endif
typedef void  (*PFNGLBINDVERTEXARRAYPROC)(GLuint array);

#ifdef glDeleteVertexArrays
#undef glDeleteVertexArrays
#endif
#ifdef PFNGLDELETEVERTEXARRAYSPROC
#undef PFNGLDELETEVERTEXARRAYSPROC
#endif
typedef void  (*PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n, const GLuint *arrays);

#ifdef glGenVertexArrays
#undef glGenVertexArrays
#endif
#ifdef PFNGLGENVERTEXARRAYSPROC
#undef PFNGLGENVERTEXARRAYSPROC
#endif
typedef void  (*PFNGLGENVERTEXARRAYSPROC)(GLsizei n, GLuint *arrays);

#ifdef glIsVertexArray
#undef glIsVertexArray
#endif
#ifdef PFNGLISVERTEXARRAYPROC
#undef PFNGLISVERTEXARRAYPROC
#endif
typedef GLboolean  (*PFNGLISVERTEXARRAYPROC)(GLuint array);

#ifndef GL_VERTEX_ARRAY_BINDING
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#endif

#ifndef GL_ARB_vertex_attrib_64bit
#define GL_ARB_vertex_attrib_64bit 1
#endif

#ifdef glVertexAttribL1d
#undef glVertexAttribL1d
#endif
#ifdef PFNGLVERTEXATTRIBL1DPROC
#undef PFNGLVERTEXATTRIBL1DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1DPROC)(GLuint index, GLdouble x);

#ifdef glVertexAttribL2d
#undef glVertexAttribL2d
#endif
#ifdef PFNGLVERTEXATTRIBL2DPROC
#undef PFNGLVERTEXATTRIBL2DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2DPROC)(GLuint index, GLdouble x, GLdouble y);

#ifdef glVertexAttribL3d
#undef glVertexAttribL3d
#endif
#ifdef PFNGLVERTEXATTRIBL3DPROC
#undef PFNGLVERTEXATTRIBL3DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertexAttribL4d
#undef glVertexAttribL4d
#endif
#ifdef PFNGLVERTEXATTRIBL4DPROC
#undef PFNGLVERTEXATTRIBL4DPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4DPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertexAttribL1dv
#undef glVertexAttribL1dv
#endif
#ifdef PFNGLVERTEXATTRIBL1DVPROC
#undef PFNGLVERTEXATTRIBL1DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL2dv
#undef glVertexAttribL2dv
#endif
#ifdef PFNGLVERTEXATTRIBL2DVPROC
#undef PFNGLVERTEXATTRIBL2DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL3dv
#undef glVertexAttribL3dv
#endif
#ifdef PFNGLVERTEXATTRIBL3DVPROC
#undef PFNGLVERTEXATTRIBL3DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL4dv
#undef glVertexAttribL4dv
#endif
#ifdef PFNGLVERTEXATTRIBL4DVPROC
#undef PFNGLVERTEXATTRIBL4DVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4DVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribLPointer
#undef glVertexAttribLPointer
#endif
#ifdef PFNGLVERTEXATTRIBLPOINTERPROC
#undef PFNGLVERTEXATTRIBLPOINTERPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glGetVertexAttribLdv
#undef glGetVertexAttribLdv
#endif
#ifdef PFNGLGETVERTEXATTRIBLDVPROC
#undef PFNGLGETVERTEXATTRIBLDVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index, GLenum pname, GLdouble *params);

#ifndef GL_RGB32I
#define GL_RGB32I 0x8D83
#endif

#ifndef GL_DOUBLE_VEC2
#define GL_DOUBLE_VEC2 0x8FFC
#endif

#ifndef GL_DOUBLE_VEC3
#define GL_DOUBLE_VEC3 0x8FFD
#endif

#ifndef GL_DOUBLE_VEC4
#define GL_DOUBLE_VEC4 0x8FFE
#endif

#ifndef GL_DOUBLE_MAT2
#define GL_DOUBLE_MAT2 0x8F46
#endif

#ifndef GL_DOUBLE_MAT3
#define GL_DOUBLE_MAT3 0x8F47
#endif

#ifndef GL_DOUBLE_MAT4
#define GL_DOUBLE_MAT4 0x8F48
#endif

#ifndef GL_DOUBLE_MAT2x3
#define GL_DOUBLE_MAT2x3 0x8F49
#endif

#ifndef GL_DOUBLE_MAT2x4
#define GL_DOUBLE_MAT2x4 0x8F4A
#endif

#ifndef GL_DOUBLE_MAT3x2
#define GL_DOUBLE_MAT3x2 0x8F4B
#endif

#ifndef GL_DOUBLE_MAT3x4
#define GL_DOUBLE_MAT3x4 0x8F4C
#endif

#ifndef GL_DOUBLE_MAT4x2
#define GL_DOUBLE_MAT4x2 0x8F4D
#endif

#ifndef GL_DOUBLE_MAT4x3
#define GL_DOUBLE_MAT4x3 0x8F4E
#endif

#ifndef GL_ARB_vertex_attrib_binding
#define GL_ARB_vertex_attrib_binding 1
#endif

#ifdef glBindVertexBuffer
#undef glBindVertexBuffer
#endif
#ifdef PFNGLBINDVERTEXBUFFERPROC
#undef PFNGLBINDVERTEXBUFFERPROC
#endif
typedef void  (*PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);

#ifdef glVertexAttribFormat
#undef glVertexAttribFormat
#endif
#ifdef PFNGLVERTEXATTRIBFORMATPROC
#undef PFNGLVERTEXATTRIBFORMATPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);

#ifdef glVertexAttribIFormat
#undef glVertexAttribIFormat
#endif
#ifdef PFNGLVERTEXATTRIBIFORMATPROC
#undef PFNGLVERTEXATTRIBIFORMATPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexAttribLFormat
#undef glVertexAttribLFormat
#endif
#ifdef PFNGLVERTEXATTRIBLFORMATPROC
#undef PFNGLVERTEXATTRIBLFORMATPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexAttribBinding
#undef glVertexAttribBinding
#endif
#ifdef PFNGLVERTEXATTRIBBINDINGPROC
#undef PFNGLVERTEXATTRIBBINDINGPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex, GLuint bindingindex);

#ifdef glVertexBindingDivisor
#undef glVertexBindingDivisor
#endif
#ifdef PFNGLVERTEXBINDINGDIVISORPROC
#undef PFNGLVERTEXBINDINGDIVISORPROC
#endif
typedef void  (*PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex, GLuint divisor);

#ifndef GL_VERTEX_ATTRIB_BINDING
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#endif

#ifndef GL_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#endif

#ifndef GL_VERTEX_BINDING_DIVISOR
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#endif

#ifndef GL_VERTEX_BINDING_OFFSET
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#endif

#ifndef GL_VERTEX_BINDING_STRIDE
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#endif

#ifndef GL_MAX_VERTEX_ATTRIB_BINDINGS
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#endif

#ifndef GL_ARB_vertex_blend
#define GL_ARB_vertex_blend 1
#endif

#ifdef glWeightbvARB
#undef glWeightbvARB
#endif
#ifdef PFNGLWEIGHTBVARBPROC
#undef PFNGLWEIGHTBVARBPROC
#endif
typedef void  (*PFNGLWEIGHTBVARBPROC)(GLint size, const GLbyte *weights);

#ifdef glWeightsvARB
#undef glWeightsvARB
#endif
#ifdef PFNGLWEIGHTSVARBPROC
#undef PFNGLWEIGHTSVARBPROC
#endif
typedef void  (*PFNGLWEIGHTSVARBPROC)(GLint size, const GLshort *weights);

#ifdef glWeightivARB
#undef glWeightivARB
#endif
#ifdef PFNGLWEIGHTIVARBPROC
#undef PFNGLWEIGHTIVARBPROC
#endif
typedef void  (*PFNGLWEIGHTIVARBPROC)(GLint size, const GLint *weights);

#ifdef glWeightfvARB
#undef glWeightfvARB
#endif
#ifdef PFNGLWEIGHTFVARBPROC
#undef PFNGLWEIGHTFVARBPROC
#endif
typedef void  (*PFNGLWEIGHTFVARBPROC)(GLint size, const GLfloat *weights);

#ifdef glWeightdvARB
#undef glWeightdvARB
#endif
#ifdef PFNGLWEIGHTDVARBPROC
#undef PFNGLWEIGHTDVARBPROC
#endif
typedef void  (*PFNGLWEIGHTDVARBPROC)(GLint size, const GLdouble *weights);

#ifdef glWeightubvARB
#undef glWeightubvARB
#endif
#ifdef PFNGLWEIGHTUBVARBPROC
#undef PFNGLWEIGHTUBVARBPROC
#endif
typedef void  (*PFNGLWEIGHTUBVARBPROC)(GLint size, const GLubyte *weights);

#ifdef glWeightusvARB
#undef glWeightusvARB
#endif
#ifdef PFNGLWEIGHTUSVARBPROC
#undef PFNGLWEIGHTUSVARBPROC
#endif
typedef void  (*PFNGLWEIGHTUSVARBPROC)(GLint size, const GLushort *weights);

#ifdef glWeightuivARB
#undef glWeightuivARB
#endif
#ifdef PFNGLWEIGHTUIVARBPROC
#undef PFNGLWEIGHTUIVARBPROC
#endif
typedef void  (*PFNGLWEIGHTUIVARBPROC)(GLint size, const GLuint *weights);

#ifdef glWeightPointerARB
#undef glWeightPointerARB
#endif
#ifdef PFNGLWEIGHTPOINTERARBPROC
#undef PFNGLWEIGHTPOINTERARBPROC
#endif
typedef void  (*PFNGLWEIGHTPOINTERARBPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glVertexBlendARB
#undef glVertexBlendARB
#endif
#ifdef PFNGLVERTEXBLENDARBPROC
#undef PFNGLVERTEXBLENDARBPROC
#endif
typedef void  (*PFNGLVERTEXBLENDARBPROC)(GLint count);

#ifndef GL_MAX_VERTEX_UNITS_ARB
#define GL_MAX_VERTEX_UNITS_ARB 0x86A4
#endif

#ifndef GL_ACTIVE_VERTEX_UNITS_ARB
#define GL_ACTIVE_VERTEX_UNITS_ARB 0x86A5
#endif

#ifndef GL_WEIGHT_SUM_UNITY_ARB
#define GL_WEIGHT_SUM_UNITY_ARB 0x86A6
#endif

#ifndef GL_VERTEX_BLEND_ARB
#define GL_VERTEX_BLEND_ARB 0x86A7
#endif

#ifndef GL_CURRENT_WEIGHT_ARB
#define GL_CURRENT_WEIGHT_ARB 0x86A8
#endif

#ifndef GL_WEIGHT_ARRAY_TYPE_ARB
#define GL_WEIGHT_ARRAY_TYPE_ARB 0x86A9
#endif

#ifndef GL_WEIGHT_ARRAY_STRIDE_ARB
#define GL_WEIGHT_ARRAY_STRIDE_ARB 0x86AA
#endif

#ifndef GL_WEIGHT_ARRAY_SIZE_ARB
#define GL_WEIGHT_ARRAY_SIZE_ARB 0x86AB
#endif

#ifndef GL_WEIGHT_ARRAY_POINTER_ARB
#define GL_WEIGHT_ARRAY_POINTER_ARB 0x86AC
#endif

#ifndef GL_WEIGHT_ARRAY_ARB
#define GL_WEIGHT_ARRAY_ARB 0x86AD
#endif

#ifndef GL_MODELVIEW0_ARB
#define GL_MODELVIEW0_ARB 0x1700
#endif

#ifndef GL_MODELVIEW1_ARB
#define GL_MODELVIEW1_ARB 0x850A
#endif

#ifndef GL_MODELVIEW2_ARB
#define GL_MODELVIEW2_ARB 0x8722
#endif

#ifndef GL_MODELVIEW3_ARB
#define GL_MODELVIEW3_ARB 0x8723
#endif

#ifndef GL_MODELVIEW4_ARB
#define GL_MODELVIEW4_ARB 0x8724
#endif

#ifndef GL_MODELVIEW5_ARB
#define GL_MODELVIEW5_ARB 0x8725
#endif

#ifndef GL_MODELVIEW6_ARB
#define GL_MODELVIEW6_ARB 0x8726
#endif

#ifndef GL_MODELVIEW7_ARB
#define GL_MODELVIEW7_ARB 0x8727
#endif

#ifndef GL_MODELVIEW8_ARB
#define GL_MODELVIEW8_ARB 0x8728
#endif

#ifndef GL_MODELVIEW9_ARB
#define GL_MODELVIEW9_ARB 0x8729
#endif

#ifndef GL_MODELVIEW10_ARB
#define GL_MODELVIEW10_ARB 0x872A
#endif

#ifndef GL_MODELVIEW11_ARB
#define GL_MODELVIEW11_ARB 0x872B
#endif

#ifndef GL_MODELVIEW12_ARB
#define GL_MODELVIEW12_ARB 0x872C
#endif

#ifndef GL_MODELVIEW13_ARB
#define GL_MODELVIEW13_ARB 0x872D
#endif

#ifndef GL_MODELVIEW14_ARB
#define GL_MODELVIEW14_ARB 0x872E
#endif

#ifndef GL_MODELVIEW15_ARB
#define GL_MODELVIEW15_ARB 0x872F
#endif

#ifndef GL_MODELVIEW16_ARB
#define GL_MODELVIEW16_ARB 0x8730
#endif

#ifndef GL_MODELVIEW17_ARB
#define GL_MODELVIEW17_ARB 0x8731
#endif

#ifndef GL_MODELVIEW18_ARB
#define GL_MODELVIEW18_ARB 0x8732
#endif

#ifndef GL_MODELVIEW19_ARB
#define GL_MODELVIEW19_ARB 0x8733
#endif

#ifndef GL_MODELVIEW20_ARB
#define GL_MODELVIEW20_ARB 0x8734
#endif

#ifndef GL_MODELVIEW21_ARB
#define GL_MODELVIEW21_ARB 0x8735
#endif

#ifndef GL_MODELVIEW22_ARB
#define GL_MODELVIEW22_ARB 0x8736
#endif

#ifndef GL_MODELVIEW23_ARB
#define GL_MODELVIEW23_ARB 0x8737
#endif

#ifndef GL_MODELVIEW24_ARB
#define GL_MODELVIEW24_ARB 0x8738
#endif

#ifndef GL_MODELVIEW25_ARB
#define GL_MODELVIEW25_ARB 0x8739
#endif

#ifndef GL_MODELVIEW26_ARB
#define GL_MODELVIEW26_ARB 0x873A
#endif

#ifndef GL_MODELVIEW27_ARB
#define GL_MODELVIEW27_ARB 0x873B
#endif

#ifndef GL_MODELVIEW28_ARB
#define GL_MODELVIEW28_ARB 0x873C
#endif

#ifndef GL_MODELVIEW29_ARB
#define GL_MODELVIEW29_ARB 0x873D
#endif

#ifndef GL_MODELVIEW30_ARB
#define GL_MODELVIEW30_ARB 0x873E
#endif

#ifndef GL_MODELVIEW31_ARB
#define GL_MODELVIEW31_ARB 0x873F
#endif

#ifndef GL_ARB_vertex_buffer_object
#define GL_ARB_vertex_buffer_object 1
#endif

#ifdef glBindBufferARB
#undef glBindBufferARB
#endif
#ifdef PFNGLBINDBUFFERARBPROC
#undef PFNGLBINDBUFFERARBPROC
#endif
typedef void  (*PFNGLBINDBUFFERARBPROC)(GLenum target, GLuint buffer);

#ifdef glDeleteBuffersARB
#undef glDeleteBuffersARB
#endif
#ifdef PFNGLDELETEBUFFERSARBPROC
#undef PFNGLDELETEBUFFERSARBPROC
#endif
typedef void  (*PFNGLDELETEBUFFERSARBPROC)(GLsizei n, const GLuint *buffers);

#ifdef glGenBuffersARB
#undef glGenBuffersARB
#endif
#ifdef PFNGLGENBUFFERSARBPROC
#undef PFNGLGENBUFFERSARBPROC
#endif
typedef void  (*PFNGLGENBUFFERSARBPROC)(GLsizei n, GLuint *buffers);

#ifdef glIsBufferARB
#undef glIsBufferARB
#endif
#ifdef PFNGLISBUFFERARBPROC
#undef PFNGLISBUFFERARBPROC
#endif
typedef GLboolean  (*PFNGLISBUFFERARBPROC)(GLuint buffer);

#ifdef glBufferDataARB
#undef glBufferDataARB
#endif
#ifdef PFNGLBUFFERDATAARBPROC
#undef PFNGLBUFFERDATAARBPROC
#endif
typedef void  (*PFNGLBUFFERDATAARBPROC)(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);

#ifdef glBufferSubDataARB
#undef glBufferSubDataARB
#endif
#ifdef PFNGLBUFFERSUBDATAARBPROC
#undef PFNGLBUFFERSUBDATAARBPROC
#endif
typedef void  (*PFNGLBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);

#ifdef glGetBufferSubDataARB
#undef glGetBufferSubDataARB
#endif
#ifdef PFNGLGETBUFFERSUBDATAARBPROC
#undef PFNGLGETBUFFERSUBDATAARBPROC
#endif
typedef void  (*PFNGLGETBUFFERSUBDATAARBPROC)(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);

#ifdef glMapBufferARB
#undef glMapBufferARB
#endif
#ifdef PFNGLMAPBUFFERARBPROC
#undef PFNGLMAPBUFFERARBPROC
#endif
typedef void * (*PFNGLMAPBUFFERARBPROC)(GLenum target, GLenum access);

#ifdef glUnmapBufferARB
#undef glUnmapBufferARB
#endif
#ifdef PFNGLUNMAPBUFFERARBPROC
#undef PFNGLUNMAPBUFFERARBPROC
#endif
typedef GLboolean  (*PFNGLUNMAPBUFFERARBPROC)(GLenum target);

#ifdef glGetBufferParameterivARB
#undef glGetBufferParameterivARB
#endif
#ifdef PFNGLGETBUFFERPARAMETERIVARBPROC
#undef PFNGLGETBUFFERPARAMETERIVARBPROC
#endif
typedef void  (*PFNGLGETBUFFERPARAMETERIVARBPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetBufferPointervARB
#undef glGetBufferPointervARB
#endif
#ifdef PFNGLGETBUFFERPOINTERVARBPROC
#undef PFNGLGETBUFFERPOINTERVARBPROC
#endif
typedef void  (*PFNGLGETBUFFERPOINTERVARBPROC)(GLenum target, GLenum pname, void **params);

#ifndef GL_BUFFER_SIZE_ARB
#define GL_BUFFER_SIZE_ARB 0x8764
#endif

#ifndef GL_BUFFER_USAGE_ARB
#define GL_BUFFER_USAGE_ARB 0x8765
#endif

#ifndef GL_ARRAY_BUFFER_ARB
#define GL_ARRAY_BUFFER_ARB 0x8892
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_ARB
#define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
#endif

#ifndef GL_ARRAY_BUFFER_BINDING_ARB
#define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
#endif

#ifndef GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#endif

#ifndef GL_VERTEX_ARRAY_BUFFER_BINDING_ARB
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#endif

#ifndef GL_NORMAL_ARRAY_BUFFER_BINDING_ARB
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#endif

#ifndef GL_COLOR_ARRAY_BUFFER_BINDING_ARB
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#endif

#ifndef GL_INDEX_ARRAY_BUFFER_BINDING_ARB
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#endif

#ifndef GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#endif

#ifndef GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#endif

#ifndef GL_READ_ONLY_ARB
#define GL_READ_ONLY_ARB 0x88B8
#endif

#ifndef GL_WRITE_ONLY_ARB
#define GL_WRITE_ONLY_ARB 0x88B9
#endif

#ifndef GL_READ_WRITE_ARB
#define GL_READ_WRITE_ARB 0x88BA
#endif

#ifndef GL_BUFFER_ACCESS_ARB
#define GL_BUFFER_ACCESS_ARB 0x88BB
#endif

#ifndef GL_BUFFER_MAPPED_ARB
#define GL_BUFFER_MAPPED_ARB 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER_ARB
#define GL_BUFFER_MAP_POINTER_ARB 0x88BD
#endif

#ifndef GL_STREAM_DRAW_ARB
#define GL_STREAM_DRAW_ARB 0x88E0
#endif

#ifndef GL_STREAM_READ_ARB
#define GL_STREAM_READ_ARB 0x88E1
#endif

#ifndef GL_STREAM_COPY_ARB
#define GL_STREAM_COPY_ARB 0x88E2
#endif

#ifndef GL_STATIC_DRAW_ARB
#define GL_STATIC_DRAW_ARB 0x88E4
#endif

#ifndef GL_STATIC_READ_ARB
#define GL_STATIC_READ_ARB 0x88E5
#endif

#ifndef GL_STATIC_COPY_ARB
#define GL_STATIC_COPY_ARB 0x88E6
#endif

#ifndef GL_DYNAMIC_DRAW_ARB
#define GL_DYNAMIC_DRAW_ARB 0x88E8
#endif

#ifndef GL_DYNAMIC_READ_ARB
#define GL_DYNAMIC_READ_ARB 0x88E9
#endif

#ifndef GL_DYNAMIC_COPY_ARB
#define GL_DYNAMIC_COPY_ARB 0x88EA
#endif

#ifndef GL_ARB_vertex_program
#define GL_ARB_vertex_program 1
#endif

#ifdef glVertexAttrib1dARB
#undef glVertexAttrib1dARB
#endif
#ifdef PFNGLVERTEXATTRIB1DARBPROC
#undef PFNGLVERTEXATTRIB1DARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1DARBPROC)(GLuint index, GLdouble x);

#ifdef glVertexAttrib1dvARB
#undef glVertexAttrib1dvARB
#endif
#ifdef PFNGLVERTEXATTRIB1DVARBPROC
#undef PFNGLVERTEXATTRIB1DVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1DVARBPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib1fARB
#undef glVertexAttrib1fARB
#endif
#ifdef PFNGLVERTEXATTRIB1FARBPROC
#undef PFNGLVERTEXATTRIB1FARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FARBPROC)(GLuint index, GLfloat x);

#ifdef glVertexAttrib1fvARB
#undef glVertexAttrib1fvARB
#endif
#ifdef PFNGLVERTEXATTRIB1FVARBPROC
#undef PFNGLVERTEXATTRIB1FVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FVARBPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib1sARB
#undef glVertexAttrib1sARB
#endif
#ifdef PFNGLVERTEXATTRIB1SARBPROC
#undef PFNGLVERTEXATTRIB1SARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1SARBPROC)(GLuint index, GLshort x);

#ifdef glVertexAttrib1svARB
#undef glVertexAttrib1svARB
#endif
#ifdef PFNGLVERTEXATTRIB1SVARBPROC
#undef PFNGLVERTEXATTRIB1SVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1SVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib2dARB
#undef glVertexAttrib2dARB
#endif
#ifdef PFNGLVERTEXATTRIB2DARBPROC
#undef PFNGLVERTEXATTRIB2DARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2DARBPROC)(GLuint index, GLdouble x, GLdouble y);

#ifdef glVertexAttrib2dvARB
#undef glVertexAttrib2dvARB
#endif
#ifdef PFNGLVERTEXATTRIB2DVARBPROC
#undef PFNGLVERTEXATTRIB2DVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2DVARBPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib2fARB
#undef glVertexAttrib2fARB
#endif
#ifdef PFNGLVERTEXATTRIB2FARBPROC
#undef PFNGLVERTEXATTRIB2FARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FARBPROC)(GLuint index, GLfloat x, GLfloat y);

#ifdef glVertexAttrib2fvARB
#undef glVertexAttrib2fvARB
#endif
#ifdef PFNGLVERTEXATTRIB2FVARBPROC
#undef PFNGLVERTEXATTRIB2FVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FVARBPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib2sARB
#undef glVertexAttrib2sARB
#endif
#ifdef PFNGLVERTEXATTRIB2SARBPROC
#undef PFNGLVERTEXATTRIB2SARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2SARBPROC)(GLuint index, GLshort x, GLshort y);

#ifdef glVertexAttrib2svARB
#undef glVertexAttrib2svARB
#endif
#ifdef PFNGLVERTEXATTRIB2SVARBPROC
#undef PFNGLVERTEXATTRIB2SVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2SVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib3dARB
#undef glVertexAttrib3dARB
#endif
#ifdef PFNGLVERTEXATTRIB3DARBPROC
#undef PFNGLVERTEXATTRIB3DARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertexAttrib3dvARB
#undef glVertexAttrib3dvARB
#endif
#ifdef PFNGLVERTEXATTRIB3DVARBPROC
#undef PFNGLVERTEXATTRIB3DVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3DVARBPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib3fARB
#undef glVertexAttrib3fARB
#endif
#ifdef PFNGLVERTEXATTRIB3FARBPROC
#undef PFNGLVERTEXATTRIB3FARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);

#ifdef glVertexAttrib3fvARB
#undef glVertexAttrib3fvARB
#endif
#ifdef PFNGLVERTEXATTRIB3FVARBPROC
#undef PFNGLVERTEXATTRIB3FVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FVARBPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib3sARB
#undef glVertexAttrib3sARB
#endif
#ifdef PFNGLVERTEXATTRIB3SARBPROC
#undef PFNGLVERTEXATTRIB3SARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z);

#ifdef glVertexAttrib3svARB
#undef glVertexAttrib3svARB
#endif
#ifdef PFNGLVERTEXATTRIB3SVARBPROC
#undef PFNGLVERTEXATTRIB3SVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3SVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4NbvARB
#undef glVertexAttrib4NbvARB
#endif
#ifdef PFNGLVERTEXATTRIB4NBVARBPROC
#undef PFNGLVERTEXATTRIB4NBVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NBVARBPROC)(GLuint index, const GLbyte *v);

#ifdef glVertexAttrib4NivARB
#undef glVertexAttrib4NivARB
#endif
#ifdef PFNGLVERTEXATTRIB4NIVARBPROC
#undef PFNGLVERTEXATTRIB4NIVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NIVARBPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttrib4NsvARB
#undef glVertexAttrib4NsvARB
#endif
#ifdef PFNGLVERTEXATTRIB4NSVARBPROC
#undef PFNGLVERTEXATTRIB4NSVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NSVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4NubARB
#undef glVertexAttrib4NubARB
#endif
#ifdef PFNGLVERTEXATTRIB4NUBARBPROC
#undef PFNGLVERTEXATTRIB4NUBARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUBARBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);

#ifdef glVertexAttrib4NubvARB
#undef glVertexAttrib4NubvARB
#endif
#ifdef PFNGLVERTEXATTRIB4NUBVARBPROC
#undef PFNGLVERTEXATTRIB4NUBVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUBVARBPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttrib4NuivARB
#undef glVertexAttrib4NuivARB
#endif
#ifdef PFNGLVERTEXATTRIB4NUIVARBPROC
#undef PFNGLVERTEXATTRIB4NUIVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUIVARBPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttrib4NusvARB
#undef glVertexAttrib4NusvARB
#endif
#ifdef PFNGLVERTEXATTRIB4NUSVARBPROC
#undef PFNGLVERTEXATTRIB4NUSVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUSVARBPROC)(GLuint index, const GLushort *v);

#ifdef glVertexAttrib4bvARB
#undef glVertexAttrib4bvARB
#endif
#ifdef PFNGLVERTEXATTRIB4BVARBPROC
#undef PFNGLVERTEXATTRIB4BVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4BVARBPROC)(GLuint index, const GLbyte *v);

#ifdef glVertexAttrib4dARB
#undef glVertexAttrib4dARB
#endif
#ifdef PFNGLVERTEXATTRIB4DARBPROC
#undef PFNGLVERTEXATTRIB4DARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertexAttrib4dvARB
#undef glVertexAttrib4dvARB
#endif
#ifdef PFNGLVERTEXATTRIB4DVARBPROC
#undef PFNGLVERTEXATTRIB4DVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4DVARBPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib4fARB
#undef glVertexAttrib4fARB
#endif
#ifdef PFNGLVERTEXATTRIB4FARBPROC
#undef PFNGLVERTEXATTRIB4FARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glVertexAttrib4fvARB
#undef glVertexAttrib4fvARB
#endif
#ifdef PFNGLVERTEXATTRIB4FVARBPROC
#undef PFNGLVERTEXATTRIB4FVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FVARBPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib4ivARB
#undef glVertexAttrib4ivARB
#endif
#ifdef PFNGLVERTEXATTRIB4IVARBPROC
#undef PFNGLVERTEXATTRIB4IVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4IVARBPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttrib4sARB
#undef glVertexAttrib4sARB
#endif
#ifdef PFNGLVERTEXATTRIB4SARBPROC
#undef PFNGLVERTEXATTRIB4SARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);

#ifdef glVertexAttrib4svARB
#undef glVertexAttrib4svARB
#endif
#ifdef PFNGLVERTEXATTRIB4SVARBPROC
#undef PFNGLVERTEXATTRIB4SVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4SVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4ubvARB
#undef glVertexAttrib4ubvARB
#endif
#ifdef PFNGLVERTEXATTRIB4UBVARBPROC
#undef PFNGLVERTEXATTRIB4UBVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4UBVARBPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttrib4uivARB
#undef glVertexAttrib4uivARB
#endif
#ifdef PFNGLVERTEXATTRIB4UIVARBPROC
#undef PFNGLVERTEXATTRIB4UIVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4UIVARBPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttrib4usvARB
#undef glVertexAttrib4usvARB
#endif
#ifdef PFNGLVERTEXATTRIB4USVARBPROC
#undef PFNGLVERTEXATTRIB4USVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4USVARBPROC)(GLuint index, const GLushort *v);

#ifdef glVertexAttribPointerARB
#undef glVertexAttribPointerARB
#endif
#ifdef PFNGLVERTEXATTRIBPOINTERARBPROC
#undef PFNGLVERTEXATTRIBPOINTERARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBPOINTERARBPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);

#ifdef glEnableVertexAttribArrayARB
#undef glEnableVertexAttribArrayARB
#endif
#ifdef PFNGLENABLEVERTEXATTRIBARRAYARBPROC
#undef PFNGLENABLEVERTEXATTRIBARRAYARBPROC
#endif
typedef void  (*PFNGLENABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);

#ifdef glDisableVertexAttribArrayARB
#undef glDisableVertexAttribArrayARB
#endif
#ifdef PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
#undef PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);

#ifdef glProgramStringARB
#undef glProgramStringARB
#endif
#ifdef PFNGLPROGRAMSTRINGARBPROC
#undef PFNGLPROGRAMSTRINGARBPROC
#endif
typedef void  (*PFNGLPROGRAMSTRINGARBPROC)(GLenum target, GLenum format, GLsizei len, const void *string);

#ifdef glBindProgramARB
#undef glBindProgramARB
#endif
#ifdef PFNGLBINDPROGRAMARBPROC
#undef PFNGLBINDPROGRAMARBPROC
#endif
typedef void  (*PFNGLBINDPROGRAMARBPROC)(GLenum target, GLuint program);

#ifdef glDeleteProgramsARB
#undef glDeleteProgramsARB
#endif
#ifdef PFNGLDELETEPROGRAMSARBPROC
#undef PFNGLDELETEPROGRAMSARBPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMSARBPROC)(GLsizei n, const GLuint *programs);

#ifdef glGenProgramsARB
#undef glGenProgramsARB
#endif
#ifdef PFNGLGENPROGRAMSARBPROC
#undef PFNGLGENPROGRAMSARBPROC
#endif
typedef void  (*PFNGLGENPROGRAMSARBPROC)(GLsizei n, GLuint *programs);

#ifdef glProgramEnvParameter4dARB
#undef glProgramEnvParameter4dARB
#endif
#ifdef PFNGLPROGRAMENVPARAMETER4DARBPROC
#undef PFNGLPROGRAMENVPARAMETER4DARBPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glProgramEnvParameter4dvARB
#undef glProgramEnvParameter4dvARB
#endif
#ifdef PFNGLPROGRAMENVPARAMETER4DVARBPROC
#undef PFNGLPROGRAMENVPARAMETER4DVARBPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble *params);

#ifdef glProgramEnvParameter4fARB
#undef glProgramEnvParameter4fARB
#endif
#ifdef PFNGLPROGRAMENVPARAMETER4FARBPROC
#undef PFNGLPROGRAMENVPARAMETER4FARBPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glProgramEnvParameter4fvARB
#undef glProgramEnvParameter4fvARB
#endif
#ifdef PFNGLPROGRAMENVPARAMETER4FVARBPROC
#undef PFNGLPROGRAMENVPARAMETER4FVARBPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat *params);

#ifdef glProgramLocalParameter4dARB
#undef glProgramLocalParameter4dARB
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETER4DARBPROC
#undef PFNGLPROGRAMLOCALPARAMETER4DARBPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETER4DARBPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glProgramLocalParameter4dvARB
#undef glProgramLocalParameter4dvARB
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
#undef PFNGLPROGRAMLOCALPARAMETER4DVARBPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)(GLenum target, GLuint index, const GLdouble *params);

#ifdef glProgramLocalParameter4fARB
#undef glProgramLocalParameter4fARB
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETER4FARBPROC
#undef PFNGLPROGRAMLOCALPARAMETER4FARBPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETER4FARBPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glProgramLocalParameter4fvARB
#undef glProgramLocalParameter4fvARB
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
#undef PFNGLPROGRAMLOCALPARAMETER4FVARBPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)(GLenum target, GLuint index, const GLfloat *params);

#ifdef glGetProgramEnvParameterdvARB
#undef glGetProgramEnvParameterdvARB
#endif
#ifdef PFNGLGETPROGRAMENVPARAMETERDVARBPROC
#undef PFNGLGETPROGRAMENVPARAMETERDVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMENVPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble *params);

#ifdef glGetProgramEnvParameterfvARB
#undef glGetProgramEnvParameterfvARB
#endif
#ifdef PFNGLGETPROGRAMENVPARAMETERFVARBPROC
#undef PFNGLGETPROGRAMENVPARAMETERFVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMENVPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat *params);

#ifdef glGetProgramLocalParameterdvARB
#undef glGetProgramLocalParameterdvARB
#endif
#ifdef PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
#undef PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)(GLenum target, GLuint index, GLdouble *params);

#ifdef glGetProgramLocalParameterfvARB
#undef glGetProgramLocalParameterfvARB
#endif
#ifdef PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
#undef PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)(GLenum target, GLuint index, GLfloat *params);

#ifdef glGetProgramivARB
#undef glGetProgramivARB
#endif
#ifdef PFNGLGETPROGRAMIVARBPROC
#undef PFNGLGETPROGRAMIVARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMIVARBPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetProgramStringARB
#undef glGetProgramStringARB
#endif
#ifdef PFNGLGETPROGRAMSTRINGARBPROC
#undef PFNGLGETPROGRAMSTRINGARBPROC
#endif
typedef void  (*PFNGLGETPROGRAMSTRINGARBPROC)(GLenum target, GLenum pname, void *string);

#ifdef glGetVertexAttribdvARB
#undef glGetVertexAttribdvARB
#endif
#ifdef PFNGLGETVERTEXATTRIBDVARBPROC
#undef PFNGLGETVERTEXATTRIBDVARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBDVARBPROC)(GLuint index, GLenum pname, GLdouble *params);

#ifdef glGetVertexAttribfvARB
#undef glGetVertexAttribfvARB
#endif
#ifdef PFNGLGETVERTEXATTRIBFVARBPROC
#undef PFNGLGETVERTEXATTRIBFVARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBFVARBPROC)(GLuint index, GLenum pname, GLfloat *params);

#ifdef glGetVertexAttribivARB
#undef glGetVertexAttribivARB
#endif
#ifdef PFNGLGETVERTEXATTRIBIVARBPROC
#undef PFNGLGETVERTEXATTRIBIVARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIVARBPROC)(GLuint index, GLenum pname, GLint *params);

#ifdef glGetVertexAttribPointervARB
#undef glGetVertexAttribPointervARB
#endif
#ifdef PFNGLGETVERTEXATTRIBPOINTERVARBPROC
#undef PFNGLGETVERTEXATTRIBPOINTERVARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBPOINTERVARBPROC)(GLuint index, GLenum pname, void **pointer);

#ifdef glIsProgramARB
#undef glIsProgramARB
#endif
#ifdef PFNGLISPROGRAMARBPROC
#undef PFNGLISPROGRAMARBPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMARBPROC)(GLuint program);

#ifndef GL_COLOR_SUM_ARB
#define GL_COLOR_SUM_ARB 0x8458
#endif

#ifndef GL_VERTEX_PROGRAM_ARB
#define GL_VERTEX_PROGRAM_ARB 0x8620
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 0x8623
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 0x8625
#endif

#ifndef GL_CURRENT_VERTEX_ATTRIB_ARB
#define GL_CURRENT_VERTEX_ATTRIB_ARB 0x8626
#endif

#ifndef GL_PROGRAM_LENGTH_ARB
#define GL_PROGRAM_LENGTH_ARB 0x8627
#endif

#ifndef GL_PROGRAM_STRING_ARB
#define GL_PROGRAM_STRING_ARB 0x8628
#endif

#ifndef GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#endif

#ifndef GL_MAX_PROGRAM_MATRICES_ARB
#define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
#endif

#ifndef GL_CURRENT_MATRIX_STACK_DEPTH_ARB
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#endif

#ifndef GL_CURRENT_MATRIX_ARB
#define GL_CURRENT_MATRIX_ARB 0x8641
#endif

#ifndef GL_VERTEX_PROGRAM_POINT_SIZE_ARB
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB 0x8642
#endif

#ifndef GL_VERTEX_PROGRAM_TWO_SIDE_ARB
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB 0x8643
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
#endif

#ifndef GL_PROGRAM_ERROR_POSITION_ARB
#define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
#endif

#ifndef GL_PROGRAM_BINDING_ARB
#define GL_PROGRAM_BINDING_ARB 0x8677
#endif

#ifndef GL_MAX_VERTEX_ATTRIBS_ARB
#define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#endif

#ifndef GL_PROGRAM_ERROR_STRING_ARB
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#endif

#ifndef GL_PROGRAM_FORMAT_ASCII_ARB
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#endif

#ifndef GL_PROGRAM_FORMAT_ARB
#define GL_PROGRAM_FORMAT_ARB 0x8876
#endif

#ifndef GL_PROGRAM_INSTRUCTIONS_ARB
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#endif

#ifndef GL_MAX_PROGRAM_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#endif

#ifndef GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#endif

#ifndef GL_PROGRAM_TEMPORARIES_ARB
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#endif

#ifndef GL_MAX_PROGRAM_TEMPORARIES_ARB
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#endif

#ifndef GL_PROGRAM_NATIVE_TEMPORARIES_ARB
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#endif

#ifndef GL_PROGRAM_PARAMETERS_ARB
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#endif

#ifndef GL_MAX_PROGRAM_PARAMETERS_ARB
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#endif

#ifndef GL_PROGRAM_NATIVE_PARAMETERS_ARB
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#endif

#ifndef GL_PROGRAM_ATTRIBS_ARB
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#endif

#ifndef GL_MAX_PROGRAM_ATTRIBS_ARB
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#endif

#ifndef GL_PROGRAM_NATIVE_ATTRIBS_ARB
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#endif

#ifndef GL_PROGRAM_ADDRESS_REGISTERS_ARB
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B0
#endif

#ifndef GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
#endif

#ifndef GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
#endif

#ifndef GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
#endif

#ifndef GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#endif

#ifndef GL_MAX_PROGRAM_ENV_PARAMETERS_ARB
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#endif

#ifndef GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#endif

#ifndef GL_TRANSPOSE_CURRENT_MATRIX_ARB
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#endif

#ifndef GL_MATRIX0_ARB
#define GL_MATRIX0_ARB 0x88C0
#endif

#ifndef GL_MATRIX1_ARB
#define GL_MATRIX1_ARB 0x88C1
#endif

#ifndef GL_MATRIX2_ARB
#define GL_MATRIX2_ARB 0x88C2
#endif

#ifndef GL_MATRIX3_ARB
#define GL_MATRIX3_ARB 0x88C3
#endif

#ifndef GL_MATRIX4_ARB
#define GL_MATRIX4_ARB 0x88C4
#endif

#ifndef GL_MATRIX5_ARB
#define GL_MATRIX5_ARB 0x88C5
#endif

#ifndef GL_MATRIX6_ARB
#define GL_MATRIX6_ARB 0x88C6
#endif

#ifndef GL_MATRIX7_ARB
#define GL_MATRIX7_ARB 0x88C7
#endif

#ifndef GL_MATRIX8_ARB
#define GL_MATRIX8_ARB 0x88C8
#endif

#ifndef GL_MATRIX9_ARB
#define GL_MATRIX9_ARB 0x88C9
#endif

#ifndef GL_MATRIX10_ARB
#define GL_MATRIX10_ARB 0x88CA
#endif

#ifndef GL_MATRIX11_ARB
#define GL_MATRIX11_ARB 0x88CB
#endif

#ifndef GL_MATRIX12_ARB
#define GL_MATRIX12_ARB 0x88CC
#endif

#ifndef GL_MATRIX13_ARB
#define GL_MATRIX13_ARB 0x88CD
#endif

#ifndef GL_MATRIX14_ARB
#define GL_MATRIX14_ARB 0x88CE
#endif

#ifndef GL_MATRIX15_ARB
#define GL_MATRIX15_ARB 0x88CF
#endif

#ifndef GL_MATRIX16_ARB
#define GL_MATRIX16_ARB 0x88D0
#endif

#ifndef GL_MATRIX17_ARB
#define GL_MATRIX17_ARB 0x88D1
#endif

#ifndef GL_MATRIX18_ARB
#define GL_MATRIX18_ARB 0x88D2
#endif

#ifndef GL_MATRIX19_ARB
#define GL_MATRIX19_ARB 0x88D3
#endif

#ifndef GL_MATRIX20_ARB
#define GL_MATRIX20_ARB 0x88D4
#endif

#ifndef GL_MATRIX21_ARB
#define GL_MATRIX21_ARB 0x88D5
#endif

#ifndef GL_MATRIX22_ARB
#define GL_MATRIX22_ARB 0x88D6
#endif

#ifndef GL_MATRIX23_ARB
#define GL_MATRIX23_ARB 0x88D7
#endif

#ifndef GL_MATRIX24_ARB
#define GL_MATRIX24_ARB 0x88D8
#endif

#ifndef GL_MATRIX25_ARB
#define GL_MATRIX25_ARB 0x88D9
#endif

#ifndef GL_MATRIX26_ARB
#define GL_MATRIX26_ARB 0x88DA
#endif

#ifndef GL_MATRIX27_ARB
#define GL_MATRIX27_ARB 0x88DB
#endif

#ifndef GL_MATRIX28_ARB
#define GL_MATRIX28_ARB 0x88DC
#endif

#ifndef GL_MATRIX29_ARB
#define GL_MATRIX29_ARB 0x88DD
#endif

#ifndef GL_MATRIX30_ARB
#define GL_MATRIX30_ARB 0x88DE
#endif

#ifndef GL_MATRIX31_ARB
#define GL_MATRIX31_ARB 0x88DF
#endif

#ifndef GL_ARB_vertex_shader
#define GL_ARB_vertex_shader 1
#endif

#ifdef glVertexAttrib1fARB
#undef glVertexAttrib1fARB
#endif
#ifdef PFNGLVERTEXATTRIB1FARBPROC
#undef PFNGLVERTEXATTRIB1FARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FARBPROC)(GLuint index, GLfloat x);

#ifdef glVertexAttrib1sARB
#undef glVertexAttrib1sARB
#endif
#ifdef PFNGLVERTEXATTRIB1SARBPROC
#undef PFNGLVERTEXATTRIB1SARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1SARBPROC)(GLuint index, GLshort x);

#ifdef glVertexAttrib1dARB
#undef glVertexAttrib1dARB
#endif
#ifdef PFNGLVERTEXATTRIB1DARBPROC
#undef PFNGLVERTEXATTRIB1DARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1DARBPROC)(GLuint index, GLdouble x);

#ifdef glVertexAttrib2fARB
#undef glVertexAttrib2fARB
#endif
#ifdef PFNGLVERTEXATTRIB2FARBPROC
#undef PFNGLVERTEXATTRIB2FARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FARBPROC)(GLuint index, GLfloat x, GLfloat y);

#ifdef glVertexAttrib2sARB
#undef glVertexAttrib2sARB
#endif
#ifdef PFNGLVERTEXATTRIB2SARBPROC
#undef PFNGLVERTEXATTRIB2SARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2SARBPROC)(GLuint index, GLshort x, GLshort y);

#ifdef glVertexAttrib2dARB
#undef glVertexAttrib2dARB
#endif
#ifdef PFNGLVERTEXATTRIB2DARBPROC
#undef PFNGLVERTEXATTRIB2DARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2DARBPROC)(GLuint index, GLdouble x, GLdouble y);

#ifdef glVertexAttrib3fARB
#undef glVertexAttrib3fARB
#endif
#ifdef PFNGLVERTEXATTRIB3FARBPROC
#undef PFNGLVERTEXATTRIB3FARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);

#ifdef glVertexAttrib3sARB
#undef glVertexAttrib3sARB
#endif
#ifdef PFNGLVERTEXATTRIB3SARBPROC
#undef PFNGLVERTEXATTRIB3SARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z);

#ifdef glVertexAttrib3dARB
#undef glVertexAttrib3dARB
#endif
#ifdef PFNGLVERTEXATTRIB3DARBPROC
#undef PFNGLVERTEXATTRIB3DARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertexAttrib4fARB
#undef glVertexAttrib4fARB
#endif
#ifdef PFNGLVERTEXATTRIB4FARBPROC
#undef PFNGLVERTEXATTRIB4FARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FARBPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glVertexAttrib4sARB
#undef glVertexAttrib4sARB
#endif
#ifdef PFNGLVERTEXATTRIB4SARBPROC
#undef PFNGLVERTEXATTRIB4SARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4SARBPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);

#ifdef glVertexAttrib4dARB
#undef glVertexAttrib4dARB
#endif
#ifdef PFNGLVERTEXATTRIB4DARBPROC
#undef PFNGLVERTEXATTRIB4DARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4DARBPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertexAttrib4NubARB
#undef glVertexAttrib4NubARB
#endif
#ifdef PFNGLVERTEXATTRIB4NUBARBPROC
#undef PFNGLVERTEXATTRIB4NUBARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUBARBPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);

#ifdef glVertexAttrib1fvARB
#undef glVertexAttrib1fvARB
#endif
#ifdef PFNGLVERTEXATTRIB1FVARBPROC
#undef PFNGLVERTEXATTRIB1FVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FVARBPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib1svARB
#undef glVertexAttrib1svARB
#endif
#ifdef PFNGLVERTEXATTRIB1SVARBPROC
#undef PFNGLVERTEXATTRIB1SVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1SVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib1dvARB
#undef glVertexAttrib1dvARB
#endif
#ifdef PFNGLVERTEXATTRIB1DVARBPROC
#undef PFNGLVERTEXATTRIB1DVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1DVARBPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib2fvARB
#undef glVertexAttrib2fvARB
#endif
#ifdef PFNGLVERTEXATTRIB2FVARBPROC
#undef PFNGLVERTEXATTRIB2FVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FVARBPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib2svARB
#undef glVertexAttrib2svARB
#endif
#ifdef PFNGLVERTEXATTRIB2SVARBPROC
#undef PFNGLVERTEXATTRIB2SVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2SVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib2dvARB
#undef glVertexAttrib2dvARB
#endif
#ifdef PFNGLVERTEXATTRIB2DVARBPROC
#undef PFNGLVERTEXATTRIB2DVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2DVARBPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib3fvARB
#undef glVertexAttrib3fvARB
#endif
#ifdef PFNGLVERTEXATTRIB3FVARBPROC
#undef PFNGLVERTEXATTRIB3FVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FVARBPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib3svARB
#undef glVertexAttrib3svARB
#endif
#ifdef PFNGLVERTEXATTRIB3SVARBPROC
#undef PFNGLVERTEXATTRIB3SVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3SVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib3dvARB
#undef glVertexAttrib3dvARB
#endif
#ifdef PFNGLVERTEXATTRIB3DVARBPROC
#undef PFNGLVERTEXATTRIB3DVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3DVARBPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib4fvARB
#undef glVertexAttrib4fvARB
#endif
#ifdef PFNGLVERTEXATTRIB4FVARBPROC
#undef PFNGLVERTEXATTRIB4FVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FVARBPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib4svARB
#undef glVertexAttrib4svARB
#endif
#ifdef PFNGLVERTEXATTRIB4SVARBPROC
#undef PFNGLVERTEXATTRIB4SVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4SVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4dvARB
#undef glVertexAttrib4dvARB
#endif
#ifdef PFNGLVERTEXATTRIB4DVARBPROC
#undef PFNGLVERTEXATTRIB4DVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4DVARBPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib4ivARB
#undef glVertexAttrib4ivARB
#endif
#ifdef PFNGLVERTEXATTRIB4IVARBPROC
#undef PFNGLVERTEXATTRIB4IVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4IVARBPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttrib4bvARB
#undef glVertexAttrib4bvARB
#endif
#ifdef PFNGLVERTEXATTRIB4BVARBPROC
#undef PFNGLVERTEXATTRIB4BVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4BVARBPROC)(GLuint index, const GLbyte *v);

#ifdef glVertexAttrib4ubvARB
#undef glVertexAttrib4ubvARB
#endif
#ifdef PFNGLVERTEXATTRIB4UBVARBPROC
#undef PFNGLVERTEXATTRIB4UBVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4UBVARBPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttrib4usvARB
#undef glVertexAttrib4usvARB
#endif
#ifdef PFNGLVERTEXATTRIB4USVARBPROC
#undef PFNGLVERTEXATTRIB4USVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4USVARBPROC)(GLuint index, const GLushort *v);

#ifdef glVertexAttrib4uivARB
#undef glVertexAttrib4uivARB
#endif
#ifdef PFNGLVERTEXATTRIB4UIVARBPROC
#undef PFNGLVERTEXATTRIB4UIVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4UIVARBPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttrib4NbvARB
#undef glVertexAttrib4NbvARB
#endif
#ifdef PFNGLVERTEXATTRIB4NBVARBPROC
#undef PFNGLVERTEXATTRIB4NBVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NBVARBPROC)(GLuint index, const GLbyte *v);

#ifdef glVertexAttrib4NsvARB
#undef glVertexAttrib4NsvARB
#endif
#ifdef PFNGLVERTEXATTRIB4NSVARBPROC
#undef PFNGLVERTEXATTRIB4NSVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NSVARBPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4NivARB
#undef glVertexAttrib4NivARB
#endif
#ifdef PFNGLVERTEXATTRIB4NIVARBPROC
#undef PFNGLVERTEXATTRIB4NIVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NIVARBPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttrib4NubvARB
#undef glVertexAttrib4NubvARB
#endif
#ifdef PFNGLVERTEXATTRIB4NUBVARBPROC
#undef PFNGLVERTEXATTRIB4NUBVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUBVARBPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttrib4NusvARB
#undef glVertexAttrib4NusvARB
#endif
#ifdef PFNGLVERTEXATTRIB4NUSVARBPROC
#undef PFNGLVERTEXATTRIB4NUSVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUSVARBPROC)(GLuint index, const GLushort *v);

#ifdef glVertexAttrib4NuivARB
#undef glVertexAttrib4NuivARB
#endif
#ifdef PFNGLVERTEXATTRIB4NUIVARBPROC
#undef PFNGLVERTEXATTRIB4NUIVARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4NUIVARBPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribPointerARB
#undef glVertexAttribPointerARB
#endif
#ifdef PFNGLVERTEXATTRIBPOINTERARBPROC
#undef PFNGLVERTEXATTRIBPOINTERARBPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBPOINTERARBPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);

#ifdef glEnableVertexAttribArrayARB
#undef glEnableVertexAttribArrayARB
#endif
#ifdef PFNGLENABLEVERTEXATTRIBARRAYARBPROC
#undef PFNGLENABLEVERTEXATTRIBARRAYARBPROC
#endif
typedef void  (*PFNGLENABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);

#ifdef glDisableVertexAttribArrayARB
#undef glDisableVertexAttribArrayARB
#endif
#ifdef PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
#undef PFNGLDISABLEVERTEXATTRIBARRAYARBPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);

#ifdef glBindAttribLocationARB
#undef glBindAttribLocationARB
#endif
#ifdef PFNGLBINDATTRIBLOCATIONARBPROC
#undef PFNGLBINDATTRIBLOCATIONARBPROC
#endif
typedef void  (*PFNGLBINDATTRIBLOCATIONARBPROC)(GLhandleARB programObj, GLuint index, const GLcharARB *name);

#ifdef glGetActiveAttribARB
#undef glGetActiveAttribARB
#endif
#ifdef PFNGLGETACTIVEATTRIBARBPROC
#undef PFNGLGETACTIVEATTRIBARBPROC
#endif
typedef void  (*PFNGLGETACTIVEATTRIBARBPROC)(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);

#ifdef glGetAttribLocationARB
#undef glGetAttribLocationARB
#endif
#ifdef PFNGLGETATTRIBLOCATIONARBPROC
#undef PFNGLGETATTRIBLOCATIONARBPROC
#endif
typedef GLint  (*PFNGLGETATTRIBLOCATIONARBPROC)(GLhandleARB programObj, const GLcharARB *name);

#ifdef glGetVertexAttribdvARB
#undef glGetVertexAttribdvARB
#endif
#ifdef PFNGLGETVERTEXATTRIBDVARBPROC
#undef PFNGLGETVERTEXATTRIBDVARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBDVARBPROC)(GLuint index, GLenum pname, GLdouble *params);

#ifdef glGetVertexAttribfvARB
#undef glGetVertexAttribfvARB
#endif
#ifdef PFNGLGETVERTEXATTRIBFVARBPROC
#undef PFNGLGETVERTEXATTRIBFVARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBFVARBPROC)(GLuint index, GLenum pname, GLfloat *params);

#ifdef glGetVertexAttribivARB
#undef glGetVertexAttribivARB
#endif
#ifdef PFNGLGETVERTEXATTRIBIVARBPROC
#undef PFNGLGETVERTEXATTRIBIVARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIVARBPROC)(GLuint index, GLenum pname, GLint *params);

#ifdef glGetVertexAttribPointervARB
#undef glGetVertexAttribPointervARB
#endif
#ifdef PFNGLGETVERTEXATTRIBPOINTERVARBPROC
#undef PFNGLGETVERTEXATTRIBPOINTERVARBPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBPOINTERVARBPROC)(GLuint index, GLenum pname, void **pointer);

#ifndef GL_VERTEX_SHADER_ARB
#define GL_VERTEX_SHADER_ARB 0x8B31
#endif

#ifndef GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
#endif

#ifndef GL_MAX_VARYING_FLOATS_ARB
#define GL_MAX_VARYING_FLOATS_ARB 0x8B4B
#endif

#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#endif

#ifndef GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
#endif

#ifndef GL_OBJECT_ACTIVE_ATTRIBUTES_ARB
#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 0x8B89
#endif

#ifndef GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB
#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A
#endif

#ifndef GL_MAX_VERTEX_ATTRIBS_ARB
#define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
#endif

#ifndef GL_MAX_TEXTURE_COORDS_ARB
#define GL_MAX_TEXTURE_COORDS_ARB 0x8871
#endif

#ifndef GL_VERTEX_PROGRAM_POINT_SIZE_ARB
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB 0x8642
#endif

#ifndef GL_VERTEX_PROGRAM_TWO_SIDE_ARB
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB 0x8643
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 0x8623
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 0x8625
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#endif

#ifndef GL_CURRENT_VERTEX_ATTRIB_ARB
#define GL_CURRENT_VERTEX_ATTRIB_ARB 0x8626
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
#endif

#ifndef GL_FLOAT
#define GL_FLOAT 0x1406
#endif

#ifndef GL_FLOAT_VEC2_ARB
#define GL_FLOAT_VEC2_ARB 0x8B50
#endif

#ifndef GL_FLOAT_VEC3_ARB
#define GL_FLOAT_VEC3_ARB 0x8B51
#endif

#ifndef GL_FLOAT_VEC4_ARB
#define GL_FLOAT_VEC4_ARB 0x8B52
#endif

#ifndef GL_FLOAT_MAT2_ARB
#define GL_FLOAT_MAT2_ARB 0x8B5A
#endif

#ifndef GL_FLOAT_MAT3_ARB
#define GL_FLOAT_MAT3_ARB 0x8B5B
#endif

#ifndef GL_FLOAT_MAT4_ARB
#define GL_FLOAT_MAT4_ARB 0x8B5C
#endif

#ifndef GL_ARB_vertex_type_10f_11f_11f_rev
#define GL_ARB_vertex_type_10f_11f_11f_rev 1
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#endif

#ifndef GL_ARB_vertex_type_2_10_10_10_rev
#define GL_ARB_vertex_type_2_10_10_10_rev 1
#endif

#ifdef glVertexAttribP1ui
#undef glVertexAttribP1ui
#endif
#ifdef PFNGLVERTEXATTRIBP1UIPROC
#undef PFNGLVERTEXATTRIBP1UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP1UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);

#ifdef glVertexAttribP1uiv
#undef glVertexAttribP1uiv
#endif
#ifdef PFNGLVERTEXATTRIBP1UIVPROC
#undef PFNGLVERTEXATTRIBP1UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

#ifdef glVertexAttribP2ui
#undef glVertexAttribP2ui
#endif
#ifdef PFNGLVERTEXATTRIBP2UIPROC
#undef PFNGLVERTEXATTRIBP2UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP2UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);

#ifdef glVertexAttribP2uiv
#undef glVertexAttribP2uiv
#endif
#ifdef PFNGLVERTEXATTRIBP2UIVPROC
#undef PFNGLVERTEXATTRIBP2UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

#ifdef glVertexAttribP3ui
#undef glVertexAttribP3ui
#endif
#ifdef PFNGLVERTEXATTRIBP3UIPROC
#undef PFNGLVERTEXATTRIBP3UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP3UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);

#ifdef glVertexAttribP3uiv
#undef glVertexAttribP3uiv
#endif
#ifdef PFNGLVERTEXATTRIBP3UIVPROC
#undef PFNGLVERTEXATTRIBP3UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

#ifdef glVertexAttribP4ui
#undef glVertexAttribP4ui
#endif
#ifdef PFNGLVERTEXATTRIBP4UIPROC
#undef PFNGLVERTEXATTRIBP4UIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP4UIPROC)(GLuint index, GLenum type, GLboolean normalized, GLuint value);

#ifdef glVertexAttribP4uiv
#undef glVertexAttribP4uiv
#endif
#ifdef PFNGLVERTEXATTRIBP4UIVPROC
#undef PFNGLVERTEXATTRIBP4UIVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);

#ifndef GL_UNSIGNED_INT_2_10_10_10_REV
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#endif

#ifndef GL_INT_2_10_10_10_REV
#define GL_INT_2_10_10_10_REV 0x8D9F
#endif

#ifdef glVertexP2ui
#undef glVertexP2ui
#endif
#ifdef PFNGLVERTEXP2UIPROC
#undef PFNGLVERTEXP2UIPROC
#endif
typedef void  (*PFNGLVERTEXP2UIPROC)(GLenum type, GLuint value);

#ifdef glVertexP2uiv
#undef glVertexP2uiv
#endif
#ifdef PFNGLVERTEXP2UIVPROC
#undef PFNGLVERTEXP2UIVPROC
#endif
typedef void  (*PFNGLVERTEXP2UIVPROC)(GLenum type, const GLuint *value);

#ifdef glVertexP3ui
#undef glVertexP3ui
#endif
#ifdef PFNGLVERTEXP3UIPROC
#undef PFNGLVERTEXP3UIPROC
#endif
typedef void  (*PFNGLVERTEXP3UIPROC)(GLenum type, GLuint value);

#ifdef glVertexP3uiv
#undef glVertexP3uiv
#endif
#ifdef PFNGLVERTEXP3UIVPROC
#undef PFNGLVERTEXP3UIVPROC
#endif
typedef void  (*PFNGLVERTEXP3UIVPROC)(GLenum type, const GLuint *value);

#ifdef glVertexP4ui
#undef glVertexP4ui
#endif
#ifdef PFNGLVERTEXP4UIPROC
#undef PFNGLVERTEXP4UIPROC
#endif
typedef void  (*PFNGLVERTEXP4UIPROC)(GLenum type, GLuint value);

#ifdef glVertexP4uiv
#undef glVertexP4uiv
#endif
#ifdef PFNGLVERTEXP4UIVPROC
#undef PFNGLVERTEXP4UIVPROC
#endif
typedef void  (*PFNGLVERTEXP4UIVPROC)(GLenum type, const GLuint *value);

#ifdef glTexCoordP1ui
#undef glTexCoordP1ui
#endif
#ifdef PFNGLTEXCOORDP1UIPROC
#undef PFNGLTEXCOORDP1UIPROC
#endif
typedef void  (*PFNGLTEXCOORDP1UIPROC)(GLenum type, GLuint coords);

#ifdef glTexCoordP1uiv
#undef glTexCoordP1uiv
#endif
#ifdef PFNGLTEXCOORDP1UIVPROC
#undef PFNGLTEXCOORDP1UIVPROC
#endif
typedef void  (*PFNGLTEXCOORDP1UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glTexCoordP2ui
#undef glTexCoordP2ui
#endif
#ifdef PFNGLTEXCOORDP2UIPROC
#undef PFNGLTEXCOORDP2UIPROC
#endif
typedef void  (*PFNGLTEXCOORDP2UIPROC)(GLenum type, GLuint coords);

#ifdef glTexCoordP2uiv
#undef glTexCoordP2uiv
#endif
#ifdef PFNGLTEXCOORDP2UIVPROC
#undef PFNGLTEXCOORDP2UIVPROC
#endif
typedef void  (*PFNGLTEXCOORDP2UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glTexCoordP3ui
#undef glTexCoordP3ui
#endif
#ifdef PFNGLTEXCOORDP3UIPROC
#undef PFNGLTEXCOORDP3UIPROC
#endif
typedef void  (*PFNGLTEXCOORDP3UIPROC)(GLenum type, GLuint coords);

#ifdef glTexCoordP3uiv
#undef glTexCoordP3uiv
#endif
#ifdef PFNGLTEXCOORDP3UIVPROC
#undef PFNGLTEXCOORDP3UIVPROC
#endif
typedef void  (*PFNGLTEXCOORDP3UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glTexCoordP4ui
#undef glTexCoordP4ui
#endif
#ifdef PFNGLTEXCOORDP4UIPROC
#undef PFNGLTEXCOORDP4UIPROC
#endif
typedef void  (*PFNGLTEXCOORDP4UIPROC)(GLenum type, GLuint coords);

#ifdef glTexCoordP4uiv
#undef glTexCoordP4uiv
#endif
#ifdef PFNGLTEXCOORDP4UIVPROC
#undef PFNGLTEXCOORDP4UIVPROC
#endif
typedef void  (*PFNGLTEXCOORDP4UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glMultiTexCoordP1ui
#undef glMultiTexCoordP1ui
#endif
#ifdef PFNGLMULTITEXCOORDP1UIPROC
#undef PFNGLMULTITEXCOORDP1UIPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture, GLenum type, GLuint coords);

#ifdef glMultiTexCoordP1uiv
#undef glMultiTexCoordP1uiv
#endif
#ifdef PFNGLMULTITEXCOORDP1UIVPROC
#undef PFNGLMULTITEXCOORDP1UIVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);

#ifdef glMultiTexCoordP2ui
#undef glMultiTexCoordP2ui
#endif
#ifdef PFNGLMULTITEXCOORDP2UIPROC
#undef PFNGLMULTITEXCOORDP2UIPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture, GLenum type, GLuint coords);

#ifdef glMultiTexCoordP2uiv
#undef glMultiTexCoordP2uiv
#endif
#ifdef PFNGLMULTITEXCOORDP2UIVPROC
#undef PFNGLMULTITEXCOORDP2UIVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);

#ifdef glMultiTexCoordP3ui
#undef glMultiTexCoordP3ui
#endif
#ifdef PFNGLMULTITEXCOORDP3UIPROC
#undef PFNGLMULTITEXCOORDP3UIPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture, GLenum type, GLuint coords);

#ifdef glMultiTexCoordP3uiv
#undef glMultiTexCoordP3uiv
#endif
#ifdef PFNGLMULTITEXCOORDP3UIVPROC
#undef PFNGLMULTITEXCOORDP3UIVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);

#ifdef glMultiTexCoordP4ui
#undef glMultiTexCoordP4ui
#endif
#ifdef PFNGLMULTITEXCOORDP4UIPROC
#undef PFNGLMULTITEXCOORDP4UIPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture, GLenum type, GLuint coords);

#ifdef glMultiTexCoordP4uiv
#undef glMultiTexCoordP4uiv
#endif
#ifdef PFNGLMULTITEXCOORDP4UIVPROC
#undef PFNGLMULTITEXCOORDP4UIVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture, GLenum type, const GLuint *coords);

#ifdef glNormalP3ui
#undef glNormalP3ui
#endif
#ifdef PFNGLNORMALP3UIPROC
#undef PFNGLNORMALP3UIPROC
#endif
typedef void  (*PFNGLNORMALP3UIPROC)(GLenum type, GLuint coords);

#ifdef glNormalP3uiv
#undef glNormalP3uiv
#endif
#ifdef PFNGLNORMALP3UIVPROC
#undef PFNGLNORMALP3UIVPROC
#endif
typedef void  (*PFNGLNORMALP3UIVPROC)(GLenum type, const GLuint *coords);

#ifdef glColorP3ui
#undef glColorP3ui
#endif
#ifdef PFNGLCOLORP3UIPROC
#undef PFNGLCOLORP3UIPROC
#endif
typedef void  (*PFNGLCOLORP3UIPROC)(GLenum type, GLuint color);

#ifdef glColorP3uiv
#undef glColorP3uiv
#endif
#ifdef PFNGLCOLORP3UIVPROC
#undef PFNGLCOLORP3UIVPROC
#endif
typedef void  (*PFNGLCOLORP3UIVPROC)(GLenum type, const GLuint *color);

#ifdef glColorP4ui
#undef glColorP4ui
#endif
#ifdef PFNGLCOLORP4UIPROC
#undef PFNGLCOLORP4UIPROC
#endif
typedef void  (*PFNGLCOLORP4UIPROC)(GLenum type, GLuint color);

#ifdef glColorP4uiv
#undef glColorP4uiv
#endif
#ifdef PFNGLCOLORP4UIVPROC
#undef PFNGLCOLORP4UIVPROC
#endif
typedef void  (*PFNGLCOLORP4UIVPROC)(GLenum type, const GLuint *color);

#ifdef glSecondaryColorP3ui
#undef glSecondaryColorP3ui
#endif
#ifdef PFNGLSECONDARYCOLORP3UIPROC
#undef PFNGLSECONDARYCOLORP3UIPROC
#endif
typedef void  (*PFNGLSECONDARYCOLORP3UIPROC)(GLenum type, GLuint color);

#ifdef glSecondaryColorP3uiv
#undef glSecondaryColorP3uiv
#endif
#ifdef PFNGLSECONDARYCOLORP3UIVPROC
#undef PFNGLSECONDARYCOLORP3UIVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type, const GLuint *color);

#ifndef GL_ARB_viewport_array
#define GL_ARB_viewport_array 1
#endif

#ifdef glViewportArrayv
#undef glViewportArrayv
#endif
#ifdef PFNGLVIEWPORTARRAYVPROC
#undef PFNGLVIEWPORTARRAYVPROC
#endif
typedef void  (*PFNGLVIEWPORTARRAYVPROC)(GLuint first, GLsizei count, const GLfloat *v);

#ifdef glViewportIndexedf
#undef glViewportIndexedf
#endif
#ifdef PFNGLVIEWPORTINDEXEDFPROC
#undef PFNGLVIEWPORTINDEXEDFPROC
#endif
typedef void  (*PFNGLVIEWPORTINDEXEDFPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);

#ifdef glViewportIndexedfv
#undef glViewportIndexedfv
#endif
#ifdef PFNGLVIEWPORTINDEXEDFVPROC
#undef PFNGLVIEWPORTINDEXEDFVPROC
#endif
typedef void  (*PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index, const GLfloat *v);

#ifdef glScissorArrayv
#undef glScissorArrayv
#endif
#ifdef PFNGLSCISSORARRAYVPROC
#undef PFNGLSCISSORARRAYVPROC
#endif
typedef void  (*PFNGLSCISSORARRAYVPROC)(GLuint first, GLsizei count, const GLint *v);

#ifdef glScissorIndexed
#undef glScissorIndexed
#endif
#ifdef PFNGLSCISSORINDEXEDPROC
#undef PFNGLSCISSORINDEXEDPROC
#endif
typedef void  (*PFNGLSCISSORINDEXEDPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);

#ifdef glScissorIndexedv
#undef glScissorIndexedv
#endif
#ifdef PFNGLSCISSORINDEXEDVPROC
#undef PFNGLSCISSORINDEXEDVPROC
#endif
typedef void  (*PFNGLSCISSORINDEXEDVPROC)(GLuint index, const GLint *v);

#ifdef glDepthRangeArrayv
#undef glDepthRangeArrayv
#endif
#ifdef PFNGLDEPTHRANGEARRAYVPROC
#undef PFNGLDEPTHRANGEARRAYVPROC
#endif
typedef void  (*PFNGLDEPTHRANGEARRAYVPROC)(GLuint first, GLsizei count, const GLdouble *v);

#ifdef glDepthRangeIndexed
#undef glDepthRangeIndexed
#endif
#ifdef PFNGLDEPTHRANGEINDEXEDPROC
#undef PFNGLDEPTHRANGEINDEXEDPROC
#endif
typedef void  (*PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index, GLdouble n, GLdouble f);

#ifdef glGetFloati_v
#undef glGetFloati_v
#endif
#ifdef PFNGLGETFLOATI_VPROC
#undef PFNGLGETFLOATI_VPROC
#endif
typedef void  (*PFNGLGETFLOATI_VPROC)(GLenum target, GLuint index, GLfloat *data);

#ifdef glGetDoublei_v
#undef glGetDoublei_v
#endif
#ifdef PFNGLGETDOUBLEI_VPROC
#undef PFNGLGETDOUBLEI_VPROC
#endif
typedef void  (*PFNGLGETDOUBLEI_VPROC)(GLenum target, GLuint index, GLdouble *data);

#ifndef GL_SCISSOR_BOX
#define GL_SCISSOR_BOX 0x0C10
#endif

#ifndef GL_VIEWPORT
#define GL_VIEWPORT 0x0BA2
#endif

#ifndef GL_DEPTH_RANGE
#define GL_DEPTH_RANGE 0x0B70
#endif

#ifndef GL_SCISSOR_TEST
#define GL_SCISSOR_TEST 0x0C11
#endif

#ifndef GL_MAX_VIEWPORTS
#define GL_MAX_VIEWPORTS 0x825B
#endif

#ifndef GL_VIEWPORT_SUBPIXEL_BITS
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#endif

#ifndef GL_VIEWPORT_BOUNDS_RANGE
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#endif

#ifndef GL_LAYER_PROVOKING_VERTEX
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#endif

#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#endif

#ifndef GL_UNDEFINED_VERTEX
#define GL_UNDEFINED_VERTEX 0x8260
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#endif

#ifndef GL_PROVOKING_VERTEX
#define GL_PROVOKING_VERTEX 0x8E4F
#endif

#ifndef GL_ARB_window_pos
#define GL_ARB_window_pos 1
#endif

#ifdef glWindowPos2dARB
#undef glWindowPos2dARB
#endif
#ifdef PFNGLWINDOWPOS2DARBPROC
#undef PFNGLWINDOWPOS2DARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS2DARBPROC)(GLdouble x, GLdouble y);

#ifdef glWindowPos2dvARB
#undef glWindowPos2dvARB
#endif
#ifdef PFNGLWINDOWPOS2DVARBPROC
#undef PFNGLWINDOWPOS2DVARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS2DVARBPROC)(const GLdouble *v);

#ifdef glWindowPos2fARB
#undef glWindowPos2fARB
#endif
#ifdef PFNGLWINDOWPOS2FARBPROC
#undef PFNGLWINDOWPOS2FARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS2FARBPROC)(GLfloat x, GLfloat y);

#ifdef glWindowPos2fvARB
#undef glWindowPos2fvARB
#endif
#ifdef PFNGLWINDOWPOS2FVARBPROC
#undef PFNGLWINDOWPOS2FVARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS2FVARBPROC)(const GLfloat *v);

#ifdef glWindowPos2iARB
#undef glWindowPos2iARB
#endif
#ifdef PFNGLWINDOWPOS2IARBPROC
#undef PFNGLWINDOWPOS2IARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS2IARBPROC)(GLint x, GLint y);

#ifdef glWindowPos2ivARB
#undef glWindowPos2ivARB
#endif
#ifdef PFNGLWINDOWPOS2IVARBPROC
#undef PFNGLWINDOWPOS2IVARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS2IVARBPROC)(const GLint *v);

#ifdef glWindowPos2sARB
#undef glWindowPos2sARB
#endif
#ifdef PFNGLWINDOWPOS2SARBPROC
#undef PFNGLWINDOWPOS2SARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS2SARBPROC)(GLshort x, GLshort y);

#ifdef glWindowPos2svARB
#undef glWindowPos2svARB
#endif
#ifdef PFNGLWINDOWPOS2SVARBPROC
#undef PFNGLWINDOWPOS2SVARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS2SVARBPROC)(const GLshort *v);

#ifdef glWindowPos3dARB
#undef glWindowPos3dARB
#endif
#ifdef PFNGLWINDOWPOS3DARBPROC
#undef PFNGLWINDOWPOS3DARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS3DARBPROC)(GLdouble x, GLdouble y, GLdouble z);

#ifdef glWindowPos3dvARB
#undef glWindowPos3dvARB
#endif
#ifdef PFNGLWINDOWPOS3DVARBPROC
#undef PFNGLWINDOWPOS3DVARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS3DVARBPROC)(const GLdouble *v);

#ifdef glWindowPos3fARB
#undef glWindowPos3fARB
#endif
#ifdef PFNGLWINDOWPOS3FARBPROC
#undef PFNGLWINDOWPOS3FARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS3FARBPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifdef glWindowPos3fvARB
#undef glWindowPos3fvARB
#endif
#ifdef PFNGLWINDOWPOS3FVARBPROC
#undef PFNGLWINDOWPOS3FVARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS3FVARBPROC)(const GLfloat *v);

#ifdef glWindowPos3iARB
#undef glWindowPos3iARB
#endif
#ifdef PFNGLWINDOWPOS3IARBPROC
#undef PFNGLWINDOWPOS3IARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS3IARBPROC)(GLint x, GLint y, GLint z);

#ifdef glWindowPos3ivARB
#undef glWindowPos3ivARB
#endif
#ifdef PFNGLWINDOWPOS3IVARBPROC
#undef PFNGLWINDOWPOS3IVARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS3IVARBPROC)(const GLint *v);

#ifdef glWindowPos3sARB
#undef glWindowPos3sARB
#endif
#ifdef PFNGLWINDOWPOS3SARBPROC
#undef PFNGLWINDOWPOS3SARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS3SARBPROC)(GLshort x, GLshort y, GLshort z);

#ifdef glWindowPos3svARB
#undef glWindowPos3svARB
#endif
#ifdef PFNGLWINDOWPOS3SVARBPROC
#undef PFNGLWINDOWPOS3SVARBPROC
#endif
typedef void  (*PFNGLWINDOWPOS3SVARBPROC)(const GLshort *v);

#ifndef GL_ARM_mali_program_binary
#define GL_ARM_mali_program_binary 1
#endif

#ifndef GL_MALI_PROGRAM_BINARY_ARM
#define GL_MALI_PROGRAM_BINARY_ARM 0x8F61
#endif

#ifndef GL_ARM_mali_shader_binary
#define GL_ARM_mali_shader_binary 1
#endif

#ifndef GL_MALI_SHADER_BINARY_ARM
#define GL_MALI_SHADER_BINARY_ARM 0x8F60
#endif

#ifndef GL_ARM_rgba8
#define GL_ARM_rgba8 1
#endif

#ifndef GL_ARM_shader_framebuffer_fetch
#define GL_ARM_shader_framebuffer_fetch 1
#endif

#ifndef GL_FETCH_PER_SAMPLE_ARM
#define GL_FETCH_PER_SAMPLE_ARM 0x8F65
#endif

#ifndef GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM
#define GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM 0x8F66
#endif

#ifndef GL_ARM_shader_framebuffer_fetch_depth_stencil
#define GL_ARM_shader_framebuffer_fetch_depth_stencil 1
#endif

#ifndef GL_ATI_draw_buffers
#define GL_ATI_draw_buffers 1
#endif

#ifdef glDrawBuffersATI
#undef glDrawBuffersATI
#endif
#ifdef PFNGLDRAWBUFFERSATIPROC
#undef PFNGLDRAWBUFFERSATIPROC
#endif
typedef void  (*PFNGLDRAWBUFFERSATIPROC)(GLsizei n, const GLenum *bufs);

#ifndef GL_MAX_DRAW_BUFFERS_ATI
#define GL_MAX_DRAW_BUFFERS_ATI 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_ATI
#define GL_DRAW_BUFFER0_ATI 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_ATI
#define GL_DRAW_BUFFER1_ATI 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_ATI
#define GL_DRAW_BUFFER2_ATI 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_ATI
#define GL_DRAW_BUFFER3_ATI 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_ATI
#define GL_DRAW_BUFFER4_ATI 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_ATI
#define GL_DRAW_BUFFER5_ATI 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_ATI
#define GL_DRAW_BUFFER6_ATI 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_ATI
#define GL_DRAW_BUFFER7_ATI 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_ATI
#define GL_DRAW_BUFFER8_ATI 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_ATI
#define GL_DRAW_BUFFER9_ATI 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_ATI
#define GL_DRAW_BUFFER10_ATI 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_ATI
#define GL_DRAW_BUFFER11_ATI 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_ATI
#define GL_DRAW_BUFFER12_ATI 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_ATI
#define GL_DRAW_BUFFER13_ATI 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_ATI
#define GL_DRAW_BUFFER14_ATI 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_ATI
#define GL_DRAW_BUFFER15_ATI 0x8834
#endif

#ifndef GL_ATI_element_array
#define GL_ATI_element_array 1
#endif

#ifdef glElementPointerATI
#undef glElementPointerATI
#endif
#ifdef PFNGLELEMENTPOINTERATIPROC
#undef PFNGLELEMENTPOINTERATIPROC
#endif
typedef void  (*PFNGLELEMENTPOINTERATIPROC)(GLenum type, const void *pointer);

#ifdef glDrawElementArrayATI
#undef glDrawElementArrayATI
#endif
#ifdef PFNGLDRAWELEMENTARRAYATIPROC
#undef PFNGLDRAWELEMENTARRAYATIPROC
#endif
typedef void  (*PFNGLDRAWELEMENTARRAYATIPROC)(GLenum mode, GLsizei count);

#ifdef glDrawRangeElementArrayATI
#undef glDrawRangeElementArrayATI
#endif
#ifdef PFNGLDRAWRANGEELEMENTARRAYATIPROC
#undef PFNGLDRAWRANGEELEMENTARRAYATIPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTARRAYATIPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count);

#ifndef GL_ELEMENT_ARRAY_ATI
#define GL_ELEMENT_ARRAY_ATI 0x8768
#endif

#ifndef GL_ELEMENT_ARRAY_TYPE_ATI
#define GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
#endif

#ifndef GL_ELEMENT_ARRAY_POINTER_ATI
#define GL_ELEMENT_ARRAY_POINTER_ATI 0x876A
#endif

#ifndef GL_ATI_envmap_bumpmap
#define GL_ATI_envmap_bumpmap 1
#endif

#ifdef glTexBumpParameterivATI
#undef glTexBumpParameterivATI
#endif
#ifdef PFNGLTEXBUMPPARAMETERIVATIPROC
#undef PFNGLTEXBUMPPARAMETERIVATIPROC
#endif
typedef void  (*PFNGLTEXBUMPPARAMETERIVATIPROC)(GLenum pname, const GLint *param);

#ifdef glTexBumpParameterfvATI
#undef glTexBumpParameterfvATI
#endif
#ifdef PFNGLTEXBUMPPARAMETERFVATIPROC
#undef PFNGLTEXBUMPPARAMETERFVATIPROC
#endif
typedef void  (*PFNGLTEXBUMPPARAMETERFVATIPROC)(GLenum pname, const GLfloat *param);

#ifdef glGetTexBumpParameterivATI
#undef glGetTexBumpParameterivATI
#endif
#ifdef PFNGLGETTEXBUMPPARAMETERIVATIPROC
#undef PFNGLGETTEXBUMPPARAMETERIVATIPROC
#endif
typedef void  (*PFNGLGETTEXBUMPPARAMETERIVATIPROC)(GLenum pname, GLint *param);

#ifdef glGetTexBumpParameterfvATI
#undef glGetTexBumpParameterfvATI
#endif
#ifdef PFNGLGETTEXBUMPPARAMETERFVATIPROC
#undef PFNGLGETTEXBUMPPARAMETERFVATIPROC
#endif
typedef void  (*PFNGLGETTEXBUMPPARAMETERFVATIPROC)(GLenum pname, GLfloat *param);

#ifndef GL_BUMP_ROT_MATRIX_ATI
#define GL_BUMP_ROT_MATRIX_ATI 0x8775
#endif

#ifndef GL_BUMP_ROT_MATRIX_SIZE_ATI
#define GL_BUMP_ROT_MATRIX_SIZE_ATI 0x8776
#endif

#ifndef GL_BUMP_NUM_TEX_UNITS_ATI
#define GL_BUMP_NUM_TEX_UNITS_ATI 0x8777
#endif

#ifndef GL_BUMP_TEX_UNITS_ATI
#define GL_BUMP_TEX_UNITS_ATI 0x8778
#endif

#ifndef GL_DUDV_ATI
#define GL_DUDV_ATI 0x8779
#endif

#ifndef GL_DU8DV8_ATI
#define GL_DU8DV8_ATI 0x877A
#endif

#ifndef GL_BUMP_ENVMAP_ATI
#define GL_BUMP_ENVMAP_ATI 0x877B
#endif

#ifndef GL_BUMP_TARGET_ATI
#define GL_BUMP_TARGET_ATI 0x877C
#endif

#ifndef GL_ATI_fragment_shader
#define GL_ATI_fragment_shader 1
#endif

#ifdef glGenFragmentShadersATI
#undef glGenFragmentShadersATI
#endif
#ifdef PFNGLGENFRAGMENTSHADERSATIPROC
#undef PFNGLGENFRAGMENTSHADERSATIPROC
#endif
typedef GLuint  (*PFNGLGENFRAGMENTSHADERSATIPROC)(GLuint range);

#ifdef glBindFragmentShaderATI
#undef glBindFragmentShaderATI
#endif
#ifdef PFNGLBINDFRAGMENTSHADERATIPROC
#undef PFNGLBINDFRAGMENTSHADERATIPROC
#endif
typedef void  (*PFNGLBINDFRAGMENTSHADERATIPROC)(GLuint id);

#ifdef glDeleteFragmentShaderATI
#undef glDeleteFragmentShaderATI
#endif
#ifdef PFNGLDELETEFRAGMENTSHADERATIPROC
#undef PFNGLDELETEFRAGMENTSHADERATIPROC
#endif
typedef void  (*PFNGLDELETEFRAGMENTSHADERATIPROC)(GLuint id);

#ifdef glBeginFragmentShaderATI
#undef glBeginFragmentShaderATI
#endif
#ifdef PFNGLBEGINFRAGMENTSHADERATIPROC
#undef PFNGLBEGINFRAGMENTSHADERATIPROC
#endif
typedef void  (*PFNGLBEGINFRAGMENTSHADERATIPROC)(void);

#ifdef glEndFragmentShaderATI
#undef glEndFragmentShaderATI
#endif
#ifdef PFNGLENDFRAGMENTSHADERATIPROC
#undef PFNGLENDFRAGMENTSHADERATIPROC
#endif
typedef void  (*PFNGLENDFRAGMENTSHADERATIPROC)(void);

#ifdef glPassTexCoordATI
#undef glPassTexCoordATI
#endif
#ifdef PFNGLPASSTEXCOORDATIPROC
#undef PFNGLPASSTEXCOORDATIPROC
#endif
typedef void  (*PFNGLPASSTEXCOORDATIPROC)(GLuint dst, GLuint coord, GLenum swizzle);

#ifdef glSampleMapATI
#undef glSampleMapATI
#endif
#ifdef PFNGLSAMPLEMAPATIPROC
#undef PFNGLSAMPLEMAPATIPROC
#endif
typedef void  (*PFNGLSAMPLEMAPATIPROC)(GLuint dst, GLuint interp, GLenum swizzle);

#ifdef glColorFragmentOp1ATI
#undef glColorFragmentOp1ATI
#endif
#ifdef PFNGLCOLORFRAGMENTOP1ATIPROC
#undef PFNGLCOLORFRAGMENTOP1ATIPROC
#endif
typedef void  (*PFNGLCOLORFRAGMENTOP1ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);

#ifdef glColorFragmentOp2ATI
#undef glColorFragmentOp2ATI
#endif
#ifdef PFNGLCOLORFRAGMENTOP2ATIPROC
#undef PFNGLCOLORFRAGMENTOP2ATIPROC
#endif
typedef void  (*PFNGLCOLORFRAGMENTOP2ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);

#ifdef glColorFragmentOp3ATI
#undef glColorFragmentOp3ATI
#endif
#ifdef PFNGLCOLORFRAGMENTOP3ATIPROC
#undef PFNGLCOLORFRAGMENTOP3ATIPROC
#endif
typedef void  (*PFNGLCOLORFRAGMENTOP3ATIPROC)(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);

#ifdef glAlphaFragmentOp1ATI
#undef glAlphaFragmentOp1ATI
#endif
#ifdef PFNGLALPHAFRAGMENTOP1ATIPROC
#undef PFNGLALPHAFRAGMENTOP1ATIPROC
#endif
typedef void  (*PFNGLALPHAFRAGMENTOP1ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);

#ifdef glAlphaFragmentOp2ATI
#undef glAlphaFragmentOp2ATI
#endif
#ifdef PFNGLALPHAFRAGMENTOP2ATIPROC
#undef PFNGLALPHAFRAGMENTOP2ATIPROC
#endif
typedef void  (*PFNGLALPHAFRAGMENTOP2ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);

#ifdef glAlphaFragmentOp3ATI
#undef glAlphaFragmentOp3ATI
#endif
#ifdef PFNGLALPHAFRAGMENTOP3ATIPROC
#undef PFNGLALPHAFRAGMENTOP3ATIPROC
#endif
typedef void  (*PFNGLALPHAFRAGMENTOP3ATIPROC)(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);

#ifdef glSetFragmentShaderConstantATI
#undef glSetFragmentShaderConstantATI
#endif
#ifdef PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
#undef PFNGLSETFRAGMENTSHADERCONSTANTATIPROC
#endif
typedef void  (*PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)(GLuint dst, const GLfloat *value);

#ifndef GL_FRAGMENT_SHADER_ATI
#define GL_FRAGMENT_SHADER_ATI 0x8920
#endif

#ifndef GL_REG_0_ATI
#define GL_REG_0_ATI 0x8921
#endif

#ifndef GL_REG_1_ATI
#define GL_REG_1_ATI 0x8922
#endif

#ifndef GL_REG_2_ATI
#define GL_REG_2_ATI 0x8923
#endif

#ifndef GL_REG_3_ATI
#define GL_REG_3_ATI 0x8924
#endif

#ifndef GL_REG_4_ATI
#define GL_REG_4_ATI 0x8925
#endif

#ifndef GL_REG_5_ATI
#define GL_REG_5_ATI 0x8926
#endif

#ifndef GL_REG_6_ATI
#define GL_REG_6_ATI 0x8927
#endif

#ifndef GL_REG_7_ATI
#define GL_REG_7_ATI 0x8928
#endif

#ifndef GL_REG_8_ATI
#define GL_REG_8_ATI 0x8929
#endif

#ifndef GL_REG_9_ATI
#define GL_REG_9_ATI 0x892A
#endif

#ifndef GL_REG_10_ATI
#define GL_REG_10_ATI 0x892B
#endif

#ifndef GL_REG_11_ATI
#define GL_REG_11_ATI 0x892C
#endif

#ifndef GL_REG_12_ATI
#define GL_REG_12_ATI 0x892D
#endif

#ifndef GL_REG_13_ATI
#define GL_REG_13_ATI 0x892E
#endif

#ifndef GL_REG_14_ATI
#define GL_REG_14_ATI 0x892F
#endif

#ifndef GL_REG_15_ATI
#define GL_REG_15_ATI 0x8930
#endif

#ifndef GL_REG_16_ATI
#define GL_REG_16_ATI 0x8931
#endif

#ifndef GL_REG_17_ATI
#define GL_REG_17_ATI 0x8932
#endif

#ifndef GL_REG_18_ATI
#define GL_REG_18_ATI 0x8933
#endif

#ifndef GL_REG_19_ATI
#define GL_REG_19_ATI 0x8934
#endif

#ifndef GL_REG_20_ATI
#define GL_REG_20_ATI 0x8935
#endif

#ifndef GL_REG_21_ATI
#define GL_REG_21_ATI 0x8936
#endif

#ifndef GL_REG_22_ATI
#define GL_REG_22_ATI 0x8937
#endif

#ifndef GL_REG_23_ATI
#define GL_REG_23_ATI 0x8938
#endif

#ifndef GL_REG_24_ATI
#define GL_REG_24_ATI 0x8939
#endif

#ifndef GL_REG_25_ATI
#define GL_REG_25_ATI 0x893A
#endif

#ifndef GL_REG_26_ATI
#define GL_REG_26_ATI 0x893B
#endif

#ifndef GL_REG_27_ATI
#define GL_REG_27_ATI 0x893C
#endif

#ifndef GL_REG_28_ATI
#define GL_REG_28_ATI 0x893D
#endif

#ifndef GL_REG_29_ATI
#define GL_REG_29_ATI 0x893E
#endif

#ifndef GL_REG_30_ATI
#define GL_REG_30_ATI 0x893F
#endif

#ifndef GL_REG_31_ATI
#define GL_REG_31_ATI 0x8940
#endif

#ifndef GL_CON_0_ATI
#define GL_CON_0_ATI 0x8941
#endif

#ifndef GL_CON_1_ATI
#define GL_CON_1_ATI 0x8942
#endif

#ifndef GL_CON_2_ATI
#define GL_CON_2_ATI 0x8943
#endif

#ifndef GL_CON_3_ATI
#define GL_CON_3_ATI 0x8944
#endif

#ifndef GL_CON_4_ATI
#define GL_CON_4_ATI 0x8945
#endif

#ifndef GL_CON_5_ATI
#define GL_CON_5_ATI 0x8946
#endif

#ifndef GL_CON_6_ATI
#define GL_CON_6_ATI 0x8947
#endif

#ifndef GL_CON_7_ATI
#define GL_CON_7_ATI 0x8948
#endif

#ifndef GL_CON_8_ATI
#define GL_CON_8_ATI 0x8949
#endif

#ifndef GL_CON_9_ATI
#define GL_CON_9_ATI 0x894A
#endif

#ifndef GL_CON_10_ATI
#define GL_CON_10_ATI 0x894B
#endif

#ifndef GL_CON_11_ATI
#define GL_CON_11_ATI 0x894C
#endif

#ifndef GL_CON_12_ATI
#define GL_CON_12_ATI 0x894D
#endif

#ifndef GL_CON_13_ATI
#define GL_CON_13_ATI 0x894E
#endif

#ifndef GL_CON_14_ATI
#define GL_CON_14_ATI 0x894F
#endif

#ifndef GL_CON_15_ATI
#define GL_CON_15_ATI 0x8950
#endif

#ifndef GL_CON_16_ATI
#define GL_CON_16_ATI 0x8951
#endif

#ifndef GL_CON_17_ATI
#define GL_CON_17_ATI 0x8952
#endif

#ifndef GL_CON_18_ATI
#define GL_CON_18_ATI 0x8953
#endif

#ifndef GL_CON_19_ATI
#define GL_CON_19_ATI 0x8954
#endif

#ifndef GL_CON_20_ATI
#define GL_CON_20_ATI 0x8955
#endif

#ifndef GL_CON_21_ATI
#define GL_CON_21_ATI 0x8956
#endif

#ifndef GL_CON_22_ATI
#define GL_CON_22_ATI 0x8957
#endif

#ifndef GL_CON_23_ATI
#define GL_CON_23_ATI 0x8958
#endif

#ifndef GL_CON_24_ATI
#define GL_CON_24_ATI 0x8959
#endif

#ifndef GL_CON_25_ATI
#define GL_CON_25_ATI 0x895A
#endif

#ifndef GL_CON_26_ATI
#define GL_CON_26_ATI 0x895B
#endif

#ifndef GL_CON_27_ATI
#define GL_CON_27_ATI 0x895C
#endif

#ifndef GL_CON_28_ATI
#define GL_CON_28_ATI 0x895D
#endif

#ifndef GL_CON_29_ATI
#define GL_CON_29_ATI 0x895E
#endif

#ifndef GL_CON_30_ATI
#define GL_CON_30_ATI 0x895F
#endif

#ifndef GL_CON_31_ATI
#define GL_CON_31_ATI 0x8960
#endif

#ifndef GL_MOV_ATI
#define GL_MOV_ATI 0x8961
#endif

#ifndef GL_ADD_ATI
#define GL_ADD_ATI 0x8963
#endif

#ifndef GL_MUL_ATI
#define GL_MUL_ATI 0x8964
#endif

#ifndef GL_SUB_ATI
#define GL_SUB_ATI 0x8965
#endif

#ifndef GL_DOT3_ATI
#define GL_DOT3_ATI 0x8966
#endif

#ifndef GL_DOT4_ATI
#define GL_DOT4_ATI 0x8967
#endif

#ifndef GL_MAD_ATI
#define GL_MAD_ATI 0x8968
#endif

#ifndef GL_LERP_ATI
#define GL_LERP_ATI 0x8969
#endif

#ifndef GL_CND_ATI
#define GL_CND_ATI 0x896A
#endif

#ifndef GL_CND0_ATI
#define GL_CND0_ATI 0x896B
#endif

#ifndef GL_DOT2_ADD_ATI
#define GL_DOT2_ADD_ATI 0x896C
#endif

#ifndef GL_SECONDARY_INTERPOLATOR_ATI
#define GL_SECONDARY_INTERPOLATOR_ATI 0x896D
#endif

#ifndef GL_NUM_FRAGMENT_REGISTERS_ATI
#define GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
#endif

#ifndef GL_NUM_FRAGMENT_CONSTANTS_ATI
#define GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
#endif

#ifndef GL_NUM_PASSES_ATI
#define GL_NUM_PASSES_ATI 0x8970
#endif

#ifndef GL_NUM_INSTRUCTIONS_PER_PASS_ATI
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
#endif

#ifndef GL_NUM_INSTRUCTIONS_TOTAL_ATI
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
#endif

#ifndef GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#endif

#ifndef GL_NUM_LOOPBACK_COMPONENTS_ATI
#define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
#endif

#ifndef GL_COLOR_ALPHA_PAIRING_ATI
#define GL_COLOR_ALPHA_PAIRING_ATI 0x8975
#endif

#ifndef GL_SWIZZLE_STR_ATI
#define GL_SWIZZLE_STR_ATI 0x8976
#endif

#ifndef GL_SWIZZLE_STQ_ATI
#define GL_SWIZZLE_STQ_ATI 0x8977
#endif

#ifndef GL_SWIZZLE_STR_DR_ATI
#define GL_SWIZZLE_STR_DR_ATI 0x8978
#endif

#ifndef GL_SWIZZLE_STQ_DQ_ATI
#define GL_SWIZZLE_STQ_DQ_ATI 0x8979
#endif

#ifndef GL_SWIZZLE_STRQ_ATI
#define GL_SWIZZLE_STRQ_ATI 0x897A
#endif

#ifndef GL_SWIZZLE_STRQ_DQ_ATI
#define GL_SWIZZLE_STRQ_DQ_ATI 0x897B
#endif

#ifndef GL_RED_BIT_ATI
#define GL_RED_BIT_ATI 0x00000001
#endif

#ifndef GL_GREEN_BIT_ATI
#define GL_GREEN_BIT_ATI 0x00000002
#endif

#ifndef GL_BLUE_BIT_ATI
#define GL_BLUE_BIT_ATI 0x00000004
#endif

#ifndef GL_2X_BIT_ATI
#define GL_2X_BIT_ATI 0x00000001
#endif

#ifndef GL_4X_BIT_ATI
#define GL_4X_BIT_ATI 0x00000002
#endif

#ifndef GL_8X_BIT_ATI
#define GL_8X_BIT_ATI 0x00000004
#endif

#ifndef GL_HALF_BIT_ATI
#define GL_HALF_BIT_ATI 0x00000008
#endif

#ifndef GL_QUARTER_BIT_ATI
#define GL_QUARTER_BIT_ATI 0x00000010
#endif

#ifndef GL_EIGHTH_BIT_ATI
#define GL_EIGHTH_BIT_ATI 0x00000020
#endif

#ifndef GL_SATURATE_BIT_ATI
#define GL_SATURATE_BIT_ATI 0x00000040
#endif

#ifndef GL_COMP_BIT_ATI
#define GL_COMP_BIT_ATI 0x00000002
#endif

#ifndef GL_NEGATE_BIT_ATI
#define GL_NEGATE_BIT_ATI 0x00000004
#endif

#ifndef GL_BIAS_BIT_ATI
#define GL_BIAS_BIT_ATI 0x00000008
#endif

#ifndef GL_ATI_map_object_buffer
#define GL_ATI_map_object_buffer 1
#endif

#ifdef glMapObjectBufferATI
#undef glMapObjectBufferATI
#endif
#ifdef PFNGLMAPOBJECTBUFFERATIPROC
#undef PFNGLMAPOBJECTBUFFERATIPROC
#endif
typedef void * (*PFNGLMAPOBJECTBUFFERATIPROC)(GLuint buffer);

#ifdef glUnmapObjectBufferATI
#undef glUnmapObjectBufferATI
#endif
#ifdef PFNGLUNMAPOBJECTBUFFERATIPROC
#undef PFNGLUNMAPOBJECTBUFFERATIPROC
#endif
typedef void  (*PFNGLUNMAPOBJECTBUFFERATIPROC)(GLuint buffer);

#ifndef GL_ATI_meminfo
#define GL_ATI_meminfo 1
#endif

#ifndef GL_VBO_FREE_MEMORY_ATI
#define GL_VBO_FREE_MEMORY_ATI 0x87FB
#endif

#ifndef GL_TEXTURE_FREE_MEMORY_ATI
#define GL_TEXTURE_FREE_MEMORY_ATI 0x87FC
#endif

#ifndef GL_RENDERBUFFER_FREE_MEMORY_ATI
#define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD
#endif

#ifndef GL_ATI_pixel_format_float
#define GL_ATI_pixel_format_float 1
#endif

#ifndef GL_RGBA_FLOAT_MODE_ATI
#define GL_RGBA_FLOAT_MODE_ATI 0x8820
#endif

#ifndef GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
#endif

#ifndef GL_ATI_pn_triangles
#define GL_ATI_pn_triangles 1
#endif

#ifdef glPNTrianglesiATI
#undef glPNTrianglesiATI
#endif
#ifdef PFNGLPNTRIANGLESIATIPROC
#undef PFNGLPNTRIANGLESIATIPROC
#endif
typedef void  (*PFNGLPNTRIANGLESIATIPROC)(GLenum pname, GLint param);

#ifdef glPNTrianglesfATI
#undef glPNTrianglesfATI
#endif
#ifdef PFNGLPNTRIANGLESFATIPROC
#undef PFNGLPNTRIANGLESFATIPROC
#endif
typedef void  (*PFNGLPNTRIANGLESFATIPROC)(GLenum pname, GLfloat param);

#ifndef GL_PN_TRIANGLES_ATI
#define GL_PN_TRIANGLES_ATI 0x87F0
#endif

#ifndef GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_ATI
#define GL_PN_TRIANGLES_POINT_MODE_ATI 0x87F2
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI 0x87F3
#endif

#ifndef GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
#endif

#ifndef GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
#endif

#ifndef GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
#endif

#ifndef GL_ATI_separate_stencil
#define GL_ATI_separate_stencil 1
#endif

#ifdef glStencilOpSeparateATI
#undef glStencilOpSeparateATI
#endif
#ifdef PFNGLSTENCILOPSEPARATEATIPROC
#undef PFNGLSTENCILOPSEPARATEATIPROC
#endif
typedef void  (*PFNGLSTENCILOPSEPARATEATIPROC)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);

#ifdef glStencilFuncSeparateATI
#undef glStencilFuncSeparateATI
#endif
#ifdef PFNGLSTENCILFUNCSEPARATEATIPROC
#undef PFNGLSTENCILFUNCSEPARATEATIPROC
#endif
typedef void  (*PFNGLSTENCILFUNCSEPARATEATIPROC)(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);

#ifndef GL_STENCIL_BACK_FUNC_ATI
#define GL_STENCIL_BACK_FUNC_ATI 0x8800
#endif

#ifndef GL_STENCIL_BACK_FAIL_ATI
#define GL_STENCIL_BACK_FAIL_ATI 0x8801
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#endif

#ifndef GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
#endif

#ifndef GL_ATI_text_fragment_shader
#define GL_ATI_text_fragment_shader 1
#endif

#ifndef GL_TEXT_FRAGMENT_SHADER_ATI
#define GL_TEXT_FRAGMENT_SHADER_ATI 0x8200
#endif

#ifndef GL_ATI_texture_env_combine3
#define GL_ATI_texture_env_combine3 1
#endif

#ifndef GL_MODULATE_ADD_ATI
#define GL_MODULATE_ADD_ATI 0x8744
#endif

#ifndef GL_MODULATE_SIGNED_ADD_ATI
#define GL_MODULATE_SIGNED_ADD_ATI 0x8745
#endif

#ifndef GL_MODULATE_SUBTRACT_ATI
#define GL_MODULATE_SUBTRACT_ATI 0x8746
#endif

#ifndef GL_ATI_texture_float
#define GL_ATI_texture_float 1
#endif

#ifndef GL_RGBA_FLOAT32_ATI
#define GL_RGBA_FLOAT32_ATI 0x8814
#endif

#ifndef GL_RGB_FLOAT32_ATI
#define GL_RGB_FLOAT32_ATI 0x8815
#endif

#ifndef GL_ALPHA_FLOAT32_ATI
#define GL_ALPHA_FLOAT32_ATI 0x8816
#endif

#ifndef GL_INTENSITY_FLOAT32_ATI
#define GL_INTENSITY_FLOAT32_ATI 0x8817
#endif

#ifndef GL_LUMINANCE_FLOAT32_ATI
#define GL_LUMINANCE_FLOAT32_ATI 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT32_ATI
#define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819
#endif

#ifndef GL_RGBA_FLOAT16_ATI
#define GL_RGBA_FLOAT16_ATI 0x881A
#endif

#ifndef GL_RGB_FLOAT16_ATI
#define GL_RGB_FLOAT16_ATI 0x881B
#endif

#ifndef GL_ALPHA_FLOAT16_ATI
#define GL_ALPHA_FLOAT16_ATI 0x881C
#endif

#ifndef GL_INTENSITY_FLOAT16_ATI
#define GL_INTENSITY_FLOAT16_ATI 0x881D
#endif

#ifndef GL_LUMINANCE_FLOAT16_ATI
#define GL_LUMINANCE_FLOAT16_ATI 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA_FLOAT16_ATI
#define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F
#endif

#ifndef GL_ATI_texture_mirror_once
#define GL_ATI_texture_mirror_once 1
#endif

#ifndef GL_MIRROR_CLAMP_ATI
#define GL_MIRROR_CLAMP_ATI 0x8742
#endif

#ifndef GL_MIRROR_CLAMP_TO_EDGE_ATI
#define GL_MIRROR_CLAMP_TO_EDGE_ATI 0x8743
#endif

#ifndef GL_ATI_vertex_array_object
#define GL_ATI_vertex_array_object 1
#endif

#ifdef glNewObjectBufferATI
#undef glNewObjectBufferATI
#endif
#ifdef PFNGLNEWOBJECTBUFFERATIPROC
#undef PFNGLNEWOBJECTBUFFERATIPROC
#endif
typedef GLuint  (*PFNGLNEWOBJECTBUFFERATIPROC)(GLsizei size, const void *pointer, GLenum usage);

#ifdef glIsObjectBufferATI
#undef glIsObjectBufferATI
#endif
#ifdef PFNGLISOBJECTBUFFERATIPROC
#undef PFNGLISOBJECTBUFFERATIPROC
#endif
typedef GLboolean  (*PFNGLISOBJECTBUFFERATIPROC)(GLuint buffer);

#ifdef glUpdateObjectBufferATI
#undef glUpdateObjectBufferATI
#endif
#ifdef PFNGLUPDATEOBJECTBUFFERATIPROC
#undef PFNGLUPDATEOBJECTBUFFERATIPROC
#endif
typedef void  (*PFNGLUPDATEOBJECTBUFFERATIPROC)(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);

#ifdef glGetObjectBufferfvATI
#undef glGetObjectBufferfvATI
#endif
#ifdef PFNGLGETOBJECTBUFFERFVATIPROC
#undef PFNGLGETOBJECTBUFFERFVATIPROC
#endif
typedef void  (*PFNGLGETOBJECTBUFFERFVATIPROC)(GLuint buffer, GLenum pname, GLfloat *params);

#ifdef glGetObjectBufferivATI
#undef glGetObjectBufferivATI
#endif
#ifdef PFNGLGETOBJECTBUFFERIVATIPROC
#undef PFNGLGETOBJECTBUFFERIVATIPROC
#endif
typedef void  (*PFNGLGETOBJECTBUFFERIVATIPROC)(GLuint buffer, GLenum pname, GLint *params);

#ifdef glFreeObjectBufferATI
#undef glFreeObjectBufferATI
#endif
#ifdef PFNGLFREEOBJECTBUFFERATIPROC
#undef PFNGLFREEOBJECTBUFFERATIPROC
#endif
typedef void  (*PFNGLFREEOBJECTBUFFERATIPROC)(GLuint buffer);

#ifdef glArrayObjectATI
#undef glArrayObjectATI
#endif
#ifdef PFNGLARRAYOBJECTATIPROC
#undef PFNGLARRAYOBJECTATIPROC
#endif
typedef void  (*PFNGLARRAYOBJECTATIPROC)(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);

#ifdef glGetArrayObjectfvATI
#undef glGetArrayObjectfvATI
#endif
#ifdef PFNGLGETARRAYOBJECTFVATIPROC
#undef PFNGLGETARRAYOBJECTFVATIPROC
#endif
typedef void  (*PFNGLGETARRAYOBJECTFVATIPROC)(GLenum array, GLenum pname, GLfloat *params);

#ifdef glGetArrayObjectivATI
#undef glGetArrayObjectivATI
#endif
#ifdef PFNGLGETARRAYOBJECTIVATIPROC
#undef PFNGLGETARRAYOBJECTIVATIPROC
#endif
typedef void  (*PFNGLGETARRAYOBJECTIVATIPROC)(GLenum array, GLenum pname, GLint *params);

#ifdef glVariantArrayObjectATI
#undef glVariantArrayObjectATI
#endif
#ifdef PFNGLVARIANTARRAYOBJECTATIPROC
#undef PFNGLVARIANTARRAYOBJECTATIPROC
#endif
typedef void  (*PFNGLVARIANTARRAYOBJECTATIPROC)(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);

#ifdef glGetVariantArrayObjectfvATI
#undef glGetVariantArrayObjectfvATI
#endif
#ifdef PFNGLGETVARIANTARRAYOBJECTFVATIPROC
#undef PFNGLGETVARIANTARRAYOBJECTFVATIPROC
#endif
typedef void  (*PFNGLGETVARIANTARRAYOBJECTFVATIPROC)(GLuint id, GLenum pname, GLfloat *params);

#ifdef glGetVariantArrayObjectivATI
#undef glGetVariantArrayObjectivATI
#endif
#ifdef PFNGLGETVARIANTARRAYOBJECTIVATIPROC
#undef PFNGLGETVARIANTARRAYOBJECTIVATIPROC
#endif
typedef void  (*PFNGLGETVARIANTARRAYOBJECTIVATIPROC)(GLuint id, GLenum pname, GLint *params);

#ifndef GL_STATIC_ATI
#define GL_STATIC_ATI 0x8760
#endif

#ifndef GL_DYNAMIC_ATI
#define GL_DYNAMIC_ATI 0x8761
#endif

#ifndef GL_PRESERVE_ATI
#define GL_PRESERVE_ATI 0x8762
#endif

#ifndef GL_DISCARD_ATI
#define GL_DISCARD_ATI 0x8763
#endif

#ifndef GL_OBJECT_BUFFER_SIZE_ATI
#define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#endif

#ifndef GL_OBJECT_BUFFER_USAGE_ATI
#define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#endif

#ifndef GL_ARRAY_OBJECT_BUFFER_ATI
#define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#endif

#ifndef GL_ARRAY_OBJECT_OFFSET_ATI
#define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#endif

#ifndef GL_ATI_vertex_attrib_array_object
#define GL_ATI_vertex_attrib_array_object 1
#endif

#ifdef glVertexAttribArrayObjectATI
#undef glVertexAttribArrayObjectATI
#endif
#ifdef PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
#undef PFNGLVERTEXATTRIBARRAYOBJECTATIPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);

#ifdef glGetVertexAttribArrayObjectfvATI
#undef glGetVertexAttribArrayObjectfvATI
#endif
#ifdef PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
#undef PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)(GLuint index, GLenum pname, GLfloat *params);

#ifdef glGetVertexAttribArrayObjectivATI
#undef glGetVertexAttribArrayObjectivATI
#endif
#ifdef PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
#undef PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)(GLuint index, GLenum pname, GLint *params);

#ifndef GL_ATI_vertex_streams
#define GL_ATI_vertex_streams 1
#endif

#ifdef glVertexStream1sATI
#undef glVertexStream1sATI
#endif
#ifdef PFNGLVERTEXSTREAM1SATIPROC
#undef PFNGLVERTEXSTREAM1SATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM1SATIPROC)(GLenum stream, GLshort x);

#ifdef glVertexStream1svATI
#undef glVertexStream1svATI
#endif
#ifdef PFNGLVERTEXSTREAM1SVATIPROC
#undef PFNGLVERTEXSTREAM1SVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM1SVATIPROC)(GLenum stream, const GLshort *coords);

#ifdef glVertexStream1iATI
#undef glVertexStream1iATI
#endif
#ifdef PFNGLVERTEXSTREAM1IATIPROC
#undef PFNGLVERTEXSTREAM1IATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM1IATIPROC)(GLenum stream, GLint x);

#ifdef glVertexStream1ivATI
#undef glVertexStream1ivATI
#endif
#ifdef PFNGLVERTEXSTREAM1IVATIPROC
#undef PFNGLVERTEXSTREAM1IVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM1IVATIPROC)(GLenum stream, const GLint *coords);

#ifdef glVertexStream1fATI
#undef glVertexStream1fATI
#endif
#ifdef PFNGLVERTEXSTREAM1FATIPROC
#undef PFNGLVERTEXSTREAM1FATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM1FATIPROC)(GLenum stream, GLfloat x);

#ifdef glVertexStream1fvATI
#undef glVertexStream1fvATI
#endif
#ifdef PFNGLVERTEXSTREAM1FVATIPROC
#undef PFNGLVERTEXSTREAM1FVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM1FVATIPROC)(GLenum stream, const GLfloat *coords);

#ifdef glVertexStream1dATI
#undef glVertexStream1dATI
#endif
#ifdef PFNGLVERTEXSTREAM1DATIPROC
#undef PFNGLVERTEXSTREAM1DATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM1DATIPROC)(GLenum stream, GLdouble x);

#ifdef glVertexStream1dvATI
#undef glVertexStream1dvATI
#endif
#ifdef PFNGLVERTEXSTREAM1DVATIPROC
#undef PFNGLVERTEXSTREAM1DVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM1DVATIPROC)(GLenum stream, const GLdouble *coords);

#ifdef glVertexStream2sATI
#undef glVertexStream2sATI
#endif
#ifdef PFNGLVERTEXSTREAM2SATIPROC
#undef PFNGLVERTEXSTREAM2SATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM2SATIPROC)(GLenum stream, GLshort x, GLshort y);

#ifdef glVertexStream2svATI
#undef glVertexStream2svATI
#endif
#ifdef PFNGLVERTEXSTREAM2SVATIPROC
#undef PFNGLVERTEXSTREAM2SVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM2SVATIPROC)(GLenum stream, const GLshort *coords);

#ifdef glVertexStream2iATI
#undef glVertexStream2iATI
#endif
#ifdef PFNGLVERTEXSTREAM2IATIPROC
#undef PFNGLVERTEXSTREAM2IATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM2IATIPROC)(GLenum stream, GLint x, GLint y);

#ifdef glVertexStream2ivATI
#undef glVertexStream2ivATI
#endif
#ifdef PFNGLVERTEXSTREAM2IVATIPROC
#undef PFNGLVERTEXSTREAM2IVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM2IVATIPROC)(GLenum stream, const GLint *coords);

#ifdef glVertexStream2fATI
#undef glVertexStream2fATI
#endif
#ifdef PFNGLVERTEXSTREAM2FATIPROC
#undef PFNGLVERTEXSTREAM2FATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM2FATIPROC)(GLenum stream, GLfloat x, GLfloat y);

#ifdef glVertexStream2fvATI
#undef glVertexStream2fvATI
#endif
#ifdef PFNGLVERTEXSTREAM2FVATIPROC
#undef PFNGLVERTEXSTREAM2FVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM2FVATIPROC)(GLenum stream, const GLfloat *coords);

#ifdef glVertexStream2dATI
#undef glVertexStream2dATI
#endif
#ifdef PFNGLVERTEXSTREAM2DATIPROC
#undef PFNGLVERTEXSTREAM2DATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM2DATIPROC)(GLenum stream, GLdouble x, GLdouble y);

#ifdef glVertexStream2dvATI
#undef glVertexStream2dvATI
#endif
#ifdef PFNGLVERTEXSTREAM2DVATIPROC
#undef PFNGLVERTEXSTREAM2DVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM2DVATIPROC)(GLenum stream, const GLdouble *coords);

#ifdef glVertexStream3sATI
#undef glVertexStream3sATI
#endif
#ifdef PFNGLVERTEXSTREAM3SATIPROC
#undef PFNGLVERTEXSTREAM3SATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM3SATIPROC)(GLenum stream, GLshort x, GLshort y, GLshort z);

#ifdef glVertexStream3svATI
#undef glVertexStream3svATI
#endif
#ifdef PFNGLVERTEXSTREAM3SVATIPROC
#undef PFNGLVERTEXSTREAM3SVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM3SVATIPROC)(GLenum stream, const GLshort *coords);

#ifdef glVertexStream3iATI
#undef glVertexStream3iATI
#endif
#ifdef PFNGLVERTEXSTREAM3IATIPROC
#undef PFNGLVERTEXSTREAM3IATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM3IATIPROC)(GLenum stream, GLint x, GLint y, GLint z);

#ifdef glVertexStream3ivATI
#undef glVertexStream3ivATI
#endif
#ifdef PFNGLVERTEXSTREAM3IVATIPROC
#undef PFNGLVERTEXSTREAM3IVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM3IVATIPROC)(GLenum stream, const GLint *coords);

#ifdef glVertexStream3fATI
#undef glVertexStream3fATI
#endif
#ifdef PFNGLVERTEXSTREAM3FATIPROC
#undef PFNGLVERTEXSTREAM3FATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM3FATIPROC)(GLenum stream, GLfloat x, GLfloat y, GLfloat z);

#ifdef glVertexStream3fvATI
#undef glVertexStream3fvATI
#endif
#ifdef PFNGLVERTEXSTREAM3FVATIPROC
#undef PFNGLVERTEXSTREAM3FVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM3FVATIPROC)(GLenum stream, const GLfloat *coords);

#ifdef glVertexStream3dATI
#undef glVertexStream3dATI
#endif
#ifdef PFNGLVERTEXSTREAM3DATIPROC
#undef PFNGLVERTEXSTREAM3DATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM3DATIPROC)(GLenum stream, GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertexStream3dvATI
#undef glVertexStream3dvATI
#endif
#ifdef PFNGLVERTEXSTREAM3DVATIPROC
#undef PFNGLVERTEXSTREAM3DVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM3DVATIPROC)(GLenum stream, const GLdouble *coords);

#ifdef glVertexStream4sATI
#undef glVertexStream4sATI
#endif
#ifdef PFNGLVERTEXSTREAM4SATIPROC
#undef PFNGLVERTEXSTREAM4SATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM4SATIPROC)(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);

#ifdef glVertexStream4svATI
#undef glVertexStream4svATI
#endif
#ifdef PFNGLVERTEXSTREAM4SVATIPROC
#undef PFNGLVERTEXSTREAM4SVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM4SVATIPROC)(GLenum stream, const GLshort *coords);

#ifdef glVertexStream4iATI
#undef glVertexStream4iATI
#endif
#ifdef PFNGLVERTEXSTREAM4IATIPROC
#undef PFNGLVERTEXSTREAM4IATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM4IATIPROC)(GLenum stream, GLint x, GLint y, GLint z, GLint w);

#ifdef glVertexStream4ivATI
#undef glVertexStream4ivATI
#endif
#ifdef PFNGLVERTEXSTREAM4IVATIPROC
#undef PFNGLVERTEXSTREAM4IVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM4IVATIPROC)(GLenum stream, const GLint *coords);

#ifdef glVertexStream4fATI
#undef glVertexStream4fATI
#endif
#ifdef PFNGLVERTEXSTREAM4FATIPROC
#undef PFNGLVERTEXSTREAM4FATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM4FATIPROC)(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glVertexStream4fvATI
#undef glVertexStream4fvATI
#endif
#ifdef PFNGLVERTEXSTREAM4FVATIPROC
#undef PFNGLVERTEXSTREAM4FVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM4FVATIPROC)(GLenum stream, const GLfloat *coords);

#ifdef glVertexStream4dATI
#undef glVertexStream4dATI
#endif
#ifdef PFNGLVERTEXSTREAM4DATIPROC
#undef PFNGLVERTEXSTREAM4DATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM4DATIPROC)(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertexStream4dvATI
#undef glVertexStream4dvATI
#endif
#ifdef PFNGLVERTEXSTREAM4DVATIPROC
#undef PFNGLVERTEXSTREAM4DVATIPROC
#endif
typedef void  (*PFNGLVERTEXSTREAM4DVATIPROC)(GLenum stream, const GLdouble *coords);

#ifdef glNormalStream3bATI
#undef glNormalStream3bATI
#endif
#ifdef PFNGLNORMALSTREAM3BATIPROC
#undef PFNGLNORMALSTREAM3BATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3BATIPROC)(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);

#ifdef glNormalStream3bvATI
#undef glNormalStream3bvATI
#endif
#ifdef PFNGLNORMALSTREAM3BVATIPROC
#undef PFNGLNORMALSTREAM3BVATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3BVATIPROC)(GLenum stream, const GLbyte *coords);

#ifdef glNormalStream3sATI
#undef glNormalStream3sATI
#endif
#ifdef PFNGLNORMALSTREAM3SATIPROC
#undef PFNGLNORMALSTREAM3SATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3SATIPROC)(GLenum stream, GLshort nx, GLshort ny, GLshort nz);

#ifdef glNormalStream3svATI
#undef glNormalStream3svATI
#endif
#ifdef PFNGLNORMALSTREAM3SVATIPROC
#undef PFNGLNORMALSTREAM3SVATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3SVATIPROC)(GLenum stream, const GLshort *coords);

#ifdef glNormalStream3iATI
#undef glNormalStream3iATI
#endif
#ifdef PFNGLNORMALSTREAM3IATIPROC
#undef PFNGLNORMALSTREAM3IATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3IATIPROC)(GLenum stream, GLint nx, GLint ny, GLint nz);

#ifdef glNormalStream3ivATI
#undef glNormalStream3ivATI
#endif
#ifdef PFNGLNORMALSTREAM3IVATIPROC
#undef PFNGLNORMALSTREAM3IVATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3IVATIPROC)(GLenum stream, const GLint *coords);

#ifdef glNormalStream3fATI
#undef glNormalStream3fATI
#endif
#ifdef PFNGLNORMALSTREAM3FATIPROC
#undef PFNGLNORMALSTREAM3FATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3FATIPROC)(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);

#ifdef glNormalStream3fvATI
#undef glNormalStream3fvATI
#endif
#ifdef PFNGLNORMALSTREAM3FVATIPROC
#undef PFNGLNORMALSTREAM3FVATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3FVATIPROC)(GLenum stream, const GLfloat *coords);

#ifdef glNormalStream3dATI
#undef glNormalStream3dATI
#endif
#ifdef PFNGLNORMALSTREAM3DATIPROC
#undef PFNGLNORMALSTREAM3DATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3DATIPROC)(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);

#ifdef glNormalStream3dvATI
#undef glNormalStream3dvATI
#endif
#ifdef PFNGLNORMALSTREAM3DVATIPROC
#undef PFNGLNORMALSTREAM3DVATIPROC
#endif
typedef void  (*PFNGLNORMALSTREAM3DVATIPROC)(GLenum stream, const GLdouble *coords);

#ifdef glClientActiveVertexStreamATI
#undef glClientActiveVertexStreamATI
#endif
#ifdef PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
#undef PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC
#endif
typedef void  (*PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)(GLenum stream);

#ifdef glVertexBlendEnviATI
#undef glVertexBlendEnviATI
#endif
#ifdef PFNGLVERTEXBLENDENVIATIPROC
#undef PFNGLVERTEXBLENDENVIATIPROC
#endif
typedef void  (*PFNGLVERTEXBLENDENVIATIPROC)(GLenum pname, GLint param);

#ifdef glVertexBlendEnvfATI
#undef glVertexBlendEnvfATI
#endif
#ifdef PFNGLVERTEXBLENDENVFATIPROC
#undef PFNGLVERTEXBLENDENVFATIPROC
#endif
typedef void  (*PFNGLVERTEXBLENDENVFATIPROC)(GLenum pname, GLfloat param);

#ifndef GL_MAX_VERTEX_STREAMS_ATI
#define GL_MAX_VERTEX_STREAMS_ATI 0x876B
#endif

#ifndef GL_VERTEX_STREAM0_ATI
#define GL_VERTEX_STREAM0_ATI 0x876C
#endif

#ifndef GL_VERTEX_STREAM1_ATI
#define GL_VERTEX_STREAM1_ATI 0x876D
#endif

#ifndef GL_VERTEX_STREAM2_ATI
#define GL_VERTEX_STREAM2_ATI 0x876E
#endif

#ifndef GL_VERTEX_STREAM3_ATI
#define GL_VERTEX_STREAM3_ATI 0x876F
#endif

#ifndef GL_VERTEX_STREAM4_ATI
#define GL_VERTEX_STREAM4_ATI 0x8770
#endif

#ifndef GL_VERTEX_STREAM5_ATI
#define GL_VERTEX_STREAM5_ATI 0x8771
#endif

#ifndef GL_VERTEX_STREAM6_ATI
#define GL_VERTEX_STREAM6_ATI 0x8772
#endif

#ifndef GL_VERTEX_STREAM7_ATI
#define GL_VERTEX_STREAM7_ATI 0x8773
#endif

#ifndef GL_VERTEX_SOURCE_ATI
#define GL_VERTEX_SOURCE_ATI 0x8774
#endif

#ifndef GL_DMP_program_binary
#define GL_DMP_program_binary 1
#endif

#ifndef GL_SMAPHS30_PROGRAM_BINARY_DMP
#define GL_SMAPHS30_PROGRAM_BINARY_DMP 0x9251
#endif

#ifndef GL_SMAPHS_PROGRAM_BINARY_DMP
#define GL_SMAPHS_PROGRAM_BINARY_DMP 0x9252
#endif

#ifndef GL_DMP_PROGRAM_BINARY_DMP
#define GL_DMP_PROGRAM_BINARY_DMP 0x9253
#endif

#ifndef GL_DMP_shader_binary
#define GL_DMP_shader_binary 1
#endif

#ifndef GL_SHADER_BINARY_DMP
#define GL_SHADER_BINARY_DMP 0x9250
#endif

#ifndef GL_EXT_422_pixels
#define GL_EXT_422_pixels 1
#endif

#ifndef GL_422_EXT
#define GL_422_EXT 0x80CC
#endif

#ifndef GL_422_REV_EXT
#define GL_422_REV_EXT 0x80CD
#endif

#ifndef GL_422_AVERAGE_EXT
#define GL_422_AVERAGE_EXT 0x80CE
#endif

#ifndef GL_422_REV_AVERAGE_EXT
#define GL_422_REV_AVERAGE_EXT 0x80CF
#endif

#ifndef GL_EXT_abgr
#define GL_EXT_abgr 1
#endif

#ifndef GL_ABGR_EXT
#define GL_ABGR_EXT 0x8000
#endif

#ifndef GL_EXT_base_instance
#define GL_EXT_base_instance 1
#endif

#ifdef glDrawArraysInstancedBaseInstanceEXT
#undef glDrawArraysInstancedBaseInstanceEXT
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC
#undef PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);

#ifdef glDrawElementsInstancedBaseInstanceEXT
#undef glDrawElementsInstancedBaseInstanceEXT
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);

#ifdef glDrawElementsInstancedBaseVertexBaseInstanceEXT
#undef glDrawElementsInstancedBaseVertexBaseInstanceEXT
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);

#ifndef GL_EXT_bgra
#define GL_EXT_bgra 1
#endif

#ifndef GL_BGR_EXT
#define GL_BGR_EXT 0x80E0
#endif

#ifndef GL_BGRA_EXT
#define GL_BGRA_EXT 0x80E1
#endif

#ifndef GL_EXT_bindable_uniform
#define GL_EXT_bindable_uniform 1
#endif

#ifdef glUniformBufferEXT
#undef glUniformBufferEXT
#endif
#ifdef PFNGLUNIFORMBUFFEREXTPROC
#undef PFNGLUNIFORMBUFFEREXTPROC
#endif
typedef void  (*PFNGLUNIFORMBUFFEREXTPROC)(GLuint program, GLint location, GLuint buffer);

#ifdef glGetUniformBufferSizeEXT
#undef glGetUniformBufferSizeEXT
#endif
#ifdef PFNGLGETUNIFORMBUFFERSIZEEXTPROC
#undef PFNGLGETUNIFORMBUFFERSIZEEXTPROC
#endif
typedef GLint  (*PFNGLGETUNIFORMBUFFERSIZEEXTPROC)(GLuint program, GLint location);

#ifdef glGetUniformOffsetEXT
#undef glGetUniformOffsetEXT
#endif
#ifdef PFNGLGETUNIFORMOFFSETEXTPROC
#undef PFNGLGETUNIFORMOFFSETEXTPROC
#endif
typedef GLintptr  (*PFNGLGETUNIFORMOFFSETEXTPROC)(GLuint program, GLint location);

#ifndef GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT
#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#endif

#ifndef GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT
#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#endif

#ifndef GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT
#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#endif

#ifndef GL_MAX_BINDABLE_UNIFORM_SIZE_EXT
#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#endif

#ifndef GL_UNIFORM_BUFFER_EXT
#define GL_UNIFORM_BUFFER_EXT 0x8DEE
#endif

#ifndef GL_UNIFORM_BUFFER_BINDING_EXT
#define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#endif

#ifndef GL_EXT_blend_color
#define GL_EXT_blend_color 1
#endif

#ifdef glBlendColorEXT
#undef glBlendColorEXT
#endif
#ifdef PFNGLBLENDCOLOREXTPROC
#undef PFNGLBLENDCOLOREXTPROC
#endif
typedef void  (*PFNGLBLENDCOLOREXTPROC)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);

#ifndef GL_CONSTANT_COLOR_EXT
#define GL_CONSTANT_COLOR_EXT 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR_EXT
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA_EXT
#define GL_CONSTANT_ALPHA_EXT 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA_EXT
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004
#endif

#ifndef GL_BLEND_COLOR_EXT
#define GL_BLEND_COLOR_EXT 0x8005
#endif

#ifndef GL_EXT_blend_equation_separate
#define GL_EXT_blend_equation_separate 1
#endif

#ifdef glBlendEquationSeparateEXT
#undef glBlendEquationSeparateEXT
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEEXTPROC
#undef PFNGLBLENDEQUATIONSEPARATEEXTPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEEXTPROC)(GLenum modeRGB, GLenum modeAlpha);

#ifndef GL_BLEND_EQUATION_RGB_EXT
#define GL_BLEND_EQUATION_RGB_EXT 0x8009
#endif

#ifndef GL_BLEND_EQUATION_ALPHA_EXT
#define GL_BLEND_EQUATION_ALPHA_EXT 0x883D
#endif

#ifndef GL_EXT_blend_func_separate
#define GL_EXT_blend_func_separate 1
#endif

#ifdef glBlendFuncSeparateEXT
#undef glBlendFuncSeparateEXT
#endif
#ifdef PFNGLBLENDFUNCSEPARATEEXTPROC
#undef PFNGLBLENDFUNCSEPARATEEXTPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEEXTPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);

#ifndef GL_BLEND_DST_RGB_EXT
#define GL_BLEND_DST_RGB_EXT 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB_EXT
#define GL_BLEND_SRC_RGB_EXT 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA_EXT
#define GL_BLEND_DST_ALPHA_EXT 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA_EXT
#define GL_BLEND_SRC_ALPHA_EXT 0x80CB
#endif

#ifndef GL_EXT_blend_logic_op
#define GL_EXT_blend_logic_op 1
#endif

#ifndef GL_EXT_blend_minmax
#define GL_EXT_blend_minmax 1
#endif

#ifndef GL_MIN_EXT
#define GL_MIN_EXT 0x8007
#endif

#ifndef GL_MAX_EXT
#define GL_MAX_EXT 0x8008
#endif

#ifdef glBlendEquationEXT
#undef glBlendEquationEXT
#endif
#ifdef PFNGLBLENDEQUATIONEXTPROC
#undef PFNGLBLENDEQUATIONEXTPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONEXTPROC)(GLenum mode);

#ifndef GL_FUNC_ADD_EXT
#define GL_FUNC_ADD_EXT 0x8006
#endif

#ifndef GL_BLEND_EQUATION_EXT
#define GL_BLEND_EQUATION_EXT 0x8009
#endif

#ifndef GL_EXT_blend_subtract
#define GL_EXT_blend_subtract 1
#endif

#ifndef GL_FUNC_SUBTRACT_EXT
#define GL_FUNC_SUBTRACT_EXT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT_EXT
#define GL_FUNC_REVERSE_SUBTRACT_EXT 0x800B
#endif

#ifndef GL_EXT_buffer_storage
#define GL_EXT_buffer_storage 1
#endif

#ifdef glBufferStorageEXT
#undef glBufferStorageEXT
#endif
#ifdef PFNGLBUFFERSTORAGEEXTPROC
#undef PFNGLBUFFERSTORAGEEXTPROC
#endif
typedef void  (*PFNGLBUFFERSTORAGEEXTPROC)(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);

#ifndef GL_MAP_READ_BIT
#define GL_MAP_READ_BIT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT
#define GL_MAP_WRITE_BIT 0x0002
#endif

#ifndef GL_MAP_PERSISTENT_BIT
#define GL_MAP_PERSISTENT_BIT 0x0040
#endif

#ifndef GL_MAP_COHERENT_BIT
#define GL_MAP_COHERENT_BIT 0x0080
#endif

#ifndef GL_DYNAMIC_STORAGE_BIT
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#endif

#ifndef GL_CLIENT_STORAGE_BIT
#define GL_CLIENT_STORAGE_BIT 0x0200
#endif

#ifndef GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#endif

#ifndef GL_BUFFER_IMMUTABLE_STORAGE
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#endif

#ifndef GL_BUFFER_STORAGE_FLAGS
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#endif

#ifndef GL_EXT_clip_volume_hint
#define GL_EXT_clip_volume_hint 1
#endif

#ifndef GL_CLIP_VOLUME_CLIPPING_HINT_EXT
#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT 0x80F0
#endif

#ifndef GL_EXT_cmyka
#define GL_EXT_cmyka 1
#endif

#ifndef GL_CMYK_EXT
#define GL_CMYK_EXT 0x800C
#endif

#ifndef GL_CMYKA_EXT
#define GL_CMYKA_EXT 0x800D
#endif

#ifndef GL_PACK_CMYK_HINT_EXT
#define GL_PACK_CMYK_HINT_EXT 0x800E
#endif

#ifndef GL_UNPACK_CMYK_HINT_EXT
#define GL_UNPACK_CMYK_HINT_EXT 0x800F
#endif

#ifndef GL_EXT_color_buffer_half_float
#define GL_EXT_color_buffer_half_float 1
#endif

#ifndef GL_RGBA16F_EXT
#define GL_RGBA16F_EXT 0x881A
#endif

#ifndef GL_RGB16F_EXT
#define GL_RGB16F_EXT 0x881B
#endif

#ifndef GL_RG16F_EXT
#define GL_RG16F_EXT 0x822F
#endif

#ifndef GL_R16F_EXT
#define GL_R16F_EXT 0x822D
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT 0x8211
#endif

#ifndef GL_UNSIGNED_NORMALIZED_EXT
#define GL_UNSIGNED_NORMALIZED_EXT 0x8C17
#endif

#ifndef GL_EXT_color_subtable
#define GL_EXT_color_subtable 1
#endif

#ifdef glColorSubTableEXT
#undef glColorSubTableEXT
#endif
#ifdef PFNGLCOLORSUBTABLEEXTPROC
#undef PFNGLCOLORSUBTABLEEXTPROC
#endif
typedef void  (*PFNGLCOLORSUBTABLEEXTPROC)(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);

#ifdef glCopyColorSubTableEXT
#undef glCopyColorSubTableEXT
#endif
#ifdef PFNGLCOPYCOLORSUBTABLEEXTPROC
#undef PFNGLCOPYCOLORSUBTABLEEXTPROC
#endif
typedef void  (*PFNGLCOPYCOLORSUBTABLEEXTPROC)(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);

#ifndef GL_EXT_compiled_vertex_array
#define GL_EXT_compiled_vertex_array 1
#endif

#ifdef glLockArraysEXT
#undef glLockArraysEXT
#endif
#ifdef PFNGLLOCKARRAYSEXTPROC
#undef PFNGLLOCKARRAYSEXTPROC
#endif
typedef void  (*PFNGLLOCKARRAYSEXTPROC)(GLint first, GLsizei count);

#ifdef glUnlockArraysEXT
#undef glUnlockArraysEXT
#endif
#ifdef PFNGLUNLOCKARRAYSEXTPROC
#undef PFNGLUNLOCKARRAYSEXTPROC
#endif
typedef void  (*PFNGLUNLOCKARRAYSEXTPROC)(void);

#ifndef GL_ARRAY_ELEMENT_LOCK_FIRST_EXT
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 0x81A8
#endif

#ifndef GL_ARRAY_ELEMENT_LOCK_COUNT_EXT
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 0x81A9
#endif

#ifndef GL_EXT_convolution
#define GL_EXT_convolution 1
#endif

#ifdef glConvolutionFilter1DEXT
#undef glConvolutionFilter1DEXT
#endif
#ifdef PFNGLCONVOLUTIONFILTER1DEXTPROC
#undef PFNGLCONVOLUTIONFILTER1DEXTPROC
#endif
typedef void  (*PFNGLCONVOLUTIONFILTER1DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);

#ifdef glConvolutionFilter2DEXT
#undef glConvolutionFilter2DEXT
#endif
#ifdef PFNGLCONVOLUTIONFILTER2DEXTPROC
#undef PFNGLCONVOLUTIONFILTER2DEXTPROC
#endif
typedef void  (*PFNGLCONVOLUTIONFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);

#ifdef glConvolutionParameterfEXT
#undef glConvolutionParameterfEXT
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERFEXTPROC
#undef PFNGLCONVOLUTIONPARAMETERFEXTPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERFEXTPROC)(GLenum target, GLenum pname, GLfloat params);

#ifdef glConvolutionParameterfvEXT
#undef glConvolutionParameterfvEXT
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERFVEXTPROC
#undef PFNGLCONVOLUTIONPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERFVEXTPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glConvolutionParameteriEXT
#undef glConvolutionParameteriEXT
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERIEXTPROC
#undef PFNGLCONVOLUTIONPARAMETERIEXTPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERIEXTPROC)(GLenum target, GLenum pname, GLint params);

#ifdef glConvolutionParameterivEXT
#undef glConvolutionParameterivEXT
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERIVEXTPROC
#undef PFNGLCONVOLUTIONPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERIVEXTPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glCopyConvolutionFilter1DEXT
#undef glCopyConvolutionFilter1DEXT
#endif
#ifdef PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
#undef PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC
#endif
typedef void  (*PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);

#ifdef glCopyConvolutionFilter2DEXT
#undef glCopyConvolutionFilter2DEXT
#endif
#ifdef PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
#undef PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC
#endif
typedef void  (*PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glGetConvolutionFilterEXT
#undef glGetConvolutionFilterEXT
#endif
#ifdef PFNGLGETCONVOLUTIONFILTEREXTPROC
#undef PFNGLGETCONVOLUTIONFILTEREXTPROC
#endif
typedef void  (*PFNGLGETCONVOLUTIONFILTEREXTPROC)(GLenum target, GLenum format, GLenum type, void *image);

#ifdef glGetConvolutionParameterfvEXT
#undef glGetConvolutionParameterfvEXT
#endif
#ifdef PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
#undef PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetConvolutionParameterivEXT
#undef glGetConvolutionParameterivEXT
#endif
#ifdef PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
#undef PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetSeparableFilterEXT
#undef glGetSeparableFilterEXT
#endif
#ifdef PFNGLGETSEPARABLEFILTEREXTPROC
#undef PFNGLGETSEPARABLEFILTEREXTPROC
#endif
typedef void  (*PFNGLGETSEPARABLEFILTEREXTPROC)(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);

#ifdef glSeparableFilter2DEXT
#undef glSeparableFilter2DEXT
#endif
#ifdef PFNGLSEPARABLEFILTER2DEXTPROC
#undef PFNGLSEPARABLEFILTER2DEXTPROC
#endif
typedef void  (*PFNGLSEPARABLEFILTER2DEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);

#ifndef GL_CONVOLUTION_1D_EXT
#define GL_CONVOLUTION_1D_EXT 0x8010
#endif

#ifndef GL_CONVOLUTION_2D_EXT
#define GL_CONVOLUTION_2D_EXT 0x8011
#endif

#ifndef GL_SEPARABLE_2D_EXT
#define GL_SEPARABLE_2D_EXT 0x8012
#endif

#ifndef GL_CONVOLUTION_BORDER_MODE_EXT
#define GL_CONVOLUTION_BORDER_MODE_EXT 0x8013
#endif

#ifndef GL_CONVOLUTION_FILTER_SCALE_EXT
#define GL_CONVOLUTION_FILTER_SCALE_EXT 0x8014
#endif

#ifndef GL_CONVOLUTION_FILTER_BIAS_EXT
#define GL_CONVOLUTION_FILTER_BIAS_EXT 0x8015
#endif

#ifndef GL_REDUCE_EXT
#define GL_REDUCE_EXT 0x8016
#endif

#ifndef GL_CONVOLUTION_FORMAT_EXT
#define GL_CONVOLUTION_FORMAT_EXT 0x8017
#endif

#ifndef GL_CONVOLUTION_WIDTH_EXT
#define GL_CONVOLUTION_WIDTH_EXT 0x8018
#endif

#ifndef GL_CONVOLUTION_HEIGHT_EXT
#define GL_CONVOLUTION_HEIGHT_EXT 0x8019
#endif

#ifndef GL_MAX_CONVOLUTION_WIDTH_EXT
#define GL_MAX_CONVOLUTION_WIDTH_EXT 0x801A
#endif

#ifndef GL_MAX_CONVOLUTION_HEIGHT_EXT
#define GL_MAX_CONVOLUTION_HEIGHT_EXT 0x801B
#endif

#ifndef GL_POST_CONVOLUTION_RED_SCALE_EXT
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_SCALE_EXT
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_SCALE_EXT
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_SCALE_EXT
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
#endif

#ifndef GL_POST_CONVOLUTION_RED_BIAS_EXT
#define GL_POST_CONVOLUTION_RED_BIAS_EXT 0x8020
#endif

#ifndef GL_POST_CONVOLUTION_GREEN_BIAS_EXT
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
#endif

#ifndef GL_POST_CONVOLUTION_BLUE_BIAS_EXT
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
#endif

#ifndef GL_POST_CONVOLUTION_ALPHA_BIAS_EXT
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
#endif

#ifndef GL_EXT_coordinate_frame
#define GL_EXT_coordinate_frame 1
#endif

#ifdef glTangent3bEXT
#undef glTangent3bEXT
#endif
#ifdef PFNGLTANGENT3BEXTPROC
#undef PFNGLTANGENT3BEXTPROC
#endif
typedef void  (*PFNGLTANGENT3BEXTPROC)(GLbyte tx, GLbyte ty, GLbyte tz);

#ifdef glTangent3bvEXT
#undef glTangent3bvEXT
#endif
#ifdef PFNGLTANGENT3BVEXTPROC
#undef PFNGLTANGENT3BVEXTPROC
#endif
typedef void  (*PFNGLTANGENT3BVEXTPROC)(const GLbyte *v);

#ifdef glTangent3dEXT
#undef glTangent3dEXT
#endif
#ifdef PFNGLTANGENT3DEXTPROC
#undef PFNGLTANGENT3DEXTPROC
#endif
typedef void  (*PFNGLTANGENT3DEXTPROC)(GLdouble tx, GLdouble ty, GLdouble tz);

#ifdef glTangent3dvEXT
#undef glTangent3dvEXT
#endif
#ifdef PFNGLTANGENT3DVEXTPROC
#undef PFNGLTANGENT3DVEXTPROC
#endif
typedef void  (*PFNGLTANGENT3DVEXTPROC)(const GLdouble *v);

#ifdef glTangent3fEXT
#undef glTangent3fEXT
#endif
#ifdef PFNGLTANGENT3FEXTPROC
#undef PFNGLTANGENT3FEXTPROC
#endif
typedef void  (*PFNGLTANGENT3FEXTPROC)(GLfloat tx, GLfloat ty, GLfloat tz);

#ifdef glTangent3fvEXT
#undef glTangent3fvEXT
#endif
#ifdef PFNGLTANGENT3FVEXTPROC
#undef PFNGLTANGENT3FVEXTPROC
#endif
typedef void  (*PFNGLTANGENT3FVEXTPROC)(const GLfloat *v);

#ifdef glTangent3iEXT
#undef glTangent3iEXT
#endif
#ifdef PFNGLTANGENT3IEXTPROC
#undef PFNGLTANGENT3IEXTPROC
#endif
typedef void  (*PFNGLTANGENT3IEXTPROC)(GLint tx, GLint ty, GLint tz);

#ifdef glTangent3ivEXT
#undef glTangent3ivEXT
#endif
#ifdef PFNGLTANGENT3IVEXTPROC
#undef PFNGLTANGENT3IVEXTPROC
#endif
typedef void  (*PFNGLTANGENT3IVEXTPROC)(const GLint *v);

#ifdef glTangent3sEXT
#undef glTangent3sEXT
#endif
#ifdef PFNGLTANGENT3SEXTPROC
#undef PFNGLTANGENT3SEXTPROC
#endif
typedef void  (*PFNGLTANGENT3SEXTPROC)(GLshort tx, GLshort ty, GLshort tz);

#ifdef glTangent3svEXT
#undef glTangent3svEXT
#endif
#ifdef PFNGLTANGENT3SVEXTPROC
#undef PFNGLTANGENT3SVEXTPROC
#endif
typedef void  (*PFNGLTANGENT3SVEXTPROC)(const GLshort *v);

#ifdef glBinormal3bEXT
#undef glBinormal3bEXT
#endif
#ifdef PFNGLBINORMAL3BEXTPROC
#undef PFNGLBINORMAL3BEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3BEXTPROC)(GLbyte bx, GLbyte by, GLbyte bz);

#ifdef glBinormal3bvEXT
#undef glBinormal3bvEXT
#endif
#ifdef PFNGLBINORMAL3BVEXTPROC
#undef PFNGLBINORMAL3BVEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3BVEXTPROC)(const GLbyte *v);

#ifdef glBinormal3dEXT
#undef glBinormal3dEXT
#endif
#ifdef PFNGLBINORMAL3DEXTPROC
#undef PFNGLBINORMAL3DEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3DEXTPROC)(GLdouble bx, GLdouble by, GLdouble bz);

#ifdef glBinormal3dvEXT
#undef glBinormal3dvEXT
#endif
#ifdef PFNGLBINORMAL3DVEXTPROC
#undef PFNGLBINORMAL3DVEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3DVEXTPROC)(const GLdouble *v);

#ifdef glBinormal3fEXT
#undef glBinormal3fEXT
#endif
#ifdef PFNGLBINORMAL3FEXTPROC
#undef PFNGLBINORMAL3FEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3FEXTPROC)(GLfloat bx, GLfloat by, GLfloat bz);

#ifdef glBinormal3fvEXT
#undef glBinormal3fvEXT
#endif
#ifdef PFNGLBINORMAL3FVEXTPROC
#undef PFNGLBINORMAL3FVEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3FVEXTPROC)(const GLfloat *v);

#ifdef glBinormal3iEXT
#undef glBinormal3iEXT
#endif
#ifdef PFNGLBINORMAL3IEXTPROC
#undef PFNGLBINORMAL3IEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3IEXTPROC)(GLint bx, GLint by, GLint bz);

#ifdef glBinormal3ivEXT
#undef glBinormal3ivEXT
#endif
#ifdef PFNGLBINORMAL3IVEXTPROC
#undef PFNGLBINORMAL3IVEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3IVEXTPROC)(const GLint *v);

#ifdef glBinormal3sEXT
#undef glBinormal3sEXT
#endif
#ifdef PFNGLBINORMAL3SEXTPROC
#undef PFNGLBINORMAL3SEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3SEXTPROC)(GLshort bx, GLshort by, GLshort bz);

#ifdef glBinormal3svEXT
#undef glBinormal3svEXT
#endif
#ifdef PFNGLBINORMAL3SVEXTPROC
#undef PFNGLBINORMAL3SVEXTPROC
#endif
typedef void  (*PFNGLBINORMAL3SVEXTPROC)(const GLshort *v);

#ifdef glTangentPointerEXT
#undef glTangentPointerEXT
#endif
#ifdef PFNGLTANGENTPOINTEREXTPROC
#undef PFNGLTANGENTPOINTEREXTPROC
#endif
typedef void  (*PFNGLTANGENTPOINTEREXTPROC)(GLenum type, GLsizei stride, const void *pointer);

#ifdef glBinormalPointerEXT
#undef glBinormalPointerEXT
#endif
#ifdef PFNGLBINORMALPOINTEREXTPROC
#undef PFNGLBINORMALPOINTEREXTPROC
#endif
typedef void  (*PFNGLBINORMALPOINTEREXTPROC)(GLenum type, GLsizei stride, const void *pointer);

#ifndef GL_TANGENT_ARRAY_EXT
#define GL_TANGENT_ARRAY_EXT 0x8439
#endif

#ifndef GL_BINORMAL_ARRAY_EXT
#define GL_BINORMAL_ARRAY_EXT 0x843A
#endif

#ifndef GL_CURRENT_TANGENT_EXT
#define GL_CURRENT_TANGENT_EXT 0x843B
#endif

#ifndef GL_CURRENT_BINORMAL_EXT
#define GL_CURRENT_BINORMAL_EXT 0x843C
#endif

#ifndef GL_TANGENT_ARRAY_TYPE_EXT
#define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#endif

#ifndef GL_TANGENT_ARRAY_STRIDE_EXT
#define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#endif

#ifndef GL_BINORMAL_ARRAY_TYPE_EXT
#define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#endif

#ifndef GL_BINORMAL_ARRAY_STRIDE_EXT
#define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#endif

#ifndef GL_TANGENT_ARRAY_POINTER_EXT
#define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#endif

#ifndef GL_BINORMAL_ARRAY_POINTER_EXT
#define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#endif

#ifndef GL_MAP1_TANGENT_EXT
#define GL_MAP1_TANGENT_EXT 0x8444
#endif

#ifndef GL_MAP2_TANGENT_EXT
#define GL_MAP2_TANGENT_EXT 0x8445
#endif

#ifndef GL_MAP1_BINORMAL_EXT
#define GL_MAP1_BINORMAL_EXT 0x8446
#endif

#ifndef GL_MAP2_BINORMAL_EXT
#define GL_MAP2_BINORMAL_EXT 0x8447
#endif

#ifndef GL_EXT_copy_image
#define GL_EXT_copy_image 1
#endif

#ifdef glCopyImageSubDataEXT
#undef glCopyImageSubDataEXT
#endif
#ifdef PFNGLCOPYIMAGESUBDATAEXTPROC
#undef PFNGLCOPYIMAGESUBDATAEXTPROC
#endif
typedef void  (*PFNGLCOPYIMAGESUBDATAEXTPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);

#ifndef GL_EXT_copy_texture
#define GL_EXT_copy_texture 1
#endif

#ifdef glCopyTexImage1DEXT
#undef glCopyTexImage1DEXT
#endif
#ifdef PFNGLCOPYTEXIMAGE1DEXTPROC
#undef PFNGLCOPYTEXIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXIMAGE1DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);

#ifdef glCopyTexImage2DEXT
#undef glCopyTexImage2DEXT
#endif
#ifdef PFNGLCOPYTEXIMAGE2DEXTPROC
#undef PFNGLCOPYTEXIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXIMAGE2DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);

#ifdef glCopyTexSubImage1DEXT
#undef glCopyTexSubImage1DEXT
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE1DEXTPROC
#undef PFNGLCOPYTEXSUBIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE1DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);

#ifdef glCopyTexSubImage2DEXT
#undef glCopyTexSubImage2DEXT
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE2DEXTPROC
#undef PFNGLCOPYTEXSUBIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE2DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glCopyTexSubImage3DEXT
#undef glCopyTexSubImage3DEXT
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE3DEXTPROC
#undef PFNGLCOPYTEXSUBIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE3DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifndef GL_EXT_cull_vertex
#define GL_EXT_cull_vertex 1
#endif

#ifdef glCullParameterdvEXT
#undef glCullParameterdvEXT
#endif
#ifdef PFNGLCULLPARAMETERDVEXTPROC
#undef PFNGLCULLPARAMETERDVEXTPROC
#endif
typedef void  (*PFNGLCULLPARAMETERDVEXTPROC)(GLenum pname, GLdouble *params);

#ifdef glCullParameterfvEXT
#undef glCullParameterfvEXT
#endif
#ifdef PFNGLCULLPARAMETERFVEXTPROC
#undef PFNGLCULLPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLCULLPARAMETERFVEXTPROC)(GLenum pname, GLfloat *params);

#ifndef GL_CULL_VERTEX_EXT
#define GL_CULL_VERTEX_EXT 0x81AA
#endif

#ifndef GL_CULL_VERTEX_EYE_POSITION_EXT
#define GL_CULL_VERTEX_EYE_POSITION_EXT 0x81AB
#endif

#ifndef GL_CULL_VERTEX_OBJECT_POSITION_EXT
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
#endif

#ifndef GL_EXT_debug_label
#define GL_EXT_debug_label 1
#endif

#ifdef glLabelObjectEXT
#undef glLabelObjectEXT
#endif
#ifdef PFNGLLABELOBJECTEXTPROC
#undef PFNGLLABELOBJECTEXTPROC
#endif
typedef void  (*PFNGLLABELOBJECTEXTPROC)(GLenum type, GLuint object, GLsizei length, const GLchar *label);

#ifdef glGetObjectLabelEXT
#undef glGetObjectLabelEXT
#endif
#ifdef PFNGLGETOBJECTLABELEXTPROC
#undef PFNGLGETOBJECTLABELEXTPROC
#endif
typedef void  (*PFNGLGETOBJECTLABELEXTPROC)(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);

#ifndef GL_PROGRAM_PIPELINE_OBJECT_EXT
#define GL_PROGRAM_PIPELINE_OBJECT_EXT 0x8A4F
#endif

#ifndef GL_PROGRAM_OBJECT_EXT
#define GL_PROGRAM_OBJECT_EXT 0x8B40
#endif

#ifndef GL_SHADER_OBJECT_EXT
#define GL_SHADER_OBJECT_EXT 0x8B48
#endif

#ifndef GL_BUFFER_OBJECT_EXT
#define GL_BUFFER_OBJECT_EXT 0x9151
#endif

#ifndef GL_QUERY_OBJECT_EXT
#define GL_QUERY_OBJECT_EXT 0x9153
#endif

#ifndef GL_VERTEX_ARRAY_OBJECT_EXT
#define GL_VERTEX_ARRAY_OBJECT_EXT 0x9154
#endif

#ifndef GL_SAMPLER
#define GL_SAMPLER 0x82E6
#endif

#ifndef GL_TRANSFORM_FEEDBACK
#define GL_TRANSFORM_FEEDBACK 0x8E22
#endif

#ifndef GL_EXT_debug_marker
#define GL_EXT_debug_marker 1
#endif

#ifdef glInsertEventMarkerEXT
#undef glInsertEventMarkerEXT
#endif
#ifdef PFNGLINSERTEVENTMARKEREXTPROC
#undef PFNGLINSERTEVENTMARKEREXTPROC
#endif
typedef void  (*PFNGLINSERTEVENTMARKEREXTPROC)(GLsizei length, const GLchar *marker);

#ifdef glPushGroupMarkerEXT
#undef glPushGroupMarkerEXT
#endif
#ifdef PFNGLPUSHGROUPMARKEREXTPROC
#undef PFNGLPUSHGROUPMARKEREXTPROC
#endif
typedef void  (*PFNGLPUSHGROUPMARKEREXTPROC)(GLsizei length, const GLchar *marker);

#ifdef glPopGroupMarkerEXT
#undef glPopGroupMarkerEXT
#endif
#ifdef PFNGLPOPGROUPMARKEREXTPROC
#undef PFNGLPOPGROUPMARKEREXTPROC
#endif
typedef void  (*PFNGLPOPGROUPMARKEREXTPROC)(void);

#ifndef GL_EXT_depth_bounds_test
#define GL_EXT_depth_bounds_test 1
#endif

#ifdef glDepthBoundsEXT
#undef glDepthBoundsEXT
#endif
#ifdef PFNGLDEPTHBOUNDSEXTPROC
#undef PFNGLDEPTHBOUNDSEXTPROC
#endif
typedef void  (*PFNGLDEPTHBOUNDSEXTPROC)(GLclampd zmin, GLclampd zmax);

#ifndef GL_DEPTH_BOUNDS_TEST_EXT
#define GL_DEPTH_BOUNDS_TEST_EXT 0x8890
#endif

#ifndef GL_DEPTH_BOUNDS_EXT
#define GL_DEPTH_BOUNDS_EXT 0x8891
#endif

#ifndef GL_EXT_direct_state_access
#define GL_EXT_direct_state_access 1
#endif

#ifndef GL_PROGRAM_MATRIX_EXT
#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#endif

#ifndef GL_TRANSPOSE_PROGRAM_MATRIX_EXT
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#endif

#ifndef GL_PROGRAM_MATRIX_STACK_DEPTH_EXT
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
#endif

#ifdef glMatrixLoadfEXT
#undef glMatrixLoadfEXT
#endif
#ifdef PFNGLMATRIXLOADFEXTPROC
#undef PFNGLMATRIXLOADFEXTPROC
#endif
typedef void  (*PFNGLMATRIXLOADFEXTPROC)(GLenum mode, const GLfloat *m);

#ifdef glMatrixLoaddEXT
#undef glMatrixLoaddEXT
#endif
#ifdef PFNGLMATRIXLOADDEXTPROC
#undef PFNGLMATRIXLOADDEXTPROC
#endif
typedef void  (*PFNGLMATRIXLOADDEXTPROC)(GLenum mode, const GLdouble *m);

#ifdef glMatrixMultfEXT
#undef glMatrixMultfEXT
#endif
#ifdef PFNGLMATRIXMULTFEXTPROC
#undef PFNGLMATRIXMULTFEXTPROC
#endif
typedef void  (*PFNGLMATRIXMULTFEXTPROC)(GLenum mode, const GLfloat *m);

#ifdef glMatrixMultdEXT
#undef glMatrixMultdEXT
#endif
#ifdef PFNGLMATRIXMULTDEXTPROC
#undef PFNGLMATRIXMULTDEXTPROC
#endif
typedef void  (*PFNGLMATRIXMULTDEXTPROC)(GLenum mode, const GLdouble *m);

#ifdef glMatrixLoadIdentityEXT
#undef glMatrixLoadIdentityEXT
#endif
#ifdef PFNGLMATRIXLOADIDENTITYEXTPROC
#undef PFNGLMATRIXLOADIDENTITYEXTPROC
#endif
typedef void  (*PFNGLMATRIXLOADIDENTITYEXTPROC)(GLenum mode);

#ifdef glMatrixRotatefEXT
#undef glMatrixRotatefEXT
#endif
#ifdef PFNGLMATRIXROTATEFEXTPROC
#undef PFNGLMATRIXROTATEFEXTPROC
#endif
typedef void  (*PFNGLMATRIXROTATEFEXTPROC)(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);

#ifdef glMatrixRotatedEXT
#undef glMatrixRotatedEXT
#endif
#ifdef PFNGLMATRIXROTATEDEXTPROC
#undef PFNGLMATRIXROTATEDEXTPROC
#endif
typedef void  (*PFNGLMATRIXROTATEDEXTPROC)(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);

#ifdef glMatrixScalefEXT
#undef glMatrixScalefEXT
#endif
#ifdef PFNGLMATRIXSCALEFEXTPROC
#undef PFNGLMATRIXSCALEFEXTPROC
#endif
typedef void  (*PFNGLMATRIXSCALEFEXTPROC)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);

#ifdef glMatrixScaledEXT
#undef glMatrixScaledEXT
#endif
#ifdef PFNGLMATRIXSCALEDEXTPROC
#undef PFNGLMATRIXSCALEDEXTPROC
#endif
typedef void  (*PFNGLMATRIXSCALEDEXTPROC)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);

#ifdef glMatrixTranslatefEXT
#undef glMatrixTranslatefEXT
#endif
#ifdef PFNGLMATRIXTRANSLATEFEXTPROC
#undef PFNGLMATRIXTRANSLATEFEXTPROC
#endif
typedef void  (*PFNGLMATRIXTRANSLATEFEXTPROC)(GLenum mode, GLfloat x, GLfloat y, GLfloat z);

#ifdef glMatrixTranslatedEXT
#undef glMatrixTranslatedEXT
#endif
#ifdef PFNGLMATRIXTRANSLATEDEXTPROC
#undef PFNGLMATRIXTRANSLATEDEXTPROC
#endif
typedef void  (*PFNGLMATRIXTRANSLATEDEXTPROC)(GLenum mode, GLdouble x, GLdouble y, GLdouble z);

#ifdef glMatrixFrustumEXT
#undef glMatrixFrustumEXT
#endif
#ifdef PFNGLMATRIXFRUSTUMEXTPROC
#undef PFNGLMATRIXFRUSTUMEXTPROC
#endif
typedef void  (*PFNGLMATRIXFRUSTUMEXTPROC)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);

#ifdef glMatrixOrthoEXT
#undef glMatrixOrthoEXT
#endif
#ifdef PFNGLMATRIXORTHOEXTPROC
#undef PFNGLMATRIXORTHOEXTPROC
#endif
typedef void  (*PFNGLMATRIXORTHOEXTPROC)(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);

#ifdef glMatrixPopEXT
#undef glMatrixPopEXT
#endif
#ifdef PFNGLMATRIXPOPEXTPROC
#undef PFNGLMATRIXPOPEXTPROC
#endif
typedef void  (*PFNGLMATRIXPOPEXTPROC)(GLenum mode);

#ifdef glMatrixPushEXT
#undef glMatrixPushEXT
#endif
#ifdef PFNGLMATRIXPUSHEXTPROC
#undef PFNGLMATRIXPUSHEXTPROC
#endif
typedef void  (*PFNGLMATRIXPUSHEXTPROC)(GLenum mode);

#ifdef glClientAttribDefaultEXT
#undef glClientAttribDefaultEXT
#endif
#ifdef PFNGLCLIENTATTRIBDEFAULTEXTPROC
#undef PFNGLCLIENTATTRIBDEFAULTEXTPROC
#endif
typedef void  (*PFNGLCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);

#ifdef glPushClientAttribDefaultEXT
#undef glPushClientAttribDefaultEXT
#endif
#ifdef PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
#undef PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC
#endif
typedef void  (*PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);

#ifdef glTextureParameterfEXT
#undef glTextureParameterfEXT
#endif
#ifdef PFNGLTEXTUREPARAMETERFEXTPROC
#undef PFNGLTEXTUREPARAMETERFEXTPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERFEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLfloat param);

#ifdef glTextureParameterfvEXT
#undef glTextureParameterfvEXT
#endif
#ifdef PFNGLTEXTUREPARAMETERFVEXTPROC
#undef PFNGLTEXTUREPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLfloat *params);

#ifdef glTextureParameteriEXT
#undef glTextureParameteriEXT
#endif
#ifdef PFNGLTEXTUREPARAMETERIEXTPROC
#undef PFNGLTEXTUREPARAMETERIEXTPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint param);

#ifdef glTextureParameterivEXT
#undef glTextureParameterivEXT
#endif
#ifdef PFNGLTEXTUREPARAMETERIVEXTPROC
#undef PFNGLTEXTUREPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLint *params);

#ifdef glTextureImage1DEXT
#undef glTextureImage1DEXT
#endif
#ifdef PFNGLTEXTUREIMAGE1DEXTPROC
#undef PFNGLTEXTUREIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTextureImage2DEXT
#undef glTextureImage2DEXT
#endif
#ifdef PFNGLTEXTUREIMAGE2DEXTPROC
#undef PFNGLTEXTUREIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTextureSubImage1DEXT
#undef glTextureSubImage1DEXT
#endif
#ifdef PFNGLTEXTURESUBIMAGE1DEXTPROC
#undef PFNGLTEXTURESUBIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);

#ifdef glTextureSubImage2DEXT
#undef glTextureSubImage2DEXT
#endif
#ifdef PFNGLTEXTURESUBIMAGE2DEXTPROC
#undef PFNGLTEXTURESUBIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifdef glCopyTextureImage1DEXT
#undef glCopyTextureImage1DEXT
#endif
#ifdef PFNGLCOPYTEXTUREIMAGE1DEXTPROC
#undef PFNGLCOPYTEXTUREIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);

#ifdef glCopyTextureImage2DEXT
#undef glCopyTextureImage2DEXT
#endif
#ifdef PFNGLCOPYTEXTUREIMAGE2DEXTPROC
#undef PFNGLCOPYTEXTUREIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);

#ifdef glCopyTextureSubImage1DEXT
#undef glCopyTextureSubImage1DEXT
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
#undef PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);

#ifdef glCopyTextureSubImage2DEXT
#undef glCopyTextureSubImage2DEXT
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
#undef PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glGetTextureImageEXT
#undef glGetTextureImageEXT
#endif
#ifdef PFNGLGETTEXTUREIMAGEEXTPROC
#undef PFNGLGETTEXTUREIMAGEEXTPROC
#endif
typedef void  (*PFNGLGETTEXTUREIMAGEEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);

#ifdef glGetTextureParameterfvEXT
#undef glGetTextureParameterfvEXT
#endif
#ifdef PFNGLGETTEXTUREPARAMETERFVEXTPROC
#undef PFNGLGETTEXTUREPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetTextureParameterivEXT
#undef glGetTextureParameterivEXT
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIVEXTPROC
#undef PFNGLGETTEXTUREPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint *params);

#ifdef glGetTextureLevelParameterfvEXT
#undef glGetTextureLevelParameterfvEXT
#endif
#ifdef PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
#undef PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);

#ifdef glGetTextureLevelParameterivEXT
#undef glGetTextureLevelParameterivEXT
#endif
#ifdef PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
#undef PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);

#ifdef glTextureImage3DEXT
#undef glTextureImage3DEXT
#endif
#ifdef PFNGLTEXTUREIMAGE3DEXTPROC
#undef PFNGLTEXTUREIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLTEXTUREIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTextureSubImage3DEXT
#undef glTextureSubImage3DEXT
#endif
#ifdef PFNGLTEXTURESUBIMAGE3DEXTPROC
#undef PFNGLTEXTURESUBIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);

#ifdef glCopyTextureSubImage3DEXT
#undef glCopyTextureSubImage3DEXT
#endif
#ifdef PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
#undef PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glBindMultiTextureEXT
#undef glBindMultiTextureEXT
#endif
#ifdef PFNGLBINDMULTITEXTUREEXTPROC
#undef PFNGLBINDMULTITEXTUREEXTPROC
#endif
typedef void  (*PFNGLBINDMULTITEXTUREEXTPROC)(GLenum texunit, GLenum target, GLuint texture);

#ifdef glMultiTexCoordPointerEXT
#undef glMultiTexCoordPointerEXT
#endif
#ifdef PFNGLMULTITEXCOORDPOINTEREXTPROC
#undef PFNGLMULTITEXCOORDPOINTEREXTPROC
#endif
typedef void  (*PFNGLMULTITEXCOORDPOINTEREXTPROC)(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glMultiTexEnvfEXT
#undef glMultiTexEnvfEXT
#endif
#ifdef PFNGLMULTITEXENVFEXTPROC
#undef PFNGLMULTITEXENVFEXTPROC
#endif
typedef void  (*PFNGLMULTITEXENVFEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);

#ifdef glMultiTexEnvfvEXT
#undef glMultiTexEnvfvEXT
#endif
#ifdef PFNGLMULTITEXENVFVEXTPROC
#undef PFNGLMULTITEXENVFVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXENVFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);

#ifdef glMultiTexEnviEXT
#undef glMultiTexEnviEXT
#endif
#ifdef PFNGLMULTITEXENVIEXTPROC
#undef PFNGLMULTITEXENVIEXTPROC
#endif
typedef void  (*PFNGLMULTITEXENVIEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint param);

#ifdef glMultiTexEnvivEXT
#undef glMultiTexEnvivEXT
#endif
#ifdef PFNGLMULTITEXENVIVEXTPROC
#undef PFNGLMULTITEXENVIVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXENVIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);

#ifdef glMultiTexGendEXT
#undef glMultiTexGendEXT
#endif
#ifdef PFNGLMULTITEXGENDEXTPROC
#undef PFNGLMULTITEXGENDEXTPROC
#endif
typedef void  (*PFNGLMULTITEXGENDEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);

#ifdef glMultiTexGendvEXT
#undef glMultiTexGendvEXT
#endif
#ifdef PFNGLMULTITEXGENDVEXTPROC
#undef PFNGLMULTITEXGENDVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXGENDVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);

#ifdef glMultiTexGenfEXT
#undef glMultiTexGenfEXT
#endif
#ifdef PFNGLMULTITEXGENFEXTPROC
#undef PFNGLMULTITEXGENFEXTPROC
#endif
typedef void  (*PFNGLMULTITEXGENFEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);

#ifdef glMultiTexGenfvEXT
#undef glMultiTexGenfvEXT
#endif
#ifdef PFNGLMULTITEXGENFVEXTPROC
#undef PFNGLMULTITEXGENFVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXGENFVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);

#ifdef glMultiTexGeniEXT
#undef glMultiTexGeniEXT
#endif
#ifdef PFNGLMULTITEXGENIEXTPROC
#undef PFNGLMULTITEXGENIEXTPROC
#endif
typedef void  (*PFNGLMULTITEXGENIEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLint param);

#ifdef glMultiTexGenivEXT
#undef glMultiTexGenivEXT
#endif
#ifdef PFNGLMULTITEXGENIVEXTPROC
#undef PFNGLMULTITEXGENIVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXGENIVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, const GLint *params);

#ifdef glGetMultiTexEnvfvEXT
#undef glGetMultiTexEnvfvEXT
#endif
#ifdef PFNGLGETMULTITEXENVFVEXTPROC
#undef PFNGLGETMULTITEXENVFVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXENVFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetMultiTexEnvivEXT
#undef glGetMultiTexEnvivEXT
#endif
#ifdef PFNGLGETMULTITEXENVIVEXTPROC
#undef PFNGLGETMULTITEXENVIVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXENVIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint *params);

#ifdef glGetMultiTexGendvEXT
#undef glGetMultiTexGendvEXT
#endif
#ifdef PFNGLGETMULTITEXGENDVEXTPROC
#undef PFNGLGETMULTITEXGENDVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXGENDVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);

#ifdef glGetMultiTexGenfvEXT
#undef glGetMultiTexGenfvEXT
#endif
#ifdef PFNGLGETMULTITEXGENFVEXTPROC
#undef PFNGLGETMULTITEXGENFVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXGENFVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);

#ifdef glGetMultiTexGenivEXT
#undef glGetMultiTexGenivEXT
#endif
#ifdef PFNGLGETMULTITEXGENIVEXTPROC
#undef PFNGLGETMULTITEXGENIVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXGENIVEXTPROC)(GLenum texunit, GLenum coord, GLenum pname, GLint *params);

#ifdef glMultiTexParameteriEXT
#undef glMultiTexParameteriEXT
#endif
#ifdef PFNGLMULTITEXPARAMETERIEXTPROC
#undef PFNGLMULTITEXPARAMETERIEXTPROC
#endif
typedef void  (*PFNGLMULTITEXPARAMETERIEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint param);

#ifdef glMultiTexParameterivEXT
#undef glMultiTexParameterivEXT
#endif
#ifdef PFNGLMULTITEXPARAMETERIVEXTPROC
#undef PFNGLMULTITEXPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);

#ifdef glMultiTexParameterfEXT
#undef glMultiTexParameterfEXT
#endif
#ifdef PFNGLMULTITEXPARAMETERFEXTPROC
#undef PFNGLMULTITEXPARAMETERFEXTPROC
#endif
typedef void  (*PFNGLMULTITEXPARAMETERFEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat param);

#ifdef glMultiTexParameterfvEXT
#undef glMultiTexParameterfvEXT
#endif
#ifdef PFNGLMULTITEXPARAMETERFVEXTPROC
#undef PFNGLMULTITEXPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);

#ifdef glMultiTexImage1DEXT
#undef glMultiTexImage1DEXT
#endif
#ifdef PFNGLMULTITEXIMAGE1DEXTPROC
#undef PFNGLMULTITEXIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glMultiTexImage2DEXT
#undef glMultiTexImage2DEXT
#endif
#ifdef PFNGLMULTITEXIMAGE2DEXTPROC
#undef PFNGLMULTITEXIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glMultiTexSubImage1DEXT
#undef glMultiTexSubImage1DEXT
#endif
#ifdef PFNGLMULTITEXSUBIMAGE1DEXTPROC
#undef PFNGLMULTITEXSUBIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);

#ifdef glMultiTexSubImage2DEXT
#undef glMultiTexSubImage2DEXT
#endif
#ifdef PFNGLMULTITEXSUBIMAGE2DEXTPROC
#undef PFNGLMULTITEXSUBIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifdef glCopyMultiTexImage1DEXT
#undef glCopyMultiTexImage1DEXT
#endif
#ifdef PFNGLCOPYMULTITEXIMAGE1DEXTPROC
#undef PFNGLCOPYMULTITEXIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOPYMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);

#ifdef glCopyMultiTexImage2DEXT
#undef glCopyMultiTexImage2DEXT
#endif
#ifdef PFNGLCOPYMULTITEXIMAGE2DEXTPROC
#undef PFNGLCOPYMULTITEXIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOPYMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);

#ifdef glCopyMultiTexSubImage1DEXT
#undef glCopyMultiTexSubImage1DEXT
#endif
#ifdef PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
#undef PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);

#ifdef glCopyMultiTexSubImage2DEXT
#undef glCopyMultiTexSubImage2DEXT
#endif
#ifdef PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
#undef PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glGetMultiTexImageEXT
#undef glGetMultiTexImageEXT
#endif
#ifdef PFNGLGETMULTITEXIMAGEEXTPROC
#undef PFNGLGETMULTITEXIMAGEEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXIMAGEEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);

#ifdef glGetMultiTexParameterfvEXT
#undef glGetMultiTexParameterfvEXT
#endif
#ifdef PFNGLGETMULTITEXPARAMETERFVEXTPROC
#undef PFNGLGETMULTITEXPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetMultiTexParameterivEXT
#undef glGetMultiTexParameterivEXT
#endif
#ifdef PFNGLGETMULTITEXPARAMETERIVEXTPROC
#undef PFNGLGETMULTITEXPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint *params);

#ifdef glGetMultiTexLevelParameterfvEXT
#undef glGetMultiTexLevelParameterfvEXT
#endif
#ifdef PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
#undef PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);

#ifdef glGetMultiTexLevelParameterivEXT
#undef glGetMultiTexLevelParameterivEXT
#endif
#ifdef PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
#undef PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);

#ifdef glMultiTexImage3DEXT
#undef glMultiTexImage3DEXT
#endif
#ifdef PFNGLMULTITEXIMAGE3DEXTPROC
#undef PFNGLMULTITEXIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLMULTITEXIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glMultiTexSubImage3DEXT
#undef glMultiTexSubImage3DEXT
#endif
#ifdef PFNGLMULTITEXSUBIMAGE3DEXTPROC
#undef PFNGLMULTITEXSUBIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);

#ifdef glCopyMultiTexSubImage3DEXT
#undef glCopyMultiTexSubImage3DEXT
#endif
#ifdef PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
#undef PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glEnableClientStateIndexedEXT
#undef glEnableClientStateIndexedEXT
#endif
#ifdef PFNGLENABLECLIENTSTATEINDEXEDEXTPROC
#undef PFNGLENABLECLIENTSTATEINDEXEDEXTPROC
#endif
typedef void  (*PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array, GLuint index);

#ifdef glDisableClientStateIndexedEXT
#undef glDisableClientStateIndexedEXT
#endif
#ifdef PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
#undef PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC
#endif
typedef void  (*PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array, GLuint index);

#ifdef glGetFloatIndexedvEXT
#undef glGetFloatIndexedvEXT
#endif
#ifdef PFNGLGETFLOATINDEXEDVEXTPROC
#undef PFNGLGETFLOATINDEXEDVEXTPROC
#endif
typedef void  (*PFNGLGETFLOATINDEXEDVEXTPROC)(GLenum target, GLuint index, GLfloat *data);

#ifdef glGetDoubleIndexedvEXT
#undef glGetDoubleIndexedvEXT
#endif
#ifdef PFNGLGETDOUBLEINDEXEDVEXTPROC
#undef PFNGLGETDOUBLEINDEXEDVEXTPROC
#endif
typedef void  (*PFNGLGETDOUBLEINDEXEDVEXTPROC)(GLenum target, GLuint index, GLdouble *data);

#ifdef glGetPointerIndexedvEXT
#undef glGetPointerIndexedvEXT
#endif
#ifdef PFNGLGETPOINTERINDEXEDVEXTPROC
#undef PFNGLGETPOINTERINDEXEDVEXTPROC
#endif
typedef void  (*PFNGLGETPOINTERINDEXEDVEXTPROC)(GLenum target, GLuint index, void **data);

#ifdef glEnableIndexedEXT
#undef glEnableIndexedEXT
#endif
#ifdef PFNGLENABLEINDEXEDEXTPROC
#undef PFNGLENABLEINDEXEDEXTPROC
#endif
typedef void  (*PFNGLENABLEINDEXEDEXTPROC)(GLenum target, GLuint index);

#ifdef glDisableIndexedEXT
#undef glDisableIndexedEXT
#endif
#ifdef PFNGLDISABLEINDEXEDEXTPROC
#undef PFNGLDISABLEINDEXEDEXTPROC
#endif
typedef void  (*PFNGLDISABLEINDEXEDEXTPROC)(GLenum target, GLuint index);

#ifdef glIsEnabledIndexedEXT
#undef glIsEnabledIndexedEXT
#endif
#ifdef PFNGLISENABLEDINDEXEDEXTPROC
#undef PFNGLISENABLEDINDEXEDEXTPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDINDEXEDEXTPROC)(GLenum target, GLuint index);

#ifdef glGetIntegerIndexedvEXT
#undef glGetIntegerIndexedvEXT
#endif
#ifdef PFNGLGETINTEGERINDEXEDVEXTPROC
#undef PFNGLGETINTEGERINDEXEDVEXTPROC
#endif
typedef void  (*PFNGLGETINTEGERINDEXEDVEXTPROC)(GLenum target, GLuint index, GLint *data);

#ifdef glGetBooleanIndexedvEXT
#undef glGetBooleanIndexedvEXT
#endif
#ifdef PFNGLGETBOOLEANINDEXEDVEXTPROC
#undef PFNGLGETBOOLEANINDEXEDVEXTPROC
#endif
typedef void  (*PFNGLGETBOOLEANINDEXEDVEXTPROC)(GLenum target, GLuint index, GLboolean *data);

#ifdef glCompressedTextureImage3DEXT
#undef glCompressedTextureImage3DEXT
#endif
#ifdef PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
#undef PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);

#ifdef glCompressedTextureImage2DEXT
#undef glCompressedTextureImage2DEXT
#endif
#ifdef PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
#undef PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);

#ifdef glCompressedTextureImage1DEXT
#undef glCompressedTextureImage1DEXT
#endif
#ifdef PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
#undef PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);

#ifdef glCompressedTextureSubImage3DEXT
#undef glCompressedTextureSubImage3DEXT
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);

#ifdef glCompressedTextureSubImage2DEXT
#undef glCompressedTextureSubImage2DEXT
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);

#ifdef glCompressedTextureSubImage1DEXT
#undef glCompressedTextureSubImage1DEXT
#endif
#ifdef PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
#undef PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);

#ifdef glGetCompressedTextureImageEXT
#undef glGetCompressedTextureImageEXT
#endif
#ifdef PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
#undef PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC
#endif
typedef void  (*PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)(GLuint texture, GLenum target, GLint lod, void *img);

#ifdef glCompressedMultiTexImage3DEXT
#undef glCompressedMultiTexImage3DEXT
#endif
#ifdef PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
#undef PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);

#ifdef glCompressedMultiTexImage2DEXT
#undef glCompressedMultiTexImage2DEXT
#endif
#ifdef PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
#undef PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);

#ifdef glCompressedMultiTexImage1DEXT
#undef glCompressedMultiTexImage1DEXT
#endif
#ifdef PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
#undef PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);

#ifdef glCompressedMultiTexSubImage3DEXT
#undef glCompressedMultiTexSubImage3DEXT
#endif
#ifdef PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
#undef PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);

#ifdef glCompressedMultiTexSubImage2DEXT
#undef glCompressedMultiTexSubImage2DEXT
#endif
#ifdef PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
#undef PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);

#ifdef glCompressedMultiTexSubImage1DEXT
#undef glCompressedMultiTexSubImage1DEXT
#endif
#ifdef PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
#undef PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);

#ifdef glGetCompressedMultiTexImageEXT
#undef glGetCompressedMultiTexImageEXT
#endif
#ifdef PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
#undef PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC
#endif
typedef void  (*PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)(GLenum texunit, GLenum target, GLint lod, void *img);

#ifdef glMatrixLoadTransposefEXT
#undef glMatrixLoadTransposefEXT
#endif
#ifdef PFNGLMATRIXLOADTRANSPOSEFEXTPROC
#undef PFNGLMATRIXLOADTRANSPOSEFEXTPROC
#endif
typedef void  (*PFNGLMATRIXLOADTRANSPOSEFEXTPROC)(GLenum mode, const GLfloat *m);

#ifdef glMatrixLoadTransposedEXT
#undef glMatrixLoadTransposedEXT
#endif
#ifdef PFNGLMATRIXLOADTRANSPOSEDEXTPROC
#undef PFNGLMATRIXLOADTRANSPOSEDEXTPROC
#endif
typedef void  (*PFNGLMATRIXLOADTRANSPOSEDEXTPROC)(GLenum mode, const GLdouble *m);

#ifdef glMatrixMultTransposefEXT
#undef glMatrixMultTransposefEXT
#endif
#ifdef PFNGLMATRIXMULTTRANSPOSEFEXTPROC
#undef PFNGLMATRIXMULTTRANSPOSEFEXTPROC
#endif
typedef void  (*PFNGLMATRIXMULTTRANSPOSEFEXTPROC)(GLenum mode, const GLfloat *m);

#ifdef glMatrixMultTransposedEXT
#undef glMatrixMultTransposedEXT
#endif
#ifdef PFNGLMATRIXMULTTRANSPOSEDEXTPROC
#undef PFNGLMATRIXMULTTRANSPOSEDEXTPROC
#endif
typedef void  (*PFNGLMATRIXMULTTRANSPOSEDEXTPROC)(GLenum mode, const GLdouble *m);

#ifdef glNamedBufferDataEXT
#undef glNamedBufferDataEXT
#endif
#ifdef PFNGLNAMEDBUFFERDATAEXTPROC
#undef PFNGLNAMEDBUFFERDATAEXTPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERDATAEXTPROC)(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);

#ifdef glNamedBufferSubDataEXT
#undef glNamedBufferSubDataEXT
#endif
#ifdef PFNGLNAMEDBUFFERSUBDATAEXTPROC
#undef PFNGLNAMEDBUFFERSUBDATAEXTPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);

#ifdef glMapNamedBufferEXT
#undef glMapNamedBufferEXT
#endif
#ifdef PFNGLMAPNAMEDBUFFEREXTPROC
#undef PFNGLMAPNAMEDBUFFEREXTPROC
#endif
typedef void * (*PFNGLMAPNAMEDBUFFEREXTPROC)(GLuint buffer, GLenum access);

#ifdef glUnmapNamedBufferEXT
#undef glUnmapNamedBufferEXT
#endif
#ifdef PFNGLUNMAPNAMEDBUFFEREXTPROC
#undef PFNGLUNMAPNAMEDBUFFEREXTPROC
#endif
typedef GLboolean  (*PFNGLUNMAPNAMEDBUFFEREXTPROC)(GLuint buffer);

#ifdef glGetNamedBufferParameterivEXT
#undef glGetNamedBufferParameterivEXT
#endif
#ifdef PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
#undef PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)(GLuint buffer, GLenum pname, GLint *params);

#ifdef glGetNamedBufferPointervEXT
#undef glGetNamedBufferPointervEXT
#endif
#ifdef PFNGLGETNAMEDBUFFERPOINTERVEXTPROC
#undef PFNGLGETNAMEDBUFFERPOINTERVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)(GLuint buffer, GLenum pname, void **params);

#ifdef glGetNamedBufferSubDataEXT
#undef glGetNamedBufferSubDataEXT
#endif
#ifdef PFNGLGETNAMEDBUFFERSUBDATAEXTPROC
#undef PFNGLGETNAMEDBUFFERSUBDATAEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);

#ifdef glProgramUniform1fEXT
#undef glProgramUniform1fEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1FEXTPROC
#undef PFNGLPROGRAMUNIFORM1FEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FEXTPROC)(GLuint program, GLint location, GLfloat v0);

#ifdef glProgramUniform2fEXT
#undef glProgramUniform2fEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2FEXTPROC
#undef PFNGLPROGRAMUNIFORM2FEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);

#ifdef glProgramUniform3fEXT
#undef glProgramUniform3fEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3FEXTPROC
#undef PFNGLPROGRAMUNIFORM3FEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);

#ifdef glProgramUniform4fEXT
#undef glProgramUniform4fEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4FEXTPROC
#undef PFNGLPROGRAMUNIFORM4FEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

#ifdef glProgramUniform1iEXT
#undef glProgramUniform1iEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1IEXTPROC
#undef PFNGLPROGRAMUNIFORM1IEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IEXTPROC)(GLuint program, GLint location, GLint v0);

#ifdef glProgramUniform2iEXT
#undef glProgramUniform2iEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2IEXTPROC
#undef PFNGLPROGRAMUNIFORM2IEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1);

#ifdef glProgramUniform3iEXT
#undef glProgramUniform3iEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3IEXTPROC
#undef PFNGLPROGRAMUNIFORM3IEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);

#ifdef glProgramUniform4iEXT
#undef glProgramUniform4iEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4IEXTPROC
#undef PFNGLPROGRAMUNIFORM4IEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);

#ifdef glProgramUniform1fvEXT
#undef glProgramUniform1fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1FVEXTPROC
#undef PFNGLPROGRAMUNIFORM1FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform2fvEXT
#undef glProgramUniform2fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2FVEXTPROC
#undef PFNGLPROGRAMUNIFORM2FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform3fvEXT
#undef glProgramUniform3fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3FVEXTPROC
#undef PFNGLPROGRAMUNIFORM3FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform4fvEXT
#undef glProgramUniform4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4FVEXTPROC
#undef PFNGLPROGRAMUNIFORM4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform1ivEXT
#undef glProgramUniform1ivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1IVEXTPROC
#undef PFNGLPROGRAMUNIFORM1IVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform2ivEXT
#undef glProgramUniform2ivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2IVEXTPROC
#undef PFNGLPROGRAMUNIFORM2IVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform3ivEXT
#undef glProgramUniform3ivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3IVEXTPROC
#undef PFNGLPROGRAMUNIFORM3IVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform4ivEXT
#undef glProgramUniform4ivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4IVEXTPROC
#undef PFNGLPROGRAMUNIFORM4IVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniformMatrix2fvEXT
#undef glProgramUniformMatrix2fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3fvEXT
#undef glProgramUniformMatrix3fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4fvEXT
#undef glProgramUniformMatrix4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x3fvEXT
#undef glProgramUniformMatrix2x3fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x2fvEXT
#undef glProgramUniformMatrix3x2fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x4fvEXT
#undef glProgramUniformMatrix2x4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x2fvEXT
#undef glProgramUniformMatrix4x2fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x4fvEXT
#undef glProgramUniformMatrix3x4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x3fvEXT
#undef glProgramUniformMatrix4x3fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glTextureBufferEXT
#undef glTextureBufferEXT
#endif
#ifdef PFNGLTEXTUREBUFFEREXTPROC
#undef PFNGLTEXTUREBUFFEREXTPROC
#endif
typedef void  (*PFNGLTEXTUREBUFFEREXTPROC)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);

#ifdef glMultiTexBufferEXT
#undef glMultiTexBufferEXT
#endif
#ifdef PFNGLMULTITEXBUFFEREXTPROC
#undef PFNGLMULTITEXBUFFEREXTPROC
#endif
typedef void  (*PFNGLMULTITEXBUFFEREXTPROC)(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);

#ifdef glTextureParameterIivEXT
#undef glTextureParameterIivEXT
#endif
#ifdef PFNGLTEXTUREPARAMETERIIVEXTPROC
#undef PFNGLTEXTUREPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLint *params);

#ifdef glTextureParameterIuivEXT
#undef glTextureParameterIuivEXT
#endif
#ifdef PFNGLTEXTUREPARAMETERIUIVEXTPROC
#undef PFNGLTEXTUREPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, const GLuint *params);

#ifdef glGetTextureParameterIivEXT
#undef glGetTextureParameterIivEXT
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIIVEXTPROC
#undef PFNGLGETTEXTUREPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLint *params);

#ifdef glGetTextureParameterIuivEXT
#undef glGetTextureParameterIuivEXT
#endif
#ifdef PFNGLGETTEXTUREPARAMETERIUIVEXTPROC
#undef PFNGLGETTEXTUREPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture, GLenum target, GLenum pname, GLuint *params);

#ifdef glMultiTexParameterIivEXT
#undef glMultiTexParameterIivEXT
#endif
#ifdef PFNGLMULTITEXPARAMETERIIVEXTPROC
#undef PFNGLMULTITEXPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLint *params);

#ifdef glMultiTexParameterIuivEXT
#undef glMultiTexParameterIuivEXT
#endif
#ifdef PFNGLMULTITEXPARAMETERIUIVEXTPROC
#undef PFNGLMULTITEXPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, const GLuint *params);

#ifdef glGetMultiTexParameterIivEXT
#undef glGetMultiTexParameterIivEXT
#endif
#ifdef PFNGLGETMULTITEXPARAMETERIIVEXTPROC
#undef PFNGLGETMULTITEXPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLint *params);

#ifdef glGetMultiTexParameterIuivEXT
#undef glGetMultiTexParameterIuivEXT
#endif
#ifdef PFNGLGETMULTITEXPARAMETERIUIVEXTPROC
#undef PFNGLGETMULTITEXPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit, GLenum target, GLenum pname, GLuint *params);

#ifdef glProgramUniform1uiEXT
#undef glProgramUniform1uiEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIEXTPROC
#undef PFNGLPROGRAMUNIFORM1UIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIEXTPROC)(GLuint program, GLint location, GLuint v0);

#ifdef glProgramUniform2uiEXT
#undef glProgramUniform2uiEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIEXTPROC
#undef PFNGLPROGRAMUNIFORM2UIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);

#ifdef glProgramUniform3uiEXT
#undef glProgramUniform3uiEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIEXTPROC
#undef PFNGLPROGRAMUNIFORM3UIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);

#ifdef glProgramUniform4uiEXT
#undef glProgramUniform4uiEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIEXTPROC
#undef PFNGLPROGRAMUNIFORM4UIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

#ifdef glProgramUniform1uivEXT
#undef glProgramUniform1uivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIVEXTPROC
#undef PFNGLPROGRAMUNIFORM1UIVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform2uivEXT
#undef glProgramUniform2uivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIVEXTPROC
#undef PFNGLPROGRAMUNIFORM2UIVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform3uivEXT
#undef glProgramUniform3uivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIVEXTPROC
#undef PFNGLPROGRAMUNIFORM3UIVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform4uivEXT
#undef glProgramUniform4uivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIVEXTPROC
#undef PFNGLPROGRAMUNIFORM4UIVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glNamedProgramLocalParameters4fvEXT
#undef glNamedProgramLocalParameters4fvEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);

#ifdef glNamedProgramLocalParameterI4iEXT
#undef glNamedProgramLocalParameterI4iEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);

#ifdef glNamedProgramLocalParameterI4ivEXT
#undef glNamedProgramLocalParameterI4ivEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLint *params);

#ifdef glNamedProgramLocalParametersI4ivEXT
#undef glNamedProgramLocalParametersI4ivEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);

#ifdef glNamedProgramLocalParameterI4uiEXT
#undef glNamedProgramLocalParameterI4uiEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);

#ifdef glNamedProgramLocalParameterI4uivEXT
#undef glNamedProgramLocalParameterI4uivEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLuint *params);

#ifdef glNamedProgramLocalParametersI4uivEXT
#undef glNamedProgramLocalParametersI4uivEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);

#ifdef glGetNamedProgramLocalParameterIivEXT
#undef glGetNamedProgramLocalParameterIivEXT
#endif
#ifdef PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
#undef PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLint *params);

#ifdef glGetNamedProgramLocalParameterIuivEXT
#undef glGetNamedProgramLocalParameterIuivEXT
#endif
#ifdef PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
#undef PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)(GLuint program, GLenum target, GLuint index, GLuint *params);

#ifdef glEnableClientStateiEXT
#undef glEnableClientStateiEXT
#endif
#ifdef PFNGLENABLECLIENTSTATEIEXTPROC
#undef PFNGLENABLECLIENTSTATEIEXTPROC
#endif
typedef void  (*PFNGLENABLECLIENTSTATEIEXTPROC)(GLenum array, GLuint index);

#ifdef glDisableClientStateiEXT
#undef glDisableClientStateiEXT
#endif
#ifdef PFNGLDISABLECLIENTSTATEIEXTPROC
#undef PFNGLDISABLECLIENTSTATEIEXTPROC
#endif
typedef void  (*PFNGLDISABLECLIENTSTATEIEXTPROC)(GLenum array, GLuint index);

#ifdef glGetFloati_vEXT
#undef glGetFloati_vEXT
#endif
#ifdef PFNGLGETFLOATI_VEXTPROC
#undef PFNGLGETFLOATI_VEXTPROC
#endif
typedef void  (*PFNGLGETFLOATI_VEXTPROC)(GLenum pname, GLuint index, GLfloat *params);

#ifdef glGetDoublei_vEXT
#undef glGetDoublei_vEXT
#endif
#ifdef PFNGLGETDOUBLEI_VEXTPROC
#undef PFNGLGETDOUBLEI_VEXTPROC
#endif
typedef void  (*PFNGLGETDOUBLEI_VEXTPROC)(GLenum pname, GLuint index, GLdouble *params);

#ifdef glGetPointeri_vEXT
#undef glGetPointeri_vEXT
#endif
#ifdef PFNGLGETPOINTERI_VEXTPROC
#undef PFNGLGETPOINTERI_VEXTPROC
#endif
typedef void  (*PFNGLGETPOINTERI_VEXTPROC)(GLenum pname, GLuint index, void **params);

#ifdef glNamedProgramStringEXT
#undef glNamedProgramStringEXT
#endif
#ifdef PFNGLNAMEDPROGRAMSTRINGEXTPROC
#undef PFNGLNAMEDPROGRAMSTRINGEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMSTRINGEXTPROC)(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);

#ifdef glNamedProgramLocalParameter4dEXT
#undef glNamedProgramLocalParameter4dEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glNamedProgramLocalParameter4dvEXT
#undef glNamedProgramLocalParameter4dvEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLdouble *params);

#ifdef glNamedProgramLocalParameter4fEXT
#undef glNamedProgramLocalParameter4fEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glNamedProgramLocalParameter4fvEXT
#undef glNamedProgramLocalParameter4fvEXT
#endif
#ifdef PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
#undef PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC
#endif
typedef void  (*PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)(GLuint program, GLenum target, GLuint index, const GLfloat *params);

#ifdef glGetNamedProgramLocalParameterdvEXT
#undef glGetNamedProgramLocalParameterdvEXT
#endif
#ifdef PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
#undef PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)(GLuint program, GLenum target, GLuint index, GLdouble *params);

#ifdef glGetNamedProgramLocalParameterfvEXT
#undef glGetNamedProgramLocalParameterfvEXT
#endif
#ifdef PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
#undef PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)(GLuint program, GLenum target, GLuint index, GLfloat *params);

#ifdef glGetNamedProgramivEXT
#undef glGetNamedProgramivEXT
#endif
#ifdef PFNGLGETNAMEDPROGRAMIVEXTPROC
#undef PFNGLGETNAMEDPROGRAMIVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDPROGRAMIVEXTPROC)(GLuint program, GLenum target, GLenum pname, GLint *params);

#ifdef glGetNamedProgramStringEXT
#undef glGetNamedProgramStringEXT
#endif
#ifdef PFNGLGETNAMEDPROGRAMSTRINGEXTPROC
#undef PFNGLGETNAMEDPROGRAMSTRINGEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)(GLuint program, GLenum target, GLenum pname, void *string);

#ifdef glNamedRenderbufferStorageEXT
#undef glNamedRenderbufferStorageEXT
#endif
#ifdef PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
#undef PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC
#endif
typedef void  (*PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glGetNamedRenderbufferParameterivEXT
#undef glGetNamedRenderbufferParameterivEXT
#endif
#ifdef PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
#undef PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)(GLuint renderbuffer, GLenum pname, GLint *params);

#ifdef glNamedRenderbufferStorageMultisampleEXT
#undef glNamedRenderbufferStorageMultisampleEXT
#endif
#ifdef PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
#undef PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
#endif
typedef void  (*PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glNamedRenderbufferStorageMultisampleCoverageEXT
#undef glNamedRenderbufferStorageMultisampleCoverageEXT
#endif
#ifdef PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
#undef PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC
#endif
typedef void  (*PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glCheckNamedFramebufferStatusEXT
#undef glCheckNamedFramebufferStatusEXT
#endif
#ifdef PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
#undef PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC
#endif
typedef GLenum  (*PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)(GLuint framebuffer, GLenum target);

#ifdef glNamedFramebufferTexture1DEXT
#undef glNamedFramebufferTexture1DEXT
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glNamedFramebufferTexture2DEXT
#undef glNamedFramebufferTexture2DEXT
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glNamedFramebufferTexture3DEXT
#undef glNamedFramebufferTexture3DEXT
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);

#ifdef glNamedFramebufferRenderbufferEXT
#undef glNamedFramebufferRenderbufferEXT
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
#undef PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);

#ifdef glGetNamedFramebufferAttachmentParameterivEXT
#undef glGetNamedFramebufferAttachmentParameterivEXT
#endif
#ifdef PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
#undef PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);

#ifdef glGenerateTextureMipmapEXT
#undef glGenerateTextureMipmapEXT
#endif
#ifdef PFNGLGENERATETEXTUREMIPMAPEXTPROC
#undef PFNGLGENERATETEXTUREMIPMAPEXTPROC
#endif
typedef void  (*PFNGLGENERATETEXTUREMIPMAPEXTPROC)(GLuint texture, GLenum target);

#ifdef glGenerateMultiTexMipmapEXT
#undef glGenerateMultiTexMipmapEXT
#endif
#ifdef PFNGLGENERATEMULTITEXMIPMAPEXTPROC
#undef PFNGLGENERATEMULTITEXMIPMAPEXTPROC
#endif
typedef void  (*PFNGLGENERATEMULTITEXMIPMAPEXTPROC)(GLenum texunit, GLenum target);

#ifdef glFramebufferDrawBufferEXT
#undef glFramebufferDrawBufferEXT
#endif
#ifdef PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
#undef PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)(GLuint framebuffer, GLenum mode);

#ifdef glFramebufferDrawBuffersEXT
#undef glFramebufferDrawBuffersEXT
#endif
#ifdef PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
#undef PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)(GLuint framebuffer, GLsizei n, const GLenum *bufs);

#ifdef glFramebufferReadBufferEXT
#undef glFramebufferReadBufferEXT
#endif
#ifdef PFNGLFRAMEBUFFERREADBUFFEREXTPROC
#undef PFNGLFRAMEBUFFERREADBUFFEREXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERREADBUFFEREXTPROC)(GLuint framebuffer, GLenum mode);

#ifdef glGetFramebufferParameterivEXT
#undef glGetFramebufferParameterivEXT
#endif
#ifdef PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
#undef PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum pname, GLint *params);

#ifdef glNamedCopyBufferSubDataEXT
#undef glNamedCopyBufferSubDataEXT
#endif
#ifdef PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
#undef PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC
#endif
typedef void  (*PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

#ifdef glNamedFramebufferTextureEXT
#undef glNamedFramebufferTextureEXT
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);

#ifdef glNamedFramebufferTextureLayerEXT
#undef glNamedFramebufferTextureLayerEXT
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifdef glNamedFramebufferTextureFaceEXT
#undef glNamedFramebufferTextureFaceEXT
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
#undef PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);

#ifdef glTextureRenderbufferEXT
#undef glTextureRenderbufferEXT
#endif
#ifdef PFNGLTEXTURERENDERBUFFEREXTPROC
#undef PFNGLTEXTURERENDERBUFFEREXTPROC
#endif
typedef void  (*PFNGLTEXTURERENDERBUFFEREXTPROC)(GLuint texture, GLenum target, GLuint renderbuffer);

#ifdef glMultiTexRenderbufferEXT
#undef glMultiTexRenderbufferEXT
#endif
#ifdef PFNGLMULTITEXRENDERBUFFEREXTPROC
#undef PFNGLMULTITEXRENDERBUFFEREXTPROC
#endif
typedef void  (*PFNGLMULTITEXRENDERBUFFEREXTPROC)(GLenum texunit, GLenum target, GLuint renderbuffer);

#ifdef glVertexArrayVertexOffsetEXT
#undef glVertexArrayVertexOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC
#undef PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayColorOffsetEXT
#undef glVertexArrayColorOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYCOLOROFFSETEXTPROC
#undef PFNGLVERTEXARRAYCOLOROFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayEdgeFlagOffsetEXT
#undef glVertexArrayEdgeFlagOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC
#undef PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayIndexOffsetEXT
#undef glVertexArrayIndexOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYINDEXOFFSETEXTPROC
#undef PFNGLVERTEXARRAYINDEXOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayNormalOffsetEXT
#undef glVertexArrayNormalOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYNORMALOFFSETEXTPROC
#undef PFNGLVERTEXARRAYNORMALOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayTexCoordOffsetEXT
#undef glVertexArrayTexCoordOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC
#undef PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayMultiTexCoordOffsetEXT
#undef glVertexArrayMultiTexCoordOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC
#undef PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayFogCoordOffsetEXT
#undef glVertexArrayFogCoordOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC
#undef PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glVertexArraySecondaryColorOffsetEXT
#undef glVertexArraySecondaryColorOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC
#undef PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayVertexAttribOffsetEXT
#undef glVertexArrayVertexAttribOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC
#undef PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);

#ifdef glVertexArrayVertexAttribIOffsetEXT
#undef glVertexArrayVertexAttribIOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC
#undef PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glEnableVertexArrayEXT
#undef glEnableVertexArrayEXT
#endif
#ifdef PFNGLENABLEVERTEXARRAYEXTPROC
#undef PFNGLENABLEVERTEXARRAYEXTPROC
#endif
typedef void  (*PFNGLENABLEVERTEXARRAYEXTPROC)(GLuint vaobj, GLenum array);

#ifdef glDisableVertexArrayEXT
#undef glDisableVertexArrayEXT
#endif
#ifdef PFNGLDISABLEVERTEXARRAYEXTPROC
#undef PFNGLDISABLEVERTEXARRAYEXTPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXARRAYEXTPROC)(GLuint vaobj, GLenum array);

#ifdef glEnableVertexArrayAttribEXT
#undef glEnableVertexArrayAttribEXT
#endif
#ifdef PFNGLENABLEVERTEXARRAYATTRIBEXTPROC
#undef PFNGLENABLEVERTEXARRAYATTRIBEXTPROC
#endif
typedef void  (*PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj, GLuint index);

#ifdef glDisableVertexArrayAttribEXT
#undef glDisableVertexArrayAttribEXT
#endif
#ifdef PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC
#undef PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC
#endif
typedef void  (*PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj, GLuint index);

#ifdef glGetVertexArrayIntegervEXT
#undef glGetVertexArrayIntegervEXT
#endif
#ifdef PFNGLGETVERTEXARRAYINTEGERVEXTPROC
#undef PFNGLGETVERTEXARRAYINTEGERVEXTPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYINTEGERVEXTPROC)(GLuint vaobj, GLenum pname, GLint *param);

#ifdef glGetVertexArrayPointervEXT
#undef glGetVertexArrayPointervEXT
#endif
#ifdef PFNGLGETVERTEXARRAYPOINTERVEXTPROC
#undef PFNGLGETVERTEXARRAYPOINTERVEXTPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYPOINTERVEXTPROC)(GLuint vaobj, GLenum pname, void **param);

#ifdef glGetVertexArrayIntegeri_vEXT
#undef glGetVertexArrayIntegeri_vEXT
#endif
#ifdef PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC
#undef PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)(GLuint vaobj, GLuint index, GLenum pname, GLint *param);

#ifdef glGetVertexArrayPointeri_vEXT
#undef glGetVertexArrayPointeri_vEXT
#endif
#ifdef PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC
#undef PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC
#endif
typedef void  (*PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)(GLuint vaobj, GLuint index, GLenum pname, void **param);

#ifdef glMapNamedBufferRangeEXT
#undef glMapNamedBufferRangeEXT
#endif
#ifdef PFNGLMAPNAMEDBUFFERRANGEEXTPROC
#undef PFNGLMAPNAMEDBUFFERRANGEEXTPROC
#endif
typedef void * (*PFNGLMAPNAMEDBUFFERRANGEEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);

#ifdef glFlushMappedNamedBufferRangeEXT
#undef glFlushMappedNamedBufferRangeEXT
#endif
#ifdef PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC
#undef PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC
#endif
typedef void  (*PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)(GLuint buffer, GLintptr offset, GLsizeiptr length);

#ifdef glNamedBufferStorageEXT
#undef glNamedBufferStorageEXT
#endif
#ifdef PFNGLNAMEDBUFFERSTORAGEEXTPROC
#undef PFNGLNAMEDBUFFERSTORAGEEXTPROC
#endif
typedef void  (*PFNGLNAMEDBUFFERSTORAGEEXTPROC)(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);

#ifdef glClearNamedBufferDataEXT
#undef glClearNamedBufferDataEXT
#endif
#ifdef PFNGLCLEARNAMEDBUFFERDATAEXTPROC
#undef PFNGLCLEARNAMEDBUFFERDATAEXTPROC
#endif
typedef void  (*PFNGLCLEARNAMEDBUFFERDATAEXTPROC)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);

#ifdef glClearNamedBufferSubDataEXT
#undef glClearNamedBufferSubDataEXT
#endif
#ifdef PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC
#undef PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC
#endif
typedef void  (*PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);

#ifdef glNamedFramebufferParameteriEXT
#undef glNamedFramebufferParameteriEXT
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
#undef PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)(GLuint framebuffer, GLenum pname, GLint param);

#ifdef glGetNamedFramebufferParameterivEXT
#undef glGetNamedFramebufferParameterivEXT
#endif
#ifdef PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
#undef PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer, GLenum pname, GLint *params);

#ifdef glProgramUniform1dEXT
#undef glProgramUniform1dEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1DEXTPROC
#undef PFNGLPROGRAMUNIFORM1DEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1DEXTPROC)(GLuint program, GLint location, GLdouble x);

#ifdef glProgramUniform2dEXT
#undef glProgramUniform2dEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2DEXTPROC
#undef PFNGLPROGRAMUNIFORM2DEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y);

#ifdef glProgramUniform3dEXT
#undef glProgramUniform3dEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3DEXTPROC
#undef PFNGLPROGRAMUNIFORM3DEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);

#ifdef glProgramUniform4dEXT
#undef glProgramUniform4dEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4DEXTPROC
#undef PFNGLPROGRAMUNIFORM4DEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4DEXTPROC)(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glProgramUniform1dvEXT
#undef glProgramUniform1dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1DVEXTPROC
#undef PFNGLPROGRAMUNIFORM1DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform2dvEXT
#undef glProgramUniform2dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2DVEXTPROC
#undef PFNGLPROGRAMUNIFORM2DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform3dvEXT
#undef glProgramUniform3dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3DVEXTPROC
#undef PFNGLPROGRAMUNIFORM3DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniform4dvEXT
#undef glProgramUniform4dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4DVEXTPROC
#undef PFNGLPROGRAMUNIFORM4DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4DVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLdouble *value);

#ifdef glProgramUniformMatrix2dvEXT
#undef glProgramUniformMatrix2dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3dvEXT
#undef glProgramUniformMatrix3dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4dvEXT
#undef glProgramUniformMatrix4dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix2x3dvEXT
#undef glProgramUniformMatrix2x3dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix2x4dvEXT
#undef glProgramUniformMatrix2x4dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3x2dvEXT
#undef glProgramUniformMatrix3x2dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix3x4dvEXT
#undef glProgramUniformMatrix3x4dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4x2dvEXT
#undef glProgramUniformMatrix4x2dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glProgramUniformMatrix4x3dvEXT
#undef glProgramUniformMatrix4x3dvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);

#ifdef glTextureBufferRangeEXT
#undef glTextureBufferRangeEXT
#endif
#ifdef PFNGLTEXTUREBUFFERRANGEEXTPROC
#undef PFNGLTEXTUREBUFFERRANGEEXTPROC
#endif
typedef void  (*PFNGLTEXTUREBUFFERRANGEEXTPROC)(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glTextureStorage1DEXT
#undef glTextureStorage1DEXT
#endif
#ifdef PFNGLTEXTURESTORAGE1DEXTPROC
#undef PFNGLTEXTURESTORAGE1DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE1DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);

#ifdef glTextureStorage2DEXT
#undef glTextureStorage2DEXT
#endif
#ifdef PFNGLTEXTURESTORAGE2DEXTPROC
#undef PFNGLTEXTURESTORAGE2DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE2DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glTextureStorage3DEXT
#undef glTextureStorage3DEXT
#endif
#ifdef PFNGLTEXTURESTORAGE3DEXTPROC
#undef PFNGLTEXTURESTORAGE3DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE3DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

#ifdef glTextureStorage2DMultisampleEXT
#undef glTextureStorage2DMultisampleEXT
#endif
#ifdef PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC
#undef PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);

#ifdef glTextureStorage3DMultisampleEXT
#undef glTextureStorage3DMultisampleEXT
#endif
#ifdef PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC
#undef PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

#ifdef glVertexArrayBindVertexBufferEXT
#undef glVertexArrayBindVertexBufferEXT
#endif
#ifdef PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC
#undef PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);

#ifdef glVertexArrayVertexAttribFormatEXT
#undef glVertexArrayVertexAttribFormatEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
#undef PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);

#ifdef glVertexArrayVertexAttribIFormatEXT
#undef glVertexArrayVertexAttribIFormatEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
#undef PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexArrayVertexAttribLFormatEXT
#undef glVertexArrayVertexAttribLFormatEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
#undef PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);

#ifdef glVertexArrayVertexAttribBindingEXT
#undef glVertexArrayVertexAttribBindingEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
#undef PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);

#ifdef glVertexArrayVertexBindingDivisorEXT
#undef glVertexArrayVertexBindingDivisorEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
#undef PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)(GLuint vaobj, GLuint bindingindex, GLuint divisor);

#ifdef glVertexArrayVertexAttribLOffsetEXT
#undef glVertexArrayVertexAttribLOffsetEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
#undef PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);

#ifdef glTexturePageCommitmentEXT
#undef glTexturePageCommitmentEXT
#endif
#ifdef PFNGLTEXTUREPAGECOMMITMENTEXTPROC
#undef PFNGLTEXTUREPAGECOMMITMENTEXTPROC
#endif
typedef void  (*PFNGLTEXTUREPAGECOMMITMENTEXTPROC)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);

#ifdef glVertexArrayVertexAttribDivisorEXT
#undef glVertexArrayVertexAttribDivisorEXT
#endif
#ifdef PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC
#undef PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC
#endif
typedef void  (*PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC)(GLuint vaobj, GLuint index, GLuint divisor);

#ifndef GL_EXT_discard_framebuffer
#define GL_EXT_discard_framebuffer 1
#endif

#ifdef glDiscardFramebufferEXT
#undef glDiscardFramebufferEXT
#endif
#ifdef PFNGLDISCARDFRAMEBUFFEREXTPROC
#undef PFNGLDISCARDFRAMEBUFFEREXTPROC
#endif
typedef void  (*PFNGLDISCARDFRAMEBUFFEREXTPROC)(GLenum target, GLsizei numAttachments, const GLenum *attachments);

#ifndef GL_COLOR_EXT
#define GL_COLOR_EXT 0x1800
#endif

#ifndef GL_DEPTH_EXT
#define GL_DEPTH_EXT 0x1801
#endif

#ifndef GL_STENCIL_EXT
#define GL_STENCIL_EXT 0x1802
#endif

#ifndef GL_EXT_disjoint_timer_query
#define GL_EXT_disjoint_timer_query 1
#endif

#ifdef glGenQueriesEXT
#undef glGenQueriesEXT
#endif
#ifdef PFNGLGENQUERIESEXTPROC
#undef PFNGLGENQUERIESEXTPROC
#endif
typedef void  (*PFNGLGENQUERIESEXTPROC)(GLsizei n, GLuint *ids);

#ifdef glDeleteQueriesEXT
#undef glDeleteQueriesEXT
#endif
#ifdef PFNGLDELETEQUERIESEXTPROC
#undef PFNGLDELETEQUERIESEXTPROC
#endif
typedef void  (*PFNGLDELETEQUERIESEXTPROC)(GLsizei n, const GLuint *ids);

#ifdef glIsQueryEXT
#undef glIsQueryEXT
#endif
#ifdef PFNGLISQUERYEXTPROC
#undef PFNGLISQUERYEXTPROC
#endif
typedef GLboolean  (*PFNGLISQUERYEXTPROC)(GLuint id);

#ifdef glBeginQueryEXT
#undef glBeginQueryEXT
#endif
#ifdef PFNGLBEGINQUERYEXTPROC
#undef PFNGLBEGINQUERYEXTPROC
#endif
typedef void  (*PFNGLBEGINQUERYEXTPROC)(GLenum target, GLuint id);

#ifdef glEndQueryEXT
#undef glEndQueryEXT
#endif
#ifdef PFNGLENDQUERYEXTPROC
#undef PFNGLENDQUERYEXTPROC
#endif
typedef void  (*PFNGLENDQUERYEXTPROC)(GLenum target);

#ifdef glQueryCounterEXT
#undef glQueryCounterEXT
#endif
#ifdef PFNGLQUERYCOUNTEREXTPROC
#undef PFNGLQUERYCOUNTEREXTPROC
#endif
typedef void  (*PFNGLQUERYCOUNTEREXTPROC)(GLuint id, GLenum target);

#ifdef glGetQueryivEXT
#undef glGetQueryivEXT
#endif
#ifdef PFNGLGETQUERYIVEXTPROC
#undef PFNGLGETQUERYIVEXTPROC
#endif
typedef void  (*PFNGLGETQUERYIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetQueryObjectivEXT
#undef glGetQueryObjectivEXT
#endif
#ifdef PFNGLGETQUERYOBJECTIVEXTPROC
#undef PFNGLGETQUERYOBJECTIVEXTPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTIVEXTPROC)(GLuint id, GLenum pname, GLint *params);

#ifdef glGetQueryObjectuivEXT
#undef glGetQueryObjectuivEXT
#endif
#ifdef PFNGLGETQUERYOBJECTUIVEXTPROC
#undef PFNGLGETQUERYOBJECTUIVEXTPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUIVEXTPROC)(GLuint id, GLenum pname, GLuint *params);

#ifdef glGetQueryObjecti64vEXT
#undef glGetQueryObjecti64vEXT
#endif
#ifdef PFNGLGETQUERYOBJECTI64VEXTPROC
#undef PFNGLGETQUERYOBJECTI64VEXTPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTI64VEXTPROC)(GLuint id, GLenum pname, GLint64 *params);

#ifdef glGetQueryObjectui64vEXT
#undef glGetQueryObjectui64vEXT
#endif
#ifdef PFNGLGETQUERYOBJECTUI64VEXTPROC
#undef PFNGLGETQUERYOBJECTUI64VEXTPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUI64VEXTPROC)(GLuint id, GLenum pname, GLuint64 *params);

#ifndef GL_QUERY_COUNTER_BITS_EXT
#define GL_QUERY_COUNTER_BITS_EXT 0x8864
#endif

#ifndef GL_CURRENT_QUERY_EXT
#define GL_CURRENT_QUERY_EXT 0x8865
#endif

#ifndef GL_QUERY_RESULT_EXT
#define GL_QUERY_RESULT_EXT 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE_EXT
#define GL_QUERY_RESULT_AVAILABLE_EXT 0x8867
#endif

#ifndef GL_TIME_ELAPSED_EXT
#define GL_TIME_ELAPSED_EXT 0x88BF
#endif

#ifndef GL_TIMESTAMP_EXT
#define GL_TIMESTAMP_EXT 0x8E28
#endif

#ifndef GL_GPU_DISJOINT_EXT
#define GL_GPU_DISJOINT_EXT 0x8FBB
#endif

#ifndef GL_EXT_draw_buffers
#define GL_EXT_draw_buffers 1
#endif

#ifdef glDrawBuffersEXT
#undef glDrawBuffersEXT
#endif
#ifdef PFNGLDRAWBUFFERSEXTPROC
#undef PFNGLDRAWBUFFERSEXTPROC
#endif
typedef void  (*PFNGLDRAWBUFFERSEXTPROC)(GLsizei n, const GLenum *bufs);

#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif

#ifndef GL_MAX_DRAW_BUFFERS_EXT
#define GL_MAX_DRAW_BUFFERS_EXT 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_EXT
#define GL_DRAW_BUFFER0_EXT 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_EXT
#define GL_DRAW_BUFFER1_EXT 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_EXT
#define GL_DRAW_BUFFER2_EXT 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_EXT
#define GL_DRAW_BUFFER3_EXT 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_EXT
#define GL_DRAW_BUFFER4_EXT 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_EXT
#define GL_DRAW_BUFFER5_EXT 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_EXT
#define GL_DRAW_BUFFER6_EXT 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_EXT
#define GL_DRAW_BUFFER7_EXT 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_EXT
#define GL_DRAW_BUFFER8_EXT 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_EXT
#define GL_DRAW_BUFFER9_EXT 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_EXT
#define GL_DRAW_BUFFER10_EXT 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_EXT
#define GL_DRAW_BUFFER11_EXT 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_EXT
#define GL_DRAW_BUFFER12_EXT 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_EXT
#define GL_DRAW_BUFFER13_EXT 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_EXT
#define GL_DRAW_BUFFER14_EXT 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_EXT
#define GL_DRAW_BUFFER15_EXT 0x8834
#endif

#ifndef GL_COLOR_ATTACHMENT0_EXT
#define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif

#ifndef GL_COLOR_ATTACHMENT1_EXT
#define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2_EXT
#define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3_EXT
#define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4_EXT
#define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5_EXT
#define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6_EXT
#define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7_EXT
#define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8_EXT
#define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9_EXT
#define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10_EXT
#define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11_EXT
#define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12_EXT
#define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13_EXT
#define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14_EXT
#define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15_EXT
#define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif

#ifndef GL_EXT_draw_buffers2
#define GL_EXT_draw_buffers2 1
#endif

#ifdef glColorMaskIndexedEXT
#undef glColorMaskIndexedEXT
#endif
#ifdef PFNGLCOLORMASKINDEXEDEXTPROC
#undef PFNGLCOLORMASKINDEXEDEXTPROC
#endif
typedef void  (*PFNGLCOLORMASKINDEXEDEXTPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);

#ifdef glGetBooleanIndexedvEXT
#undef glGetBooleanIndexedvEXT
#endif
#ifdef PFNGLGETBOOLEANINDEXEDVEXTPROC
#undef PFNGLGETBOOLEANINDEXEDVEXTPROC
#endif
typedef void  (*PFNGLGETBOOLEANINDEXEDVEXTPROC)(GLenum target, GLuint index, GLboolean *data);

#ifdef glGetIntegerIndexedvEXT
#undef glGetIntegerIndexedvEXT
#endif
#ifdef PFNGLGETINTEGERINDEXEDVEXTPROC
#undef PFNGLGETINTEGERINDEXEDVEXTPROC
#endif
typedef void  (*PFNGLGETINTEGERINDEXEDVEXTPROC)(GLenum target, GLuint index, GLint *data);

#ifdef glEnableIndexedEXT
#undef glEnableIndexedEXT
#endif
#ifdef PFNGLENABLEINDEXEDEXTPROC
#undef PFNGLENABLEINDEXEDEXTPROC
#endif
typedef void  (*PFNGLENABLEINDEXEDEXTPROC)(GLenum target, GLuint index);

#ifdef glDisableIndexedEXT
#undef glDisableIndexedEXT
#endif
#ifdef PFNGLDISABLEINDEXEDEXTPROC
#undef PFNGLDISABLEINDEXEDEXTPROC
#endif
typedef void  (*PFNGLDISABLEINDEXEDEXTPROC)(GLenum target, GLuint index);

#ifdef glIsEnabledIndexedEXT
#undef glIsEnabledIndexedEXT
#endif
#ifdef PFNGLISENABLEDINDEXEDEXTPROC
#undef PFNGLISENABLEDINDEXEDEXTPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDINDEXEDEXTPROC)(GLenum target, GLuint index);

#ifndef GL_EXT_draw_buffers_indexed
#define GL_EXT_draw_buffers_indexed 1
#endif

#ifdef glEnableiEXT
#undef glEnableiEXT
#endif
#ifdef PFNGLENABLEIEXTPROC
#undef PFNGLENABLEIEXTPROC
#endif
typedef void  (*PFNGLENABLEIEXTPROC)(GLenum target, GLuint index);

#ifdef glDisableiEXT
#undef glDisableiEXT
#endif
#ifdef PFNGLDISABLEIEXTPROC
#undef PFNGLDISABLEIEXTPROC
#endif
typedef void  (*PFNGLDISABLEIEXTPROC)(GLenum target, GLuint index);

#ifdef glBlendEquationiEXT
#undef glBlendEquationiEXT
#endif
#ifdef PFNGLBLENDEQUATIONIEXTPROC
#undef PFNGLBLENDEQUATIONIEXTPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONIEXTPROC)(GLuint buf, GLenum mode);

#ifdef glBlendEquationSeparateiEXT
#undef glBlendEquationSeparateiEXT
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEIEXTPROC
#undef PFNGLBLENDEQUATIONSEPARATEIEXTPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEIEXTPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);

#ifdef glBlendFunciEXT
#undef glBlendFunciEXT
#endif
#ifdef PFNGLBLENDFUNCIEXTPROC
#undef PFNGLBLENDFUNCIEXTPROC
#endif
typedef void  (*PFNGLBLENDFUNCIEXTPROC)(GLuint buf, GLenum src, GLenum dst);

#ifdef glBlendFuncSeparateiEXT
#undef glBlendFuncSeparateiEXT
#endif
#ifdef PFNGLBLENDFUNCSEPARATEIEXTPROC
#undef PFNGLBLENDFUNCSEPARATEIEXTPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEIEXTPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

#ifdef glColorMaskiEXT
#undef glColorMaskiEXT
#endif
#ifdef PFNGLCOLORMASKIEXTPROC
#undef PFNGLCOLORMASKIEXTPROC
#endif
typedef void  (*PFNGLCOLORMASKIEXTPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);

#ifdef glIsEnablediEXT
#undef glIsEnablediEXT
#endif
#ifdef PFNGLISENABLEDIEXTPROC
#undef PFNGLISENABLEDIEXTPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDIEXTPROC)(GLenum target, GLuint index);

#ifndef GL_BLEND_EQUATION_RGB
#define GL_BLEND_EQUATION_RGB 0x8009
#endif

#ifndef GL_BLEND_EQUATION_ALPHA
#define GL_BLEND_EQUATION_ALPHA 0x883D
#endif

#ifndef GL_BLEND_SRC_RGB
#define GL_BLEND_SRC_RGB 0x80C9
#endif

#ifndef GL_BLEND_SRC_ALPHA
#define GL_BLEND_SRC_ALPHA 0x80CB
#endif

#ifndef GL_BLEND_DST_RGB
#define GL_BLEND_DST_RGB 0x80C8
#endif

#ifndef GL_BLEND_DST_ALPHA
#define GL_BLEND_DST_ALPHA 0x80CA
#endif

#ifndef GL_COLOR_WRITEMASK
#define GL_COLOR_WRITEMASK 0x0C23
#endif

#ifndef GL_BLEND
#define GL_BLEND 0x0BE2
#endif

#ifndef GL_FUNC_ADD
#define GL_FUNC_ADD 0x8006
#endif

#ifndef GL_FUNC_SUBTRACT
#define GL_FUNC_SUBTRACT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#endif

#ifndef GL_MIN
#define GL_MIN 0x8007
#endif

#ifndef GL_MAX
#define GL_MAX 0x8008
#endif

#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_ONE
#define GL_ONE 1
#endif

#ifndef GL_SRC_COLOR
#define GL_SRC_COLOR 0x0300
#endif

#ifndef GL_ONE_MINUS_SRC_COLOR
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#endif

#ifndef GL_DST_COLOR
#define GL_DST_COLOR 0x0306
#endif

#ifndef GL_ONE_MINUS_DST_COLOR
#define GL_ONE_MINUS_DST_COLOR 0x0307
#endif

#ifndef GL_SRC_ALPHA
#define GL_SRC_ALPHA 0x0302
#endif

#ifndef GL_ONE_MINUS_SRC_ALPHA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#endif

#ifndef GL_DST_ALPHA
#define GL_DST_ALPHA 0x0304
#endif

#ifndef GL_ONE_MINUS_DST_ALPHA
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#endif

#ifndef GL_CONSTANT_COLOR
#define GL_CONSTANT_COLOR 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA
#define GL_CONSTANT_ALPHA 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#endif

#ifndef GL_SRC_ALPHA_SATURATE
#define GL_SRC_ALPHA_SATURATE 0x0308
#endif

#ifndef GL_EXT_draw_elements_base_vertex
#define GL_EXT_draw_elements_base_vertex 1
#endif

#ifdef glDrawElementsBaseVertexEXT
#undef glDrawElementsBaseVertexEXT
#endif
#ifdef PFNGLDRAWELEMENTSBASEVERTEXEXTPROC
#undef PFNGLDRAWELEMENTSBASEVERTEXEXTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSBASEVERTEXEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);

#ifdef glDrawRangeElementsBaseVertexEXT
#undef glDrawRangeElementsBaseVertexEXT
#endif
#ifdef PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC
#undef PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);

#ifdef glDrawElementsInstancedBaseVertexEXT
#undef glDrawElementsInstancedBaseVertexEXT
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);

#ifdef glMultiDrawElementsBaseVertexEXT
#undef glMultiDrawElementsBaseVertexEXT
#endif
#ifdef PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC
#undef PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex);

#ifndef GL_EXT_draw_instanced
#define GL_EXT_draw_instanced 1
#endif

#ifdef glDrawArraysInstancedEXT
#undef glDrawArraysInstancedEXT
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDEXTPROC
#undef PFNGLDRAWARRAYSINSTANCEDEXTPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDEXTPROC)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);

#ifdef glDrawElementsInstancedEXT
#undef glDrawElementsInstancedEXT
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDEXTPROC
#undef PFNGLDRAWELEMENTSINSTANCEDEXTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);

#ifndef GL_EXT_draw_range_elements
#define GL_EXT_draw_range_elements 1
#endif

#ifdef glDrawRangeElementsEXT
#undef glDrawRangeElementsEXT
#endif
#ifdef PFNGLDRAWRANGEELEMENTSEXTPROC
#undef PFNGLDRAWRANGEELEMENTSEXTPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTSEXTPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);

#ifndef GL_MAX_ELEMENTS_VERTICES_EXT
#define GL_MAX_ELEMENTS_VERTICES_EXT 0x80E8
#endif

#ifndef GL_MAX_ELEMENTS_INDICES_EXT
#define GL_MAX_ELEMENTS_INDICES_EXT 0x80E9
#endif

#ifndef GL_EXT_float_blend
#define GL_EXT_float_blend 1
#endif

#ifndef GL_EXT_fog_coord
#define GL_EXT_fog_coord 1
#endif

#ifdef glFogCoordfEXT
#undef glFogCoordfEXT
#endif
#ifdef PFNGLFOGCOORDFEXTPROC
#undef PFNGLFOGCOORDFEXTPROC
#endif
typedef void  (*PFNGLFOGCOORDFEXTPROC)(GLfloat coord);

#ifdef glFogCoordfvEXT
#undef glFogCoordfvEXT
#endif
#ifdef PFNGLFOGCOORDFVEXTPROC
#undef PFNGLFOGCOORDFVEXTPROC
#endif
typedef void  (*PFNGLFOGCOORDFVEXTPROC)(const GLfloat *coord);

#ifdef glFogCoorddEXT
#undef glFogCoorddEXT
#endif
#ifdef PFNGLFOGCOORDDEXTPROC
#undef PFNGLFOGCOORDDEXTPROC
#endif
typedef void  (*PFNGLFOGCOORDDEXTPROC)(GLdouble coord);

#ifdef glFogCoorddvEXT
#undef glFogCoorddvEXT
#endif
#ifdef PFNGLFOGCOORDDVEXTPROC
#undef PFNGLFOGCOORDDVEXTPROC
#endif
typedef void  (*PFNGLFOGCOORDDVEXTPROC)(const GLdouble *coord);

#ifdef glFogCoordPointerEXT
#undef glFogCoordPointerEXT
#endif
#ifdef PFNGLFOGCOORDPOINTEREXTPROC
#undef PFNGLFOGCOORDPOINTEREXTPROC
#endif
typedef void  (*PFNGLFOGCOORDPOINTEREXTPROC)(GLenum type, GLsizei stride, const void *pointer);

#ifndef GL_FOG_COORDINATE_SOURCE_EXT
#define GL_FOG_COORDINATE_SOURCE_EXT 0x8450
#endif

#ifndef GL_FOG_COORDINATE_EXT
#define GL_FOG_COORDINATE_EXT 0x8451
#endif

#ifndef GL_FRAGMENT_DEPTH_EXT
#define GL_FRAGMENT_DEPTH_EXT 0x8452
#endif

#ifndef GL_CURRENT_FOG_COORDINATE_EXT
#define GL_CURRENT_FOG_COORDINATE_EXT 0x8453
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_TYPE_EXT
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_STRIDE_EXT
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_POINTER_EXT
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_EXT
#define GL_FOG_COORDINATE_ARRAY_EXT 0x8457
#endif

#ifndef GL_EXT_framebuffer_blit
#define GL_EXT_framebuffer_blit 1
#endif

#ifdef glBlitFramebufferEXT
#undef glBlitFramebufferEXT
#endif
#ifdef PFNGLBLITFRAMEBUFFEREXTPROC
#undef PFNGLBLITFRAMEBUFFEREXTPROC
#endif
typedef void  (*PFNGLBLITFRAMEBUFFEREXTPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#ifndef GL_READ_FRAMEBUFFER_EXT
#define GL_READ_FRAMEBUFFER_EXT 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER_EXT
#define GL_DRAW_FRAMEBUFFER_EXT 0x8CA9
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING_EXT
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING_EXT
#define GL_READ_FRAMEBUFFER_BINDING_EXT 0x8CAA
#endif

#ifndef GL_EXT_framebuffer_multisample
#define GL_EXT_framebuffer_multisample 1
#endif

#ifdef glRenderbufferStorageMultisampleEXT
#undef glRenderbufferStorageMultisampleEXT
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifndef GL_RENDERBUFFER_SAMPLES_EXT
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#endif

#ifndef GL_MAX_SAMPLES_EXT
#define GL_MAX_SAMPLES_EXT 0x8D57
#endif

#ifndef GL_EXT_framebuffer_multisample_blit_scaled
#define GL_EXT_framebuffer_multisample_blit_scaled 1
#endif

#ifndef GL_SCALED_RESOLVE_FASTEST_EXT
#define GL_SCALED_RESOLVE_FASTEST_EXT 0x90BA
#endif

#ifndef GL_SCALED_RESOLVE_NICEST_EXT
#define GL_SCALED_RESOLVE_NICEST_EXT 0x90BB
#endif

#ifndef GL_EXT_framebuffer_object
#define GL_EXT_framebuffer_object 1
#endif

#ifdef glIsRenderbufferEXT
#undef glIsRenderbufferEXT
#endif
#ifdef PFNGLISRENDERBUFFEREXTPROC
#undef PFNGLISRENDERBUFFEREXTPROC
#endif
typedef GLboolean  (*PFNGLISRENDERBUFFEREXTPROC)(GLuint renderbuffer);

#ifdef glBindRenderbufferEXT
#undef glBindRenderbufferEXT
#endif
#ifdef PFNGLBINDRENDERBUFFEREXTPROC
#undef PFNGLBINDRENDERBUFFEREXTPROC
#endif
typedef void  (*PFNGLBINDRENDERBUFFEREXTPROC)(GLenum target, GLuint renderbuffer);

#ifdef glDeleteRenderbuffersEXT
#undef glDeleteRenderbuffersEXT
#endif
#ifdef PFNGLDELETERENDERBUFFERSEXTPROC
#undef PFNGLDELETERENDERBUFFERSEXTPROC
#endif
typedef void  (*PFNGLDELETERENDERBUFFERSEXTPROC)(GLsizei n, const GLuint *renderbuffers);

#ifdef glGenRenderbuffersEXT
#undef glGenRenderbuffersEXT
#endif
#ifdef PFNGLGENRENDERBUFFERSEXTPROC
#undef PFNGLGENRENDERBUFFERSEXTPROC
#endif
typedef void  (*PFNGLGENRENDERBUFFERSEXTPROC)(GLsizei n, GLuint *renderbuffers);

#ifdef glRenderbufferStorageEXT
#undef glRenderbufferStorageEXT
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEEXTPROC
#undef PFNGLRENDERBUFFERSTORAGEEXTPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEEXTPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glGetRenderbufferParameterivEXT
#undef glGetRenderbufferParameterivEXT
#endif
#ifdef PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
#undef PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glIsFramebufferEXT
#undef glIsFramebufferEXT
#endif
#ifdef PFNGLISFRAMEBUFFEREXTPROC
#undef PFNGLISFRAMEBUFFEREXTPROC
#endif
typedef GLboolean  (*PFNGLISFRAMEBUFFEREXTPROC)(GLuint framebuffer);

#ifdef glBindFramebufferEXT
#undef glBindFramebufferEXT
#endif
#ifdef PFNGLBINDFRAMEBUFFEREXTPROC
#undef PFNGLBINDFRAMEBUFFEREXTPROC
#endif
typedef void  (*PFNGLBINDFRAMEBUFFEREXTPROC)(GLenum target, GLuint framebuffer);

#ifdef glDeleteFramebuffersEXT
#undef glDeleteFramebuffersEXT
#endif
#ifdef PFNGLDELETEFRAMEBUFFERSEXTPROC
#undef PFNGLDELETEFRAMEBUFFERSEXTPROC
#endif
typedef void  (*PFNGLDELETEFRAMEBUFFERSEXTPROC)(GLsizei n, const GLuint *framebuffers);

#ifdef glGenFramebuffersEXT
#undef glGenFramebuffersEXT
#endif
#ifdef PFNGLGENFRAMEBUFFERSEXTPROC
#undef PFNGLGENFRAMEBUFFERSEXTPROC
#endif
typedef void  (*PFNGLGENFRAMEBUFFERSEXTPROC)(GLsizei n, GLuint *framebuffers);

#ifdef glCheckFramebufferStatusEXT
#undef glCheckFramebufferStatusEXT
#endif
#ifdef PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
#undef PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC
#endif
typedef GLenum  (*PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)(GLenum target);

#ifdef glFramebufferTexture1DEXT
#undef glFramebufferTexture1DEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
#undef PFNGLFRAMEBUFFERTEXTURE1DEXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glFramebufferTexture2DEXT
#undef glFramebufferTexture2DEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
#undef PFNGLFRAMEBUFFERTEXTURE2DEXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glFramebufferTexture3DEXT
#undef glFramebufferTexture3DEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
#undef PFNGLFRAMEBUFFERTEXTURE3DEXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);

#ifdef glFramebufferRenderbufferEXT
#undef glFramebufferRenderbufferEXT
#endif
#ifdef PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
#undef PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);

#ifdef glGetFramebufferAttachmentParameterivEXT
#undef glGetFramebufferAttachmentParameterivEXT
#endif
#ifdef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
#undef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLenum target, GLenum attachment, GLenum pname, GLint *params);

#ifdef glGenerateMipmapEXT
#undef glGenerateMipmapEXT
#endif
#ifdef PFNGLGENERATEMIPMAPEXTPROC
#undef PFNGLGENERATEMIPMAPEXTPROC
#endif
typedef void  (*PFNGLGENERATEMIPMAPEXTPROC)(GLenum target);

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_EXT
#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE_EXT
#define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#endif

#ifndef GL_FRAMEBUFFER_BINDING_EXT
#define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING_EXT
#define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE_EXT
#define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#endif

#ifndef GL_FRAMEBUFFER_UNSUPPORTED_EXT
#define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#endif

#ifndef GL_MAX_COLOR_ATTACHMENTS_EXT
#define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#endif

#ifndef GL_COLOR_ATTACHMENT0_EXT
#define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#endif

#ifndef GL_COLOR_ATTACHMENT1_EXT
#define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2_EXT
#define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3_EXT
#define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4_EXT
#define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5_EXT
#define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6_EXT
#define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7_EXT
#define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8_EXT
#define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9_EXT
#define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10_EXT
#define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11_EXT
#define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12_EXT
#define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13_EXT
#define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14_EXT
#define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15_EXT
#define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#endif

#ifndef GL_DEPTH_ATTACHMENT_EXT
#define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#endif

#ifndef GL_STENCIL_ATTACHMENT_EXT
#define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#endif

#ifndef GL_FRAMEBUFFER_EXT
#define GL_FRAMEBUFFER_EXT 0x8D40
#endif

#ifndef GL_RENDERBUFFER_EXT
#define GL_RENDERBUFFER_EXT 0x8D41
#endif

#ifndef GL_RENDERBUFFER_WIDTH_EXT
#define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#endif

#ifndef GL_RENDERBUFFER_HEIGHT_EXT
#define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#endif

#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_EXT
#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#endif

#ifndef GL_STENCIL_INDEX1_EXT
#define GL_STENCIL_INDEX1_EXT 0x8D46
#endif

#ifndef GL_STENCIL_INDEX4_EXT
#define GL_STENCIL_INDEX4_EXT 0x8D47
#endif

#ifndef GL_STENCIL_INDEX8_EXT
#define GL_STENCIL_INDEX8_EXT 0x8D48
#endif

#ifndef GL_STENCIL_INDEX16_EXT
#define GL_STENCIL_INDEX16_EXT 0x8D49
#endif

#ifndef GL_RENDERBUFFER_RED_SIZE_EXT
#define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#endif

#ifndef GL_RENDERBUFFER_GREEN_SIZE_EXT
#define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#endif

#ifndef GL_RENDERBUFFER_BLUE_SIZE_EXT
#define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#endif

#ifndef GL_RENDERBUFFER_ALPHA_SIZE_EXT
#define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#endif

#ifndef GL_RENDERBUFFER_DEPTH_SIZE_EXT
#define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#endif

#ifndef GL_RENDERBUFFER_STENCIL_SIZE_EXT
#define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#endif

#ifndef GL_EXT_framebuffer_sRGB
#define GL_EXT_framebuffer_sRGB 1
#endif

#ifndef GL_FRAMEBUFFER_SRGB_EXT
#define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
#endif

#ifndef GL_FRAMEBUFFER_SRGB_CAPABLE_EXT
#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x8DBA
#endif

#ifndef GL_EXT_geometry_point_size
#define GL_EXT_geometry_point_size 1
#endif

#ifndef GL_EXT_geometry_shader
#define GL_EXT_geometry_shader 1
#endif

#ifdef glFramebufferTextureEXT
#undef glFramebufferTextureEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTUREEXTPROC
#undef PFNGLFRAMEBUFFERTEXTUREEXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTUREEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);

#ifndef GL_GEOMETRY_SHADER_EXT
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#endif

#ifndef GL_GEOMETRY_SHADER_BIT_EXT
#define GL_GEOMETRY_SHADER_BIT_EXT 0x00000004
#endif

#ifndef GL_GEOMETRY_LINKED_VERTICES_OUT_EXT
#define GL_GEOMETRY_LINKED_VERTICES_OUT_EXT 0x8916
#endif

#ifndef GL_GEOMETRY_LINKED_INPUT_TYPE_EXT
#define GL_GEOMETRY_LINKED_INPUT_TYPE_EXT 0x8917
#endif

#ifndef GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT
#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT 0x8918
#endif

#ifndef GL_GEOMETRY_SHADER_INVOCATIONS_EXT
#define GL_GEOMETRY_SHADER_INVOCATIONS_EXT 0x887F
#endif

#ifndef GL_LAYER_PROVOKING_VERTEX_EXT
#define GL_LAYER_PROVOKING_VERTEX_EXT 0x825E
#endif

#ifndef GL_LINES_ADJACENCY_EXT
#define GL_LINES_ADJACENCY_EXT 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_EXT
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_EXT
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_EXT
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT 0x8A2C
#endif

#ifndef GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8A32
#endif

#ifndef GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT 0x9123
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT 0x9124
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT 0x8E5A
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT 0x92CF
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT 0x92D5
#endif

#ifndef GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT 0x90CD
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT 0x90D7
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION_EXT
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION_EXT
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#endif

#ifndef GL_UNDEFINED_VERTEX_EXT
#define GL_UNDEFINED_VERTEX_EXT 0x8260
#endif

#ifndef GL_PRIMITIVES_GENERATED_EXT
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT
#define GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT 0x9312
#endif

#ifndef GL_MAX_FRAMEBUFFER_LAYERS_EXT
#define GL_MAX_FRAMEBUFFER_LAYERS_EXT 0x9317
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#endif

#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER_EXT
#define GL_REFERENCED_BY_GEOMETRY_SHADER_EXT 0x9309
#endif

#ifndef GL_EXT_geometry_shader4
#define GL_EXT_geometry_shader4 1
#endif

#ifdef glProgramParameteriEXT
#undef glProgramParameteriEXT
#endif
#ifdef PFNGLPROGRAMPARAMETERIEXTPROC
#undef PFNGLPROGRAMPARAMETERIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETERIEXTPROC)(GLuint program, GLenum pname, GLint value);

#ifndef GL_GEOMETRY_SHADER_EXT
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT_EXT
#define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE_EXT
#define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE_EXT
#define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#endif

#ifndef GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
#endif

#ifndef GL_MAX_VERTEX_VARYING_COMPONENTS_EXT
#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
#endif

#ifndef GL_MAX_VARYING_COMPONENTS_EXT
#define GL_MAX_VARYING_COMPONENTS_EXT 0x8B4B
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#endif

#ifndef GL_LINES_ADJACENCY_EXT
#define GL_LINES_ADJACENCY_EXT 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_EXT
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_EXT
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_EXT
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#endif

#ifndef GL_PROGRAM_POINT_SIZE_EXT
#define GL_PROGRAM_POINT_SIZE_EXT 0x8642
#endif

#ifndef GL_EXT_gpu_program_parameters
#define GL_EXT_gpu_program_parameters 1
#endif

#ifdef glProgramEnvParameters4fvEXT
#undef glProgramEnvParameters4fvEXT
#endif
#ifdef PFNGLPROGRAMENVPARAMETERS4FVEXTPROC
#undef PFNGLPROGRAMENVPARAMETERS4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);

#ifdef glProgramLocalParameters4fvEXT
#undef glProgramLocalParameters4fvEXT
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
#undef PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat *params);

#ifndef GL_EXT_gpu_shader4
#define GL_EXT_gpu_shader4 1
#endif

#ifdef glGetUniformuivEXT
#undef glGetUniformuivEXT
#endif
#ifdef PFNGLGETUNIFORMUIVEXTPROC
#undef PFNGLGETUNIFORMUIVEXTPROC
#endif
typedef void  (*PFNGLGETUNIFORMUIVEXTPROC)(GLuint program, GLint location, GLuint *params);

#ifdef glBindFragDataLocationEXT
#undef glBindFragDataLocationEXT
#endif
#ifdef PFNGLBINDFRAGDATALOCATIONEXTPROC
#undef PFNGLBINDFRAGDATALOCATIONEXTPROC
#endif
typedef void  (*PFNGLBINDFRAGDATALOCATIONEXTPROC)(GLuint program, GLuint color, const GLchar *name);

#ifdef glGetFragDataLocationEXT
#undef glGetFragDataLocationEXT
#endif
#ifdef PFNGLGETFRAGDATALOCATIONEXTPROC
#undef PFNGLGETFRAGDATALOCATIONEXTPROC
#endif
typedef GLint  (*PFNGLGETFRAGDATALOCATIONEXTPROC)(GLuint program, const GLchar *name);

#ifdef glUniform1uiEXT
#undef glUniform1uiEXT
#endif
#ifdef PFNGLUNIFORM1UIEXTPROC
#undef PFNGLUNIFORM1UIEXTPROC
#endif
typedef void  (*PFNGLUNIFORM1UIEXTPROC)(GLint location, GLuint v0);

#ifdef glUniform2uiEXT
#undef glUniform2uiEXT
#endif
#ifdef PFNGLUNIFORM2UIEXTPROC
#undef PFNGLUNIFORM2UIEXTPROC
#endif
typedef void  (*PFNGLUNIFORM2UIEXTPROC)(GLint location, GLuint v0, GLuint v1);

#ifdef glUniform3uiEXT
#undef glUniform3uiEXT
#endif
#ifdef PFNGLUNIFORM3UIEXTPROC
#undef PFNGLUNIFORM3UIEXTPROC
#endif
typedef void  (*PFNGLUNIFORM3UIEXTPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2);

#ifdef glUniform4uiEXT
#undef glUniform4uiEXT
#endif
#ifdef PFNGLUNIFORM4UIEXTPROC
#undef PFNGLUNIFORM4UIEXTPROC
#endif
typedef void  (*PFNGLUNIFORM4UIEXTPROC)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

#ifdef glUniform1uivEXT
#undef glUniform1uivEXT
#endif
#ifdef PFNGLUNIFORM1UIVEXTPROC
#undef PFNGLUNIFORM1UIVEXTPROC
#endif
typedef void  (*PFNGLUNIFORM1UIVEXTPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform2uivEXT
#undef glUniform2uivEXT
#endif
#ifdef PFNGLUNIFORM2UIVEXTPROC
#undef PFNGLUNIFORM2UIVEXTPROC
#endif
typedef void  (*PFNGLUNIFORM2UIVEXTPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform3uivEXT
#undef glUniform3uivEXT
#endif
#ifdef PFNGLUNIFORM3UIVEXTPROC
#undef PFNGLUNIFORM3UIVEXTPROC
#endif
typedef void  (*PFNGLUNIFORM3UIVEXTPROC)(GLint location, GLsizei count, const GLuint *value);

#ifdef glUniform4uivEXT
#undef glUniform4uivEXT
#endif
#ifdef PFNGLUNIFORM4UIVEXTPROC
#undef PFNGLUNIFORM4UIVEXTPROC
#endif
typedef void  (*PFNGLUNIFORM4UIVEXTPROC)(GLint location, GLsizei count, const GLuint *value);

#ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
#endif

#ifndef GL_SAMPLER_1D_ARRAY_EXT
#define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
#endif

#ifndef GL_SAMPLER_2D_ARRAY_EXT
#define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
#endif

#ifndef GL_SAMPLER_BUFFER_EXT
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#endif

#ifndef GL_SAMPLER_1D_ARRAY_SHADOW_EXT
#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
#endif

#ifndef GL_SAMPLER_2D_ARRAY_SHADOW_EXT
#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
#endif

#ifndef GL_SAMPLER_CUBE_SHADOW_EXT
#define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
#endif

#ifndef GL_UNSIGNED_INT_VEC2_EXT
#define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
#endif

#ifndef GL_UNSIGNED_INT_VEC3_EXT
#define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
#endif

#ifndef GL_UNSIGNED_INT_VEC4_EXT
#define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
#endif

#ifndef GL_INT_SAMPLER_1D_EXT
#define GL_INT_SAMPLER_1D_EXT 0x8DC9
#endif

#ifndef GL_INT_SAMPLER_2D_EXT
#define GL_INT_SAMPLER_2D_EXT 0x8DCA
#endif

#ifndef GL_INT_SAMPLER_3D_EXT
#define GL_INT_SAMPLER_3D_EXT 0x8DCB
#endif

#ifndef GL_INT_SAMPLER_CUBE_EXT
#define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
#endif

#ifndef GL_INT_SAMPLER_2D_RECT_EXT
#define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
#endif

#ifndef GL_INT_SAMPLER_1D_ARRAY_EXT
#define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
#endif

#ifndef GL_INT_SAMPLER_2D_ARRAY_EXT
#define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
#endif

#ifndef GL_INT_SAMPLER_BUFFER_EXT
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_EXT
#define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_3D_EXT
#define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_EXT
#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#endif

#ifndef GL_MIN_PROGRAM_TEXEL_OFFSET_EXT
#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT 0x8904
#endif

#ifndef GL_MAX_PROGRAM_TEXEL_OFFSET_EXT
#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT 0x8905
#endif

#ifndef GL_EXT_gpu_shader5
#define GL_EXT_gpu_shader5 1
#endif

#ifndef GL_EXT_histogram
#define GL_EXT_histogram 1
#endif

#ifdef glGetHistogramEXT
#undef glGetHistogramEXT
#endif
#ifdef PFNGLGETHISTOGRAMEXTPROC
#undef PFNGLGETHISTOGRAMEXTPROC
#endif
typedef void  (*PFNGLGETHISTOGRAMEXTPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);

#ifdef glGetHistogramParameterfvEXT
#undef glGetHistogramParameterfvEXT
#endif
#ifdef PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
#undef PFNGLGETHISTOGRAMPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetHistogramParameterivEXT
#undef glGetHistogramParameterivEXT
#endif
#ifdef PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
#undef PFNGLGETHISTOGRAMPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetMinmaxEXT
#undef glGetMinmaxEXT
#endif
#ifdef PFNGLGETMINMAXEXTPROC
#undef PFNGLGETMINMAXEXTPROC
#endif
typedef void  (*PFNGLGETMINMAXEXTPROC)(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);

#ifdef glGetMinmaxParameterfvEXT
#undef glGetMinmaxParameterfvEXT
#endif
#ifdef PFNGLGETMINMAXPARAMETERFVEXTPROC
#undef PFNGLGETMINMAXPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETMINMAXPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetMinmaxParameterivEXT
#undef glGetMinmaxParameterivEXT
#endif
#ifdef PFNGLGETMINMAXPARAMETERIVEXTPROC
#undef PFNGLGETMINMAXPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETMINMAXPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glHistogramEXT
#undef glHistogramEXT
#endif
#ifdef PFNGLHISTOGRAMEXTPROC
#undef PFNGLHISTOGRAMEXTPROC
#endif
typedef void  (*PFNGLHISTOGRAMEXTPROC)(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);

#ifdef glMinmaxEXT
#undef glMinmaxEXT
#endif
#ifdef PFNGLMINMAXEXTPROC
#undef PFNGLMINMAXEXTPROC
#endif
typedef void  (*PFNGLMINMAXEXTPROC)(GLenum target, GLenum internalformat, GLboolean sink);

#ifdef glResetHistogramEXT
#undef glResetHistogramEXT
#endif
#ifdef PFNGLRESETHISTOGRAMEXTPROC
#undef PFNGLRESETHISTOGRAMEXTPROC
#endif
typedef void  (*PFNGLRESETHISTOGRAMEXTPROC)(GLenum target);

#ifdef glResetMinmaxEXT
#undef glResetMinmaxEXT
#endif
#ifdef PFNGLRESETMINMAXEXTPROC
#undef PFNGLRESETMINMAXEXTPROC
#endif
typedef void  (*PFNGLRESETMINMAXEXTPROC)(GLenum target);

#ifndef GL_HISTOGRAM_EXT
#define GL_HISTOGRAM_EXT 0x8024
#endif

#ifndef GL_PROXY_HISTOGRAM_EXT
#define GL_PROXY_HISTOGRAM_EXT 0x8025
#endif

#ifndef GL_HISTOGRAM_WIDTH_EXT
#define GL_HISTOGRAM_WIDTH_EXT 0x8026
#endif

#ifndef GL_HISTOGRAM_FORMAT_EXT
#define GL_HISTOGRAM_FORMAT_EXT 0x8027
#endif

#ifndef GL_HISTOGRAM_RED_SIZE_EXT
#define GL_HISTOGRAM_RED_SIZE_EXT 0x8028
#endif

#ifndef GL_HISTOGRAM_GREEN_SIZE_EXT
#define GL_HISTOGRAM_GREEN_SIZE_EXT 0x8029
#endif

#ifndef GL_HISTOGRAM_BLUE_SIZE_EXT
#define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A
#endif

#ifndef GL_HISTOGRAM_ALPHA_SIZE_EXT
#define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B
#endif

#ifndef GL_HISTOGRAM_LUMINANCE_SIZE_EXT
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C
#endif

#ifndef GL_HISTOGRAM_SINK_EXT
#define GL_HISTOGRAM_SINK_EXT 0x802D
#endif

#ifndef GL_MINMAX_EXT
#define GL_MINMAX_EXT 0x802E
#endif

#ifndef GL_MINMAX_FORMAT_EXT
#define GL_MINMAX_FORMAT_EXT 0x802F
#endif

#ifndef GL_MINMAX_SINK_EXT
#define GL_MINMAX_SINK_EXT 0x8030
#endif

#ifndef GL_TABLE_TOO_LARGE_EXT
#define GL_TABLE_TOO_LARGE_EXT 0x8031
#endif

#ifndef GL_EXT_index_array_formats
#define GL_EXT_index_array_formats 1
#endif

#ifndef GL_IUI_V2F_EXT
#define GL_IUI_V2F_EXT 0x81AD
#endif

#ifndef GL_IUI_V3F_EXT
#define GL_IUI_V3F_EXT 0x81AE
#endif

#ifndef GL_IUI_N3F_V2F_EXT
#define GL_IUI_N3F_V2F_EXT 0x81AF
#endif

#ifndef GL_IUI_N3F_V3F_EXT
#define GL_IUI_N3F_V3F_EXT 0x81B0
#endif

#ifndef GL_T2F_IUI_V2F_EXT
#define GL_T2F_IUI_V2F_EXT 0x81B1
#endif

#ifndef GL_T2F_IUI_V3F_EXT
#define GL_T2F_IUI_V3F_EXT 0x81B2
#endif

#ifndef GL_T2F_IUI_N3F_V2F_EXT
#define GL_T2F_IUI_N3F_V2F_EXT 0x81B3
#endif

#ifndef GL_T2F_IUI_N3F_V3F_EXT
#define GL_T2F_IUI_N3F_V3F_EXT 0x81B4
#endif

#ifndef GL_EXT_index_func
#define GL_EXT_index_func 1
#endif

#ifdef glIndexFuncEXT
#undef glIndexFuncEXT
#endif
#ifdef PFNGLINDEXFUNCEXTPROC
#undef PFNGLINDEXFUNCEXTPROC
#endif
typedef void  (*PFNGLINDEXFUNCEXTPROC)(GLenum func, GLclampf ref);

#ifndef GL_INDEX_TEST_EXT
#define GL_INDEX_TEST_EXT 0x81B5
#endif

#ifndef GL_INDEX_TEST_FUNC_EXT
#define GL_INDEX_TEST_FUNC_EXT 0x81B6
#endif

#ifndef GL_INDEX_TEST_REF_EXT
#define GL_INDEX_TEST_REF_EXT 0x81B7
#endif

#ifndef GL_EXT_index_material
#define GL_EXT_index_material 1
#endif

#ifdef glIndexMaterialEXT
#undef glIndexMaterialEXT
#endif
#ifdef PFNGLINDEXMATERIALEXTPROC
#undef PFNGLINDEXMATERIALEXTPROC
#endif
typedef void  (*PFNGLINDEXMATERIALEXTPROC)(GLenum face, GLenum mode);

#ifndef GL_INDEX_MATERIAL_EXT
#define GL_INDEX_MATERIAL_EXT 0x81B8
#endif

#ifndef GL_INDEX_MATERIAL_PARAMETER_EXT
#define GL_INDEX_MATERIAL_PARAMETER_EXT 0x81B9
#endif

#ifndef GL_INDEX_MATERIAL_FACE_EXT
#define GL_INDEX_MATERIAL_FACE_EXT 0x81BA
#endif

#ifndef GL_EXT_index_texture
#define GL_EXT_index_texture 1
#endif

#ifndef GL_EXT_instanced_arrays
#define GL_EXT_instanced_arrays 1
#endif

#ifdef glDrawArraysInstancedEXT
#undef glDrawArraysInstancedEXT
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDEXTPROC
#undef PFNGLDRAWARRAYSINSTANCEDEXTPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDEXTPROC)(GLenum mode, GLint start, GLsizei count, GLsizei primcount);

#ifdef glDrawElementsInstancedEXT
#undef glDrawElementsInstancedEXT
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDEXTPROC
#undef PFNGLDRAWELEMENTSINSTANCEDEXTPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDEXTPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);

#ifdef glVertexAttribDivisorEXT
#undef glVertexAttribDivisorEXT
#endif
#ifdef PFNGLVERTEXATTRIBDIVISOREXTPROC
#undef PFNGLVERTEXATTRIBDIVISOREXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBDIVISOREXTPROC)(GLuint index, GLuint divisor);

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT 0x88FE
#endif

#ifndef GL_EXT_light_texture
#define GL_EXT_light_texture 1
#endif

#ifdef glApplyTextureEXT
#undef glApplyTextureEXT
#endif
#ifdef PFNGLAPPLYTEXTUREEXTPROC
#undef PFNGLAPPLYTEXTUREEXTPROC
#endif
typedef void  (*PFNGLAPPLYTEXTUREEXTPROC)(GLenum mode);

#ifdef glTextureLightEXT
#undef glTextureLightEXT
#endif
#ifdef PFNGLTEXTURELIGHTEXTPROC
#undef PFNGLTEXTURELIGHTEXTPROC
#endif
typedef void  (*PFNGLTEXTURELIGHTEXTPROC)(GLenum pname);

#ifdef glTextureMaterialEXT
#undef glTextureMaterialEXT
#endif
#ifdef PFNGLTEXTUREMATERIALEXTPROC
#undef PFNGLTEXTUREMATERIALEXTPROC
#endif
typedef void  (*PFNGLTEXTUREMATERIALEXTPROC)(GLenum face, GLenum mode);

#ifndef GL_FRAGMENT_MATERIAL_EXT
#define GL_FRAGMENT_MATERIAL_EXT 0x8349
#endif

#ifndef GL_FRAGMENT_NORMAL_EXT
#define GL_FRAGMENT_NORMAL_EXT 0x834A
#endif

#ifndef GL_FRAGMENT_COLOR_EXT
#define GL_FRAGMENT_COLOR_EXT 0x834C
#endif

#ifndef GL_ATTENUATION_EXT
#define GL_ATTENUATION_EXT 0x834D
#endif

#ifndef GL_SHADOW_ATTENUATION_EXT
#define GL_SHADOW_ATTENUATION_EXT 0x834E
#endif

#ifndef GL_TEXTURE_APPLICATION_MODE_EXT
#define GL_TEXTURE_APPLICATION_MODE_EXT 0x834F
#endif

#ifndef GL_TEXTURE_LIGHT_EXT
#define GL_TEXTURE_LIGHT_EXT 0x8350
#endif

#ifndef GL_TEXTURE_MATERIAL_FACE_EXT
#define GL_TEXTURE_MATERIAL_FACE_EXT 0x8351
#endif

#ifndef GL_TEXTURE_MATERIAL_PARAMETER_EXT
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
#endif

#ifndef GL_FRAGMENT_DEPTH_EXT
#define GL_FRAGMENT_DEPTH_EXT 0x8452
#endif

#ifndef GL_EXT_map_buffer_range
#define GL_EXT_map_buffer_range 1
#endif

#ifdef glMapBufferRangeEXT
#undef glMapBufferRangeEXT
#endif
#ifdef PFNGLMAPBUFFERRANGEEXTPROC
#undef PFNGLMAPBUFFERRANGEEXTPROC
#endif
typedef void * (*PFNGLMAPBUFFERRANGEEXTPROC)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);

#ifdef glFlushMappedBufferRangeEXT
#undef glFlushMappedBufferRangeEXT
#endif
#ifdef PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC
#undef PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC
#endif
typedef void  (*PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC)(GLenum target, GLintptr offset, GLsizeiptr length);

#ifndef GL_MAP_READ_BIT_EXT
#define GL_MAP_READ_BIT_EXT 0x0001
#endif

#ifndef GL_MAP_WRITE_BIT_EXT
#define GL_MAP_WRITE_BIT_EXT 0x0002
#endif

#ifndef GL_MAP_INVALIDATE_RANGE_BIT_EXT
#define GL_MAP_INVALIDATE_RANGE_BIT_EXT 0x0004
#endif

#ifndef GL_MAP_INVALIDATE_BUFFER_BIT_EXT
#define GL_MAP_INVALIDATE_BUFFER_BIT_EXT 0x0008
#endif

#ifndef GL_MAP_FLUSH_EXPLICIT_BIT_EXT
#define GL_MAP_FLUSH_EXPLICIT_BIT_EXT 0x0010
#endif

#ifndef GL_MAP_UNSYNCHRONIZED_BIT_EXT
#define GL_MAP_UNSYNCHRONIZED_BIT_EXT 0x0020
#endif

#ifndef GL_EXT_misc_attribute
#define GL_EXT_misc_attribute 1
#endif

#ifndef GL_EXT_multi_draw_arrays
#define GL_EXT_multi_draw_arrays 1
#endif

#ifdef glMultiDrawArraysEXT
#undef glMultiDrawArraysEXT
#endif
#ifdef PFNGLMULTIDRAWARRAYSEXTPROC
#undef PFNGLMULTIDRAWARRAYSEXTPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSEXTPROC)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);

#ifdef glMultiDrawElementsEXT
#undef glMultiDrawElementsEXT
#endif
#ifdef PFNGLMULTIDRAWELEMENTSEXTPROC
#undef PFNGLMULTIDRAWELEMENTSEXTPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSEXTPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);

#ifndef GL_EXT_multi_draw_indirect
#define GL_EXT_multi_draw_indirect 1
#endif

#ifdef glMultiDrawArraysIndirectEXT
#undef glMultiDrawArraysIndirectEXT
#endif
#ifdef PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC
#undef PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC)(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);

#ifdef glMultiDrawElementsIndirectEXT
#undef glMultiDrawElementsIndirectEXT
#endif
#ifdef PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC
#undef PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC)(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);

#ifndef GL_EXT_multisample
#define GL_EXT_multisample 1
#endif

#ifdef glSampleMaskEXT
#undef glSampleMaskEXT
#endif
#ifdef PFNGLSAMPLEMASKEXTPROC
#undef PFNGLSAMPLEMASKEXTPROC
#endif
typedef void  (*PFNGLSAMPLEMASKEXTPROC)(GLclampf value, GLboolean invert);

#ifdef glSamplePatternEXT
#undef glSamplePatternEXT
#endif
#ifdef PFNGLSAMPLEPATTERNEXTPROC
#undef PFNGLSAMPLEPATTERNEXTPROC
#endif
typedef void  (*PFNGLSAMPLEPATTERNEXTPROC)(GLenum pattern);

#ifndef GL_MULTISAMPLE_EXT
#define GL_MULTISAMPLE_EXT 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_MASK_EXT
#define GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_EXT
#define GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
#endif

#ifndef GL_SAMPLE_MASK_EXT
#define GL_SAMPLE_MASK_EXT 0x80A0
#endif

#ifndef GL_1PASS_EXT
#define GL_1PASS_EXT 0x80A1
#endif

#ifndef GL_2PASS_0_EXT
#define GL_2PASS_0_EXT 0x80A2
#endif

#ifndef GL_2PASS_1_EXT
#define GL_2PASS_1_EXT 0x80A3
#endif

#ifndef GL_4PASS_0_EXT
#define GL_4PASS_0_EXT 0x80A4
#endif

#ifndef GL_4PASS_1_EXT
#define GL_4PASS_1_EXT 0x80A5
#endif

#ifndef GL_4PASS_2_EXT
#define GL_4PASS_2_EXT 0x80A6
#endif

#ifndef GL_4PASS_3_EXT
#define GL_4PASS_3_EXT 0x80A7
#endif

#ifndef GL_SAMPLE_BUFFERS_EXT
#define GL_SAMPLE_BUFFERS_EXT 0x80A8
#endif

#ifndef GL_SAMPLES_EXT
#define GL_SAMPLES_EXT 0x80A9
#endif

#ifndef GL_SAMPLE_MASK_VALUE_EXT
#define GL_SAMPLE_MASK_VALUE_EXT 0x80AA
#endif

#ifndef GL_SAMPLE_MASK_INVERT_EXT
#define GL_SAMPLE_MASK_INVERT_EXT 0x80AB
#endif

#ifndef GL_SAMPLE_PATTERN_EXT
#define GL_SAMPLE_PATTERN_EXT 0x80AC
#endif

#ifndef GL_MULTISAMPLE_BIT_EXT
#define GL_MULTISAMPLE_BIT_EXT 0x20000000
#endif

#ifndef GL_EXT_multisampled_render_to_texture
#define GL_EXT_multisampled_render_to_texture 1
#endif

#ifdef glRenderbufferStorageMultisampleEXT
#undef glRenderbufferStorageMultisampleEXT
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glFramebufferTexture2DMultisampleEXT
#undef glFramebufferTexture2DMultisampleEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
#undef PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT 0x8D6C
#endif

#ifndef GL_RENDERBUFFER_SAMPLES_EXT
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#endif

#ifndef GL_MAX_SAMPLES_EXT
#define GL_MAX_SAMPLES_EXT 0x8D57
#endif

#ifndef GL_EXT_multiview_draw_buffers
#define GL_EXT_multiview_draw_buffers 1
#endif

#ifdef glReadBufferIndexedEXT
#undef glReadBufferIndexedEXT
#endif
#ifdef PFNGLREADBUFFERINDEXEDEXTPROC
#undef PFNGLREADBUFFERINDEXEDEXTPROC
#endif
typedef void  (*PFNGLREADBUFFERINDEXEDEXTPROC)(GLenum src, GLint index);

#ifdef glDrawBuffersIndexedEXT
#undef glDrawBuffersIndexedEXT
#endif
#ifdef PFNGLDRAWBUFFERSINDEXEDEXTPROC
#undef PFNGLDRAWBUFFERSINDEXEDEXTPROC
#endif
typedef void  (*PFNGLDRAWBUFFERSINDEXEDEXTPROC)(GLint n, const GLenum *location, const GLint *indices);

#ifdef glGetIntegeri_vEXT
#undef glGetIntegeri_vEXT
#endif
#ifdef PFNGLGETINTEGERI_VEXTPROC
#undef PFNGLGETINTEGERI_VEXTPROC
#endif
typedef void  (*PFNGLGETINTEGERI_VEXTPROC)(GLenum target, GLuint index, GLint *data);

#ifndef GL_COLOR_ATTACHMENT_EXT
#define GL_COLOR_ATTACHMENT_EXT 0x90F0
#endif

#ifndef GL_MULTIVIEW_EXT
#define GL_MULTIVIEW_EXT 0x90F1
#endif

#ifndef GL_DRAW_BUFFER_EXT
#define GL_DRAW_BUFFER_EXT 0x0C01
#endif

#ifndef GL_READ_BUFFER_EXT
#define GL_READ_BUFFER_EXT 0x0C02
#endif

#ifndef GL_MAX_MULTIVIEW_BUFFERS_EXT
#define GL_MAX_MULTIVIEW_BUFFERS_EXT 0x90F2
#endif

#ifndef GL_EXT_occlusion_query_boolean
#define GL_EXT_occlusion_query_boolean 1
#endif

#ifdef glGenQueriesEXT
#undef glGenQueriesEXT
#endif
#ifdef PFNGLGENQUERIESEXTPROC
#undef PFNGLGENQUERIESEXTPROC
#endif
typedef void  (*PFNGLGENQUERIESEXTPROC)(GLsizei n, GLuint *ids);

#ifdef glDeleteQueriesEXT
#undef glDeleteQueriesEXT
#endif
#ifdef PFNGLDELETEQUERIESEXTPROC
#undef PFNGLDELETEQUERIESEXTPROC
#endif
typedef void  (*PFNGLDELETEQUERIESEXTPROC)(GLsizei n, const GLuint *ids);

#ifdef glIsQueryEXT
#undef glIsQueryEXT
#endif
#ifdef PFNGLISQUERYEXTPROC
#undef PFNGLISQUERYEXTPROC
#endif
typedef GLboolean  (*PFNGLISQUERYEXTPROC)(GLuint id);

#ifdef glBeginQueryEXT
#undef glBeginQueryEXT
#endif
#ifdef PFNGLBEGINQUERYEXTPROC
#undef PFNGLBEGINQUERYEXTPROC
#endif
typedef void  (*PFNGLBEGINQUERYEXTPROC)(GLenum target, GLuint id);

#ifdef glEndQueryEXT
#undef glEndQueryEXT
#endif
#ifdef PFNGLENDQUERYEXTPROC
#undef PFNGLENDQUERYEXTPROC
#endif
typedef void  (*PFNGLENDQUERYEXTPROC)(GLenum target);

#ifdef glGetQueryivEXT
#undef glGetQueryivEXT
#endif
#ifdef PFNGLGETQUERYIVEXTPROC
#undef PFNGLGETQUERYIVEXTPROC
#endif
typedef void  (*PFNGLGETQUERYIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetQueryObjectuivEXT
#undef glGetQueryObjectuivEXT
#endif
#ifdef PFNGLGETQUERYOBJECTUIVEXTPROC
#undef PFNGLGETQUERYOBJECTUIVEXTPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUIVEXTPROC)(GLuint id, GLenum pname, GLuint *params);

#ifndef GL_ANY_SAMPLES_PASSED_EXT
#define GL_ANY_SAMPLES_PASSED_EXT 0x8C2F
#endif

#ifndef GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT 0x8D6A
#endif

#ifndef GL_CURRENT_QUERY_EXT
#define GL_CURRENT_QUERY_EXT 0x8865
#endif

#ifndef GL_QUERY_RESULT_EXT
#define GL_QUERY_RESULT_EXT 0x8866
#endif

#ifndef GL_QUERY_RESULT_AVAILABLE_EXT
#define GL_QUERY_RESULT_AVAILABLE_EXT 0x8867
#endif

#ifndef GL_EXT_packed_depth_stencil
#define GL_EXT_packed_depth_stencil 1
#endif

#ifndef GL_DEPTH_STENCIL_EXT
#define GL_DEPTH_STENCIL_EXT 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8_EXT
#define GL_UNSIGNED_INT_24_8_EXT 0x84FA
#endif

#ifndef GL_DEPTH24_STENCIL8_EXT
#define GL_DEPTH24_STENCIL8_EXT 0x88F0
#endif

#ifndef GL_TEXTURE_STENCIL_SIZE_EXT
#define GL_TEXTURE_STENCIL_SIZE_EXT 0x88F1
#endif

#ifndef GL_EXT_packed_float
#define GL_EXT_packed_float 1
#endif

#ifndef GL_R11F_G11F_B10F_EXT
#define GL_R11F_G11F_B10F_EXT 0x8C3A
#endif

#ifndef GL_UNSIGNED_INT_10F_11F_11F_REV_EXT
#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
#endif

#ifndef GL_RGBA_SIGNED_COMPONENTS_EXT
#define GL_RGBA_SIGNED_COMPONENTS_EXT 0x8C3C
#endif

#ifndef GL_EXT_packed_pixels
#define GL_EXT_packed_pixels 1
#endif

#ifndef GL_UNSIGNED_BYTE_3_3_2_EXT
#define GL_UNSIGNED_BYTE_3_3_2_EXT 0x8032
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_EXT
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT 0x8033
#endif

#ifndef GL_UNSIGNED_SHORT_5_5_5_1_EXT
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT 0x8034
#endif

#ifndef GL_UNSIGNED_INT_8_8_8_8_EXT
#define GL_UNSIGNED_INT_8_8_8_8_EXT 0x8035
#endif

#ifndef GL_UNSIGNED_INT_10_10_10_2_EXT
#define GL_UNSIGNED_INT_10_10_10_2_EXT 0x8036
#endif

#ifndef GL_EXT_paletted_texture
#define GL_EXT_paletted_texture 1
#endif

#ifdef glColorTableEXT
#undef glColorTableEXT
#endif
#ifdef PFNGLCOLORTABLEEXTPROC
#undef PFNGLCOLORTABLEEXTPROC
#endif
typedef void  (*PFNGLCOLORTABLEEXTPROC)(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);

#ifdef glGetColorTableEXT
#undef glGetColorTableEXT
#endif
#ifdef PFNGLGETCOLORTABLEEXTPROC
#undef PFNGLGETCOLORTABLEEXTPROC
#endif
typedef void  (*PFNGLGETCOLORTABLEEXTPROC)(GLenum target, GLenum format, GLenum type, void *data);

#ifdef glGetColorTableParameterivEXT
#undef glGetColorTableParameterivEXT
#endif
#ifdef PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
#undef PFNGLGETCOLORTABLEPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetColorTableParameterfvEXT
#undef glGetColorTableParameterfvEXT
#endif
#ifdef PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
#undef PFNGLGETCOLORTABLEPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifndef GL_COLOR_INDEX1_EXT
#define GL_COLOR_INDEX1_EXT 0x80E2
#endif

#ifndef GL_COLOR_INDEX2_EXT
#define GL_COLOR_INDEX2_EXT 0x80E3
#endif

#ifndef GL_COLOR_INDEX4_EXT
#define GL_COLOR_INDEX4_EXT 0x80E4
#endif

#ifndef GL_COLOR_INDEX8_EXT
#define GL_COLOR_INDEX8_EXT 0x80E5
#endif

#ifndef GL_COLOR_INDEX12_EXT
#define GL_COLOR_INDEX12_EXT 0x80E6
#endif

#ifndef GL_COLOR_INDEX16_EXT
#define GL_COLOR_INDEX16_EXT 0x80E7
#endif

#ifndef GL_TEXTURE_INDEX_SIZE_EXT
#define GL_TEXTURE_INDEX_SIZE_EXT 0x80ED
#endif

#ifndef GL_EXT_pixel_buffer_object
#define GL_EXT_pixel_buffer_object 1
#endif

#ifndef GL_PIXEL_PACK_BUFFER_EXT
#define GL_PIXEL_PACK_BUFFER_EXT 0x88EB
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_EXT
#define GL_PIXEL_UNPACK_BUFFER_EXT 0x88EC
#endif

#ifndef GL_PIXEL_PACK_BUFFER_BINDING_EXT
#define GL_PIXEL_PACK_BUFFER_BINDING_EXT 0x88ED
#endif

#ifndef GL_PIXEL_UNPACK_BUFFER_BINDING_EXT
#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
#endif

#ifndef GL_EXT_pixel_transform
#define GL_EXT_pixel_transform 1
#endif

#ifdef glPixelTransformParameteriEXT
#undef glPixelTransformParameteriEXT
#endif
#ifdef PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
#undef PFNGLPIXELTRANSFORMPARAMETERIEXTPROC
#endif
typedef void  (*PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glPixelTransformParameterfEXT
#undef glPixelTransformParameterfEXT
#endif
#ifdef PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
#undef PFNGLPIXELTRANSFORMPARAMETERFEXTPROC
#endif
typedef void  (*PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)(GLenum target, GLenum pname, GLfloat param);

#ifdef glPixelTransformParameterivEXT
#undef glPixelTransformParameterivEXT
#endif
#ifdef PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
#undef PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glPixelTransformParameterfvEXT
#undef glPixelTransformParameterfvEXT
#endif
#ifdef PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
#undef PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glGetPixelTransformParameterivEXT
#undef glGetPixelTransformParameterivEXT
#endif
#ifdef PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC
#undef PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC
#endif
typedef void  (*PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetPixelTransformParameterfvEXT
#undef glGetPixelTransformParameterfvEXT
#endif
#ifdef PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC
#undef PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifndef GL_PIXEL_TRANSFORM_2D_EXT
#define GL_PIXEL_TRANSFORM_2D_EXT 0x8330
#endif

#ifndef GL_PIXEL_MAG_FILTER_EXT
#define GL_PIXEL_MAG_FILTER_EXT 0x8331
#endif

#ifndef GL_PIXEL_MIN_FILTER_EXT
#define GL_PIXEL_MIN_FILTER_EXT 0x8332
#endif

#ifndef GL_PIXEL_CUBIC_WEIGHT_EXT
#define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333
#endif

#ifndef GL_CUBIC_EXT
#define GL_CUBIC_EXT 0x8334
#endif

#ifndef GL_AVERAGE_EXT
#define GL_AVERAGE_EXT 0x8335
#endif

#ifndef GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
#endif

#ifndef GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
#endif

#ifndef GL_PIXEL_TRANSFORM_2D_MATRIX_EXT
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT 0x8338
#endif

#ifndef GL_EXT_pixel_transform_color_table
#define GL_EXT_pixel_transform_color_table 1
#endif

#ifndef GL_EXT_point_parameters
#define GL_EXT_point_parameters 1
#endif

#ifdef glPointParameterfEXT
#undef glPointParameterfEXT
#endif
#ifdef PFNGLPOINTPARAMETERFEXTPROC
#undef PFNGLPOINTPARAMETERFEXTPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFEXTPROC)(GLenum pname, GLfloat param);

#ifdef glPointParameterfvEXT
#undef glPointParameterfvEXT
#endif
#ifdef PFNGLPOINTPARAMETERFVEXTPROC
#undef PFNGLPOINTPARAMETERFVEXTPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFVEXTPROC)(GLenum pname, const GLfloat *params);

#ifndef GL_POINT_SIZE_MIN_EXT
#define GL_POINT_SIZE_MIN_EXT 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_EXT
#define GL_POINT_SIZE_MAX_EXT 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_EXT
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128
#endif

#ifndef GL_DISTANCE_ATTENUATION_EXT
#define GL_DISTANCE_ATTENUATION_EXT 0x8129
#endif

#ifndef GL_EXT_polygon_offset
#define GL_EXT_polygon_offset 1
#endif

#ifdef glPolygonOffsetEXT
#undef glPolygonOffsetEXT
#endif
#ifdef PFNGLPOLYGONOFFSETEXTPROC
#undef PFNGLPOLYGONOFFSETEXTPROC
#endif
typedef void  (*PFNGLPOLYGONOFFSETEXTPROC)(GLfloat factor, GLfloat bias);

#ifndef GL_POLYGON_OFFSET_EXT
#define GL_POLYGON_OFFSET_EXT 0x8037
#endif

#ifndef GL_POLYGON_OFFSET_FACTOR_EXT
#define GL_POLYGON_OFFSET_FACTOR_EXT 0x8038
#endif

#ifndef GL_POLYGON_OFFSET_BIAS_EXT
#define GL_POLYGON_OFFSET_BIAS_EXT 0x8039
#endif

#ifndef GL_EXT_polygon_offset_clamp
#define GL_EXT_polygon_offset_clamp 1
#endif

#ifdef glPolygonOffsetClampEXT
#undef glPolygonOffsetClampEXT
#endif
#ifdef PFNGLPOLYGONOFFSETCLAMPEXTPROC
#undef PFNGLPOLYGONOFFSETCLAMPEXTPROC
#endif
typedef void  (*PFNGLPOLYGONOFFSETCLAMPEXTPROC)(GLfloat factor, GLfloat units, GLfloat clamp);

#ifndef GL_POLYGON_OFFSET_CLAMP_EXT
#define GL_POLYGON_OFFSET_CLAMP_EXT 0x8E1B
#endif

#ifndef GL_EXT_post_depth_coverage
#define GL_EXT_post_depth_coverage 1
#endif

#ifndef GL_EXT_primitive_bounding_box
#define GL_EXT_primitive_bounding_box 1
#endif

#ifdef glPrimitiveBoundingBoxEXT
#undef glPrimitiveBoundingBoxEXT
#endif
#ifdef PFNGLPRIMITIVEBOUNDINGBOXEXTPROC
#undef PFNGLPRIMITIVEBOUNDINGBOXEXTPROC
#endif
typedef void  (*PFNGLPRIMITIVEBOUNDINGBOXEXTPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);

#ifndef GL_PRIMITIVE_BOUNDING_BOX_EXT
#define GL_PRIMITIVE_BOUNDING_BOX_EXT 0x92BE
#endif

#ifndef GL_EXT_provoking_vertex
#define GL_EXT_provoking_vertex 1
#endif

#ifdef glProvokingVertexEXT
#undef glProvokingVertexEXT
#endif
#ifdef PFNGLPROVOKINGVERTEXEXTPROC
#undef PFNGLPROVOKINGVERTEXEXTPROC
#endif
typedef void  (*PFNGLPROVOKINGVERTEXEXTPROC)(GLenum mode);

#ifndef GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION_EXT
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION_EXT
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#endif

#ifndef GL_PROVOKING_VERTEX_EXT
#define GL_PROVOKING_VERTEX_EXT 0x8E4F
#endif

#ifndef GL_EXT_pvrtc_sRGB
#define GL_EXT_pvrtc_sRGB 1
#endif

#ifndef GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT
#define GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT 0x8A54
#endif

#ifndef GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT
#define GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT 0x8A55
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT 0x8A56
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT 0x8A57
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG 0x93F0
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG 0x93F1
#endif

#ifndef GL_EXT_raster_multisample
#define GL_EXT_raster_multisample 1
#endif

#ifdef glRasterSamplesEXT
#undef glRasterSamplesEXT
#endif
#ifdef PFNGLRASTERSAMPLESEXTPROC
#undef PFNGLRASTERSAMPLESEXTPROC
#endif
typedef void  (*PFNGLRASTERSAMPLESEXTPROC)(GLuint samples, GLboolean fixedsamplelocations);

#ifndef GL_RASTER_MULTISAMPLE_EXT
#define GL_RASTER_MULTISAMPLE_EXT 0x9327
#endif

#ifndef GL_RASTER_SAMPLES_EXT
#define GL_RASTER_SAMPLES_EXT 0x9328
#endif

#ifndef GL_MAX_RASTER_SAMPLES_EXT
#define GL_MAX_RASTER_SAMPLES_EXT 0x9329
#endif

#ifndef GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT
#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT 0x932A
#endif

#ifndef GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT
#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT 0x932B
#endif

#ifndef GL_EFFECTIVE_RASTER_SAMPLES_EXT
#define GL_EFFECTIVE_RASTER_SAMPLES_EXT 0x932C
#endif

#ifndef GL_EXT_read_format_bgra
#define GL_EXT_read_format_bgra 1
#endif

#ifndef GL_BGRA_EXT
#define GL_BGRA_EXT 0x80E1
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT
#define GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT 0x8365
#endif

#ifndef GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT
#define GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT 0x8366
#endif

#ifndef GL_EXT_render_snorm
#define GL_EXT_render_snorm 1
#endif

#ifndef GL_BYTE
#define GL_BYTE 0x1400
#endif

#ifndef GL_SHORT
#define GL_SHORT 0x1402
#endif

#ifndef GL_R8_SNORM
#define GL_R8_SNORM 0x8F94
#endif

#ifndef GL_RG8_SNORM
#define GL_RG8_SNORM 0x8F95
#endif

#ifndef GL_RGBA8_SNORM
#define GL_RGBA8_SNORM 0x8F97
#endif

#ifndef GL_R16_SNORM_EXT
#define GL_R16_SNORM_EXT 0x8F98
#endif

#ifndef GL_RG16_SNORM_EXT
#define GL_RG16_SNORM_EXT 0x8F99
#endif

#ifndef GL_RGBA16_SNORM_EXT
#define GL_RGBA16_SNORM_EXT 0x8F9B
#endif

#ifndef GL_EXT_rescale_normal
#define GL_EXT_rescale_normal 1
#endif

#ifndef GL_RESCALE_NORMAL_EXT
#define GL_RESCALE_NORMAL_EXT 0x803A
#endif

#ifndef GL_EXT_robustness
#define GL_EXT_robustness 1
#endif

#ifdef glGetGraphicsResetStatusEXT
#undef glGetGraphicsResetStatusEXT
#endif
#ifdef PFNGLGETGRAPHICSRESETSTATUSEXTPROC
#undef PFNGLGETGRAPHICSRESETSTATUSEXTPROC
#endif
typedef GLenum  (*PFNGLGETGRAPHICSRESETSTATUSEXTPROC)(void);

#ifdef glReadnPixelsEXT
#undef glReadnPixelsEXT
#endif
#ifdef PFNGLREADNPIXELSEXTPROC
#undef PFNGLREADNPIXELSEXTPROC
#endif
typedef void  (*PFNGLREADNPIXELSEXTPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);

#ifdef glGetnUniformfvEXT
#undef glGetnUniformfvEXT
#endif
#ifdef PFNGLGETNUNIFORMFVEXTPROC
#undef PFNGLGETNUNIFORMFVEXTPROC
#endif
typedef void  (*PFNGLGETNUNIFORMFVEXTPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);

#ifdef glGetnUniformivEXT
#undef glGetnUniformivEXT
#endif
#ifdef PFNGLGETNUNIFORMIVEXTPROC
#undef PFNGLGETNUNIFORMIVEXTPROC
#endif
typedef void  (*PFNGLGETNUNIFORMIVEXTPROC)(GLuint program, GLint location, GLsizei bufSize, GLint *params);

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_GUILTY_CONTEXT_RESET_EXT
#define GL_GUILTY_CONTEXT_RESET_EXT 0x8253
#endif

#ifndef GL_INNOCENT_CONTEXT_RESET_EXT
#define GL_INNOCENT_CONTEXT_RESET_EXT 0x8254
#endif

#ifndef GL_UNKNOWN_CONTEXT_RESET_EXT
#define GL_UNKNOWN_CONTEXT_RESET_EXT 0x8255
#endif

#ifndef GL_CONTEXT_ROBUST_ACCESS_EXT
#define GL_CONTEXT_ROBUST_ACCESS_EXT 0x90F3
#endif

#ifndef GL_RESET_NOTIFICATION_STRATEGY_EXT
#define GL_RESET_NOTIFICATION_STRATEGY_EXT 0x8256
#endif

#ifndef GL_LOSE_CONTEXT_ON_RESET_EXT
#define GL_LOSE_CONTEXT_ON_RESET_EXT 0x8252
#endif

#ifndef GL_NO_RESET_NOTIFICATION_EXT
#define GL_NO_RESET_NOTIFICATION_EXT 0x8261
#endif

#ifndef GL_EXT_sRGB
#define GL_EXT_sRGB 1
#endif

#ifndef GL_SRGB_EXT
#define GL_SRGB_EXT 0x8C40
#endif

#ifndef GL_SRGB_ALPHA_EXT
#define GL_SRGB_ALPHA_EXT 0x8C42
#endif

#ifndef GL_SRGB8_ALPHA8_EXT
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT 0x8210
#endif

#ifndef GL_EXT_sRGB_write_control
#define GL_EXT_sRGB_write_control 1
#endif

#ifndef GL_FRAMEBUFFER_SRGB_EXT
#define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
#endif

#ifndef GL_EXT_secondary_color
#define GL_EXT_secondary_color 1
#endif

#ifdef glSecondaryColor3bEXT
#undef glSecondaryColor3bEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3BEXTPROC
#undef PFNGLSECONDARYCOLOR3BEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3BEXTPROC)(GLbyte red, GLbyte green, GLbyte blue);

#ifdef glSecondaryColor3bvEXT
#undef glSecondaryColor3bvEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3BVEXTPROC
#undef PFNGLSECONDARYCOLOR3BVEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3BVEXTPROC)(const GLbyte *v);

#ifdef glSecondaryColor3dEXT
#undef glSecondaryColor3dEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3DEXTPROC
#undef PFNGLSECONDARYCOLOR3DEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3DEXTPROC)(GLdouble red, GLdouble green, GLdouble blue);

#ifdef glSecondaryColor3dvEXT
#undef glSecondaryColor3dvEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3DVEXTPROC
#undef PFNGLSECONDARYCOLOR3DVEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3DVEXTPROC)(const GLdouble *v);

#ifdef glSecondaryColor3fEXT
#undef glSecondaryColor3fEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3FEXTPROC
#undef PFNGLSECONDARYCOLOR3FEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3FEXTPROC)(GLfloat red, GLfloat green, GLfloat blue);

#ifdef glSecondaryColor3fvEXT
#undef glSecondaryColor3fvEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3FVEXTPROC
#undef PFNGLSECONDARYCOLOR3FVEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3FVEXTPROC)(const GLfloat *v);

#ifdef glSecondaryColor3iEXT
#undef glSecondaryColor3iEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3IEXTPROC
#undef PFNGLSECONDARYCOLOR3IEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3IEXTPROC)(GLint red, GLint green, GLint blue);

#ifdef glSecondaryColor3ivEXT
#undef glSecondaryColor3ivEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3IVEXTPROC
#undef PFNGLSECONDARYCOLOR3IVEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3IVEXTPROC)(const GLint *v);

#ifdef glSecondaryColor3sEXT
#undef glSecondaryColor3sEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3SEXTPROC
#undef PFNGLSECONDARYCOLOR3SEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3SEXTPROC)(GLshort red, GLshort green, GLshort blue);

#ifdef glSecondaryColor3svEXT
#undef glSecondaryColor3svEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3SVEXTPROC
#undef PFNGLSECONDARYCOLOR3SVEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3SVEXTPROC)(const GLshort *v);

#ifdef glSecondaryColor3ubEXT
#undef glSecondaryColor3ubEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3UBEXTPROC
#undef PFNGLSECONDARYCOLOR3UBEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3UBEXTPROC)(GLubyte red, GLubyte green, GLubyte blue);

#ifdef glSecondaryColor3ubvEXT
#undef glSecondaryColor3ubvEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3UBVEXTPROC
#undef PFNGLSECONDARYCOLOR3UBVEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3UBVEXTPROC)(const GLubyte *v);

#ifdef glSecondaryColor3uiEXT
#undef glSecondaryColor3uiEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3UIEXTPROC
#undef PFNGLSECONDARYCOLOR3UIEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3UIEXTPROC)(GLuint red, GLuint green, GLuint blue);

#ifdef glSecondaryColor3uivEXT
#undef glSecondaryColor3uivEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3UIVEXTPROC
#undef PFNGLSECONDARYCOLOR3UIVEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3UIVEXTPROC)(const GLuint *v);

#ifdef glSecondaryColor3usEXT
#undef glSecondaryColor3usEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3USEXTPROC
#undef PFNGLSECONDARYCOLOR3USEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3USEXTPROC)(GLushort red, GLushort green, GLushort blue);

#ifdef glSecondaryColor3usvEXT
#undef glSecondaryColor3usvEXT
#endif
#ifdef PFNGLSECONDARYCOLOR3USVEXTPROC
#undef PFNGLSECONDARYCOLOR3USVEXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3USVEXTPROC)(const GLushort *v);

#ifdef glSecondaryColorPointerEXT
#undef glSecondaryColorPointerEXT
#endif
#ifdef PFNGLSECONDARYCOLORPOINTEREXTPROC
#undef PFNGLSECONDARYCOLORPOINTEREXTPROC
#endif
typedef void  (*PFNGLSECONDARYCOLORPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifndef GL_COLOR_SUM_EXT
#define GL_COLOR_SUM_EXT 0x8458
#endif

#ifndef GL_CURRENT_SECONDARY_COLOR_EXT
#define GL_CURRENT_SECONDARY_COLOR_EXT 0x8459
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_SIZE_EXT
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_TYPE_EXT
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_POINTER_EXT
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_EXT
#define GL_SECONDARY_COLOR_ARRAY_EXT 0x845E
#endif

#ifndef GL_EXT_separate_shader_objects
#define GL_EXT_separate_shader_objects 1
#endif

#ifdef glUseShaderProgramEXT
#undef glUseShaderProgramEXT
#endif
#ifdef PFNGLUSESHADERPROGRAMEXTPROC
#undef PFNGLUSESHADERPROGRAMEXTPROC
#endif
typedef void  (*PFNGLUSESHADERPROGRAMEXTPROC)(GLenum type, GLuint program);

#ifdef glActiveProgramEXT
#undef glActiveProgramEXT
#endif
#ifdef PFNGLACTIVEPROGRAMEXTPROC
#undef PFNGLACTIVEPROGRAMEXTPROC
#endif
typedef void  (*PFNGLACTIVEPROGRAMEXTPROC)(GLuint program);

#ifdef glCreateShaderProgramEXT
#undef glCreateShaderProgramEXT
#endif
#ifdef PFNGLCREATESHADERPROGRAMEXTPROC
#undef PFNGLCREATESHADERPROGRAMEXTPROC
#endif
typedef GLuint  (*PFNGLCREATESHADERPROGRAMEXTPROC)(GLenum type, const GLchar *string);

#ifndef GL_ACTIVE_PROGRAM_EXT
#define GL_ACTIVE_PROGRAM_EXT 0x8B8D
#endif

#ifdef glActiveShaderProgramEXT
#undef glActiveShaderProgramEXT
#endif
#ifdef PFNGLACTIVESHADERPROGRAMEXTPROC
#undef PFNGLACTIVESHADERPROGRAMEXTPROC
#endif
typedef void  (*PFNGLACTIVESHADERPROGRAMEXTPROC)(GLuint pipeline, GLuint program);

#ifdef glBindProgramPipelineEXT
#undef glBindProgramPipelineEXT
#endif
#ifdef PFNGLBINDPROGRAMPIPELINEEXTPROC
#undef PFNGLBINDPROGRAMPIPELINEEXTPROC
#endif
typedef void  (*PFNGLBINDPROGRAMPIPELINEEXTPROC)(GLuint pipeline);

#ifdef glCreateShaderProgramvEXT
#undef glCreateShaderProgramvEXT
#endif
#ifdef PFNGLCREATESHADERPROGRAMVEXTPROC
#undef PFNGLCREATESHADERPROGRAMVEXTPROC
#endif
typedef GLuint  (*PFNGLCREATESHADERPROGRAMVEXTPROC)(GLenum type, GLsizei count, const GLchar **strings);

#ifdef glDeleteProgramPipelinesEXT
#undef glDeleteProgramPipelinesEXT
#endif
#ifdef PFNGLDELETEPROGRAMPIPELINESEXTPROC
#undef PFNGLDELETEPROGRAMPIPELINESEXTPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMPIPELINESEXTPROC)(GLsizei n, const GLuint *pipelines);

#ifdef glGenProgramPipelinesEXT
#undef glGenProgramPipelinesEXT
#endif
#ifdef PFNGLGENPROGRAMPIPELINESEXTPROC
#undef PFNGLGENPROGRAMPIPELINESEXTPROC
#endif
typedef void  (*PFNGLGENPROGRAMPIPELINESEXTPROC)(GLsizei n, GLuint *pipelines);

#ifdef glGetProgramPipelineInfoLogEXT
#undef glGetProgramPipelineInfoLogEXT
#endif
#ifdef PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC
#undef PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC
#endif
typedef void  (*PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC)(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);

#ifdef glGetProgramPipelineivEXT
#undef glGetProgramPipelineivEXT
#endif
#ifdef PFNGLGETPROGRAMPIPELINEIVEXTPROC
#undef PFNGLGETPROGRAMPIPELINEIVEXTPROC
#endif
typedef void  (*PFNGLGETPROGRAMPIPELINEIVEXTPROC)(GLuint pipeline, GLenum pname, GLint *params);

#ifdef glIsProgramPipelineEXT
#undef glIsProgramPipelineEXT
#endif
#ifdef PFNGLISPROGRAMPIPELINEEXTPROC
#undef PFNGLISPROGRAMPIPELINEEXTPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMPIPELINEEXTPROC)(GLuint pipeline);

#ifdef glProgramParameteriEXT
#undef glProgramParameteriEXT
#endif
#ifdef PFNGLPROGRAMPARAMETERIEXTPROC
#undef PFNGLPROGRAMPARAMETERIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETERIEXTPROC)(GLuint program, GLenum pname, GLint value);

#ifdef glProgramUniform1fEXT
#undef glProgramUniform1fEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1FEXTPROC
#undef PFNGLPROGRAMUNIFORM1FEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FEXTPROC)(GLuint program, GLint location, GLfloat v0);

#ifdef glProgramUniform1fvEXT
#undef glProgramUniform1fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1FVEXTPROC
#undef PFNGLPROGRAMUNIFORM1FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform1iEXT
#undef glProgramUniform1iEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1IEXTPROC
#undef PFNGLPROGRAMUNIFORM1IEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IEXTPROC)(GLuint program, GLint location, GLint v0);

#ifdef glProgramUniform1ivEXT
#undef glProgramUniform1ivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1IVEXTPROC
#undef PFNGLPROGRAMUNIFORM1IVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform2fEXT
#undef glProgramUniform2fEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2FEXTPROC
#undef PFNGLPROGRAMUNIFORM2FEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1);

#ifdef glProgramUniform2fvEXT
#undef glProgramUniform2fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2FVEXTPROC
#undef PFNGLPROGRAMUNIFORM2FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform2iEXT
#undef glProgramUniform2iEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2IEXTPROC
#undef PFNGLPROGRAMUNIFORM2IEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1);

#ifdef glProgramUniform2ivEXT
#undef glProgramUniform2ivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2IVEXTPROC
#undef PFNGLPROGRAMUNIFORM2IVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform3fEXT
#undef glProgramUniform3fEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3FEXTPROC
#undef PFNGLPROGRAMUNIFORM3FEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);

#ifdef glProgramUniform3fvEXT
#undef glProgramUniform3fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3FVEXTPROC
#undef PFNGLPROGRAMUNIFORM3FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform3iEXT
#undef glProgramUniform3iEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3IEXTPROC
#undef PFNGLPROGRAMUNIFORM3IEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);

#ifdef glProgramUniform3ivEXT
#undef glProgramUniform3ivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3IVEXTPROC
#undef PFNGLPROGRAMUNIFORM3IVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniform4fEXT
#undef glProgramUniform4fEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4FEXTPROC
#undef PFNGLPROGRAMUNIFORM4FEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FEXTPROC)(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);

#ifdef glProgramUniform4fvEXT
#undef glProgramUniform4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4FVEXTPROC
#undef PFNGLPROGRAMUNIFORM4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4FVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLfloat *value);

#ifdef glProgramUniform4iEXT
#undef glProgramUniform4iEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4IEXTPROC
#undef PFNGLPROGRAMUNIFORM4IEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IEXTPROC)(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);

#ifdef glProgramUniform4ivEXT
#undef glProgramUniform4ivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4IVEXTPROC
#undef PFNGLPROGRAMUNIFORM4IVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4IVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLint *value);

#ifdef glProgramUniformMatrix2fvEXT
#undef glProgramUniformMatrix2fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3fvEXT
#undef glProgramUniformMatrix3fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4fvEXT
#undef glProgramUniformMatrix4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUseProgramStagesEXT
#undef glUseProgramStagesEXT
#endif
#ifdef PFNGLUSEPROGRAMSTAGESEXTPROC
#undef PFNGLUSEPROGRAMSTAGESEXTPROC
#endif
typedef void  (*PFNGLUSEPROGRAMSTAGESEXTPROC)(GLuint pipeline, GLbitfield stages, GLuint program);

#ifdef glValidateProgramPipelineEXT
#undef glValidateProgramPipelineEXT
#endif
#ifdef PFNGLVALIDATEPROGRAMPIPELINEEXTPROC
#undef PFNGLVALIDATEPROGRAMPIPELINEEXTPROC
#endif
typedef void  (*PFNGLVALIDATEPROGRAMPIPELINEEXTPROC)(GLuint pipeline);

#ifndef GL_VERTEX_SHADER_BIT_EXT
#define GL_VERTEX_SHADER_BIT_EXT 0x00000001
#endif

#ifndef GL_FRAGMENT_SHADER_BIT_EXT
#define GL_FRAGMENT_SHADER_BIT_EXT 0x00000002
#endif

#ifndef GL_ALL_SHADER_BITS_EXT
#define GL_ALL_SHADER_BITS_EXT 0xFFFFFFFF
#endif

#ifndef GL_PROGRAM_SEPARABLE_EXT
#define GL_PROGRAM_SEPARABLE_EXT 0x8258
#endif

#ifndef GL_ACTIVE_PROGRAM_EXT
#define GL_ACTIVE_PROGRAM_EXT 0x8B8D
#endif

#ifndef GL_PROGRAM_PIPELINE_BINDING_EXT
#define GL_PROGRAM_PIPELINE_BINDING_EXT 0x825A
#endif

#ifdef glProgramUniform1uiEXT
#undef glProgramUniform1uiEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIEXTPROC
#undef PFNGLPROGRAMUNIFORM1UIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIEXTPROC)(GLuint program, GLint location, GLuint v0);

#ifdef glProgramUniform2uiEXT
#undef glProgramUniform2uiEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIEXTPROC
#undef PFNGLPROGRAMUNIFORM2UIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1);

#ifdef glProgramUniform3uiEXT
#undef glProgramUniform3uiEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIEXTPROC
#undef PFNGLPROGRAMUNIFORM3UIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);

#ifdef glProgramUniform4uiEXT
#undef glProgramUniform4uiEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIEXTPROC
#undef PFNGLPROGRAMUNIFORM4UIEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIEXTPROC)(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);

#ifdef glProgramUniform1uivEXT
#undef glProgramUniform1uivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM1UIVEXTPROC
#undef PFNGLPROGRAMUNIFORM1UIVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform2uivEXT
#undef glProgramUniform2uivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM2UIVEXTPROC
#undef PFNGLPROGRAMUNIFORM2UIVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform3uivEXT
#undef glProgramUniform3uivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM3UIVEXTPROC
#undef PFNGLPROGRAMUNIFORM3UIVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniform4uivEXT
#undef glProgramUniform4uivEXT
#endif
#ifdef PFNGLPROGRAMUNIFORM4UIVEXTPROC
#undef PFNGLPROGRAMUNIFORM4UIVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UIVEXTPROC)(GLuint program, GLint location, GLsizei count, const GLuint *value);

#ifdef glProgramUniformMatrix4fvEXT
#undef glProgramUniformMatrix4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x3fvEXT
#undef glProgramUniformMatrix2x3fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x2fvEXT
#undef glProgramUniformMatrix3x2fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix2x4fvEXT
#undef glProgramUniformMatrix2x4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x2fvEXT
#undef glProgramUniformMatrix4x2fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix3x4fvEXT
#undef glProgramUniformMatrix3x4fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glProgramUniformMatrix4x3fvEXT
#undef glProgramUniformMatrix4x3fvEXT
#endif
#ifdef PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
#undef PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifndef GL_EXT_separate_specular_color
#define GL_EXT_separate_specular_color 1
#endif

#ifndef GL_LIGHT_MODEL_COLOR_CONTROL_EXT
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT 0x81F8
#endif

#ifndef GL_SINGLE_COLOR_EXT
#define GL_SINGLE_COLOR_EXT 0x81F9
#endif

#ifndef GL_SEPARATE_SPECULAR_COLOR_EXT
#define GL_SEPARATE_SPECULAR_COLOR_EXT 0x81FA
#endif

#ifndef GL_EXT_shader_framebuffer_fetch
#define GL_EXT_shader_framebuffer_fetch 1
#endif

#ifndef GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT
#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT 0x8A52
#endif

#ifndef GL_EXT_shader_image_load_formatted
#define GL_EXT_shader_image_load_formatted 1
#endif

#ifndef GL_EXT_shader_image_load_store
#define GL_EXT_shader_image_load_store 1
#endif

#ifdef glBindImageTextureEXT
#undef glBindImageTextureEXT
#endif
#ifdef PFNGLBINDIMAGETEXTUREEXTPROC
#undef PFNGLBINDIMAGETEXTUREEXTPROC
#endif
typedef void  (*PFNGLBINDIMAGETEXTUREEXTPROC)(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);

#ifdef glMemoryBarrierEXT
#undef glMemoryBarrierEXT
#endif
#ifdef PFNGLMEMORYBARRIEREXTPROC
#undef PFNGLMEMORYBARRIEREXTPROC
#endif
typedef void  (*PFNGLMEMORYBARRIEREXTPROC)(GLbitfield barriers);

#ifndef GL_MAX_IMAGE_UNITS_EXT
#define GL_MAX_IMAGE_UNITS_EXT 0x8F38
#endif

#ifndef GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#endif

#ifndef GL_IMAGE_BINDING_NAME_EXT
#define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
#endif

#ifndef GL_IMAGE_BINDING_LEVEL_EXT
#define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
#endif

#ifndef GL_IMAGE_BINDING_LAYERED_EXT
#define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
#endif

#ifndef GL_IMAGE_BINDING_LAYER_EXT
#define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
#endif

#ifndef GL_IMAGE_BINDING_ACCESS_EXT
#define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
#endif

#ifndef GL_IMAGE_1D_EXT
#define GL_IMAGE_1D_EXT 0x904C
#endif

#ifndef GL_IMAGE_2D_EXT
#define GL_IMAGE_2D_EXT 0x904D
#endif

#ifndef GL_IMAGE_3D_EXT
#define GL_IMAGE_3D_EXT 0x904E
#endif

#ifndef GL_IMAGE_2D_RECT_EXT
#define GL_IMAGE_2D_RECT_EXT 0x904F
#endif

#ifndef GL_IMAGE_CUBE_EXT
#define GL_IMAGE_CUBE_EXT 0x9050
#endif

#ifndef GL_IMAGE_BUFFER_EXT
#define GL_IMAGE_BUFFER_EXT 0x9051
#endif

#ifndef GL_IMAGE_1D_ARRAY_EXT
#define GL_IMAGE_1D_ARRAY_EXT 0x9052
#endif

#ifndef GL_IMAGE_2D_ARRAY_EXT
#define GL_IMAGE_2D_ARRAY_EXT 0x9053
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_EXT
#define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
#endif

#ifndef GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#endif

#ifndef GL_INT_IMAGE_1D_EXT
#define GL_INT_IMAGE_1D_EXT 0x9057
#endif

#ifndef GL_INT_IMAGE_2D_EXT
#define GL_INT_IMAGE_2D_EXT 0x9058
#endif

#ifndef GL_INT_IMAGE_3D_EXT
#define GL_INT_IMAGE_3D_EXT 0x9059
#endif

#ifndef GL_INT_IMAGE_2D_RECT_EXT
#define GL_INT_IMAGE_2D_RECT_EXT 0x905A
#endif

#ifndef GL_INT_IMAGE_CUBE_EXT
#define GL_INT_IMAGE_CUBE_EXT 0x905B
#endif

#ifndef GL_INT_IMAGE_BUFFER_EXT
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#endif

#ifndef GL_INT_IMAGE_1D_ARRAY_EXT
#define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
#endif

#ifndef GL_INT_IMAGE_2D_ARRAY_EXT
#define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_EXT
#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
#endif

#ifndef GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_EXT
#define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_3D_EXT
#define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_EXT
#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#endif

#ifndef GL_MAX_IMAGE_SAMPLES_EXT
#define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
#endif

#ifndef GL_IMAGE_BINDING_FORMAT_EXT
#define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
#endif

#ifndef GL_ELEMENT_ARRAY_BARRIER_BIT_EXT
#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT 0x00000002
#endif

#ifndef GL_UNIFORM_BARRIER_BIT_EXT
#define GL_UNIFORM_BARRIER_BIT_EXT 0x00000004
#endif

#ifndef GL_TEXTURE_FETCH_BARRIER_BIT_EXT
#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT 0x00000008
#endif

#ifndef GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
#endif

#ifndef GL_COMMAND_BARRIER_BIT_EXT
#define GL_COMMAND_BARRIER_BIT_EXT 0x00000040
#endif

#ifndef GL_PIXEL_BUFFER_BARRIER_BIT_EXT
#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT 0x00000080
#endif

#ifndef GL_TEXTURE_UPDATE_BARRIER_BIT_EXT
#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
#endif

#ifndef GL_BUFFER_UPDATE_BARRIER_BIT_EXT
#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT 0x00000200
#endif

#ifndef GL_FRAMEBUFFER_BARRIER_BIT_EXT
#define GL_FRAMEBUFFER_BARRIER_BIT_EXT 0x00000400
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
#endif

#ifndef GL_ATOMIC_COUNTER_BARRIER_BIT_EXT
#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
#endif

#ifndef GL_ALL_BARRIER_BITS_EXT
#define GL_ALL_BARRIER_BITS_EXT 0xFFFFFFFF
#endif

#ifndef GL_EXT_shader_implicit_conversions
#define GL_EXT_shader_implicit_conversions 1
#endif

#ifndef GL_EXT_shader_integer_mix
#define GL_EXT_shader_integer_mix 1
#endif

#ifndef GL_EXT_shader_io_blocks
#define GL_EXT_shader_io_blocks 1
#endif

#ifndef GL_EXT_shader_pixel_local_storage
#define GL_EXT_shader_pixel_local_storage 1
#endif

#ifndef GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT
#define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT 0x8F63
#endif

#ifndef GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT
#define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT 0x8F67
#endif

#ifndef GL_SHADER_PIXEL_LOCAL_STORAGE_EXT
#define GL_SHADER_PIXEL_LOCAL_STORAGE_EXT 0x8F64
#endif

#ifndef GL_EXT_shader_texture_lod
#define GL_EXT_shader_texture_lod 1
#endif

#ifndef GL_EXT_shadow_funcs
#define GL_EXT_shadow_funcs 1
#endif

#ifndef GL_EXT_shadow_samplers
#define GL_EXT_shadow_samplers 1
#endif

#ifndef GL_TEXTURE_COMPARE_MODE_EXT
#define GL_TEXTURE_COMPARE_MODE_EXT 0x884C
#endif

#ifndef GL_TEXTURE_COMPARE_FUNC_EXT
#define GL_TEXTURE_COMPARE_FUNC_EXT 0x884D
#endif

#ifndef GL_COMPARE_REF_TO_TEXTURE_EXT
#define GL_COMPARE_REF_TO_TEXTURE_EXT 0x884E
#endif

#ifndef GL_SAMPLER_2D_SHADOW_EXT
#define GL_SAMPLER_2D_SHADOW_EXT 0x8B62
#endif

#ifndef GL_EXT_shared_texture_palette
#define GL_EXT_shared_texture_palette 1
#endif

#ifndef GL_SHARED_TEXTURE_PALETTE_EXT
#define GL_SHARED_TEXTURE_PALETTE_EXT 0x81FB
#endif

#ifndef GL_EXT_sparse_texture
#define GL_EXT_sparse_texture 1
#endif

#ifdef glTexPageCommitmentARB
#undef glTexPageCommitmentARB
#endif
#ifdef PFNGLTEXPAGECOMMITMENTARBPROC
#undef PFNGLTEXPAGECOMMITMENTARBPROC
#endif
typedef void  (*PFNGLTEXPAGECOMMITMENTARBPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);

#ifndef GL_TEXTURE_SPARSE_EXT
#define GL_TEXTURE_SPARSE_EXT 0x91A6
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_INDEX_EXT
#define GL_VIRTUAL_PAGE_SIZE_INDEX_EXT 0x91A7
#endif

#ifndef GL_NUM_SPARSE_LEVELS_EXT
#define GL_NUM_SPARSE_LEVELS_EXT 0x91AA
#endif

#ifndef GL_NUM_VIRTUAL_PAGE_SIZES_EXT
#define GL_NUM_VIRTUAL_PAGE_SIZES_EXT 0x91A8
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_X_EXT
#define GL_VIRTUAL_PAGE_SIZE_X_EXT 0x9195
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Y_EXT
#define GL_VIRTUAL_PAGE_SIZE_Y_EXT 0x9196
#endif

#ifndef GL_VIRTUAL_PAGE_SIZE_Z_EXT
#define GL_VIRTUAL_PAGE_SIZE_Z_EXT 0x9197
#endif

#ifndef GL_TEXTURE_2D
#define GL_TEXTURE_2D 0x0DE1
#endif

#ifndef GL_TEXTURE_2D_ARRAY
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#endif

#ifndef GL_TEXTURE_CUBE_MAP
#define GL_TEXTURE_CUBE_MAP 0x8513
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY_OES
#define GL_TEXTURE_CUBE_MAP_ARRAY_OES 0x9009
#endif

#ifndef GL_TEXTURE_3D
#define GL_TEXTURE_3D 0x806F
#endif

#ifndef GL_MAX_SPARSE_TEXTURE_SIZE_EXT
#define GL_MAX_SPARSE_TEXTURE_SIZE_EXT 0x9198
#endif

#ifndef GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT 0x9199
#endif

#ifndef GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT 0x919A
#endif

#ifndef GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT 0x91A9
#endif

#ifndef GL_EXT_sparse_texture2
#define GL_EXT_sparse_texture2 1
#endif

#ifndef GL_EXT_stencil_clear_tag
#define GL_EXT_stencil_clear_tag 1
#endif

#ifdef glStencilClearTagEXT
#undef glStencilClearTagEXT
#endif
#ifdef PFNGLSTENCILCLEARTAGEXTPROC
#undef PFNGLSTENCILCLEARTAGEXTPROC
#endif
typedef void  (*PFNGLSTENCILCLEARTAGEXTPROC)(GLsizei stencilTagBits, GLuint stencilClearTag);

#ifndef GL_STENCIL_TAG_BITS_EXT
#define GL_STENCIL_TAG_BITS_EXT 0x88F2
#endif

#ifndef GL_STENCIL_CLEAR_TAG_VALUE_EXT
#define GL_STENCIL_CLEAR_TAG_VALUE_EXT 0x88F3
#endif

#ifndef GL_EXT_stencil_two_side
#define GL_EXT_stencil_two_side 1
#endif

#ifdef glActiveStencilFaceEXT
#undef glActiveStencilFaceEXT
#endif
#ifdef PFNGLACTIVESTENCILFACEEXTPROC
#undef PFNGLACTIVESTENCILFACEEXTPROC
#endif
typedef void  (*PFNGLACTIVESTENCILFACEEXTPROC)(GLenum face);

#ifndef GL_STENCIL_TEST_TWO_SIDE_EXT
#define GL_STENCIL_TEST_TWO_SIDE_EXT 0x8910
#endif

#ifndef GL_ACTIVE_STENCIL_FACE_EXT
#define GL_ACTIVE_STENCIL_FACE_EXT 0x8911
#endif

#ifndef GL_EXT_stencil_wrap
#define GL_EXT_stencil_wrap 1
#endif

#ifndef GL_INCR_WRAP_EXT
#define GL_INCR_WRAP_EXT 0x8507
#endif

#ifndef GL_DECR_WRAP_EXT
#define GL_DECR_WRAP_EXT 0x8508
#endif

#ifndef GL_EXT_subtexture
#define GL_EXT_subtexture 1
#endif

#ifdef glTexSubImage1DEXT
#undef glTexSubImage1DEXT
#endif
#ifdef PFNGLTEXSUBIMAGE1DEXTPROC
#undef PFNGLTEXSUBIMAGE1DEXTPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE1DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);

#ifdef glTexSubImage2DEXT
#undef glTexSubImage2DEXT
#endif
#ifdef PFNGLTEXSUBIMAGE2DEXTPROC
#undef PFNGLTEXSUBIMAGE2DEXTPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE2DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);

#ifndef GL_EXT_tessellation_point_size
#define GL_EXT_tessellation_point_size 1
#endif

#ifndef GL_EXT_tessellation_shader
#define GL_EXT_tessellation_shader 1
#endif

#ifdef glPatchParameteriEXT
#undef glPatchParameteriEXT
#endif
#ifdef PFNGLPATCHPARAMETERIEXTPROC
#undef PFNGLPATCHPARAMETERIEXTPROC
#endif
typedef void  (*PFNGLPATCHPARAMETERIEXTPROC)(GLenum pname, GLint value);

#ifndef GL_PATCHES_EXT
#define GL_PATCHES_EXT 0x000E
#endif

#ifndef GL_PATCH_VERTICES_EXT
#define GL_PATCH_VERTICES_EXT 0x8E72
#endif

#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES_EXT
#define GL_TESS_CONTROL_OUTPUT_VERTICES_EXT 0x8E75
#endif

#ifndef GL_TESS_GEN_MODE_EXT
#define GL_TESS_GEN_MODE_EXT 0x8E76
#endif

#ifndef GL_TESS_GEN_SPACING_EXT
#define GL_TESS_GEN_SPACING_EXT 0x8E77
#endif

#ifndef GL_TESS_GEN_VERTEX_ORDER_EXT
#define GL_TESS_GEN_VERTEX_ORDER_EXT 0x8E78
#endif

#ifndef GL_TESS_GEN_POINT_MODE_EXT
#define GL_TESS_GEN_POINT_MODE_EXT 0x8E79
#endif

#ifndef GL_TRIANGLES
#define GL_TRIANGLES 0x0004
#endif

#ifndef GL_ISOLINES_EXT
#define GL_ISOLINES_EXT 0x8E7A
#endif

#ifndef GL_QUADS_EXT
#define GL_QUADS_EXT 0x0007
#endif

#ifndef GL_EQUAL
#define GL_EQUAL 0x0202
#endif

#ifndef GL_FRACTIONAL_ODD_EXT
#define GL_FRACTIONAL_ODD_EXT 0x8E7B
#endif

#ifndef GL_FRACTIONAL_EVEN_EXT
#define GL_FRACTIONAL_EVEN_EXT 0x8E7C
#endif

#ifndef GL_CCW
#define GL_CCW 0x0901
#endif

#ifndef GL_CW
#define GL_CW 0x0900
#endif

#ifndef GL_MAX_PATCH_VERTICES_EXT
#define GL_MAX_PATCH_VERTICES_EXT 0x8E7D
#endif

#ifndef GL_MAX_TESS_GEN_LEVEL_EXT
#define GL_MAX_TESS_GEN_LEVEL_EXT 0x8E7E
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E7F
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E80
#endif

#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT 0x8E81
#endif

#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT 0x8E82
#endif

#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT 0x8E83
#endif

#ifndef GL_MAX_TESS_PATCH_COMPONENTS_EXT
#define GL_MAX_TESS_PATCH_COMPONENTS_EXT 0x8E84
#endif

#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT 0x8E85
#endif

#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT 0x8E86
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT 0x8E89
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT 0x8E8A
#endif

#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT 0x886C
#endif

#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT 0x886D
#endif

#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E1E
#endif

#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E1F
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT 0x92CD
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT 0x92CE
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT 0x92D3
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT 0x92D4
#endif

#ifndef GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT 0x90CB
#endif

#ifndef GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT 0x90CC
#endif

#ifndef GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT 0x90D8
#endif

#ifndef GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT 0x90D9
#endif

#ifndef GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#endif

#ifndef GL_IS_PER_PATCH_EXT
#define GL_IS_PER_PATCH_EXT 0x92E7
#endif

#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT 0x9307
#endif

#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT 0x9308
#endif

#ifndef GL_TESS_CONTROL_SHADER_EXT
#define GL_TESS_CONTROL_SHADER_EXT 0x8E88
#endif

#ifndef GL_TESS_EVALUATION_SHADER_EXT
#define GL_TESS_EVALUATION_SHADER_EXT 0x8E87
#endif

#ifndef GL_TESS_CONTROL_SHADER_BIT_EXT
#define GL_TESS_CONTROL_SHADER_BIT_EXT 0x00000008
#endif

#ifndef GL_TESS_EVALUATION_SHADER_BIT_EXT
#define GL_TESS_EVALUATION_SHADER_BIT_EXT 0x00000010
#endif

#ifndef GL_EXT_texture
#define GL_EXT_texture 1
#endif

#ifndef GL_ALPHA4_EXT
#define GL_ALPHA4_EXT 0x803B
#endif

#ifndef GL_ALPHA8_EXT
#define GL_ALPHA8_EXT 0x803C
#endif

#ifndef GL_ALPHA12_EXT
#define GL_ALPHA12_EXT 0x803D
#endif

#ifndef GL_ALPHA16_EXT
#define GL_ALPHA16_EXT 0x803E
#endif

#ifndef GL_LUMINANCE4_EXT
#define GL_LUMINANCE4_EXT 0x803F
#endif

#ifndef GL_LUMINANCE8_EXT
#define GL_LUMINANCE8_EXT 0x8040
#endif

#ifndef GL_LUMINANCE12_EXT
#define GL_LUMINANCE12_EXT 0x8041
#endif

#ifndef GL_LUMINANCE16_EXT
#define GL_LUMINANCE16_EXT 0x8042
#endif

#ifndef GL_LUMINANCE4_ALPHA4_EXT
#define GL_LUMINANCE4_ALPHA4_EXT 0x8043
#endif

#ifndef GL_LUMINANCE6_ALPHA2_EXT
#define GL_LUMINANCE6_ALPHA2_EXT 0x8044
#endif

#ifndef GL_LUMINANCE8_ALPHA8_EXT
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#endif

#ifndef GL_LUMINANCE12_ALPHA4_EXT
#define GL_LUMINANCE12_ALPHA4_EXT 0x8046
#endif

#ifndef GL_LUMINANCE12_ALPHA12_EXT
#define GL_LUMINANCE12_ALPHA12_EXT 0x8047
#endif

#ifndef GL_LUMINANCE16_ALPHA16_EXT
#define GL_LUMINANCE16_ALPHA16_EXT 0x8048
#endif

#ifndef GL_INTENSITY_EXT
#define GL_INTENSITY_EXT 0x8049
#endif

#ifndef GL_INTENSITY4_EXT
#define GL_INTENSITY4_EXT 0x804A
#endif

#ifndef GL_INTENSITY8_EXT
#define GL_INTENSITY8_EXT 0x804B
#endif

#ifndef GL_INTENSITY12_EXT
#define GL_INTENSITY12_EXT 0x804C
#endif

#ifndef GL_INTENSITY16_EXT
#define GL_INTENSITY16_EXT 0x804D
#endif

#ifndef GL_RGB2_EXT
#define GL_RGB2_EXT 0x804E
#endif

#ifndef GL_RGB4_EXT
#define GL_RGB4_EXT 0x804F
#endif

#ifndef GL_RGB5_EXT
#define GL_RGB5_EXT 0x8050
#endif

#ifndef GL_RGB8_EXT
#define GL_RGB8_EXT 0x8051
#endif

#ifndef GL_RGB10_EXT
#define GL_RGB10_EXT 0x8052
#endif

#ifndef GL_RGB12_EXT
#define GL_RGB12_EXT 0x8053
#endif

#ifndef GL_RGB16_EXT
#define GL_RGB16_EXT 0x8054
#endif

#ifndef GL_RGBA2_EXT
#define GL_RGBA2_EXT 0x8055
#endif

#ifndef GL_RGBA4_EXT
#define GL_RGBA4_EXT 0x8056
#endif

#ifndef GL_RGB5_A1_EXT
#define GL_RGB5_A1_EXT 0x8057
#endif

#ifndef GL_RGBA8_EXT
#define GL_RGBA8_EXT 0x8058
#endif

#ifndef GL_RGB10_A2_EXT
#define GL_RGB10_A2_EXT 0x8059
#endif

#ifndef GL_RGBA12_EXT
#define GL_RGBA12_EXT 0x805A
#endif

#ifndef GL_RGBA16_EXT
#define GL_RGBA16_EXT 0x805B
#endif

#ifndef GL_TEXTURE_RED_SIZE_EXT
#define GL_TEXTURE_RED_SIZE_EXT 0x805C
#endif

#ifndef GL_TEXTURE_GREEN_SIZE_EXT
#define GL_TEXTURE_GREEN_SIZE_EXT 0x805D
#endif

#ifndef GL_TEXTURE_BLUE_SIZE_EXT
#define GL_TEXTURE_BLUE_SIZE_EXT 0x805E
#endif

#ifndef GL_TEXTURE_ALPHA_SIZE_EXT
#define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F
#endif

#ifndef GL_TEXTURE_LUMINANCE_SIZE_EXT
#define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060
#endif

#ifndef GL_TEXTURE_INTENSITY_SIZE_EXT
#define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061
#endif

#ifndef GL_REPLACE_EXT
#define GL_REPLACE_EXT 0x8062
#endif

#ifndef GL_PROXY_TEXTURE_1D_EXT
#define GL_PROXY_TEXTURE_1D_EXT 0x8063
#endif

#ifndef GL_PROXY_TEXTURE_2D_EXT
#define GL_PROXY_TEXTURE_2D_EXT 0x8064
#endif

#ifndef GL_TEXTURE_TOO_LARGE_EXT
#define GL_TEXTURE_TOO_LARGE_EXT 0x8065
#endif

#ifndef GL_EXT_texture3D
#define GL_EXT_texture3D 1
#endif

#ifdef glTexImage3DEXT
#undef glTexImage3DEXT
#endif
#ifdef PFNGLTEXIMAGE3DEXTPROC
#undef PFNGLTEXIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLTEXIMAGE3DEXTPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTexSubImage3DEXT
#undef glTexSubImage3DEXT
#endif
#ifdef PFNGLTEXSUBIMAGE3DEXTPROC
#undef PFNGLTEXSUBIMAGE3DEXTPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE3DEXTPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);

#ifndef GL_PACK_SKIP_IMAGES_EXT
#define GL_PACK_SKIP_IMAGES_EXT 0x806B
#endif

#ifndef GL_PACK_IMAGE_HEIGHT_EXT
#define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
#endif

#ifndef GL_UNPACK_SKIP_IMAGES_EXT
#define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
#endif

#ifndef GL_UNPACK_IMAGE_HEIGHT_EXT
#define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
#endif

#ifndef GL_TEXTURE_3D_EXT
#define GL_TEXTURE_3D_EXT 0x806F
#endif

#ifndef GL_PROXY_TEXTURE_3D_EXT
#define GL_PROXY_TEXTURE_3D_EXT 0x8070
#endif

#ifndef GL_TEXTURE_DEPTH_EXT
#define GL_TEXTURE_DEPTH_EXT 0x8071
#endif

#ifndef GL_TEXTURE_WRAP_R_EXT
#define GL_TEXTURE_WRAP_R_EXT 0x8072
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE_EXT
#define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
#endif

#ifndef GL_EXT_texture_array
#define GL_EXT_texture_array 1
#endif

#ifdef glFramebufferTextureLayerEXT
#undef glFramebufferTextureLayerEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
#undef PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifndef GL_TEXTURE_1D_ARRAY_EXT
#define GL_TEXTURE_1D_ARRAY_EXT 0x8C18
#endif

#ifndef GL_PROXY_TEXTURE_1D_ARRAY_EXT
#define GL_PROXY_TEXTURE_1D_ARRAY_EXT 0x8C19
#endif

#ifndef GL_TEXTURE_2D_ARRAY_EXT
#define GL_TEXTURE_2D_ARRAY_EXT 0x8C1A
#endif

#ifndef GL_PROXY_TEXTURE_2D_ARRAY_EXT
#define GL_PROXY_TEXTURE_2D_ARRAY_EXT 0x8C1B
#endif

#ifndef GL_TEXTURE_BINDING_1D_ARRAY_EXT
#define GL_TEXTURE_BINDING_1D_ARRAY_EXT 0x8C1C
#endif

#ifndef GL_TEXTURE_BINDING_2D_ARRAY_EXT
#define GL_TEXTURE_BINDING_2D_ARRAY_EXT 0x8C1D
#endif

#ifndef GL_MAX_ARRAY_TEXTURE_LAYERS_EXT
#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT 0x88FF
#endif

#ifndef GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT
#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#endif

#ifndef GL_EXT_texture_border_clamp
#define GL_EXT_texture_border_clamp 1
#endif

#ifdef glTexParameterIivEXT
#undef glTexParameterIivEXT
#endif
#ifdef PFNGLTEXPARAMETERIIVEXTPROC
#undef PFNGLTEXPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexParameterIuivEXT
#undef glTexParameterIuivEXT
#endif
#ifdef PFNGLTEXPARAMETERIUIVEXTPROC
#undef PFNGLTEXPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, const GLuint *params);

#ifdef glGetTexParameterIivEXT
#undef glGetTexParameterIivEXT
#endif
#ifdef PFNGLGETTEXPARAMETERIIVEXTPROC
#undef PFNGLGETTEXPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetTexParameterIuivEXT
#undef glGetTexParameterIuivEXT
#endif
#ifdef PFNGLGETTEXPARAMETERIUIVEXTPROC
#undef PFNGLGETTEXPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, GLuint *params);

#ifdef glSamplerParameterIivEXT
#undef glSamplerParameterIivEXT
#endif
#ifdef PFNGLSAMPLERPARAMETERIIVEXTPROC
#undef PFNGLSAMPLERPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIIVEXTPROC)(GLuint sampler, GLenum pname, const GLint *param);

#ifdef glSamplerParameterIuivEXT
#undef glSamplerParameterIuivEXT
#endif
#ifdef PFNGLSAMPLERPARAMETERIUIVEXTPROC
#undef PFNGLSAMPLERPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIUIVEXTPROC)(GLuint sampler, GLenum pname, const GLuint *param);

#ifdef glGetSamplerParameterIivEXT
#undef glGetSamplerParameterIivEXT
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIIVEXTPROC
#undef PFNGLGETSAMPLERPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIIVEXTPROC)(GLuint sampler, GLenum pname, GLint *params);

#ifdef glGetSamplerParameterIuivEXT
#undef glGetSamplerParameterIuivEXT
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIUIVEXTPROC
#undef PFNGLGETSAMPLERPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIUIVEXTPROC)(GLuint sampler, GLenum pname, GLuint *params);

#ifndef GL_TEXTURE_BORDER_COLOR_EXT
#define GL_TEXTURE_BORDER_COLOR_EXT 0x1004
#endif

#ifndef GL_CLAMP_TO_BORDER_EXT
#define GL_CLAMP_TO_BORDER_EXT 0x812D
#endif

#ifndef GL_EXT_texture_buffer
#define GL_EXT_texture_buffer 1
#endif

#ifdef glTexBufferEXT
#undef glTexBufferEXT
#endif
#ifdef PFNGLTEXBUFFEREXTPROC
#undef PFNGLTEXBUFFEREXTPROC
#endif
typedef void  (*PFNGLTEXBUFFEREXTPROC)(GLenum target, GLenum internalformat, GLuint buffer);

#ifdef glTexBufferRangeEXT
#undef glTexBufferRangeEXT
#endif
#ifdef PFNGLTEXBUFFERRANGEEXTPROC
#undef PFNGLTEXBUFFERRANGEEXTPROC
#endif
typedef void  (*PFNGLTEXBUFFERRANGEEXTPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifndef GL_TEXTURE_BUFFER_EXT
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#endif

#ifndef GL_TEXTURE_BUFFER_BINDING_EXT
#define GL_TEXTURE_BUFFER_BINDING_EXT 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE_EXT
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER_EXT
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT 0x919F
#endif

#ifndef GL_SAMPLER_BUFFER_EXT
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#endif

#ifndef GL_INT_SAMPLER_BUFFER_EXT
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#endif

#ifndef GL_IMAGE_BUFFER_EXT
#define GL_IMAGE_BUFFER_EXT 0x9051
#endif

#ifndef GL_INT_IMAGE_BUFFER_EXT
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER_EXT
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET_EXT
#define GL_TEXTURE_BUFFER_OFFSET_EXT 0x919D
#endif

#ifndef GL_TEXTURE_BUFFER_SIZE_EXT
#define GL_TEXTURE_BUFFER_SIZE_EXT 0x919E
#endif

#ifndef GL_EXT_texture_buffer_object
#define GL_EXT_texture_buffer_object 1
#endif

#ifdef glTexBufferEXT
#undef glTexBufferEXT
#endif
#ifdef PFNGLTEXBUFFEREXTPROC
#undef PFNGLTEXBUFFEREXTPROC
#endif
typedef void  (*PFNGLTEXBUFFEREXTPROC)(GLenum target, GLenum internalformat, GLuint buffer);

#ifndef GL_TEXTURE_BUFFER_EXT
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE_EXT
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER_EXT
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_FORMAT_EXT
#define GL_TEXTURE_BUFFER_FORMAT_EXT 0x8C2E
#endif

#ifndef GL_EXT_texture_compression_dxt1
#define GL_EXT_texture_compression_dxt1 1
#endif

#ifndef GL_COMPRESSED_RGB_S3TC_DXT1_EXT
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#endif

#ifndef GL_EXT_texture_compression_latc
#define GL_EXT_texture_compression_latc 1
#endif

#ifndef GL_COMPRESSED_LUMINANCE_LATC1_EXT
#define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
#endif

#ifndef GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT
#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
#endif

#ifndef GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT
#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
#endif

#ifndef GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT
#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
#endif

#ifndef GL_EXT_texture_compression_rgtc
#define GL_EXT_texture_compression_rgtc 1
#endif

#ifndef GL_COMPRESSED_RED_RGTC1_EXT
#define GL_COMPRESSED_RED_RGTC1_EXT 0x8DBB
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_RGTC1_EXT
#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
#endif

#ifndef GL_COMPRESSED_RED_GREEN_RGTC2_EXT
#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
#endif

#ifndef GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT
#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
#endif

#ifndef GL_EXT_texture_compression_s3tc
#define GL_EXT_texture_compression_s3tc 1
#endif

#ifndef GL_COMPRESSED_RGB_S3TC_DXT1_EXT
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT1_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT3_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
#endif

#ifndef GL_COMPRESSED_RGBA_S3TC_DXT5_EXT
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
#endif

#ifndef GL_EXT_texture_cube_map
#define GL_EXT_texture_cube_map 1
#endif

#ifndef GL_NORMAL_MAP_EXT
#define GL_NORMAL_MAP_EXT 0x8511
#endif

#ifndef GL_REFLECTION_MAP_EXT
#define GL_REFLECTION_MAP_EXT 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP_EXT
#define GL_TEXTURE_CUBE_MAP_EXT 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_EXT
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
#endif

#ifndef GL_PROXY_TEXTURE_CUBE_MAP_EXT
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT 0x851B
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT 0x851C
#endif

#ifndef GL_EXT_texture_cube_map_array
#define GL_EXT_texture_cube_map_array 1
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY_EXT
#define GL_TEXTURE_CUBE_MAP_ARRAY_EXT 0x9009
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT 0x900A
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_EXT
#define GL_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900C
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT 0x900D
#endif

#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900E
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900F
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#endif

#ifndef GL_EXT_texture_env_add
#define GL_EXT_texture_env_add 1
#endif

#ifndef GL_EXT_texture_env_combine
#define GL_EXT_texture_env_combine 1
#endif

#ifndef GL_COMBINE_EXT
#define GL_COMBINE_EXT 0x8570
#endif

#ifndef GL_COMBINE_RGB_EXT
#define GL_COMBINE_RGB_EXT 0x8571
#endif

#ifndef GL_COMBINE_ALPHA_EXT
#define GL_COMBINE_ALPHA_EXT 0x8572
#endif

#ifndef GL_RGB_SCALE_EXT
#define GL_RGB_SCALE_EXT 0x8573
#endif

#ifndef GL_ADD_SIGNED_EXT
#define GL_ADD_SIGNED_EXT 0x8574
#endif

#ifndef GL_INTERPOLATE_EXT
#define GL_INTERPOLATE_EXT 0x8575
#endif

#ifndef GL_CONSTANT_EXT
#define GL_CONSTANT_EXT 0x8576
#endif

#ifndef GL_PRIMARY_COLOR_EXT
#define GL_PRIMARY_COLOR_EXT 0x8577
#endif

#ifndef GL_PREVIOUS_EXT
#define GL_PREVIOUS_EXT 0x8578
#endif

#ifndef GL_SOURCE0_RGB_EXT
#define GL_SOURCE0_RGB_EXT 0x8580
#endif

#ifndef GL_SOURCE1_RGB_EXT
#define GL_SOURCE1_RGB_EXT 0x8581
#endif

#ifndef GL_SOURCE2_RGB_EXT
#define GL_SOURCE2_RGB_EXT 0x8582
#endif

#ifndef GL_SOURCE0_ALPHA_EXT
#define GL_SOURCE0_ALPHA_EXT 0x8588
#endif

#ifndef GL_SOURCE1_ALPHA_EXT
#define GL_SOURCE1_ALPHA_EXT 0x8589
#endif

#ifndef GL_SOURCE2_ALPHA_EXT
#define GL_SOURCE2_ALPHA_EXT 0x858A
#endif

#ifndef GL_OPERAND0_RGB_EXT
#define GL_OPERAND0_RGB_EXT 0x8590
#endif

#ifndef GL_OPERAND1_RGB_EXT
#define GL_OPERAND1_RGB_EXT 0x8591
#endif

#ifndef GL_OPERAND2_RGB_EXT
#define GL_OPERAND2_RGB_EXT 0x8592
#endif

#ifndef GL_OPERAND0_ALPHA_EXT
#define GL_OPERAND0_ALPHA_EXT 0x8598
#endif

#ifndef GL_OPERAND1_ALPHA_EXT
#define GL_OPERAND1_ALPHA_EXT 0x8599
#endif

#ifndef GL_OPERAND2_ALPHA_EXT
#define GL_OPERAND2_ALPHA_EXT 0x859A
#endif

#ifndef GL_EXT_texture_env_dot3
#define GL_EXT_texture_env_dot3 1
#endif

#ifndef GL_DOT3_RGB_EXT
#define GL_DOT3_RGB_EXT 0x8740
#endif

#ifndef GL_DOT3_RGBA_EXT
#define GL_DOT3_RGBA_EXT 0x8741
#endif

#ifndef GL_EXT_texture_filter_anisotropic
#define GL_EXT_texture_filter_anisotropic 1
#endif

#ifndef GL_TEXTURE_MAX_ANISOTROPY_EXT
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#endif

#ifndef GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#endif

#ifndef GL_EXT_texture_filter_minmax
#define GL_EXT_texture_filter_minmax 1
#endif

#ifdef glRasterSamplesEXT
#undef glRasterSamplesEXT
#endif
#ifdef PFNGLRASTERSAMPLESEXTPROC
#undef PFNGLRASTERSAMPLESEXTPROC
#endif
typedef void  (*PFNGLRASTERSAMPLESEXTPROC)(GLuint samples, GLboolean fixedsamplelocations);

#ifndef GL_RASTER_MULTISAMPLE_EXT
#define GL_RASTER_MULTISAMPLE_EXT 0x9327
#endif

#ifndef GL_RASTER_SAMPLES_EXT
#define GL_RASTER_SAMPLES_EXT 0x9328
#endif

#ifndef GL_MAX_RASTER_SAMPLES_EXT
#define GL_MAX_RASTER_SAMPLES_EXT 0x9329
#endif

#ifndef GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT
#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT 0x932A
#endif

#ifndef GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT
#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT 0x932B
#endif

#ifndef GL_EFFECTIVE_RASTER_SAMPLES_EXT
#define GL_EFFECTIVE_RASTER_SAMPLES_EXT 0x932C
#endif

#ifndef GL_EXT_texture_format_BGRA8888
#define GL_EXT_texture_format_BGRA8888 1
#endif

#ifndef GL_BGRA_EXT
#define GL_BGRA_EXT 0x80E1
#endif

#ifndef GL_EXT_texture_integer
#define GL_EXT_texture_integer 1
#endif

#ifdef glTexParameterIivEXT
#undef glTexParameterIivEXT
#endif
#ifdef PFNGLTEXPARAMETERIIVEXTPROC
#undef PFNGLTEXPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexParameterIuivEXT
#undef glTexParameterIuivEXT
#endif
#ifdef PFNGLTEXPARAMETERIUIVEXTPROC
#undef PFNGLTEXPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, const GLuint *params);

#ifdef glGetTexParameterIivEXT
#undef glGetTexParameterIivEXT
#endif
#ifdef PFNGLGETTEXPARAMETERIIVEXTPROC
#undef PFNGLGETTEXPARAMETERIIVEXTPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIIVEXTPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetTexParameterIuivEXT
#undef glGetTexParameterIuivEXT
#endif
#ifdef PFNGLGETTEXPARAMETERIUIVEXTPROC
#undef PFNGLGETTEXPARAMETERIUIVEXTPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIUIVEXTPROC)(GLenum target, GLenum pname, GLuint *params);

#ifdef glClearColorIiEXT
#undef glClearColorIiEXT
#endif
#ifdef PFNGLCLEARCOLORIIEXTPROC
#undef PFNGLCLEARCOLORIIEXTPROC
#endif
typedef void  (*PFNGLCLEARCOLORIIEXTPROC)(GLint red, GLint green, GLint blue, GLint alpha);

#ifdef glClearColorIuiEXT
#undef glClearColorIuiEXT
#endif
#ifdef PFNGLCLEARCOLORIUIEXTPROC
#undef PFNGLCLEARCOLORIUIEXTPROC
#endif
typedef void  (*PFNGLCLEARCOLORIUIEXTPROC)(GLuint red, GLuint green, GLuint blue, GLuint alpha);

#ifndef GL_RGBA32UI_EXT
#define GL_RGBA32UI_EXT 0x8D70
#endif

#ifndef GL_RGB32UI_EXT
#define GL_RGB32UI_EXT 0x8D71
#endif

#ifndef GL_ALPHA32UI_EXT
#define GL_ALPHA32UI_EXT 0x8D72
#endif

#ifndef GL_INTENSITY32UI_EXT
#define GL_INTENSITY32UI_EXT 0x8D73
#endif

#ifndef GL_LUMINANCE32UI_EXT
#define GL_LUMINANCE32UI_EXT 0x8D74
#endif

#ifndef GL_LUMINANCE_ALPHA32UI_EXT
#define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#endif

#ifndef GL_RGBA16UI_EXT
#define GL_RGBA16UI_EXT 0x8D76
#endif

#ifndef GL_RGB16UI_EXT
#define GL_RGB16UI_EXT 0x8D77
#endif

#ifndef GL_ALPHA16UI_EXT
#define GL_ALPHA16UI_EXT 0x8D78
#endif

#ifndef GL_INTENSITY16UI_EXT
#define GL_INTENSITY16UI_EXT 0x8D79
#endif

#ifndef GL_LUMINANCE16UI_EXT
#define GL_LUMINANCE16UI_EXT 0x8D7A
#endif

#ifndef GL_LUMINANCE_ALPHA16UI_EXT
#define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#endif

#ifndef GL_RGBA8UI_EXT
#define GL_RGBA8UI_EXT 0x8D7C
#endif

#ifndef GL_RGB8UI_EXT
#define GL_RGB8UI_EXT 0x8D7D
#endif

#ifndef GL_ALPHA8UI_EXT
#define GL_ALPHA8UI_EXT 0x8D7E
#endif

#ifndef GL_INTENSITY8UI_EXT
#define GL_INTENSITY8UI_EXT 0x8D7F
#endif

#ifndef GL_LUMINANCE8UI_EXT
#define GL_LUMINANCE8UI_EXT 0x8D80
#endif

#ifndef GL_LUMINANCE_ALPHA8UI_EXT
#define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#endif

#ifndef GL_RGBA32I_EXT
#define GL_RGBA32I_EXT 0x8D82
#endif

#ifndef GL_RGB32I_EXT
#define GL_RGB32I_EXT 0x8D83
#endif

#ifndef GL_ALPHA32I_EXT
#define GL_ALPHA32I_EXT 0x8D84
#endif

#ifndef GL_INTENSITY32I_EXT
#define GL_INTENSITY32I_EXT 0x8D85
#endif

#ifndef GL_LUMINANCE32I_EXT
#define GL_LUMINANCE32I_EXT 0x8D86
#endif

#ifndef GL_LUMINANCE_ALPHA32I_EXT
#define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#endif

#ifndef GL_RGBA16I_EXT
#define GL_RGBA16I_EXT 0x8D88
#endif

#ifndef GL_RGB16I_EXT
#define GL_RGB16I_EXT 0x8D89
#endif

#ifndef GL_ALPHA16I_EXT
#define GL_ALPHA16I_EXT 0x8D8A
#endif

#ifndef GL_INTENSITY16I_EXT
#define GL_INTENSITY16I_EXT 0x8D8B
#endif

#ifndef GL_LUMINANCE16I_EXT
#define GL_LUMINANCE16I_EXT 0x8D8C
#endif

#ifndef GL_LUMINANCE_ALPHA16I_EXT
#define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#endif

#ifndef GL_RGBA8I_EXT
#define GL_RGBA8I_EXT 0x8D8E
#endif

#ifndef GL_RGB8I_EXT
#define GL_RGB8I_EXT 0x8D8F
#endif

#ifndef GL_ALPHA8I_EXT
#define GL_ALPHA8I_EXT 0x8D90
#endif

#ifndef GL_INTENSITY8I_EXT
#define GL_INTENSITY8I_EXT 0x8D91
#endif

#ifndef GL_LUMINANCE8I_EXT
#define GL_LUMINANCE8I_EXT 0x8D92
#endif

#ifndef GL_LUMINANCE_ALPHA8I_EXT
#define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#endif

#ifndef GL_RED_INTEGER_EXT
#define GL_RED_INTEGER_EXT 0x8D94
#endif

#ifndef GL_GREEN_INTEGER_EXT
#define GL_GREEN_INTEGER_EXT 0x8D95
#endif

#ifndef GL_BLUE_INTEGER_EXT
#define GL_BLUE_INTEGER_EXT 0x8D96
#endif

#ifndef GL_ALPHA_INTEGER_EXT
#define GL_ALPHA_INTEGER_EXT 0x8D97
#endif

#ifndef GL_RGB_INTEGER_EXT
#define GL_RGB_INTEGER_EXT 0x8D98
#endif

#ifndef GL_RGBA_INTEGER_EXT
#define GL_RGBA_INTEGER_EXT 0x8D99
#endif

#ifndef GL_BGR_INTEGER_EXT
#define GL_BGR_INTEGER_EXT 0x8D9A
#endif

#ifndef GL_BGRA_INTEGER_EXT
#define GL_BGRA_INTEGER_EXT 0x8D9B
#endif

#ifndef GL_LUMINANCE_INTEGER_EXT
#define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#endif

#ifndef GL_LUMINANCE_ALPHA_INTEGER_EXT
#define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#endif

#ifndef GL_RGBA_INTEGER_MODE_EXT
#define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#endif

#ifndef GL_EXT_texture_lod_bias
#define GL_EXT_texture_lod_bias 1
#endif

#ifndef GL_MAX_TEXTURE_LOD_BIAS_EXT
#define GL_MAX_TEXTURE_LOD_BIAS_EXT 0x84FD
#endif

#ifndef GL_TEXTURE_FILTER_CONTROL_EXT
#define GL_TEXTURE_FILTER_CONTROL_EXT 0x8500
#endif

#ifndef GL_TEXTURE_LOD_BIAS_EXT
#define GL_TEXTURE_LOD_BIAS_EXT 0x8501
#endif

#ifndef GL_EXT_texture_mirror_clamp
#define GL_EXT_texture_mirror_clamp 1
#endif

#ifndef GL_MIRROR_CLAMP_EXT
#define GL_MIRROR_CLAMP_EXT 0x8742
#endif

#ifndef GL_MIRROR_CLAMP_TO_EDGE_EXT
#define GL_MIRROR_CLAMP_TO_EDGE_EXT 0x8743
#endif

#ifndef GL_MIRROR_CLAMP_TO_BORDER_EXT
#define GL_MIRROR_CLAMP_TO_BORDER_EXT 0x8912
#endif

#ifndef GL_EXT_texture_norm16
#define GL_EXT_texture_norm16 1
#endif

#ifndef GL_R16_EXT
#define GL_R16_EXT 0x822A
#endif

#ifndef GL_RG16_EXT
#define GL_RG16_EXT 0x822C
#endif

#ifndef GL_RGBA16_EXT
#define GL_RGBA16_EXT 0x805B
#endif

#ifndef GL_RGB16_EXT
#define GL_RGB16_EXT 0x8054
#endif

#ifndef GL_R16_SNORM_EXT
#define GL_R16_SNORM_EXT 0x8F98
#endif

#ifndef GL_RG16_SNORM_EXT
#define GL_RG16_SNORM_EXT 0x8F99
#endif

#ifndef GL_RGB16_SNORM_EXT
#define GL_RGB16_SNORM_EXT 0x8F9A
#endif

#ifndef GL_RGBA16_SNORM_EXT
#define GL_RGBA16_SNORM_EXT 0x8F9B
#endif

#ifndef GL_EXT_texture_object
#define GL_EXT_texture_object 1
#endif

#ifdef glAreTexturesResidentEXT
#undef glAreTexturesResidentEXT
#endif
#ifdef PFNGLARETEXTURESRESIDENTEXTPROC
#undef PFNGLARETEXTURESRESIDENTEXTPROC
#endif
typedef GLboolean  (*PFNGLARETEXTURESRESIDENTEXTPROC)(GLsizei n, const GLuint *textures, GLboolean *residences);

#ifdef glBindTextureEXT
#undef glBindTextureEXT
#endif
#ifdef PFNGLBINDTEXTUREEXTPROC
#undef PFNGLBINDTEXTUREEXTPROC
#endif
typedef void  (*PFNGLBINDTEXTUREEXTPROC)(GLenum target, GLuint texture);

#ifdef glDeleteTexturesEXT
#undef glDeleteTexturesEXT
#endif
#ifdef PFNGLDELETETEXTURESEXTPROC
#undef PFNGLDELETETEXTURESEXTPROC
#endif
typedef void  (*PFNGLDELETETEXTURESEXTPROC)(GLsizei n, const GLuint *textures);

#ifdef glGenTexturesEXT
#undef glGenTexturesEXT
#endif
#ifdef PFNGLGENTEXTURESEXTPROC
#undef PFNGLGENTEXTURESEXTPROC
#endif
typedef void  (*PFNGLGENTEXTURESEXTPROC)(GLsizei n, GLuint *textures);

#ifdef glIsTextureEXT
#undef glIsTextureEXT
#endif
#ifdef PFNGLISTEXTUREEXTPROC
#undef PFNGLISTEXTUREEXTPROC
#endif
typedef GLboolean  (*PFNGLISTEXTUREEXTPROC)(GLuint texture);

#ifdef glPrioritizeTexturesEXT
#undef glPrioritizeTexturesEXT
#endif
#ifdef PFNGLPRIORITIZETEXTURESEXTPROC
#undef PFNGLPRIORITIZETEXTURESEXTPROC
#endif
typedef void  (*PFNGLPRIORITIZETEXTURESEXTPROC)(GLsizei n, const GLuint *textures, const GLclampf *priorities);

#ifndef GL_TEXTURE_PRIORITY_EXT
#define GL_TEXTURE_PRIORITY_EXT 0x8066
#endif

#ifndef GL_TEXTURE_RESIDENT_EXT
#define GL_TEXTURE_RESIDENT_EXT 0x8067
#endif

#ifndef GL_TEXTURE_1D_BINDING_EXT
#define GL_TEXTURE_1D_BINDING_EXT 0x8068
#endif

#ifndef GL_TEXTURE_2D_BINDING_EXT
#define GL_TEXTURE_2D_BINDING_EXT 0x8069
#endif

#ifndef GL_TEXTURE_3D_BINDING_EXT
#define GL_TEXTURE_3D_BINDING_EXT 0x806A
#endif

#ifndef GL_EXT_texture_perturb_normal
#define GL_EXT_texture_perturb_normal 1
#endif

#ifdef glTextureNormalEXT
#undef glTextureNormalEXT
#endif
#ifdef PFNGLTEXTURENORMALEXTPROC
#undef PFNGLTEXTURENORMALEXTPROC
#endif
typedef void  (*PFNGLTEXTURENORMALEXTPROC)(GLenum mode);

#ifndef GL_PERTURB_EXT
#define GL_PERTURB_EXT 0x85AE
#endif

#ifndef GL_TEXTURE_NORMAL_EXT
#define GL_TEXTURE_NORMAL_EXT 0x85AF
#endif

#ifndef GL_EXT_texture_rg
#define GL_EXT_texture_rg 1
#endif

#ifndef GL_RED_EXT
#define GL_RED_EXT 0x1903
#endif

#ifndef GL_RG_EXT
#define GL_RG_EXT 0x8227
#endif

#ifndef GL_R8_EXT
#define GL_R8_EXT 0x8229
#endif

#ifndef GL_RG8_EXT
#define GL_RG8_EXT 0x822B
#endif

#ifndef GL_EXT_texture_sRGB
#define GL_EXT_texture_sRGB 1
#endif

#ifndef GL_SRGB_EXT
#define GL_SRGB_EXT 0x8C40
#endif

#ifndef GL_SRGB8_EXT
#define GL_SRGB8_EXT 0x8C41
#endif

#ifndef GL_SRGB_ALPHA_EXT
#define GL_SRGB_ALPHA_EXT 0x8C42
#endif

#ifndef GL_SRGB8_ALPHA8_EXT
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#endif

#ifndef GL_SLUMINANCE_ALPHA_EXT
#define GL_SLUMINANCE_ALPHA_EXT 0x8C44
#endif

#ifndef GL_SLUMINANCE8_ALPHA8_EXT
#define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
#endif

#ifndef GL_SLUMINANCE_EXT
#define GL_SLUMINANCE_EXT 0x8C46
#endif

#ifndef GL_SLUMINANCE8_EXT
#define GL_SLUMINANCE8_EXT 0x8C47
#endif

#ifndef GL_COMPRESSED_SRGB_EXT
#define GL_COMPRESSED_SRGB_EXT 0x8C48
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_EXT
#define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_EXT
#define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
#endif

#ifndef GL_COMPRESSED_SLUMINANCE_ALPHA_EXT
#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#endif

#ifndef GL_COMPRESSED_SRGB_S3TC_DXT1_EXT
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
#endif

#ifndef GL_EXT_texture_sRGB_decode
#define GL_EXT_texture_sRGB_decode 1
#endif

#ifndef GL_TEXTURE_SRGB_DECODE_EXT
#define GL_TEXTURE_SRGB_DECODE_EXT 0x8A48
#endif

#ifndef GL_DECODE_EXT
#define GL_DECODE_EXT 0x8A49
#endif

#ifndef GL_SKIP_DECODE_EXT
#define GL_SKIP_DECODE_EXT 0x8A4A
#endif

#ifndef GL_EXT_texture_sRGB_R8
#define GL_EXT_texture_sRGB_R8 1
#endif

#ifndef GL_SR8_EXT
#define GL_SR8_EXT 0x8FBD
#endif

#ifndef GL_EXT_texture_sRGB_RG8
#define GL_EXT_texture_sRGB_RG8 1
#endif

#ifndef GL_SRG8_EXT
#define GL_SRG8_EXT 0x8FBE
#endif

#ifndef GL_EXT_texture_shared_exponent
#define GL_EXT_texture_shared_exponent 1
#endif

#ifndef GL_RGB9_E5_EXT
#define GL_RGB9_E5_EXT 0x8C3D
#endif

#ifndef GL_UNSIGNED_INT_5_9_9_9_REV_EXT
#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT 0x8C3E
#endif

#ifndef GL_TEXTURE_SHARED_SIZE_EXT
#define GL_TEXTURE_SHARED_SIZE_EXT 0x8C3F
#endif

#ifndef GL_EXT_texture_snorm
#define GL_EXT_texture_snorm 1
#endif

#ifndef GL_ALPHA_SNORM
#define GL_ALPHA_SNORM 0x9010
#endif

#ifndef GL_LUMINANCE_SNORM
#define GL_LUMINANCE_SNORM 0x9011
#endif

#ifndef GL_LUMINANCE_ALPHA_SNORM
#define GL_LUMINANCE_ALPHA_SNORM 0x9012
#endif

#ifndef GL_INTENSITY_SNORM
#define GL_INTENSITY_SNORM 0x9013
#endif

#ifndef GL_ALPHA8_SNORM
#define GL_ALPHA8_SNORM 0x9014
#endif

#ifndef GL_LUMINANCE8_SNORM
#define GL_LUMINANCE8_SNORM 0x9015
#endif

#ifndef GL_LUMINANCE8_ALPHA8_SNORM
#define GL_LUMINANCE8_ALPHA8_SNORM 0x9016
#endif

#ifndef GL_INTENSITY8_SNORM
#define GL_INTENSITY8_SNORM 0x9017
#endif

#ifndef GL_ALPHA16_SNORM
#define GL_ALPHA16_SNORM 0x9018
#endif

#ifndef GL_LUMINANCE16_SNORM
#define GL_LUMINANCE16_SNORM 0x9019
#endif

#ifndef GL_LUMINANCE16_ALPHA16_SNORM
#define GL_LUMINANCE16_ALPHA16_SNORM 0x901A
#endif

#ifndef GL_INTENSITY16_SNORM
#define GL_INTENSITY16_SNORM 0x901B
#endif

#ifndef GL_RED_SNORM
#define GL_RED_SNORM 0x8F90
#endif

#ifndef GL_RG_SNORM
#define GL_RG_SNORM 0x8F91
#endif

#ifndef GL_RGB_SNORM
#define GL_RGB_SNORM 0x8F92
#endif

#ifndef GL_RGBA_SNORM
#define GL_RGBA_SNORM 0x8F93
#endif

#ifndef GL_R8_SNORM
#define GL_R8_SNORM 0x8F94
#endif

#ifndef GL_RG8_SNORM
#define GL_RG8_SNORM 0x8F95
#endif

#ifndef GL_RGB8_SNORM
#define GL_RGB8_SNORM 0x8F96
#endif

#ifndef GL_RGBA8_SNORM
#define GL_RGBA8_SNORM 0x8F97
#endif

#ifndef GL_R16_SNORM
#define GL_R16_SNORM 0x8F98
#endif

#ifndef GL_RG16_SNORM
#define GL_RG16_SNORM 0x8F99
#endif

#ifndef GL_RGB16_SNORM
#define GL_RGB16_SNORM 0x8F9A
#endif

#ifndef GL_RGBA16_SNORM
#define GL_RGBA16_SNORM 0x8F9B
#endif

#ifndef GL_SIGNED_NORMALIZED
#define GL_SIGNED_NORMALIZED 0x8F9C
#endif

#ifndef GL_EXT_texture_storage
#define GL_EXT_texture_storage 1
#endif

#ifdef glTexStorage1DEXT
#undef glTexStorage1DEXT
#endif
#ifdef PFNGLTEXSTORAGE1DEXTPROC
#undef PFNGLTEXSTORAGE1DEXTPROC
#endif
typedef void  (*PFNGLTEXSTORAGE1DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);

#ifdef glTexStorage2DEXT
#undef glTexStorage2DEXT
#endif
#ifdef PFNGLTEXSTORAGE2DEXTPROC
#undef PFNGLTEXSTORAGE2DEXTPROC
#endif
typedef void  (*PFNGLTEXSTORAGE2DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glTexStorage3DEXT
#undef glTexStorage3DEXT
#endif
#ifdef PFNGLTEXSTORAGE3DEXTPROC
#undef PFNGLTEXSTORAGE3DEXTPROC
#endif
typedef void  (*PFNGLTEXSTORAGE3DEXTPROC)(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

#ifndef GL_TEXTURE_IMMUTABLE_FORMAT_EXT
#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT 0x912F
#endif

#ifndef GL_ALPHA8_EXT
#define GL_ALPHA8_EXT 0x803C
#endif

#ifndef GL_LUMINANCE8_EXT
#define GL_LUMINANCE8_EXT 0x8040
#endif

#ifndef GL_LUMINANCE8_ALPHA8_EXT
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#endif

#ifndef GL_RGBA32F_EXT
#define GL_RGBA32F_EXT 0x8814
#endif

#ifndef GL_RGB32F_EXT
#define GL_RGB32F_EXT 0x8815
#endif

#ifndef GL_ALPHA32F_EXT
#define GL_ALPHA32F_EXT 0x8816
#endif

#ifndef GL_LUMINANCE32F_EXT
#define GL_LUMINANCE32F_EXT 0x8818
#endif

#ifndef GL_LUMINANCE_ALPHA32F_EXT
#define GL_LUMINANCE_ALPHA32F_EXT 0x8819
#endif

#ifndef GL_RGBA16F_EXT
#define GL_RGBA16F_EXT 0x881A
#endif

#ifndef GL_RGB16F_EXT
#define GL_RGB16F_EXT 0x881B
#endif

#ifndef GL_ALPHA16F_EXT
#define GL_ALPHA16F_EXT 0x881C
#endif

#ifndef GL_LUMINANCE16F_EXT
#define GL_LUMINANCE16F_EXT 0x881E
#endif

#ifndef GL_LUMINANCE_ALPHA16F_EXT
#define GL_LUMINANCE_ALPHA16F_EXT 0x881F
#endif

#ifndef GL_RGB10_A2_EXT
#define GL_RGB10_A2_EXT 0x8059
#endif

#ifndef GL_RGB10_EXT
#define GL_RGB10_EXT 0x8052
#endif

#ifndef GL_BGRA8_EXT
#define GL_BGRA8_EXT 0x93A1
#endif

#ifndef GL_R8_EXT
#define GL_R8_EXT 0x8229
#endif

#ifndef GL_RG8_EXT
#define GL_RG8_EXT 0x822B
#endif

#ifndef GL_R32F_EXT
#define GL_R32F_EXT 0x822E
#endif

#ifndef GL_RG32F_EXT
#define GL_RG32F_EXT 0x8230
#endif

#ifndef GL_R16F_EXT
#define GL_R16F_EXT 0x822D
#endif

#ifndef GL_RG16F_EXT
#define GL_RG16F_EXT 0x822F
#endif

#ifdef glTextureStorage1DEXT
#undef glTextureStorage1DEXT
#endif
#ifdef PFNGLTEXTURESTORAGE1DEXTPROC
#undef PFNGLTEXTURESTORAGE1DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE1DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);

#ifdef glTextureStorage2DEXT
#undef glTextureStorage2DEXT
#endif
#ifdef PFNGLTEXTURESTORAGE2DEXTPROC
#undef PFNGLTEXTURESTORAGE2DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE2DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glTextureStorage3DEXT
#undef glTextureStorage3DEXT
#endif
#ifdef PFNGLTEXTURESTORAGE3DEXTPROC
#undef PFNGLTEXTURESTORAGE3DEXTPROC
#endif
typedef void  (*PFNGLTEXTURESTORAGE3DEXTPROC)(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);

#ifndef GL_EXT_texture_swizzle
#define GL_EXT_texture_swizzle 1
#endif

#ifndef GL_TEXTURE_SWIZZLE_R_EXT
#define GL_TEXTURE_SWIZZLE_R_EXT 0x8E42
#endif

#ifndef GL_TEXTURE_SWIZZLE_G_EXT
#define GL_TEXTURE_SWIZZLE_G_EXT 0x8E43
#endif

#ifndef GL_TEXTURE_SWIZZLE_B_EXT
#define GL_TEXTURE_SWIZZLE_B_EXT 0x8E44
#endif

#ifndef GL_TEXTURE_SWIZZLE_A_EXT
#define GL_TEXTURE_SWIZZLE_A_EXT 0x8E45
#endif

#ifndef GL_TEXTURE_SWIZZLE_RGBA_EXT
#define GL_TEXTURE_SWIZZLE_RGBA_EXT 0x8E46
#endif

#ifndef GL_EXT_texture_type_2_10_10_10_REV
#define GL_EXT_texture_type_2_10_10_10_REV 1
#endif

#ifndef GL_UNSIGNED_INT_2_10_10_10_REV_EXT
#define GL_UNSIGNED_INT_2_10_10_10_REV_EXT 0x8368
#endif

#ifndef GL_EXT_texture_view
#define GL_EXT_texture_view 1
#endif

#ifdef glTextureViewEXT
#undef glTextureViewEXT
#endif
#ifdef PFNGLTEXTUREVIEWEXTPROC
#undef PFNGLTEXTUREVIEWEXTPROC
#endif
typedef void  (*PFNGLTEXTUREVIEWEXTPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);

#ifndef GL_TEXTURE_VIEW_MIN_LEVEL_EXT
#define GL_TEXTURE_VIEW_MIN_LEVEL_EXT 0x82DB
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LEVELS_EXT
#define GL_TEXTURE_VIEW_NUM_LEVELS_EXT 0x82DC
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LAYER_EXT
#define GL_TEXTURE_VIEW_MIN_LAYER_EXT 0x82DD
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LAYERS_EXT
#define GL_TEXTURE_VIEW_NUM_LAYERS_EXT 0x82DE
#endif

#ifndef GL_TEXTURE_IMMUTABLE_LEVELS
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#endif

#ifndef GL_EXT_timer_query
#define GL_EXT_timer_query 1
#endif

#ifdef glGetQueryObjecti64vEXT
#undef glGetQueryObjecti64vEXT
#endif
#ifdef PFNGLGETQUERYOBJECTI64VEXTPROC
#undef PFNGLGETQUERYOBJECTI64VEXTPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTI64VEXTPROC)(GLuint id, GLenum pname, GLint64 *params);

#ifdef glGetQueryObjectui64vEXT
#undef glGetQueryObjectui64vEXT
#endif
#ifdef PFNGLGETQUERYOBJECTUI64VEXTPROC
#undef PFNGLGETQUERYOBJECTUI64VEXTPROC
#endif
typedef void  (*PFNGLGETQUERYOBJECTUI64VEXTPROC)(GLuint id, GLenum pname, GLuint64 *params);

#ifndef GL_TIME_ELAPSED_EXT
#define GL_TIME_ELAPSED_EXT 0x88BF
#endif

#ifndef GL_EXT_transform_feedback
#define GL_EXT_transform_feedback 1
#endif

#ifdef glBeginTransformFeedbackEXT
#undef glBeginTransformFeedbackEXT
#endif
#ifdef PFNGLBEGINTRANSFORMFEEDBACKEXTPROC
#undef PFNGLBEGINTRANSFORMFEEDBACKEXTPROC
#endif
typedef void  (*PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)(GLenum primitiveMode);

#ifdef glEndTransformFeedbackEXT
#undef glEndTransformFeedbackEXT
#endif
#ifdef PFNGLENDTRANSFORMFEEDBACKEXTPROC
#undef PFNGLENDTRANSFORMFEEDBACKEXTPROC
#endif
typedef void  (*PFNGLENDTRANSFORMFEEDBACKEXTPROC)(void);

#ifdef glBindBufferRangeEXT
#undef glBindBufferRangeEXT
#endif
#ifdef PFNGLBINDBUFFERRANGEEXTPROC
#undef PFNGLBINDBUFFERRANGEEXTPROC
#endif
typedef void  (*PFNGLBINDBUFFERRANGEEXTPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glBindBufferOffsetEXT
#undef glBindBufferOffsetEXT
#endif
#ifdef PFNGLBINDBUFFEROFFSETEXTPROC
#undef PFNGLBINDBUFFEROFFSETEXTPROC
#endif
typedef void  (*PFNGLBINDBUFFEROFFSETEXTPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);

#ifdef glBindBufferBaseEXT
#undef glBindBufferBaseEXT
#endif
#ifdef PFNGLBINDBUFFERBASEEXTPROC
#undef PFNGLBINDBUFFERBASEEXTPROC
#endif
typedef void  (*PFNGLBINDBUFFERBASEEXTPROC)(GLenum target, GLuint index, GLuint buffer);

#ifdef glTransformFeedbackVaryingsEXT
#undef glTransformFeedbackVaryingsEXT
#endif
#ifdef PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
#undef PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);

#ifdef glGetTransformFeedbackVaryingEXT
#undef glGetTransformFeedbackVaryingEXT
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
#undef PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#endif

#ifndef GL_INTERLEAVED_ATTRIBS_EXT
#define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#endif

#ifndef GL_SEPARATE_ATTRIBS_EXT
#define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#endif

#ifndef GL_PRIMITIVES_GENERATED_EXT
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#endif

#ifndef GL_RASTERIZER_DISCARD_EXT
#define GL_RASTERIZER_DISCARD_EXT 0x8C89
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_EXT
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
#endif

#ifndef GL_EXT_unpack_subimage
#define GL_EXT_unpack_subimage 1
#endif

#ifndef GL_UNPACK_ROW_LENGTH_EXT
#define GL_UNPACK_ROW_LENGTH_EXT 0x0CF2
#endif

#ifndef GL_UNPACK_SKIP_ROWS_EXT
#define GL_UNPACK_SKIP_ROWS_EXT 0x0CF3
#endif

#ifndef GL_UNPACK_SKIP_PIXELS_EXT
#define GL_UNPACK_SKIP_PIXELS_EXT 0x0CF4
#endif

#ifndef GL_EXT_vertex_array
#define GL_EXT_vertex_array 1
#endif

#ifdef glArrayElementEXT
#undef glArrayElementEXT
#endif
#ifdef PFNGLARRAYELEMENTEXTPROC
#undef PFNGLARRAYELEMENTEXTPROC
#endif
typedef void  (*PFNGLARRAYELEMENTEXTPROC)(GLint i);

#ifdef glColorPointerEXT
#undef glColorPointerEXT
#endif
#ifdef PFNGLCOLORPOINTEREXTPROC
#undef PFNGLCOLORPOINTEREXTPROC
#endif
typedef void  (*PFNGLCOLORPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);

#ifdef glDrawArraysEXT
#undef glDrawArraysEXT
#endif
#ifdef PFNGLDRAWARRAYSEXTPROC
#undef PFNGLDRAWARRAYSEXTPROC
#endif
typedef void  (*PFNGLDRAWARRAYSEXTPROC)(GLenum mode, GLint first, GLsizei count);

#ifdef glEdgeFlagPointerEXT
#undef glEdgeFlagPointerEXT
#endif
#ifdef PFNGLEDGEFLAGPOINTEREXTPROC
#undef PFNGLEDGEFLAGPOINTEREXTPROC
#endif
typedef void  (*PFNGLEDGEFLAGPOINTEREXTPROC)(GLsizei stride, GLsizei count, const GLboolean *pointer);

#ifdef glGetPointervEXT
#undef glGetPointervEXT
#endif
#ifdef PFNGLGETPOINTERVEXTPROC
#undef PFNGLGETPOINTERVEXTPROC
#endif
typedef void  (*PFNGLGETPOINTERVEXTPROC)(GLenum pname, void **params);

#ifdef glIndexPointerEXT
#undef glIndexPointerEXT
#endif
#ifdef PFNGLINDEXPOINTEREXTPROC
#undef PFNGLINDEXPOINTEREXTPROC
#endif
typedef void  (*PFNGLINDEXPOINTEREXTPROC)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);

#ifdef glNormalPointerEXT
#undef glNormalPointerEXT
#endif
#ifdef PFNGLNORMALPOINTEREXTPROC
#undef PFNGLNORMALPOINTEREXTPROC
#endif
typedef void  (*PFNGLNORMALPOINTEREXTPROC)(GLenum type, GLsizei stride, GLsizei count, const void *pointer);

#ifdef glTexCoordPointerEXT
#undef glTexCoordPointerEXT
#endif
#ifdef PFNGLTEXCOORDPOINTEREXTPROC
#undef PFNGLTEXCOORDPOINTEREXTPROC
#endif
typedef void  (*PFNGLTEXCOORDPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);

#ifdef glVertexPointerEXT
#undef glVertexPointerEXT
#endif
#ifdef PFNGLVERTEXPOINTEREXTPROC
#undef PFNGLVERTEXPOINTEREXTPROC
#endif
typedef void  (*PFNGLVERTEXPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);

#ifndef GL_VERTEX_ARRAY_EXT
#define GL_VERTEX_ARRAY_EXT 0x8074
#endif

#ifndef GL_NORMAL_ARRAY_EXT
#define GL_NORMAL_ARRAY_EXT 0x8075
#endif

#ifndef GL_COLOR_ARRAY_EXT
#define GL_COLOR_ARRAY_EXT 0x8076
#endif

#ifndef GL_INDEX_ARRAY_EXT
#define GL_INDEX_ARRAY_EXT 0x8077
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_EXT
#define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#endif

#ifndef GL_EDGE_FLAG_ARRAY_EXT
#define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#endif

#ifndef GL_VERTEX_ARRAY_SIZE_EXT
#define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#endif

#ifndef GL_VERTEX_ARRAY_TYPE_EXT
#define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#endif

#ifndef GL_VERTEX_ARRAY_STRIDE_EXT
#define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#endif

#ifndef GL_VERTEX_ARRAY_COUNT_EXT
#define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#endif

#ifndef GL_NORMAL_ARRAY_TYPE_EXT
#define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#endif

#ifndef GL_NORMAL_ARRAY_STRIDE_EXT
#define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#endif

#ifndef GL_NORMAL_ARRAY_COUNT_EXT
#define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#endif

#ifndef GL_COLOR_ARRAY_SIZE_EXT
#define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#endif

#ifndef GL_COLOR_ARRAY_TYPE_EXT
#define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#endif

#ifndef GL_COLOR_ARRAY_STRIDE_EXT
#define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#endif

#ifndef GL_COLOR_ARRAY_COUNT_EXT
#define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#endif

#ifndef GL_INDEX_ARRAY_TYPE_EXT
#define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#endif

#ifndef GL_INDEX_ARRAY_STRIDE_EXT
#define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#endif

#ifndef GL_INDEX_ARRAY_COUNT_EXT
#define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_SIZE_EXT
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_TYPE_EXT
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_STRIDE_EXT
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_COUNT_EXT
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#endif

#ifndef GL_EDGE_FLAG_ARRAY_STRIDE_EXT
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#endif

#ifndef GL_EDGE_FLAG_ARRAY_COUNT_EXT
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#endif

#ifndef GL_VERTEX_ARRAY_POINTER_EXT
#define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#endif

#ifndef GL_NORMAL_ARRAY_POINTER_EXT
#define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#endif

#ifndef GL_COLOR_ARRAY_POINTER_EXT
#define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#endif

#ifndef GL_INDEX_ARRAY_POINTER_EXT
#define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_POINTER_EXT
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#endif

#ifndef GL_EDGE_FLAG_ARRAY_POINTER_EXT
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
#endif

#ifndef GL_EXT_vertex_array_bgra
#define GL_EXT_vertex_array_bgra 1
#endif

#ifndef GL_BGRA
#define GL_BGRA 0x80E1
#endif

#ifndef GL_EXT_vertex_attrib_64bit
#define GL_EXT_vertex_attrib_64bit 1
#endif

#ifdef glVertexAttribL1dEXT
#undef glVertexAttribL1dEXT
#endif
#ifdef PFNGLVERTEXATTRIBL1DEXTPROC
#undef PFNGLVERTEXATTRIBL1DEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1DEXTPROC)(GLuint index, GLdouble x);

#ifdef glVertexAttribL2dEXT
#undef glVertexAttribL2dEXT
#endif
#ifdef PFNGLVERTEXATTRIBL2DEXTPROC
#undef PFNGLVERTEXATTRIBL2DEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2DEXTPROC)(GLuint index, GLdouble x, GLdouble y);

#ifdef glVertexAttribL3dEXT
#undef glVertexAttribL3dEXT
#endif
#ifdef PFNGLVERTEXATTRIBL3DEXTPROC
#undef PFNGLVERTEXATTRIBL3DEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3DEXTPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertexAttribL4dEXT
#undef glVertexAttribL4dEXT
#endif
#ifdef PFNGLVERTEXATTRIBL4DEXTPROC
#undef PFNGLVERTEXATTRIBL4DEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4DEXTPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertexAttribL1dvEXT
#undef glVertexAttribL1dvEXT
#endif
#ifdef PFNGLVERTEXATTRIBL1DVEXTPROC
#undef PFNGLVERTEXATTRIBL1DVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1DVEXTPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL2dvEXT
#undef glVertexAttribL2dvEXT
#endif
#ifdef PFNGLVERTEXATTRIBL2DVEXTPROC
#undef PFNGLVERTEXATTRIBL2DVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2DVEXTPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL3dvEXT
#undef glVertexAttribL3dvEXT
#endif
#ifdef PFNGLVERTEXATTRIBL3DVEXTPROC
#undef PFNGLVERTEXATTRIBL3DVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3DVEXTPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribL4dvEXT
#undef glVertexAttribL4dvEXT
#endif
#ifdef PFNGLVERTEXATTRIBL4DVEXTPROC
#undef PFNGLVERTEXATTRIBL4DVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4DVEXTPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttribLPointerEXT
#undef glVertexAttribLPointerEXT
#endif
#ifdef PFNGLVERTEXATTRIBLPOINTEREXTPROC
#undef PFNGLVERTEXATTRIBLPOINTEREXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBLPOINTEREXTPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glGetVertexAttribLdvEXT
#undef glGetVertexAttribLdvEXT
#endif
#ifdef PFNGLGETVERTEXATTRIBLDVEXTPROC
#undef PFNGLGETVERTEXATTRIBLDVEXTPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBLDVEXTPROC)(GLuint index, GLenum pname, GLdouble *params);

#ifndef GL_DOUBLE
#define GL_DOUBLE 0x140A
#endif

#ifndef GL_DOUBLE_VEC2_EXT
#define GL_DOUBLE_VEC2_EXT 0x8FFC
#endif

#ifndef GL_DOUBLE_VEC3_EXT
#define GL_DOUBLE_VEC3_EXT 0x8FFD
#endif

#ifndef GL_DOUBLE_VEC4_EXT
#define GL_DOUBLE_VEC4_EXT 0x8FFE
#endif

#ifndef GL_DOUBLE_MAT2_EXT
#define GL_DOUBLE_MAT2_EXT 0x8F46
#endif

#ifndef GL_DOUBLE_MAT3_EXT
#define GL_DOUBLE_MAT3_EXT 0x8F47
#endif

#ifndef GL_DOUBLE_MAT4_EXT
#define GL_DOUBLE_MAT4_EXT 0x8F48
#endif

#ifndef GL_DOUBLE_MAT2x3_EXT
#define GL_DOUBLE_MAT2x3_EXT 0x8F49
#endif

#ifndef GL_DOUBLE_MAT2x4_EXT
#define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#endif

#ifndef GL_DOUBLE_MAT3x2_EXT
#define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#endif

#ifndef GL_DOUBLE_MAT3x4_EXT
#define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#endif

#ifndef GL_DOUBLE_MAT4x2_EXT
#define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#endif

#ifndef GL_DOUBLE_MAT4x3_EXT
#define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#endif

#ifndef GL_EXT_vertex_shader
#define GL_EXT_vertex_shader 1
#endif

#ifdef glBeginVertexShaderEXT
#undef glBeginVertexShaderEXT
#endif
#ifdef PFNGLBEGINVERTEXSHADEREXTPROC
#undef PFNGLBEGINVERTEXSHADEREXTPROC
#endif
typedef void  (*PFNGLBEGINVERTEXSHADEREXTPROC)(void);

#ifdef glEndVertexShaderEXT
#undef glEndVertexShaderEXT
#endif
#ifdef PFNGLENDVERTEXSHADEREXTPROC
#undef PFNGLENDVERTEXSHADEREXTPROC
#endif
typedef void  (*PFNGLENDVERTEXSHADEREXTPROC)(void);

#ifdef glBindVertexShaderEXT
#undef glBindVertexShaderEXT
#endif
#ifdef PFNGLBINDVERTEXSHADEREXTPROC
#undef PFNGLBINDVERTEXSHADEREXTPROC
#endif
typedef void  (*PFNGLBINDVERTEXSHADEREXTPROC)(GLuint id);

#ifdef glGenVertexShadersEXT
#undef glGenVertexShadersEXT
#endif
#ifdef PFNGLGENVERTEXSHADERSEXTPROC
#undef PFNGLGENVERTEXSHADERSEXTPROC
#endif
typedef GLuint  (*PFNGLGENVERTEXSHADERSEXTPROC)(GLuint range);

#ifdef glDeleteVertexShaderEXT
#undef glDeleteVertexShaderEXT
#endif
#ifdef PFNGLDELETEVERTEXSHADEREXTPROC
#undef PFNGLDELETEVERTEXSHADEREXTPROC
#endif
typedef void  (*PFNGLDELETEVERTEXSHADEREXTPROC)(GLuint id);

#ifdef glShaderOp1EXT
#undef glShaderOp1EXT
#endif
#ifdef PFNGLSHADEROP1EXTPROC
#undef PFNGLSHADEROP1EXTPROC
#endif
typedef void  (*PFNGLSHADEROP1EXTPROC)(GLenum op, GLuint res, GLuint arg1);

#ifdef glShaderOp2EXT
#undef glShaderOp2EXT
#endif
#ifdef PFNGLSHADEROP2EXTPROC
#undef PFNGLSHADEROP2EXTPROC
#endif
typedef void  (*PFNGLSHADEROP2EXTPROC)(GLenum op, GLuint res, GLuint arg1, GLuint arg2);

#ifdef glShaderOp3EXT
#undef glShaderOp3EXT
#endif
#ifdef PFNGLSHADEROP3EXTPROC
#undef PFNGLSHADEROP3EXTPROC
#endif
typedef void  (*PFNGLSHADEROP3EXTPROC)(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);

#ifdef glSwizzleEXT
#undef glSwizzleEXT
#endif
#ifdef PFNGLSWIZZLEEXTPROC
#undef PFNGLSWIZZLEEXTPROC
#endif
typedef void  (*PFNGLSWIZZLEEXTPROC)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);

#ifdef glWriteMaskEXT
#undef glWriteMaskEXT
#endif
#ifdef PFNGLWRITEMASKEXTPROC
#undef PFNGLWRITEMASKEXTPROC
#endif
typedef void  (*PFNGLWRITEMASKEXTPROC)(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);

#ifdef glInsertComponentEXT
#undef glInsertComponentEXT
#endif
#ifdef PFNGLINSERTCOMPONENTEXTPROC
#undef PFNGLINSERTCOMPONENTEXTPROC
#endif
typedef void  (*PFNGLINSERTCOMPONENTEXTPROC)(GLuint res, GLuint src, GLuint num);

#ifdef glExtractComponentEXT
#undef glExtractComponentEXT
#endif
#ifdef PFNGLEXTRACTCOMPONENTEXTPROC
#undef PFNGLEXTRACTCOMPONENTEXTPROC
#endif
typedef void  (*PFNGLEXTRACTCOMPONENTEXTPROC)(GLuint res, GLuint src, GLuint num);

#ifdef glGenSymbolsEXT
#undef glGenSymbolsEXT
#endif
#ifdef PFNGLGENSYMBOLSEXTPROC
#undef PFNGLGENSYMBOLSEXTPROC
#endif
typedef GLuint  (*PFNGLGENSYMBOLSEXTPROC)(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);

#ifdef glSetInvariantEXT
#undef glSetInvariantEXT
#endif
#ifdef PFNGLSETINVARIANTEXTPROC
#undef PFNGLSETINVARIANTEXTPROC
#endif
typedef void  (*PFNGLSETINVARIANTEXTPROC)(GLuint id, GLenum type, const void *addr);

#ifdef glSetLocalConstantEXT
#undef glSetLocalConstantEXT
#endif
#ifdef PFNGLSETLOCALCONSTANTEXTPROC
#undef PFNGLSETLOCALCONSTANTEXTPROC
#endif
typedef void  (*PFNGLSETLOCALCONSTANTEXTPROC)(GLuint id, GLenum type, const void *addr);

#ifdef glVariantbvEXT
#undef glVariantbvEXT
#endif
#ifdef PFNGLVARIANTBVEXTPROC
#undef PFNGLVARIANTBVEXTPROC
#endif
typedef void  (*PFNGLVARIANTBVEXTPROC)(GLuint id, const GLbyte *addr);

#ifdef glVariantsvEXT
#undef glVariantsvEXT
#endif
#ifdef PFNGLVARIANTSVEXTPROC
#undef PFNGLVARIANTSVEXTPROC
#endif
typedef void  (*PFNGLVARIANTSVEXTPROC)(GLuint id, const GLshort *addr);

#ifdef glVariantivEXT
#undef glVariantivEXT
#endif
#ifdef PFNGLVARIANTIVEXTPROC
#undef PFNGLVARIANTIVEXTPROC
#endif
typedef void  (*PFNGLVARIANTIVEXTPROC)(GLuint id, const GLint *addr);

#ifdef glVariantfvEXT
#undef glVariantfvEXT
#endif
#ifdef PFNGLVARIANTFVEXTPROC
#undef PFNGLVARIANTFVEXTPROC
#endif
typedef void  (*PFNGLVARIANTFVEXTPROC)(GLuint id, const GLfloat *addr);

#ifdef glVariantdvEXT
#undef glVariantdvEXT
#endif
#ifdef PFNGLVARIANTDVEXTPROC
#undef PFNGLVARIANTDVEXTPROC
#endif
typedef void  (*PFNGLVARIANTDVEXTPROC)(GLuint id, const GLdouble *addr);

#ifdef glVariantubvEXT
#undef glVariantubvEXT
#endif
#ifdef PFNGLVARIANTUBVEXTPROC
#undef PFNGLVARIANTUBVEXTPROC
#endif
typedef void  (*PFNGLVARIANTUBVEXTPROC)(GLuint id, const GLubyte *addr);

#ifdef glVariantusvEXT
#undef glVariantusvEXT
#endif
#ifdef PFNGLVARIANTUSVEXTPROC
#undef PFNGLVARIANTUSVEXTPROC
#endif
typedef void  (*PFNGLVARIANTUSVEXTPROC)(GLuint id, const GLushort *addr);

#ifdef glVariantuivEXT
#undef glVariantuivEXT
#endif
#ifdef PFNGLVARIANTUIVEXTPROC
#undef PFNGLVARIANTUIVEXTPROC
#endif
typedef void  (*PFNGLVARIANTUIVEXTPROC)(GLuint id, const GLuint *addr);

#ifdef glVariantPointerEXT
#undef glVariantPointerEXT
#endif
#ifdef PFNGLVARIANTPOINTEREXTPROC
#undef PFNGLVARIANTPOINTEREXTPROC
#endif
typedef void  (*PFNGLVARIANTPOINTEREXTPROC)(GLuint id, GLenum type, GLuint stride, const void *addr);

#ifdef glEnableVariantClientStateEXT
#undef glEnableVariantClientStateEXT
#endif
#ifdef PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
#undef PFNGLENABLEVARIANTCLIENTSTATEEXTPROC
#endif
typedef void  (*PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)(GLuint id);

#ifdef glDisableVariantClientStateEXT
#undef glDisableVariantClientStateEXT
#endif
#ifdef PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
#undef PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC
#endif
typedef void  (*PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)(GLuint id);

#ifdef glBindLightParameterEXT
#undef glBindLightParameterEXT
#endif
#ifdef PFNGLBINDLIGHTPARAMETEREXTPROC
#undef PFNGLBINDLIGHTPARAMETEREXTPROC
#endif
typedef GLuint  (*PFNGLBINDLIGHTPARAMETEREXTPROC)(GLenum light, GLenum value);

#ifdef glBindMaterialParameterEXT
#undef glBindMaterialParameterEXT
#endif
#ifdef PFNGLBINDMATERIALPARAMETEREXTPROC
#undef PFNGLBINDMATERIALPARAMETEREXTPROC
#endif
typedef GLuint  (*PFNGLBINDMATERIALPARAMETEREXTPROC)(GLenum face, GLenum value);

#ifdef glBindTexGenParameterEXT
#undef glBindTexGenParameterEXT
#endif
#ifdef PFNGLBINDTEXGENPARAMETEREXTPROC
#undef PFNGLBINDTEXGENPARAMETEREXTPROC
#endif
typedef GLuint  (*PFNGLBINDTEXGENPARAMETEREXTPROC)(GLenum unit, GLenum coord, GLenum value);

#ifdef glBindTextureUnitParameterEXT
#undef glBindTextureUnitParameterEXT
#endif
#ifdef PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
#undef PFNGLBINDTEXTUREUNITPARAMETEREXTPROC
#endif
typedef GLuint  (*PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)(GLenum unit, GLenum value);

#ifdef glBindParameterEXT
#undef glBindParameterEXT
#endif
#ifdef PFNGLBINDPARAMETEREXTPROC
#undef PFNGLBINDPARAMETEREXTPROC
#endif
typedef GLuint  (*PFNGLBINDPARAMETEREXTPROC)(GLenum value);

#ifdef glIsVariantEnabledEXT
#undef glIsVariantEnabledEXT
#endif
#ifdef PFNGLISVARIANTENABLEDEXTPROC
#undef PFNGLISVARIANTENABLEDEXTPROC
#endif
typedef GLboolean  (*PFNGLISVARIANTENABLEDEXTPROC)(GLuint id, GLenum cap);

#ifdef glGetVariantBooleanvEXT
#undef glGetVariantBooleanvEXT
#endif
#ifdef PFNGLGETVARIANTBOOLEANVEXTPROC
#undef PFNGLGETVARIANTBOOLEANVEXTPROC
#endif
typedef void  (*PFNGLGETVARIANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean *data);

#ifdef glGetVariantIntegervEXT
#undef glGetVariantIntegervEXT
#endif
#ifdef PFNGLGETVARIANTINTEGERVEXTPROC
#undef PFNGLGETVARIANTINTEGERVEXTPROC
#endif
typedef void  (*PFNGLGETVARIANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint *data);

#ifdef glGetVariantFloatvEXT
#undef glGetVariantFloatvEXT
#endif
#ifdef PFNGLGETVARIANTFLOATVEXTPROC
#undef PFNGLGETVARIANTFLOATVEXTPROC
#endif
typedef void  (*PFNGLGETVARIANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat *data);

#ifdef glGetVariantPointervEXT
#undef glGetVariantPointervEXT
#endif
#ifdef PFNGLGETVARIANTPOINTERVEXTPROC
#undef PFNGLGETVARIANTPOINTERVEXTPROC
#endif
typedef void  (*PFNGLGETVARIANTPOINTERVEXTPROC)(GLuint id, GLenum value, void **data);

#ifdef glGetInvariantBooleanvEXT
#undef glGetInvariantBooleanvEXT
#endif
#ifdef PFNGLGETINVARIANTBOOLEANVEXTPROC
#undef PFNGLGETINVARIANTBOOLEANVEXTPROC
#endif
typedef void  (*PFNGLGETINVARIANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean *data);

#ifdef glGetInvariantIntegervEXT
#undef glGetInvariantIntegervEXT
#endif
#ifdef PFNGLGETINVARIANTINTEGERVEXTPROC
#undef PFNGLGETINVARIANTINTEGERVEXTPROC
#endif
typedef void  (*PFNGLGETINVARIANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint *data);

#ifdef glGetInvariantFloatvEXT
#undef glGetInvariantFloatvEXT
#endif
#ifdef PFNGLGETINVARIANTFLOATVEXTPROC
#undef PFNGLGETINVARIANTFLOATVEXTPROC
#endif
typedef void  (*PFNGLGETINVARIANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat *data);

#ifdef glGetLocalConstantBooleanvEXT
#undef glGetLocalConstantBooleanvEXT
#endif
#ifdef PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
#undef PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC
#endif
typedef void  (*PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)(GLuint id, GLenum value, GLboolean *data);

#ifdef glGetLocalConstantIntegervEXT
#undef glGetLocalConstantIntegervEXT
#endif
#ifdef PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
#undef PFNGLGETLOCALCONSTANTINTEGERVEXTPROC
#endif
typedef void  (*PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)(GLuint id, GLenum value, GLint *data);

#ifdef glGetLocalConstantFloatvEXT
#undef glGetLocalConstantFloatvEXT
#endif
#ifdef PFNGLGETLOCALCONSTANTFLOATVEXTPROC
#undef PFNGLGETLOCALCONSTANTFLOATVEXTPROC
#endif
typedef void  (*PFNGLGETLOCALCONSTANTFLOATVEXTPROC)(GLuint id, GLenum value, GLfloat *data);

#ifndef GL_VERTEX_SHADER_EXT
#define GL_VERTEX_SHADER_EXT 0x8780
#endif

#ifndef GL_VERTEX_SHADER_BINDING_EXT
#define GL_VERTEX_SHADER_BINDING_EXT 0x8781
#endif

#ifndef GL_OP_INDEX_EXT
#define GL_OP_INDEX_EXT 0x8782
#endif

#ifndef GL_OP_NEGATE_EXT
#define GL_OP_NEGATE_EXT 0x8783
#endif

#ifndef GL_OP_DOT3_EXT
#define GL_OP_DOT3_EXT 0x8784
#endif

#ifndef GL_OP_DOT4_EXT
#define GL_OP_DOT4_EXT 0x8785
#endif

#ifndef GL_OP_MUL_EXT
#define GL_OP_MUL_EXT 0x8786
#endif

#ifndef GL_OP_ADD_EXT
#define GL_OP_ADD_EXT 0x8787
#endif

#ifndef GL_OP_MADD_EXT
#define GL_OP_MADD_EXT 0x8788
#endif

#ifndef GL_OP_FRAC_EXT
#define GL_OP_FRAC_EXT 0x8789
#endif

#ifndef GL_OP_MAX_EXT
#define GL_OP_MAX_EXT 0x878A
#endif

#ifndef GL_OP_MIN_EXT
#define GL_OP_MIN_EXT 0x878B
#endif

#ifndef GL_OP_SET_GE_EXT
#define GL_OP_SET_GE_EXT 0x878C
#endif

#ifndef GL_OP_SET_LT_EXT
#define GL_OP_SET_LT_EXT 0x878D
#endif

#ifndef GL_OP_CLAMP_EXT
#define GL_OP_CLAMP_EXT 0x878E
#endif

#ifndef GL_OP_FLOOR_EXT
#define GL_OP_FLOOR_EXT 0x878F
#endif

#ifndef GL_OP_ROUND_EXT
#define GL_OP_ROUND_EXT 0x8790
#endif

#ifndef GL_OP_EXP_BASE_2_EXT
#define GL_OP_EXP_BASE_2_EXT 0x8791
#endif

#ifndef GL_OP_LOG_BASE_2_EXT
#define GL_OP_LOG_BASE_2_EXT 0x8792
#endif

#ifndef GL_OP_POWER_EXT
#define GL_OP_POWER_EXT 0x8793
#endif

#ifndef GL_OP_RECIP_EXT
#define GL_OP_RECIP_EXT 0x8794
#endif

#ifndef GL_OP_RECIP_SQRT_EXT
#define GL_OP_RECIP_SQRT_EXT 0x8795
#endif

#ifndef GL_OP_SUB_EXT
#define GL_OP_SUB_EXT 0x8796
#endif

#ifndef GL_OP_CROSS_PRODUCT_EXT
#define GL_OP_CROSS_PRODUCT_EXT 0x8797
#endif

#ifndef GL_OP_MULTIPLY_MATRIX_EXT
#define GL_OP_MULTIPLY_MATRIX_EXT 0x8798
#endif

#ifndef GL_OP_MOV_EXT
#define GL_OP_MOV_EXT 0x8799
#endif

#ifndef GL_OUTPUT_VERTEX_EXT
#define GL_OUTPUT_VERTEX_EXT 0x879A
#endif

#ifndef GL_OUTPUT_COLOR0_EXT
#define GL_OUTPUT_COLOR0_EXT 0x879B
#endif

#ifndef GL_OUTPUT_COLOR1_EXT
#define GL_OUTPUT_COLOR1_EXT 0x879C
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD0_EXT
#define GL_OUTPUT_TEXTURE_COORD0_EXT 0x879D
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD1_EXT
#define GL_OUTPUT_TEXTURE_COORD1_EXT 0x879E
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD2_EXT
#define GL_OUTPUT_TEXTURE_COORD2_EXT 0x879F
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD3_EXT
#define GL_OUTPUT_TEXTURE_COORD3_EXT 0x87A0
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD4_EXT
#define GL_OUTPUT_TEXTURE_COORD4_EXT 0x87A1
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD5_EXT
#define GL_OUTPUT_TEXTURE_COORD5_EXT 0x87A2
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD6_EXT
#define GL_OUTPUT_TEXTURE_COORD6_EXT 0x87A3
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD7_EXT
#define GL_OUTPUT_TEXTURE_COORD7_EXT 0x87A4
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD8_EXT
#define GL_OUTPUT_TEXTURE_COORD8_EXT 0x87A5
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD9_EXT
#define GL_OUTPUT_TEXTURE_COORD9_EXT 0x87A6
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD10_EXT
#define GL_OUTPUT_TEXTURE_COORD10_EXT 0x87A7
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD11_EXT
#define GL_OUTPUT_TEXTURE_COORD11_EXT 0x87A8
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD12_EXT
#define GL_OUTPUT_TEXTURE_COORD12_EXT 0x87A9
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD13_EXT
#define GL_OUTPUT_TEXTURE_COORD13_EXT 0x87AA
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD14_EXT
#define GL_OUTPUT_TEXTURE_COORD14_EXT 0x87AB
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD15_EXT
#define GL_OUTPUT_TEXTURE_COORD15_EXT 0x87AC
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD16_EXT
#define GL_OUTPUT_TEXTURE_COORD16_EXT 0x87AD
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD17_EXT
#define GL_OUTPUT_TEXTURE_COORD17_EXT 0x87AE
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD18_EXT
#define GL_OUTPUT_TEXTURE_COORD18_EXT 0x87AF
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD19_EXT
#define GL_OUTPUT_TEXTURE_COORD19_EXT 0x87B0
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD20_EXT
#define GL_OUTPUT_TEXTURE_COORD20_EXT 0x87B1
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD21_EXT
#define GL_OUTPUT_TEXTURE_COORD21_EXT 0x87B2
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD22_EXT
#define GL_OUTPUT_TEXTURE_COORD22_EXT 0x87B3
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD23_EXT
#define GL_OUTPUT_TEXTURE_COORD23_EXT 0x87B4
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD24_EXT
#define GL_OUTPUT_TEXTURE_COORD24_EXT 0x87B5
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD25_EXT
#define GL_OUTPUT_TEXTURE_COORD25_EXT 0x87B6
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD26_EXT
#define GL_OUTPUT_TEXTURE_COORD26_EXT 0x87B7
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD27_EXT
#define GL_OUTPUT_TEXTURE_COORD27_EXT 0x87B8
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD28_EXT
#define GL_OUTPUT_TEXTURE_COORD28_EXT 0x87B9
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD29_EXT
#define GL_OUTPUT_TEXTURE_COORD29_EXT 0x87BA
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD30_EXT
#define GL_OUTPUT_TEXTURE_COORD30_EXT 0x87BB
#endif

#ifndef GL_OUTPUT_TEXTURE_COORD31_EXT
#define GL_OUTPUT_TEXTURE_COORD31_EXT 0x87BC
#endif

#ifndef GL_OUTPUT_FOG_EXT
#define GL_OUTPUT_FOG_EXT 0x87BD
#endif

#ifndef GL_SCALAR_EXT
#define GL_SCALAR_EXT 0x87BE
#endif

#ifndef GL_VECTOR_EXT
#define GL_VECTOR_EXT 0x87BF
#endif

#ifndef GL_MATRIX_EXT
#define GL_MATRIX_EXT 0x87C0
#endif

#ifndef GL_VARIANT_EXT
#define GL_VARIANT_EXT 0x87C1
#endif

#ifndef GL_INVARIANT_EXT
#define GL_INVARIANT_EXT 0x87C2
#endif

#ifndef GL_LOCAL_CONSTANT_EXT
#define GL_LOCAL_CONSTANT_EXT 0x87C3
#endif

#ifndef GL_LOCAL_EXT
#define GL_LOCAL_EXT 0x87C4
#endif

#ifndef GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
#endif

#ifndef GL_MAX_VERTEX_SHADER_VARIANTS_EXT
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
#endif

#ifndef GL_MAX_VERTEX_SHADER_INVARIANTS_EXT
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
#endif

#ifndef GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
#endif

#ifndef GL_MAX_VERTEX_SHADER_LOCALS_EXT
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT 0x87C9
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
#endif

#ifndef GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
#endif

#ifndef GL_VERTEX_SHADER_INSTRUCTIONS_EXT
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
#endif

#ifndef GL_VERTEX_SHADER_VARIANTS_EXT
#define GL_VERTEX_SHADER_VARIANTS_EXT 0x87D0
#endif

#ifndef GL_VERTEX_SHADER_INVARIANTS_EXT
#define GL_VERTEX_SHADER_INVARIANTS_EXT 0x87D1
#endif

#ifndef GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
#endif

#ifndef GL_VERTEX_SHADER_LOCALS_EXT
#define GL_VERTEX_SHADER_LOCALS_EXT 0x87D3
#endif

#ifndef GL_VERTEX_SHADER_OPTIMIZED_EXT
#define GL_VERTEX_SHADER_OPTIMIZED_EXT 0x87D4
#endif

#ifndef GL_X_EXT
#define GL_X_EXT 0x87D5
#endif

#ifndef GL_Y_EXT
#define GL_Y_EXT 0x87D6
#endif

#ifndef GL_Z_EXT
#define GL_Z_EXT 0x87D7
#endif

#ifndef GL_W_EXT
#define GL_W_EXT 0x87D8
#endif

#ifndef GL_NEGATIVE_X_EXT
#define GL_NEGATIVE_X_EXT 0x87D9
#endif

#ifndef GL_NEGATIVE_Y_EXT
#define GL_NEGATIVE_Y_EXT 0x87DA
#endif

#ifndef GL_NEGATIVE_Z_EXT
#define GL_NEGATIVE_Z_EXT 0x87DB
#endif

#ifndef GL_NEGATIVE_W_EXT
#define GL_NEGATIVE_W_EXT 0x87DC
#endif

#ifndef GL_ZERO_EXT
#define GL_ZERO_EXT 0x87DD
#endif

#ifndef GL_ONE_EXT
#define GL_ONE_EXT 0x87DE
#endif

#ifndef GL_NEGATIVE_ONE_EXT
#define GL_NEGATIVE_ONE_EXT 0x87DF
#endif

#ifndef GL_NORMALIZED_RANGE_EXT
#define GL_NORMALIZED_RANGE_EXT 0x87E0
#endif

#ifndef GL_FULL_RANGE_EXT
#define GL_FULL_RANGE_EXT 0x87E1
#endif

#ifndef GL_CURRENT_VERTEX_EXT
#define GL_CURRENT_VERTEX_EXT 0x87E2
#endif

#ifndef GL_MVP_MATRIX_EXT
#define GL_MVP_MATRIX_EXT 0x87E3
#endif

#ifndef GL_VARIANT_VALUE_EXT
#define GL_VARIANT_VALUE_EXT 0x87E4
#endif

#ifndef GL_VARIANT_DATATYPE_EXT
#define GL_VARIANT_DATATYPE_EXT 0x87E5
#endif

#ifndef GL_VARIANT_ARRAY_STRIDE_EXT
#define GL_VARIANT_ARRAY_STRIDE_EXT 0x87E6
#endif

#ifndef GL_VARIANT_ARRAY_TYPE_EXT
#define GL_VARIANT_ARRAY_TYPE_EXT 0x87E7
#endif

#ifndef GL_VARIANT_ARRAY_EXT
#define GL_VARIANT_ARRAY_EXT 0x87E8
#endif

#ifndef GL_VARIANT_ARRAY_POINTER_EXT
#define GL_VARIANT_ARRAY_POINTER_EXT 0x87E9
#endif

#ifndef GL_INVARIANT_VALUE_EXT
#define GL_INVARIANT_VALUE_EXT 0x87EA
#endif

#ifndef GL_INVARIANT_DATATYPE_EXT
#define GL_INVARIANT_DATATYPE_EXT 0x87EB
#endif

#ifndef GL_LOCAL_CONSTANT_VALUE_EXT
#define GL_LOCAL_CONSTANT_VALUE_EXT 0x87EC
#endif

#ifndef GL_LOCAL_CONSTANT_DATATYPE_EXT
#define GL_LOCAL_CONSTANT_DATATYPE_EXT 0x87ED
#endif

#ifndef GL_EXT_vertex_weighting
#define GL_EXT_vertex_weighting 1
#endif

#ifdef glVertexWeightfEXT
#undef glVertexWeightfEXT
#endif
#ifdef PFNGLVERTEXWEIGHTFEXTPROC
#undef PFNGLVERTEXWEIGHTFEXTPROC
#endif
typedef void  (*PFNGLVERTEXWEIGHTFEXTPROC)(GLfloat weight);

#ifdef glVertexWeightfvEXT
#undef glVertexWeightfvEXT
#endif
#ifdef PFNGLVERTEXWEIGHTFVEXTPROC
#undef PFNGLVERTEXWEIGHTFVEXTPROC
#endif
typedef void  (*PFNGLVERTEXWEIGHTFVEXTPROC)(const GLfloat *weight);

#ifdef glVertexWeightPointerEXT
#undef glVertexWeightPointerEXT
#endif
#ifdef PFNGLVERTEXWEIGHTPOINTEREXTPROC
#undef PFNGLVERTEXWEIGHTPOINTEREXTPROC
#endif
typedef void  (*PFNGLVERTEXWEIGHTPOINTEREXTPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifndef GL_MODELVIEW0_STACK_DEPTH_EXT
#define GL_MODELVIEW0_STACK_DEPTH_EXT 0x0BA3
#endif

#ifndef GL_MODELVIEW1_STACK_DEPTH_EXT
#define GL_MODELVIEW1_STACK_DEPTH_EXT 0x8502
#endif

#ifndef GL_MODELVIEW0_MATRIX_EXT
#define GL_MODELVIEW0_MATRIX_EXT 0x0BA6
#endif

#ifndef GL_MODELVIEW1_MATRIX_EXT
#define GL_MODELVIEW1_MATRIX_EXT 0x8506
#endif

#ifndef GL_VERTEX_WEIGHTING_EXT
#define GL_VERTEX_WEIGHTING_EXT 0x8509
#endif

#ifndef GL_MODELVIEW0_EXT
#define GL_MODELVIEW0_EXT 0x1700
#endif

#ifndef GL_MODELVIEW1_EXT
#define GL_MODELVIEW1_EXT 0x850A
#endif

#ifndef GL_CURRENT_VERTEX_WEIGHT_EXT
#define GL_CURRENT_VERTEX_WEIGHT_EXT 0x850B
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_EXT
#define GL_VERTEX_WEIGHT_ARRAY_EXT 0x850C
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT 0x850D
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT 0x850E
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
#endif

#ifndef GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
#endif

#ifndef GL_EXT_YUV_target
#define GL_EXT_YUV_target 1
#endif

#ifndef GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT
#define GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT 0x8BE7
#endif

#ifndef GL_TEXTURE_EXTERNAL_OES
#define GL_TEXTURE_EXTERNAL_OES 0x8D65
#endif

#ifndef GL_TEXTURE_BINDING_EXTERNAL_OES
#define GL_TEXTURE_BINDING_EXTERNAL_OES 0x8D67
#endif

#ifndef GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
#define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES 0x8D68
#endif

#ifndef GL_EXT_x11_sync_object
#define GL_EXT_x11_sync_object 1
#endif

#ifdef glImportSyncEXT
#undef glImportSyncEXT
#endif
#ifdef PFNGLIMPORTSYNCEXTPROC
#undef PFNGLIMPORTSYNCEXTPROC
#endif
typedef GLsync  (*PFNGLIMPORTSYNCEXTPROC)(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);

#ifndef GL_SYNC_X11_FENCE_EXT
#define GL_SYNC_X11_FENCE_EXT 0x90E1
#endif

#ifndef GL_FJ_shader_binary_GCCSO
#define GL_FJ_shader_binary_GCCSO 1
#endif

#ifndef GL_GCCSO_SHADER_BINARY_FJ
#define GL_GCCSO_SHADER_BINARY_FJ 0x9260
#endif

#ifndef GL_GREMEDY_frame_terminator
#define GL_GREMEDY_frame_terminator 1
#endif

#ifdef glFrameTerminatorGREMEDY
#undef glFrameTerminatorGREMEDY
#endif
#ifdef PFNGLFRAMETERMINATORGREMEDYPROC
#undef PFNGLFRAMETERMINATORGREMEDYPROC
#endif
typedef void  (*PFNGLFRAMETERMINATORGREMEDYPROC)(void);

#ifndef GL_GREMEDY_string_marker
#define GL_GREMEDY_string_marker 1
#endif

#ifdef glStringMarkerGREMEDY
#undef glStringMarkerGREMEDY
#endif
#ifdef PFNGLSTRINGMARKERGREMEDYPROC
#undef PFNGLSTRINGMARKERGREMEDYPROC
#endif
typedef void  (*PFNGLSTRINGMARKERGREMEDYPROC)(GLsizei len, const void *string);

#ifndef GL_HP_convolution_border_modes
#define GL_HP_convolution_border_modes 1
#endif

#ifndef GL_IGNORE_BORDER_HP
#define GL_IGNORE_BORDER_HP 0x8150
#endif

#ifndef GL_CONSTANT_BORDER_HP
#define GL_CONSTANT_BORDER_HP 0x8151
#endif

#ifndef GL_REPLICATE_BORDER_HP
#define GL_REPLICATE_BORDER_HP 0x8153
#endif

#ifndef GL_CONVOLUTION_BORDER_COLOR_HP
#define GL_CONVOLUTION_BORDER_COLOR_HP 0x8154
#endif

#ifndef GL_HP_image_transform
#define GL_HP_image_transform 1
#endif

#ifdef glImageTransformParameteriHP
#undef glImageTransformParameteriHP
#endif
#ifdef PFNGLIMAGETRANSFORMPARAMETERIHPPROC
#undef PFNGLIMAGETRANSFORMPARAMETERIHPPROC
#endif
typedef void  (*PFNGLIMAGETRANSFORMPARAMETERIHPPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glImageTransformParameterfHP
#undef glImageTransformParameterfHP
#endif
#ifdef PFNGLIMAGETRANSFORMPARAMETERFHPPROC
#undef PFNGLIMAGETRANSFORMPARAMETERFHPPROC
#endif
typedef void  (*PFNGLIMAGETRANSFORMPARAMETERFHPPROC)(GLenum target, GLenum pname, GLfloat param);

#ifdef glImageTransformParameterivHP
#undef glImageTransformParameterivHP
#endif
#ifdef PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
#undef PFNGLIMAGETRANSFORMPARAMETERIVHPPROC
#endif
typedef void  (*PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glImageTransformParameterfvHP
#undef glImageTransformParameterfvHP
#endif
#ifdef PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
#undef PFNGLIMAGETRANSFORMPARAMETERFVHPPROC
#endif
typedef void  (*PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glGetImageTransformParameterivHP
#undef glGetImageTransformParameterivHP
#endif
#ifdef PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
#undef PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC
#endif
typedef void  (*PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetImageTransformParameterfvHP
#undef glGetImageTransformParameterfvHP
#endif
#ifdef PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
#undef PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC
#endif
typedef void  (*PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifndef GL_IMAGE_SCALE_X_HP
#define GL_IMAGE_SCALE_X_HP 0x8155
#endif

#ifndef GL_IMAGE_SCALE_Y_HP
#define GL_IMAGE_SCALE_Y_HP 0x8156
#endif

#ifndef GL_IMAGE_TRANSLATE_X_HP
#define GL_IMAGE_TRANSLATE_X_HP 0x8157
#endif

#ifndef GL_IMAGE_TRANSLATE_Y_HP
#define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#endif

#ifndef GL_IMAGE_ROTATE_ANGLE_HP
#define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#endif

#ifndef GL_IMAGE_ROTATE_ORIGIN_X_HP
#define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#endif

#ifndef GL_IMAGE_ROTATE_ORIGIN_Y_HP
#define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#endif

#ifndef GL_IMAGE_MAG_FILTER_HP
#define GL_IMAGE_MAG_FILTER_HP 0x815C
#endif

#ifndef GL_IMAGE_MIN_FILTER_HP
#define GL_IMAGE_MIN_FILTER_HP 0x815D
#endif

#ifndef GL_IMAGE_CUBIC_WEIGHT_HP
#define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#endif

#ifndef GL_CUBIC_HP
#define GL_CUBIC_HP 0x815F
#endif

#ifndef GL_AVERAGE_HP
#define GL_AVERAGE_HP 0x8160
#endif

#ifndef GL_IMAGE_TRANSFORM_2D_HP
#define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#endif

#ifndef GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#endif

#ifndef GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP
#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#endif

#ifndef GL_HP_occlusion_test
#define GL_HP_occlusion_test 1
#endif

#ifndef GL_OCCLUSION_TEST_HP
#define GL_OCCLUSION_TEST_HP 0x8165
#endif

#ifndef GL_OCCLUSION_TEST_RESULT_HP
#define GL_OCCLUSION_TEST_RESULT_HP 0x8166
#endif

#ifndef GL_HP_texture_lighting
#define GL_HP_texture_lighting 1
#endif

#ifndef GL_TEXTURE_LIGHTING_MODE_HP
#define GL_TEXTURE_LIGHTING_MODE_HP 0x8167
#endif

#ifndef GL_TEXTURE_POST_SPECULAR_HP
#define GL_TEXTURE_POST_SPECULAR_HP 0x8168
#endif

#ifndef GL_TEXTURE_PRE_SPECULAR_HP
#define GL_TEXTURE_PRE_SPECULAR_HP 0x8169
#endif

#ifndef GL_IBM_cull_vertex
#define GL_IBM_cull_vertex 1
#endif

#ifndef GL_CULL_VERTEX_IBM
#define GL_CULL_VERTEX_IBM 103050
#endif

#ifndef GL_IBM_multimode_draw_arrays
#define GL_IBM_multimode_draw_arrays 1
#endif

#ifdef glMultiModeDrawArraysIBM
#undef glMultiModeDrawArraysIBM
#endif
#ifdef PFNGLMULTIMODEDRAWARRAYSIBMPROC
#undef PFNGLMULTIMODEDRAWARRAYSIBMPROC
#endif
typedef void  (*PFNGLMULTIMODEDRAWARRAYSIBMPROC)(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);

#ifdef glMultiModeDrawElementsIBM
#undef glMultiModeDrawElementsIBM
#endif
#ifdef PFNGLMULTIMODEDRAWELEMENTSIBMPROC
#undef PFNGLMULTIMODEDRAWELEMENTSIBMPROC
#endif
typedef void  (*PFNGLMULTIMODEDRAWELEMENTSIBMPROC)(const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);

#ifndef GL_IBM_rasterpos_clip
#define GL_IBM_rasterpos_clip 1
#endif

#ifndef GL_RASTER_POSITION_UNCLIPPED_IBM
#define GL_RASTER_POSITION_UNCLIPPED_IBM 0x19262
#endif

#ifndef GL_IBM_static_data
#define GL_IBM_static_data 1
#endif

#ifdef glFlushStaticDataIBM
#undef glFlushStaticDataIBM
#endif
#ifdef PFNGLFLUSHSTATICDATAIBMPROC
#undef PFNGLFLUSHSTATICDATAIBMPROC
#endif
typedef void  (*PFNGLFLUSHSTATICDATAIBMPROC)(GLenum target);

#ifndef GL_ALL_STATIC_DATA_IBM
#define GL_ALL_STATIC_DATA_IBM 103060
#endif

#ifndef GL_STATIC_VERTEX_ARRAY_IBM
#define GL_STATIC_VERTEX_ARRAY_IBM 103061
#endif

#ifndef GL_IBM_texture_mirrored_repeat
#define GL_IBM_texture_mirrored_repeat 1
#endif

#ifndef GL_MIRRORED_REPEAT_IBM
#define GL_MIRRORED_REPEAT_IBM 0x8370
#endif

#ifndef GL_IBM_vertex_array_lists
#define GL_IBM_vertex_array_lists 1
#endif

#ifdef glColorPointerListIBM
#undef glColorPointerListIBM
#endif
#ifdef PFNGLCOLORPOINTERLISTIBMPROC
#undef PFNGLCOLORPOINTERLISTIBMPROC
#endif
typedef void  (*PFNGLCOLORPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);

#ifdef glSecondaryColorPointerListIBM
#undef glSecondaryColorPointerListIBM
#endif
#ifdef PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
#undef PFNGLSECONDARYCOLORPOINTERLISTIBMPROC
#endif
typedef void  (*PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);

#ifdef glEdgeFlagPointerListIBM
#undef glEdgeFlagPointerListIBM
#endif
#ifdef PFNGLEDGEFLAGPOINTERLISTIBMPROC
#undef PFNGLEDGEFLAGPOINTERLISTIBMPROC
#endif
typedef void  (*PFNGLEDGEFLAGPOINTERLISTIBMPROC)(GLint stride, const GLboolean **pointer, GLint ptrstride);

#ifdef glFogCoordPointerListIBM
#undef glFogCoordPointerListIBM
#endif
#ifdef PFNGLFOGCOORDPOINTERLISTIBMPROC
#undef PFNGLFOGCOORDPOINTERLISTIBMPROC
#endif
typedef void  (*PFNGLFOGCOORDPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);

#ifdef glIndexPointerListIBM
#undef glIndexPointerListIBM
#endif
#ifdef PFNGLINDEXPOINTERLISTIBMPROC
#undef PFNGLINDEXPOINTERLISTIBMPROC
#endif
typedef void  (*PFNGLINDEXPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);

#ifdef glNormalPointerListIBM
#undef glNormalPointerListIBM
#endif
#ifdef PFNGLNORMALPOINTERLISTIBMPROC
#undef PFNGLNORMALPOINTERLISTIBMPROC
#endif
typedef void  (*PFNGLNORMALPOINTERLISTIBMPROC)(GLenum type, GLint stride, const void **pointer, GLint ptrstride);

#ifdef glTexCoordPointerListIBM
#undef glTexCoordPointerListIBM
#endif
#ifdef PFNGLTEXCOORDPOINTERLISTIBMPROC
#undef PFNGLTEXCOORDPOINTERLISTIBMPROC
#endif
typedef void  (*PFNGLTEXCOORDPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);

#ifdef glVertexPointerListIBM
#undef glVertexPointerListIBM
#endif
#ifdef PFNGLVERTEXPOINTERLISTIBMPROC
#undef PFNGLVERTEXPOINTERLISTIBMPROC
#endif
typedef void  (*PFNGLVERTEXPOINTERLISTIBMPROC)(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);

#ifndef GL_VERTEX_ARRAY_LIST_IBM
#define GL_VERTEX_ARRAY_LIST_IBM 103070
#endif

#ifndef GL_NORMAL_ARRAY_LIST_IBM
#define GL_NORMAL_ARRAY_LIST_IBM 103071
#endif

#ifndef GL_COLOR_ARRAY_LIST_IBM
#define GL_COLOR_ARRAY_LIST_IBM 103072
#endif

#ifndef GL_INDEX_ARRAY_LIST_IBM
#define GL_INDEX_ARRAY_LIST_IBM 103073
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_LIST_IBM
#define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#endif

#ifndef GL_EDGE_FLAG_ARRAY_LIST_IBM
#define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_LIST_IBM
#define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_IBM
#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#endif

#ifndef GL_VERTEX_ARRAY_LIST_STRIDE_IBM
#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#endif

#ifndef GL_NORMAL_ARRAY_LIST_STRIDE_IBM
#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#endif

#ifndef GL_COLOR_ARRAY_LIST_STRIDE_IBM
#define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#endif

#ifndef GL_INDEX_ARRAY_LIST_STRIDE_IBM
#define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM
#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#endif

#ifndef GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM
#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#endif

#ifndef GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM
#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM
#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#endif

#ifndef GL_IMG_multisampled_render_to_texture
#define GL_IMG_multisampled_render_to_texture 1
#endif

#ifdef glRenderbufferStorageMultisampleIMG
#undef glRenderbufferStorageMultisampleIMG
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glFramebufferTexture2DMultisampleIMG
#undef glFramebufferTexture2DMultisampleIMG
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC
#undef PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);

#ifndef GL_RENDERBUFFER_SAMPLES_IMG
#define GL_RENDERBUFFER_SAMPLES_IMG 0x9133
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG 0x9134
#endif

#ifndef GL_MAX_SAMPLES_IMG
#define GL_MAX_SAMPLES_IMG 0x9135
#endif

#ifndef GL_TEXTURE_SAMPLES_IMG
#define GL_TEXTURE_SAMPLES_IMG 0x9136
#endif

#ifndef GL_IMG_program_binary
#define GL_IMG_program_binary 1
#endif

#ifndef GL_SGX_PROGRAM_BINARY_IMG
#define GL_SGX_PROGRAM_BINARY_IMG 0x9130
#endif

#ifndef GL_IMG_read_format
#define GL_IMG_read_format 1
#endif

#ifndef GL_BGRA_IMG
#define GL_BGRA_IMG 0x80E1
#endif

#ifndef GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG
#define GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG 0x8365
#endif

#ifndef GL_IMG_shader_binary
#define GL_IMG_shader_binary 1
#endif

#ifndef GL_SGX_BINARY_IMG
#define GL_SGX_BINARY_IMG 0x8C0A
#endif

#ifndef GL_IMG_texture_compression_pvrtc
#define GL_IMG_texture_compression_pvrtc 1
#endif

#ifndef GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG
#define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG 0x8C00
#endif

#ifndef GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG
#define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG 0x8C01
#endif

#ifndef GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG
#define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG 0x8C02
#endif

#ifndef GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
#define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG 0x8C03
#endif

#ifndef GL_IMG_texture_compression_pvrtc2
#define GL_IMG_texture_compression_pvrtc2 1
#endif

#ifndef GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG
#define GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG 0x9137
#endif

#ifndef GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG
#define GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG 0x9138
#endif

#ifndef GL_IMG_texture_env_enhanced_fixed_function
#define GL_IMG_texture_env_enhanced_fixed_function 1
#endif

#ifndef GL_MODULATE_COLOR_IMG
#define GL_MODULATE_COLOR_IMG 0x8C04
#endif

#ifndef GL_RECIP_ADD_SIGNED_ALPHA_IMG
#define GL_RECIP_ADD_SIGNED_ALPHA_IMG 0x8C05
#endif

#ifndef GL_TEXTURE_ALPHA_MODULATE_IMG
#define GL_TEXTURE_ALPHA_MODULATE_IMG 0x8C06
#endif

#ifndef GL_FACTOR_ALPHA_MODULATE_IMG
#define GL_FACTOR_ALPHA_MODULATE_IMG 0x8C07
#endif

#ifndef GL_FRAGMENT_ALPHA_MODULATE_IMG
#define GL_FRAGMENT_ALPHA_MODULATE_IMG 0x8C08
#endif

#ifndef GL_ADD_BLEND_IMG
#define GL_ADD_BLEND_IMG 0x8C09
#endif

#ifndef GL_DOT3_RGBA_IMG
#define GL_DOT3_RGBA_IMG 0x86AF
#endif

#ifndef GL_IMG_user_clip_plane
#define GL_IMG_user_clip_plane 1
#endif

#ifdef glClipPlanefIMG
#undef glClipPlanefIMG
#endif
#ifdef PFNGLCLIPPLANEFIMGPROC
#undef PFNGLCLIPPLANEFIMGPROC
#endif
typedef void  (*PFNGLCLIPPLANEFIMGPROC)(GLenum p, const GLfloat *eqn);

#ifdef glClipPlanexIMG
#undef glClipPlanexIMG
#endif
#ifdef PFNGLCLIPPLANEXIMGPROC
#undef PFNGLCLIPPLANEXIMGPROC
#endif
typedef void  (*PFNGLCLIPPLANEXIMGPROC)(GLenum p, const GLfixed *eqn);

#ifndef GL_CLIP_PLANE0_IMG
#define GL_CLIP_PLANE0_IMG 0x3000
#endif

#ifndef GL_CLIP_PLANE1_IMG
#define GL_CLIP_PLANE1_IMG 0x3001
#endif

#ifndef GL_CLIP_PLANE2_IMG
#define GL_CLIP_PLANE2_IMG 0x3002
#endif

#ifndef GL_CLIP_PLANE3_IMG
#define GL_CLIP_PLANE3_IMG 0x3003
#endif

#ifndef GL_CLIP_PLANE4_IMG
#define GL_CLIP_PLANE4_IMG 0x3004
#endif

#ifndef GL_CLIP_PLANE5_IMG
#define GL_CLIP_PLANE5_IMG 0x3005
#endif

#ifndef GL_MAX_CLIP_PLANES_IMG
#define GL_MAX_CLIP_PLANES_IMG 0x0D32
#endif

#ifndef GL_INGR_blend_func_separate
#define GL_INGR_blend_func_separate 1
#endif

#ifdef glBlendFuncSeparateINGR
#undef glBlendFuncSeparateINGR
#endif
#ifdef PFNGLBLENDFUNCSEPARATEINGRPROC
#undef PFNGLBLENDFUNCSEPARATEINGRPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEINGRPROC)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);

#ifndef GL_INGR_color_clamp
#define GL_INGR_color_clamp 1
#endif

#ifndef GL_RED_MIN_CLAMP_INGR
#define GL_RED_MIN_CLAMP_INGR 0x8560
#endif

#ifndef GL_GREEN_MIN_CLAMP_INGR
#define GL_GREEN_MIN_CLAMP_INGR 0x8561
#endif

#ifndef GL_BLUE_MIN_CLAMP_INGR
#define GL_BLUE_MIN_CLAMP_INGR 0x8562
#endif

#ifndef GL_ALPHA_MIN_CLAMP_INGR
#define GL_ALPHA_MIN_CLAMP_INGR 0x8563
#endif

#ifndef GL_RED_MAX_CLAMP_INGR
#define GL_RED_MAX_CLAMP_INGR 0x8564
#endif

#ifndef GL_GREEN_MAX_CLAMP_INGR
#define GL_GREEN_MAX_CLAMP_INGR 0x8565
#endif

#ifndef GL_BLUE_MAX_CLAMP_INGR
#define GL_BLUE_MAX_CLAMP_INGR 0x8566
#endif

#ifndef GL_ALPHA_MAX_CLAMP_INGR
#define GL_ALPHA_MAX_CLAMP_INGR 0x8567
#endif

#ifndef GL_INGR_interlace_read
#define GL_INGR_interlace_read 1
#endif

#ifndef GL_INTERLACE_READ_INGR
#define GL_INTERLACE_READ_INGR 0x8568
#endif

#ifndef GL_INTEL_fragment_shader_ordering
#define GL_INTEL_fragment_shader_ordering 1
#endif

#ifndef GL_INTEL_map_texture
#define GL_INTEL_map_texture 1
#endif

#ifdef glSyncTextureINTEL
#undef glSyncTextureINTEL
#endif
#ifdef PFNGLSYNCTEXTUREINTELPROC
#undef PFNGLSYNCTEXTUREINTELPROC
#endif
typedef void  (*PFNGLSYNCTEXTUREINTELPROC)(GLuint texture);

#ifdef glUnmapTexture2DINTEL
#undef glUnmapTexture2DINTEL
#endif
#ifdef PFNGLUNMAPTEXTURE2DINTELPROC
#undef PFNGLUNMAPTEXTURE2DINTELPROC
#endif
typedef void  (*PFNGLUNMAPTEXTURE2DINTELPROC)(GLuint texture, GLint level);

#ifdef glMapTexture2DINTEL
#undef glMapTexture2DINTEL
#endif
#ifdef PFNGLMAPTEXTURE2DINTELPROC
#undef PFNGLMAPTEXTURE2DINTELPROC
#endif
typedef void * (*PFNGLMAPTEXTURE2DINTELPROC)(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);

#ifndef GL_TEXTURE_MEMORY_LAYOUT_INTEL
#define GL_TEXTURE_MEMORY_LAYOUT_INTEL 0x83FF
#endif

#ifndef GL_LAYOUT_DEFAULT_INTEL
#define GL_LAYOUT_DEFAULT_INTEL 0
#endif

#ifndef GL_LAYOUT_LINEAR_INTEL
#define GL_LAYOUT_LINEAR_INTEL 1
#endif

#ifndef GL_LAYOUT_LINEAR_CPU_CACHED_INTEL
#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL 2
#endif

#ifndef GL_INTEL_parallel_arrays
#define GL_INTEL_parallel_arrays 1
#endif

#ifdef glVertexPointervINTEL
#undef glVertexPointervINTEL
#endif
#ifdef PFNGLVERTEXPOINTERVINTELPROC
#undef PFNGLVERTEXPOINTERVINTELPROC
#endif
typedef void  (*PFNGLVERTEXPOINTERVINTELPROC)(GLint size, GLenum type, const void **pointer);

#ifdef glNormalPointervINTEL
#undef glNormalPointervINTEL
#endif
#ifdef PFNGLNORMALPOINTERVINTELPROC
#undef PFNGLNORMALPOINTERVINTELPROC
#endif
typedef void  (*PFNGLNORMALPOINTERVINTELPROC)(GLenum type, const void **pointer);

#ifdef glColorPointervINTEL
#undef glColorPointervINTEL
#endif
#ifdef PFNGLCOLORPOINTERVINTELPROC
#undef PFNGLCOLORPOINTERVINTELPROC
#endif
typedef void  (*PFNGLCOLORPOINTERVINTELPROC)(GLint size, GLenum type, const void **pointer);

#ifdef glTexCoordPointervINTEL
#undef glTexCoordPointervINTEL
#endif
#ifdef PFNGLTEXCOORDPOINTERVINTELPROC
#undef PFNGLTEXCOORDPOINTERVINTELPROC
#endif
typedef void  (*PFNGLTEXCOORDPOINTERVINTELPROC)(GLint size, GLenum type, const void **pointer);

#ifndef GL_PARALLEL_ARRAYS_INTEL
#define GL_PARALLEL_ARRAYS_INTEL 0x83F4
#endif

#ifndef GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
#endif

#ifndef GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
#endif

#ifndef GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
#endif

#ifndef GL_INTEL_performance_query
#define GL_INTEL_performance_query 1
#endif

#ifdef glBeginPerfQueryINTEL
#undef glBeginPerfQueryINTEL
#endif
#ifdef PFNGLBEGINPERFQUERYINTELPROC
#undef PFNGLBEGINPERFQUERYINTELPROC
#endif
typedef void  (*PFNGLBEGINPERFQUERYINTELPROC)(GLuint queryHandle);

#ifdef glCreatePerfQueryINTEL
#undef glCreatePerfQueryINTEL
#endif
#ifdef PFNGLCREATEPERFQUERYINTELPROC
#undef PFNGLCREATEPERFQUERYINTELPROC
#endif
typedef void  (*PFNGLCREATEPERFQUERYINTELPROC)(GLuint queryId, GLuint *queryHandle);

#ifdef glDeletePerfQueryINTEL
#undef glDeletePerfQueryINTEL
#endif
#ifdef PFNGLDELETEPERFQUERYINTELPROC
#undef PFNGLDELETEPERFQUERYINTELPROC
#endif
typedef void  (*PFNGLDELETEPERFQUERYINTELPROC)(GLuint queryHandle);

#ifdef glEndPerfQueryINTEL
#undef glEndPerfQueryINTEL
#endif
#ifdef PFNGLENDPERFQUERYINTELPROC
#undef PFNGLENDPERFQUERYINTELPROC
#endif
typedef void  (*PFNGLENDPERFQUERYINTELPROC)(GLuint queryHandle);

#ifdef glGetFirstPerfQueryIdINTEL
#undef glGetFirstPerfQueryIdINTEL
#endif
#ifdef PFNGLGETFIRSTPERFQUERYIDINTELPROC
#undef PFNGLGETFIRSTPERFQUERYIDINTELPROC
#endif
typedef void  (*PFNGLGETFIRSTPERFQUERYIDINTELPROC)(GLuint *queryId);

#ifdef glGetNextPerfQueryIdINTEL
#undef glGetNextPerfQueryIdINTEL
#endif
#ifdef PFNGLGETNEXTPERFQUERYIDINTELPROC
#undef PFNGLGETNEXTPERFQUERYIDINTELPROC
#endif
typedef void  (*PFNGLGETNEXTPERFQUERYIDINTELPROC)(GLuint queryId, GLuint *nextQueryId);

#ifdef glGetPerfCounterInfoINTEL
#undef glGetPerfCounterInfoINTEL
#endif
#ifdef PFNGLGETPERFCOUNTERINFOINTELPROC
#undef PFNGLGETPERFCOUNTERINFOINTELPROC
#endif
typedef void  (*PFNGLGETPERFCOUNTERINFOINTELPROC)(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);

#ifdef glGetPerfQueryDataINTEL
#undef glGetPerfQueryDataINTEL
#endif
#ifdef PFNGLGETPERFQUERYDATAINTELPROC
#undef PFNGLGETPERFQUERYDATAINTELPROC
#endif
typedef void  (*PFNGLGETPERFQUERYDATAINTELPROC)(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);

#ifdef glGetPerfQueryIdByNameINTEL
#undef glGetPerfQueryIdByNameINTEL
#endif
#ifdef PFNGLGETPERFQUERYIDBYNAMEINTELPROC
#undef PFNGLGETPERFQUERYIDBYNAMEINTELPROC
#endif
typedef void  (*PFNGLGETPERFQUERYIDBYNAMEINTELPROC)(GLchar *queryName, GLuint *queryId);

#ifdef glGetPerfQueryInfoINTEL
#undef glGetPerfQueryInfoINTEL
#endif
#ifdef PFNGLGETPERFQUERYINFOINTELPROC
#undef PFNGLGETPERFQUERYINFOINTELPROC
#endif
typedef void  (*PFNGLGETPERFQUERYINFOINTELPROC)(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);

#ifndef GL_PERFQUERY_SINGLE_CONTEXT_INTEL
#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL 0x00000000
#endif

#ifndef GL_PERFQUERY_GLOBAL_CONTEXT_INTEL
#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL 0x00000001
#endif

#ifndef GL_PERFQUERY_WAIT_INTEL
#define GL_PERFQUERY_WAIT_INTEL 0x83FB
#endif

#ifndef GL_PERFQUERY_FLUSH_INTEL
#define GL_PERFQUERY_FLUSH_INTEL 0x83FA
#endif

#ifndef GL_PERFQUERY_DONOT_FLUSH_INTEL
#define GL_PERFQUERY_DONOT_FLUSH_INTEL 0x83F9
#endif

#ifndef GL_PERFQUERY_COUNTER_EVENT_INTEL
#define GL_PERFQUERY_COUNTER_EVENT_INTEL 0x94F0
#endif

#ifndef GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL
#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL 0x94F1
#endif

#ifndef GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL
#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL 0x94F2
#endif

#ifndef GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL
#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL 0x94F3
#endif

#ifndef GL_PERFQUERY_COUNTER_RAW_INTEL
#define GL_PERFQUERY_COUNTER_RAW_INTEL 0x94F4
#endif

#ifndef GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL
#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL 0x94F5
#endif

#ifndef GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL
#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL 0x94F8
#endif

#ifndef GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL
#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL 0x94F9
#endif

#ifndef GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL
#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL 0x94FA
#endif

#ifndef GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL
#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL 0x94FB
#endif

#ifndef GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL
#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL 0x94FC
#endif

#ifndef GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL
#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL 0x94FD
#endif

#ifndef GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL
#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL 0x94FE
#endif

#ifndef GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL
#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL 0x94FF
#endif

#ifndef GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL
#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL 0x9500
#endif

#ifndef GL_KHR_blend_equation_advanced
#define GL_KHR_blend_equation_advanced 1
#endif

#ifdef glBlendBarrierKHR
#undef glBlendBarrierKHR
#endif
#ifdef PFNGLBLENDBARRIERKHRPROC
#undef PFNGLBLENDBARRIERKHRPROC
#endif
typedef void  (*PFNGLBLENDBARRIERKHRPROC)(void);

#ifndef GL_MULTIPLY_KHR
#define GL_MULTIPLY_KHR 0x9294
#endif

#ifndef GL_SCREEN_KHR
#define GL_SCREEN_KHR 0x9295
#endif

#ifndef GL_OVERLAY_KHR
#define GL_OVERLAY_KHR 0x9296
#endif

#ifndef GL_DARKEN_KHR
#define GL_DARKEN_KHR 0x9297
#endif

#ifndef GL_LIGHTEN_KHR
#define GL_LIGHTEN_KHR 0x9298
#endif

#ifndef GL_COLORDODGE_KHR
#define GL_COLORDODGE_KHR 0x9299
#endif

#ifndef GL_COLORBURN_KHR
#define GL_COLORBURN_KHR 0x929A
#endif

#ifndef GL_HARDLIGHT_KHR
#define GL_HARDLIGHT_KHR 0x929B
#endif

#ifndef GL_SOFTLIGHT_KHR
#define GL_SOFTLIGHT_KHR 0x929C
#endif

#ifndef GL_DIFFERENCE_KHR
#define GL_DIFFERENCE_KHR 0x929E
#endif

#ifndef GL_EXCLUSION_KHR
#define GL_EXCLUSION_KHR 0x92A0
#endif

#ifndef GL_HSL_HUE_KHR
#define GL_HSL_HUE_KHR 0x92AD
#endif

#ifndef GL_HSL_SATURATION_KHR
#define GL_HSL_SATURATION_KHR 0x92AE
#endif

#ifndef GL_HSL_COLOR_KHR
#define GL_HSL_COLOR_KHR 0x92AF
#endif

#ifndef GL_HSL_LUMINOSITY_KHR
#define GL_HSL_LUMINOSITY_KHR 0x92B0
#endif

#ifndef GL_KHR_blend_equation_advanced_coherent
#define GL_KHR_blend_equation_advanced_coherent 1
#endif

#ifndef GL_BLEND_ADVANCED_COHERENT_KHR
#define GL_BLEND_ADVANCED_COHERENT_KHR 0x9285
#endif

#ifndef GL_KHR_context_flush_control
#define GL_KHR_context_flush_control 1
#endif

#ifndef GL_CONTEXT_RELEASE_BEHAVIOR
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#endif

#ifndef GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#endif

#ifndef GL_NONE
#define GL_NONE 0
#endif

#ifndef GL_CONTEXT_RELEASE_BEHAVIOR_KHR
#define GL_CONTEXT_RELEASE_BEHAVIOR_KHR 0x82FB
#endif

#ifndef GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR 0x82FC
#endif

#ifndef GL_NONE
#define GL_NONE 0
#endif

#ifndef GL_KHR_debug
#define GL_KHR_debug 1
#endif

#ifdef glDebugMessageControl
#undef glDebugMessageControl
#endif
#ifdef PFNGLDEBUGMESSAGECONTROLPROC
#undef PFNGLDEBUGMESSAGECONTROLPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);

#ifdef glDebugMessageInsert
#undef glDebugMessageInsert
#endif
#ifdef PFNGLDEBUGMESSAGEINSERTPROC
#undef PFNGLDEBUGMESSAGEINSERTPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);

#ifdef glDebugMessageCallback
#undef glDebugMessageCallback
#endif
#ifdef PFNGLDEBUGMESSAGECALLBACKPROC
#undef PFNGLDEBUGMESSAGECALLBACKPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback, const void *userParam);

#ifdef glGetDebugMessageLog
#undef glGetDebugMessageLog
#endif
#ifdef PFNGLGETDEBUGMESSAGELOGPROC
#undef PFNGLGETDEBUGMESSAGELOGPROC
#endif
typedef GLuint  (*PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);

#ifdef glPushDebugGroup
#undef glPushDebugGroup
#endif
#ifdef PFNGLPUSHDEBUGGROUPPROC
#undef PFNGLPUSHDEBUGGROUPPROC
#endif
typedef void  (*PFNGLPUSHDEBUGGROUPPROC)(GLenum source, GLuint id, GLsizei length, const GLchar *message);

#ifdef glPopDebugGroup
#undef glPopDebugGroup
#endif
#ifdef PFNGLPOPDEBUGGROUPPROC
#undef PFNGLPOPDEBUGGROUPPROC
#endif
typedef void  (*PFNGLPOPDEBUGGROUPPROC)(void);

#ifdef glObjectLabel
#undef glObjectLabel
#endif
#ifdef PFNGLOBJECTLABELPROC
#undef PFNGLOBJECTLABELPROC
#endif
typedef void  (*PFNGLOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);

#ifdef glGetObjectLabel
#undef glGetObjectLabel
#endif
#ifdef PFNGLGETOBJECTLABELPROC
#undef PFNGLGETOBJECTLABELPROC
#endif
typedef void  (*PFNGLGETOBJECTLABELPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);

#ifdef glObjectPtrLabel
#undef glObjectPtrLabel
#endif
#ifdef PFNGLOBJECTPTRLABELPROC
#undef PFNGLOBJECTPTRLABELPROC
#endif
typedef void  (*PFNGLOBJECTPTRLABELPROC)(const void *ptr, GLsizei length, const GLchar *label);

#ifdef glGetObjectPtrLabel
#undef glGetObjectPtrLabel
#endif
#ifdef PFNGLGETOBJECTPTRLABELPROC
#undef PFNGLGETOBJECTPTRLABELPROC
#endif
typedef void  (*PFNGLGETOBJECTPTRLABELPROC)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);

#ifdef glGetPointerv
#undef glGetPointerv
#endif
#ifdef PFNGLGETPOINTERVPROC
#undef PFNGLGETPOINTERVPROC
#endif
typedef void  (*PFNGLGETPOINTERVPROC)(GLenum pname, void **params);

#ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#endif

#ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#endif

#ifndef GL_DEBUG_CALLBACK_FUNCTION
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#endif

#ifndef GL_DEBUG_CALLBACK_USER_PARAM
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#endif

#ifndef GL_DEBUG_SOURCE_API
#define GL_DEBUG_SOURCE_API 0x8246
#endif

#ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#endif

#ifndef GL_DEBUG_SOURCE_SHADER_COMPILER
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#endif

#ifndef GL_DEBUG_SOURCE_THIRD_PARTY
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#endif

#ifndef GL_DEBUG_SOURCE_APPLICATION
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#endif

#ifndef GL_DEBUG_SOURCE_OTHER
#define GL_DEBUG_SOURCE_OTHER 0x824B
#endif

#ifndef GL_DEBUG_TYPE_ERROR
#define GL_DEBUG_TYPE_ERROR 0x824C
#endif

#ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#endif

#ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#endif

#ifndef GL_DEBUG_TYPE_PORTABILITY
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#endif

#ifndef GL_DEBUG_TYPE_PERFORMANCE
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#endif

#ifndef GL_DEBUG_TYPE_OTHER
#define GL_DEBUG_TYPE_OTHER 0x8251
#endif

#ifndef GL_DEBUG_TYPE_MARKER
#define GL_DEBUG_TYPE_MARKER 0x8268
#endif

#ifndef GL_DEBUG_TYPE_PUSH_GROUP
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#endif

#ifndef GL_DEBUG_TYPE_POP_GROUP
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#endif

#ifndef GL_DEBUG_SEVERITY_NOTIFICATION
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#endif

#ifndef GL_MAX_DEBUG_GROUP_STACK_DEPTH
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#endif

#ifndef GL_DEBUG_GROUP_STACK_DEPTH
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#endif

#ifndef GL_BUFFER
#define GL_BUFFER 0x82E0
#endif

#ifndef GL_SHADER
#define GL_SHADER 0x82E1
#endif

#ifndef GL_PROGRAM
#define GL_PROGRAM 0x82E2
#endif

#ifndef GL_VERTEX_ARRAY
#define GL_VERTEX_ARRAY 0x8074
#endif

#ifndef GL_QUERY
#define GL_QUERY 0x82E3
#endif

#ifndef GL_PROGRAM_PIPELINE
#define GL_PROGRAM_PIPELINE 0x82E4
#endif

#ifndef GL_SAMPLER
#define GL_SAMPLER 0x82E6
#endif

#ifndef GL_MAX_LABEL_LENGTH
#define GL_MAX_LABEL_LENGTH 0x82E8
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW
#define GL_DEBUG_SEVERITY_LOW 0x9148
#endif

#ifndef GL_DEBUG_OUTPUT
#define GL_DEBUG_OUTPUT 0x92E0
#endif

#ifndef GL_CONTEXT_FLAG_DEBUG_BIT
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#endif

#ifndef GL_STACK_OVERFLOW
#define GL_STACK_OVERFLOW 0x0503
#endif

#ifndef GL_STACK_UNDERFLOW
#define GL_STACK_UNDERFLOW 0x0504
#endif

#ifdef glDebugMessageControlKHR
#undef glDebugMessageControlKHR
#endif
#ifdef PFNGLDEBUGMESSAGECONTROLKHRPROC
#undef PFNGLDEBUGMESSAGECONTROLKHRPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECONTROLKHRPROC)(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);

#ifdef glDebugMessageInsertKHR
#undef glDebugMessageInsertKHR
#endif
#ifdef PFNGLDEBUGMESSAGEINSERTKHRPROC
#undef PFNGLDEBUGMESSAGEINSERTKHRPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGEINSERTKHRPROC)(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);

#ifdef glDebugMessageCallbackKHR
#undef glDebugMessageCallbackKHR
#endif
#ifdef PFNGLDEBUGMESSAGECALLBACKKHRPROC
#undef PFNGLDEBUGMESSAGECALLBACKKHRPROC
#endif
typedef void  (*PFNGLDEBUGMESSAGECALLBACKKHRPROC)(GLDEBUGPROCKHR callback, const void *userParam);

#ifdef glGetDebugMessageLogKHR
#undef glGetDebugMessageLogKHR
#endif
#ifdef PFNGLGETDEBUGMESSAGELOGKHRPROC
#undef PFNGLGETDEBUGMESSAGELOGKHRPROC
#endif
typedef GLuint  (*PFNGLGETDEBUGMESSAGELOGKHRPROC)(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);

#ifdef glPushDebugGroupKHR
#undef glPushDebugGroupKHR
#endif
#ifdef PFNGLPUSHDEBUGGROUPKHRPROC
#undef PFNGLPUSHDEBUGGROUPKHRPROC
#endif
typedef void  (*PFNGLPUSHDEBUGGROUPKHRPROC)(GLenum source, GLuint id, GLsizei length, const GLchar *message);

#ifdef glPopDebugGroupKHR
#undef glPopDebugGroupKHR
#endif
#ifdef PFNGLPOPDEBUGGROUPKHRPROC
#undef PFNGLPOPDEBUGGROUPKHRPROC
#endif
typedef void  (*PFNGLPOPDEBUGGROUPKHRPROC)(void);

#ifdef glObjectLabelKHR
#undef glObjectLabelKHR
#endif
#ifdef PFNGLOBJECTLABELKHRPROC
#undef PFNGLOBJECTLABELKHRPROC
#endif
typedef void  (*PFNGLOBJECTLABELKHRPROC)(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);

#ifdef glGetObjectLabelKHR
#undef glGetObjectLabelKHR
#endif
#ifdef PFNGLGETOBJECTLABELKHRPROC
#undef PFNGLGETOBJECTLABELKHRPROC
#endif
typedef void  (*PFNGLGETOBJECTLABELKHRPROC)(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);

#ifdef glObjectPtrLabelKHR
#undef glObjectPtrLabelKHR
#endif
#ifdef PFNGLOBJECTPTRLABELKHRPROC
#undef PFNGLOBJECTPTRLABELKHRPROC
#endif
typedef void  (*PFNGLOBJECTPTRLABELKHRPROC)(const void *ptr, GLsizei length, const GLchar *label);

#ifdef glGetObjectPtrLabelKHR
#undef glGetObjectPtrLabelKHR
#endif
#ifdef PFNGLGETOBJECTPTRLABELKHRPROC
#undef PFNGLGETOBJECTPTRLABELKHRPROC
#endif
typedef void  (*PFNGLGETOBJECTPTRLABELKHRPROC)(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);

#ifdef glGetPointervKHR
#undef glGetPointervKHR
#endif
#ifdef PFNGLGETPOINTERVKHRPROC
#undef PFNGLGETPOINTERVKHRPROC
#endif
typedef void  (*PFNGLGETPOINTERVKHRPROC)(GLenum pname, void **params);

#ifndef GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR 0x8242
#endif

#ifndef GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR 0x8243
#endif

#ifndef GL_DEBUG_CALLBACK_FUNCTION_KHR
#define GL_DEBUG_CALLBACK_FUNCTION_KHR 0x8244
#endif

#ifndef GL_DEBUG_CALLBACK_USER_PARAM_KHR
#define GL_DEBUG_CALLBACK_USER_PARAM_KHR 0x8245
#endif

#ifndef GL_DEBUG_SOURCE_API_KHR
#define GL_DEBUG_SOURCE_API_KHR 0x8246
#endif

#ifndef GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR 0x8247
#endif

#ifndef GL_DEBUG_SOURCE_SHADER_COMPILER_KHR
#define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR 0x8248
#endif

#ifndef GL_DEBUG_SOURCE_THIRD_PARTY_KHR
#define GL_DEBUG_SOURCE_THIRD_PARTY_KHR 0x8249
#endif

#ifndef GL_DEBUG_SOURCE_APPLICATION_KHR
#define GL_DEBUG_SOURCE_APPLICATION_KHR 0x824A
#endif

#ifndef GL_DEBUG_SOURCE_OTHER_KHR
#define GL_DEBUG_SOURCE_OTHER_KHR 0x824B
#endif

#ifndef GL_DEBUG_TYPE_ERROR_KHR
#define GL_DEBUG_TYPE_ERROR_KHR 0x824C
#endif

#ifndef GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR 0x824D
#endif

#ifndef GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR 0x824E
#endif

#ifndef GL_DEBUG_TYPE_PORTABILITY_KHR
#define GL_DEBUG_TYPE_PORTABILITY_KHR 0x824F
#endif

#ifndef GL_DEBUG_TYPE_PERFORMANCE_KHR
#define GL_DEBUG_TYPE_PERFORMANCE_KHR 0x8250
#endif

#ifndef GL_DEBUG_TYPE_OTHER_KHR
#define GL_DEBUG_TYPE_OTHER_KHR 0x8251
#endif

#ifndef GL_DEBUG_TYPE_MARKER_KHR
#define GL_DEBUG_TYPE_MARKER_KHR 0x8268
#endif

#ifndef GL_DEBUG_TYPE_PUSH_GROUP_KHR
#define GL_DEBUG_TYPE_PUSH_GROUP_KHR 0x8269
#endif

#ifndef GL_DEBUG_TYPE_POP_GROUP_KHR
#define GL_DEBUG_TYPE_POP_GROUP_KHR 0x826A
#endif

#ifndef GL_DEBUG_SEVERITY_NOTIFICATION_KHR
#define GL_DEBUG_SEVERITY_NOTIFICATION_KHR 0x826B
#endif

#ifndef GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR 0x826C
#endif

#ifndef GL_DEBUG_GROUP_STACK_DEPTH_KHR
#define GL_DEBUG_GROUP_STACK_DEPTH_KHR 0x826D
#endif

#ifndef GL_BUFFER_KHR
#define GL_BUFFER_KHR 0x82E0
#endif

#ifndef GL_SHADER_KHR
#define GL_SHADER_KHR 0x82E1
#endif

#ifndef GL_PROGRAM_KHR
#define GL_PROGRAM_KHR 0x82E2
#endif

#ifndef GL_VERTEX_ARRAY_KHR
#define GL_VERTEX_ARRAY_KHR 0x8074
#endif

#ifndef GL_QUERY_KHR
#define GL_QUERY_KHR 0x82E3
#endif

#ifndef GL_PROGRAM_PIPELINE_KHR
#define GL_PROGRAM_PIPELINE_KHR 0x82E4
#endif

#ifndef GL_SAMPLER_KHR
#define GL_SAMPLER_KHR 0x82E6
#endif

#ifndef GL_MAX_LABEL_LENGTH_KHR
#define GL_MAX_LABEL_LENGTH_KHR 0x82E8
#endif

#ifndef GL_MAX_DEBUG_MESSAGE_LENGTH_KHR
#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR 0x9143
#endif

#ifndef GL_MAX_DEBUG_LOGGED_MESSAGES_KHR
#define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR 0x9144
#endif

#ifndef GL_DEBUG_LOGGED_MESSAGES_KHR
#define GL_DEBUG_LOGGED_MESSAGES_KHR 0x9145
#endif

#ifndef GL_DEBUG_SEVERITY_HIGH_KHR
#define GL_DEBUG_SEVERITY_HIGH_KHR 0x9146
#endif

#ifndef GL_DEBUG_SEVERITY_MEDIUM_KHR
#define GL_DEBUG_SEVERITY_MEDIUM_KHR 0x9147
#endif

#ifndef GL_DEBUG_SEVERITY_LOW_KHR
#define GL_DEBUG_SEVERITY_LOW_KHR 0x9148
#endif

#ifndef GL_DEBUG_OUTPUT_KHR
#define GL_DEBUG_OUTPUT_KHR 0x92E0
#endif

#ifndef GL_CONTEXT_FLAG_DEBUG_BIT_KHR
#define GL_CONTEXT_FLAG_DEBUG_BIT_KHR 0x00000002
#endif

#ifndef GL_STACK_OVERFLOW_KHR
#define GL_STACK_OVERFLOW_KHR 0x0503
#endif

#ifndef GL_STACK_UNDERFLOW_KHR
#define GL_STACK_UNDERFLOW_KHR 0x0504
#endif

#ifndef GL_DISPLAY_LIST
#define GL_DISPLAY_LIST 0x82E7
#endif

#ifndef GL_KHR_no_error
#define GL_KHR_no_error 1
#endif

#ifndef GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR
#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR 0x00000008
#endif

#ifndef GL_KHR_robust_buffer_access_behavior
#define GL_KHR_robust_buffer_access_behavior 1
#endif

#ifndef GL_KHR_robustness
#define GL_KHR_robustness 1
#endif

#ifdef glGetGraphicsResetStatus
#undef glGetGraphicsResetStatus
#endif
#ifdef PFNGLGETGRAPHICSRESETSTATUSPROC
#undef PFNGLGETGRAPHICSRESETSTATUSPROC
#endif
typedef GLenum  (*PFNGLGETGRAPHICSRESETSTATUSPROC)(void);

#ifdef glReadnPixels
#undef glReadnPixels
#endif
#ifdef PFNGLREADNPIXELSPROC
#undef PFNGLREADNPIXELSPROC
#endif
typedef void  (*PFNGLREADNPIXELSPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);

#ifdef glGetnUniformfv
#undef glGetnUniformfv
#endif
#ifdef PFNGLGETNUNIFORMFVPROC
#undef PFNGLGETNUNIFORMFVPROC
#endif
typedef void  (*PFNGLGETNUNIFORMFVPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);

#ifdef glGetnUniformiv
#undef glGetnUniformiv
#endif
#ifdef PFNGLGETNUNIFORMIVPROC
#undef PFNGLGETNUNIFORMIVPROC
#endif
typedef void  (*PFNGLGETNUNIFORMIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLint *params);

#ifdef glGetnUniformuiv
#undef glGetnUniformuiv
#endif
#ifdef PFNGLGETNUNIFORMUIVPROC
#undef PFNGLGETNUNIFORMUIVPROC
#endif
typedef void  (*PFNGLGETNUNIFORMUIVPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_CONTEXT_ROBUST_ACCESS
#define GL_CONTEXT_ROBUST_ACCESS 0x90F3
#endif

#ifndef GL_LOSE_CONTEXT_ON_RESET
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#endif

#ifndef GL_GUILTY_CONTEXT_RESET
#define GL_GUILTY_CONTEXT_RESET 0x8253
#endif

#ifndef GL_INNOCENT_CONTEXT_RESET
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#endif

#ifndef GL_UNKNOWN_CONTEXT_RESET
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#endif

#ifndef GL_RESET_NOTIFICATION_STRATEGY
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#endif

#ifndef GL_NO_RESET_NOTIFICATION
#define GL_NO_RESET_NOTIFICATION 0x8261
#endif

#ifndef GL_CONTEXT_LOST
#define GL_CONTEXT_LOST 0x0507
#endif

#ifdef glGetGraphicsResetStatusKHR
#undef glGetGraphicsResetStatusKHR
#endif
#ifdef PFNGLGETGRAPHICSRESETSTATUSKHRPROC
#undef PFNGLGETGRAPHICSRESETSTATUSKHRPROC
#endif
typedef GLenum  (*PFNGLGETGRAPHICSRESETSTATUSKHRPROC)(void);

#ifdef glReadnPixelsKHR
#undef glReadnPixelsKHR
#endif
#ifdef PFNGLREADNPIXELSKHRPROC
#undef PFNGLREADNPIXELSKHRPROC
#endif
typedef void  (*PFNGLREADNPIXELSKHRPROC)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);

#ifdef glGetnUniformfvKHR
#undef glGetnUniformfvKHR
#endif
#ifdef PFNGLGETNUNIFORMFVKHRPROC
#undef PFNGLGETNUNIFORMFVKHRPROC
#endif
typedef void  (*PFNGLGETNUNIFORMFVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);

#ifdef glGetnUniformivKHR
#undef glGetnUniformivKHR
#endif
#ifdef PFNGLGETNUNIFORMIVKHRPROC
#undef PFNGLGETNUNIFORMIVKHRPROC
#endif
typedef void  (*PFNGLGETNUNIFORMIVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLint *params);

#ifdef glGetnUniformuivKHR
#undef glGetnUniformuivKHR
#endif
#ifdef PFNGLGETNUNIFORMUIVKHRPROC
#undef PFNGLGETNUNIFORMUIVKHRPROC
#endif
typedef void  (*PFNGLGETNUNIFORMUIVKHRPROC)(GLuint program, GLint location, GLsizei bufSize, GLuint *params);

#ifndef GL_NO_ERROR
#define GL_NO_ERROR 0
#endif

#ifndef GL_CONTEXT_ROBUST_ACCESS_KHR
#define GL_CONTEXT_ROBUST_ACCESS_KHR 0x90F3
#endif

#ifndef GL_LOSE_CONTEXT_ON_RESET_KHR
#define GL_LOSE_CONTEXT_ON_RESET_KHR 0x8252
#endif

#ifndef GL_GUILTY_CONTEXT_RESET_KHR
#define GL_GUILTY_CONTEXT_RESET_KHR 0x8253
#endif

#ifndef GL_INNOCENT_CONTEXT_RESET_KHR
#define GL_INNOCENT_CONTEXT_RESET_KHR 0x8254
#endif

#ifndef GL_UNKNOWN_CONTEXT_RESET_KHR
#define GL_UNKNOWN_CONTEXT_RESET_KHR 0x8255
#endif

#ifndef GL_RESET_NOTIFICATION_STRATEGY_KHR
#define GL_RESET_NOTIFICATION_STRATEGY_KHR 0x8256
#endif

#ifndef GL_NO_RESET_NOTIFICATION_KHR
#define GL_NO_RESET_NOTIFICATION_KHR 0x8261
#endif

#ifndef GL_CONTEXT_LOST_KHR
#define GL_CONTEXT_LOST_KHR 0x0507
#endif

#ifndef GL_KHR_texture_compression_astc_hdr
#define GL_KHR_texture_compression_astc_hdr 1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_4x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x12_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#endif

#ifndef GL_KHR_texture_compression_astc_ldr
#define GL_KHR_texture_compression_astc_ldr 1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_4x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x12_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#endif

#ifndef GL_MESAX_texture_stack
#define GL_MESAX_texture_stack 1
#endif

#ifndef GL_TEXTURE_1D_STACK_MESAX
#define GL_TEXTURE_1D_STACK_MESAX 0x8759
#endif

#ifndef GL_TEXTURE_2D_STACK_MESAX
#define GL_TEXTURE_2D_STACK_MESAX 0x875A
#endif

#ifndef GL_PROXY_TEXTURE_1D_STACK_MESAX
#define GL_PROXY_TEXTURE_1D_STACK_MESAX 0x875B
#endif

#ifndef GL_PROXY_TEXTURE_2D_STACK_MESAX
#define GL_PROXY_TEXTURE_2D_STACK_MESAX 0x875C
#endif

#ifndef GL_TEXTURE_1D_STACK_BINDING_MESAX
#define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
#endif

#ifndef GL_TEXTURE_2D_STACK_BINDING_MESAX
#define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
#endif

#ifndef GL_MESA_pack_invert
#define GL_MESA_pack_invert 1
#endif

#ifndef GL_PACK_INVERT_MESA
#define GL_PACK_INVERT_MESA 0x8758
#endif

#ifndef GL_MESA_resize_buffers
#define GL_MESA_resize_buffers 1
#endif

#ifdef glResizeBuffersMESA
#undef glResizeBuffersMESA
#endif
#ifdef PFNGLRESIZEBUFFERSMESAPROC
#undef PFNGLRESIZEBUFFERSMESAPROC
#endif
typedef void  (*PFNGLRESIZEBUFFERSMESAPROC)(void);

#ifndef GL_MESA_window_pos
#define GL_MESA_window_pos 1
#endif

#ifdef glWindowPos2dMESA
#undef glWindowPos2dMESA
#endif
#ifdef PFNGLWINDOWPOS2DMESAPROC
#undef PFNGLWINDOWPOS2DMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS2DMESAPROC)(GLdouble x, GLdouble y);

#ifdef glWindowPos2dvMESA
#undef glWindowPos2dvMESA
#endif
#ifdef PFNGLWINDOWPOS2DVMESAPROC
#undef PFNGLWINDOWPOS2DVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS2DVMESAPROC)(const GLdouble *v);

#ifdef glWindowPos2fMESA
#undef glWindowPos2fMESA
#endif
#ifdef PFNGLWINDOWPOS2FMESAPROC
#undef PFNGLWINDOWPOS2FMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS2FMESAPROC)(GLfloat x, GLfloat y);

#ifdef glWindowPos2fvMESA
#undef glWindowPos2fvMESA
#endif
#ifdef PFNGLWINDOWPOS2FVMESAPROC
#undef PFNGLWINDOWPOS2FVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS2FVMESAPROC)(const GLfloat *v);

#ifdef glWindowPos2iMESA
#undef glWindowPos2iMESA
#endif
#ifdef PFNGLWINDOWPOS2IMESAPROC
#undef PFNGLWINDOWPOS2IMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS2IMESAPROC)(GLint x, GLint y);

#ifdef glWindowPos2ivMESA
#undef glWindowPos2ivMESA
#endif
#ifdef PFNGLWINDOWPOS2IVMESAPROC
#undef PFNGLWINDOWPOS2IVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS2IVMESAPROC)(const GLint *v);

#ifdef glWindowPos2sMESA
#undef glWindowPos2sMESA
#endif
#ifdef PFNGLWINDOWPOS2SMESAPROC
#undef PFNGLWINDOWPOS2SMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS2SMESAPROC)(GLshort x, GLshort y);

#ifdef glWindowPos2svMESA
#undef glWindowPos2svMESA
#endif
#ifdef PFNGLWINDOWPOS2SVMESAPROC
#undef PFNGLWINDOWPOS2SVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS2SVMESAPROC)(const GLshort *v);

#ifdef glWindowPos3dMESA
#undef glWindowPos3dMESA
#endif
#ifdef PFNGLWINDOWPOS3DMESAPROC
#undef PFNGLWINDOWPOS3DMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS3DMESAPROC)(GLdouble x, GLdouble y, GLdouble z);

#ifdef glWindowPos3dvMESA
#undef glWindowPos3dvMESA
#endif
#ifdef PFNGLWINDOWPOS3DVMESAPROC
#undef PFNGLWINDOWPOS3DVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS3DVMESAPROC)(const GLdouble *v);

#ifdef glWindowPos3fMESA
#undef glWindowPos3fMESA
#endif
#ifdef PFNGLWINDOWPOS3FMESAPROC
#undef PFNGLWINDOWPOS3FMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS3FMESAPROC)(GLfloat x, GLfloat y, GLfloat z);

#ifdef glWindowPos3fvMESA
#undef glWindowPos3fvMESA
#endif
#ifdef PFNGLWINDOWPOS3FVMESAPROC
#undef PFNGLWINDOWPOS3FVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS3FVMESAPROC)(const GLfloat *v);

#ifdef glWindowPos3iMESA
#undef glWindowPos3iMESA
#endif
#ifdef PFNGLWINDOWPOS3IMESAPROC
#undef PFNGLWINDOWPOS3IMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS3IMESAPROC)(GLint x, GLint y, GLint z);

#ifdef glWindowPos3ivMESA
#undef glWindowPos3ivMESA
#endif
#ifdef PFNGLWINDOWPOS3IVMESAPROC
#undef PFNGLWINDOWPOS3IVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS3IVMESAPROC)(const GLint *v);

#ifdef glWindowPos3sMESA
#undef glWindowPos3sMESA
#endif
#ifdef PFNGLWINDOWPOS3SMESAPROC
#undef PFNGLWINDOWPOS3SMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS3SMESAPROC)(GLshort x, GLshort y, GLshort z);

#ifdef glWindowPos3svMESA
#undef glWindowPos3svMESA
#endif
#ifdef PFNGLWINDOWPOS3SVMESAPROC
#undef PFNGLWINDOWPOS3SVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS3SVMESAPROC)(const GLshort *v);

#ifdef glWindowPos4dMESA
#undef glWindowPos4dMESA
#endif
#ifdef PFNGLWINDOWPOS4DMESAPROC
#undef PFNGLWINDOWPOS4DMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS4DMESAPROC)(GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glWindowPos4dvMESA
#undef glWindowPos4dvMESA
#endif
#ifdef PFNGLWINDOWPOS4DVMESAPROC
#undef PFNGLWINDOWPOS4DVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS4DVMESAPROC)(const GLdouble *v);

#ifdef glWindowPos4fMESA
#undef glWindowPos4fMESA
#endif
#ifdef PFNGLWINDOWPOS4FMESAPROC
#undef PFNGLWINDOWPOS4FMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS4FMESAPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glWindowPos4fvMESA
#undef glWindowPos4fvMESA
#endif
#ifdef PFNGLWINDOWPOS4FVMESAPROC
#undef PFNGLWINDOWPOS4FVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS4FVMESAPROC)(const GLfloat *v);

#ifdef glWindowPos4iMESA
#undef glWindowPos4iMESA
#endif
#ifdef PFNGLWINDOWPOS4IMESAPROC
#undef PFNGLWINDOWPOS4IMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS4IMESAPROC)(GLint x, GLint y, GLint z, GLint w);

#ifdef glWindowPos4ivMESA
#undef glWindowPos4ivMESA
#endif
#ifdef PFNGLWINDOWPOS4IVMESAPROC
#undef PFNGLWINDOWPOS4IVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS4IVMESAPROC)(const GLint *v);

#ifdef glWindowPos4sMESA
#undef glWindowPos4sMESA
#endif
#ifdef PFNGLWINDOWPOS4SMESAPROC
#undef PFNGLWINDOWPOS4SMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS4SMESAPROC)(GLshort x, GLshort y, GLshort z, GLshort w);

#ifdef glWindowPos4svMESA
#undef glWindowPos4svMESA
#endif
#ifdef PFNGLWINDOWPOS4SVMESAPROC
#undef PFNGLWINDOWPOS4SVMESAPROC
#endif
typedef void  (*PFNGLWINDOWPOS4SVMESAPROC)(const GLshort *v);

#ifndef GL_MESA_ycbcr_texture
#define GL_MESA_ycbcr_texture 1
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_MESA
#define GL_UNSIGNED_SHORT_8_8_MESA 0x85BA
#endif

#ifndef GL_UNSIGNED_SHORT_8_8_REV_MESA
#define GL_UNSIGNED_SHORT_8_8_REV_MESA 0x85BB
#endif

#ifndef GL_YCBCR_MESA
#define GL_YCBCR_MESA 0x8757
#endif

#ifndef GL_NVX_conditional_render
#define GL_NVX_conditional_render 1
#endif

#ifdef glBeginConditionalRenderNVX
#undef glBeginConditionalRenderNVX
#endif
#ifdef PFNGLBEGINCONDITIONALRENDERNVXPROC
#undef PFNGLBEGINCONDITIONALRENDERNVXPROC
#endif
typedef void  (*PFNGLBEGINCONDITIONALRENDERNVXPROC)(GLuint id);

#ifdef glEndConditionalRenderNVX
#undef glEndConditionalRenderNVX
#endif
#ifdef PFNGLENDCONDITIONALRENDERNVXPROC
#undef PFNGLENDCONDITIONALRENDERNVXPROC
#endif
typedef void  (*PFNGLENDCONDITIONALRENDERNVXPROC)(void);

#ifndef GL_NVX_gpu_memory_info
#define GL_NVX_gpu_memory_info 1
#endif

#ifndef GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX
#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX 0x9047
#endif

#ifndef GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX
#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX 0x9048
#endif

#ifndef GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX
#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX 0x9049
#endif

#ifndef GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX
#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX 0x904A
#endif

#ifndef GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX
#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX 0x904B
#endif

#ifndef GL_NV_bindless_multi_draw_indirect
#define GL_NV_bindless_multi_draw_indirect 1
#endif

#ifdef glMultiDrawArraysIndirectBindlessNV
#undef glMultiDrawArraysIndirectBindlessNV
#endif
#ifdef PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC
#undef PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);

#ifdef glMultiDrawElementsIndirectBindlessNV
#undef glMultiDrawElementsIndirectBindlessNV
#endif
#ifdef PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC
#undef PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);

#ifndef GL_NV_bindless_multi_draw_indirect_count
#define GL_NV_bindless_multi_draw_indirect_count 1
#endif

#ifdef glMultiDrawArraysIndirectBindlessCountNV
#undef glMultiDrawArraysIndirectBindlessCountNV
#endif
#ifdef PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC
#undef PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC
#endif
typedef void  (*PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC)(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);

#ifdef glMultiDrawElementsIndirectBindlessCountNV
#undef glMultiDrawElementsIndirectBindlessCountNV
#endif
#ifdef PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC
#undef PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC)(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);

#ifndef GL_NV_bindless_texture
#define GL_NV_bindless_texture 1
#endif

#ifdef glGetTextureHandleNV
#undef glGetTextureHandleNV
#endif
#ifdef PFNGLGETTEXTUREHANDLENVPROC
#undef PFNGLGETTEXTUREHANDLENVPROC
#endif
typedef GLuint64  (*PFNGLGETTEXTUREHANDLENVPROC)(GLuint texture);

#ifdef glGetTextureSamplerHandleNV
#undef glGetTextureSamplerHandleNV
#endif
#ifdef PFNGLGETTEXTURESAMPLERHANDLENVPROC
#undef PFNGLGETTEXTURESAMPLERHANDLENVPROC
#endif
typedef GLuint64  (*PFNGLGETTEXTURESAMPLERHANDLENVPROC)(GLuint texture, GLuint sampler);

#ifdef glMakeTextureHandleResidentNV
#undef glMakeTextureHandleResidentNV
#endif
#ifdef PFNGLMAKETEXTUREHANDLERESIDENTNVPROC
#undef PFNGLMAKETEXTUREHANDLERESIDENTNVPROC
#endif
typedef void  (*PFNGLMAKETEXTUREHANDLERESIDENTNVPROC)(GLuint64 handle);

#ifdef glMakeTextureHandleNonResidentNV
#undef glMakeTextureHandleNonResidentNV
#endif
#ifdef PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC
#undef PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC
#endif
typedef void  (*PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC)(GLuint64 handle);

#ifdef glGetImageHandleNV
#undef glGetImageHandleNV
#endif
#ifdef PFNGLGETIMAGEHANDLENVPROC
#undef PFNGLGETIMAGEHANDLENVPROC
#endif
typedef GLuint64  (*PFNGLGETIMAGEHANDLENVPROC)(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);

#ifdef glMakeImageHandleResidentNV
#undef glMakeImageHandleResidentNV
#endif
#ifdef PFNGLMAKEIMAGEHANDLERESIDENTNVPROC
#undef PFNGLMAKEIMAGEHANDLERESIDENTNVPROC
#endif
typedef void  (*PFNGLMAKEIMAGEHANDLERESIDENTNVPROC)(GLuint64 handle, GLenum access);

#ifdef glMakeImageHandleNonResidentNV
#undef glMakeImageHandleNonResidentNV
#endif
#ifdef PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC
#undef PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC
#endif
typedef void  (*PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC)(GLuint64 handle);

#ifdef glUniformHandleui64NV
#undef glUniformHandleui64NV
#endif
#ifdef PFNGLUNIFORMHANDLEUI64NVPROC
#undef PFNGLUNIFORMHANDLEUI64NVPROC
#endif
typedef void  (*PFNGLUNIFORMHANDLEUI64NVPROC)(GLint location, GLuint64 value);

#ifdef glUniformHandleui64vNV
#undef glUniformHandleui64vNV
#endif
#ifdef PFNGLUNIFORMHANDLEUI64VNVPROC
#undef PFNGLUNIFORMHANDLEUI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORMHANDLEUI64VNVPROC)(GLint location, GLsizei count, const GLuint64 *value);

#ifdef glProgramUniformHandleui64NV
#undef glProgramUniformHandleui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC
#undef PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC)(GLuint program, GLint location, GLuint64 value);

#ifdef glProgramUniformHandleui64vNV
#undef glProgramUniformHandleui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC
#undef PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64 *values);

#ifdef glIsTextureHandleResidentNV
#undef glIsTextureHandleResidentNV
#endif
#ifdef PFNGLISTEXTUREHANDLERESIDENTNVPROC
#undef PFNGLISTEXTUREHANDLERESIDENTNVPROC
#endif
typedef GLboolean  (*PFNGLISTEXTUREHANDLERESIDENTNVPROC)(GLuint64 handle);

#ifdef glIsImageHandleResidentNV
#undef glIsImageHandleResidentNV
#endif
#ifdef PFNGLISIMAGEHANDLERESIDENTNVPROC
#undef PFNGLISIMAGEHANDLERESIDENTNVPROC
#endif
typedef GLboolean  (*PFNGLISIMAGEHANDLERESIDENTNVPROC)(GLuint64 handle);

#ifndef GL_NV_blend_equation_advanced
#define GL_NV_blend_equation_advanced 1
#endif

#ifdef glBlendParameteriNV
#undef glBlendParameteriNV
#endif
#ifdef PFNGLBLENDPARAMETERINVPROC
#undef PFNGLBLENDPARAMETERINVPROC
#endif
typedef void  (*PFNGLBLENDPARAMETERINVPROC)(GLenum pname, GLint value);

#ifdef glBlendBarrierNV
#undef glBlendBarrierNV
#endif
#ifdef PFNGLBLENDBARRIERNVPROC
#undef PFNGLBLENDBARRIERNVPROC
#endif
typedef void  (*PFNGLBLENDBARRIERNVPROC)(void);

#ifndef GL_BLEND_OVERLAP_NV
#define GL_BLEND_OVERLAP_NV 0x9281
#endif

#ifndef GL_BLEND_PREMULTIPLIED_SRC_NV
#define GL_BLEND_PREMULTIPLIED_SRC_NV 0x9280
#endif

#ifndef GL_BLUE_NV
#define GL_BLUE_NV 0x1905
#endif

#ifndef GL_COLORBURN_NV
#define GL_COLORBURN_NV 0x929A
#endif

#ifndef GL_COLORDODGE_NV
#define GL_COLORDODGE_NV 0x9299
#endif

#ifndef GL_CONJOINT_NV
#define GL_CONJOINT_NV 0x9284
#endif

#ifndef GL_CONTRAST_NV
#define GL_CONTRAST_NV 0x92A1
#endif

#ifndef GL_DARKEN_NV
#define GL_DARKEN_NV 0x9297
#endif

#ifndef GL_DIFFERENCE_NV
#define GL_DIFFERENCE_NV 0x929E
#endif

#ifndef GL_DISJOINT_NV
#define GL_DISJOINT_NV 0x9283
#endif

#ifndef GL_DST_ATOP_NV
#define GL_DST_ATOP_NV 0x928F
#endif

#ifndef GL_DST_IN_NV
#define GL_DST_IN_NV 0x928B
#endif

#ifndef GL_DST_NV
#define GL_DST_NV 0x9287
#endif

#ifndef GL_DST_OUT_NV
#define GL_DST_OUT_NV 0x928D
#endif

#ifndef GL_DST_OVER_NV
#define GL_DST_OVER_NV 0x9289
#endif

#ifndef GL_EXCLUSION_NV
#define GL_EXCLUSION_NV 0x92A0
#endif

#ifndef GL_GREEN_NV
#define GL_GREEN_NV 0x1904
#endif

#ifndef GL_HARDLIGHT_NV
#define GL_HARDLIGHT_NV 0x929B
#endif

#ifndef GL_HARDMIX_NV
#define GL_HARDMIX_NV 0x92A9
#endif

#ifndef GL_HSL_COLOR_NV
#define GL_HSL_COLOR_NV 0x92AF
#endif

#ifndef GL_HSL_HUE_NV
#define GL_HSL_HUE_NV 0x92AD
#endif

#ifndef GL_HSL_LUMINOSITY_NV
#define GL_HSL_LUMINOSITY_NV 0x92B0
#endif

#ifndef GL_HSL_SATURATION_NV
#define GL_HSL_SATURATION_NV 0x92AE
#endif

#ifndef GL_INVERT
#define GL_INVERT 0x150A
#endif

#ifndef GL_INVERT_OVG_NV
#define GL_INVERT_OVG_NV 0x92B4
#endif

#ifndef GL_INVERT_RGB_NV
#define GL_INVERT_RGB_NV 0x92A3
#endif

#ifndef GL_LIGHTEN_NV
#define GL_LIGHTEN_NV 0x9298
#endif

#ifndef GL_LINEARBURN_NV
#define GL_LINEARBURN_NV 0x92A5
#endif

#ifndef GL_LINEARDODGE_NV
#define GL_LINEARDODGE_NV 0x92A4
#endif

#ifndef GL_LINEARLIGHT_NV
#define GL_LINEARLIGHT_NV 0x92A7
#endif

#ifndef GL_MINUS_CLAMPED_NV
#define GL_MINUS_CLAMPED_NV 0x92B3
#endif

#ifndef GL_MINUS_NV
#define GL_MINUS_NV 0x929F
#endif

#ifndef GL_MULTIPLY_NV
#define GL_MULTIPLY_NV 0x9294
#endif

#ifndef GL_OVERLAY_NV
#define GL_OVERLAY_NV 0x9296
#endif

#ifndef GL_PINLIGHT_NV
#define GL_PINLIGHT_NV 0x92A8
#endif

#ifndef GL_PLUS_CLAMPED_ALPHA_NV
#define GL_PLUS_CLAMPED_ALPHA_NV 0x92B2
#endif

#ifndef GL_PLUS_CLAMPED_NV
#define GL_PLUS_CLAMPED_NV 0x92B1
#endif

#ifndef GL_PLUS_DARKER_NV
#define GL_PLUS_DARKER_NV 0x9292
#endif

#ifndef GL_PLUS_NV
#define GL_PLUS_NV 0x9291
#endif

#ifndef GL_RED_NV
#define GL_RED_NV 0x1903
#endif

#ifndef GL_SCREEN_NV
#define GL_SCREEN_NV 0x9295
#endif

#ifndef GL_SOFTLIGHT_NV
#define GL_SOFTLIGHT_NV 0x929C
#endif

#ifndef GL_SRC_ATOP_NV
#define GL_SRC_ATOP_NV 0x928E
#endif

#ifndef GL_SRC_IN_NV
#define GL_SRC_IN_NV 0x928A
#endif

#ifndef GL_SRC_NV
#define GL_SRC_NV 0x9286
#endif

#ifndef GL_SRC_OUT_NV
#define GL_SRC_OUT_NV 0x928C
#endif

#ifndef GL_SRC_OVER_NV
#define GL_SRC_OVER_NV 0x9288
#endif

#ifndef GL_UNCORRELATED_NV
#define GL_UNCORRELATED_NV 0x9282
#endif

#ifndef GL_VIVIDLIGHT_NV
#define GL_VIVIDLIGHT_NV 0x92A6
#endif

#ifndef GL_XOR_NV
#define GL_XOR_NV 0x1506
#endif

#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_NV_blend_equation_advanced_coherent
#define GL_NV_blend_equation_advanced_coherent 1
#endif

#ifndef GL_BLEND_ADVANCED_COHERENT_NV
#define GL_BLEND_ADVANCED_COHERENT_NV 0x9285
#endif

#ifndef GL_NV_blend_square
#define GL_NV_blend_square 1
#endif

#ifndef GL_NV_command_list
#define GL_NV_command_list 1
#endif

#ifdef glCreateStatesNV
#undef glCreateStatesNV
#endif
#ifdef PFNGLCREATESTATESNVPROC
#undef PFNGLCREATESTATESNVPROC
#endif
typedef void  (*PFNGLCREATESTATESNVPROC)(GLsizei n, GLuint *states);

#ifdef glDeleteStatesNV
#undef glDeleteStatesNV
#endif
#ifdef PFNGLDELETESTATESNVPROC
#undef PFNGLDELETESTATESNVPROC
#endif
typedef void  (*PFNGLDELETESTATESNVPROC)(GLsizei n, const GLuint *states);

#ifdef glIsStateNV
#undef glIsStateNV
#endif
#ifdef PFNGLISSTATENVPROC
#undef PFNGLISSTATENVPROC
#endif
typedef GLboolean  (*PFNGLISSTATENVPROC)(GLuint state);

#ifdef glStateCaptureNV
#undef glStateCaptureNV
#endif
#ifdef PFNGLSTATECAPTURENVPROC
#undef PFNGLSTATECAPTURENVPROC
#endif
typedef void  (*PFNGLSTATECAPTURENVPROC)(GLuint state, GLenum mode);

#ifdef glGetCommandHeaderNV
#undef glGetCommandHeaderNV
#endif
#ifdef PFNGLGETCOMMANDHEADERNVPROC
#undef PFNGLGETCOMMANDHEADERNVPROC
#endif
typedef GLuint  (*PFNGLGETCOMMANDHEADERNVPROC)(GLenum tokenID, GLuint size);

#ifdef glGetStageIndexNV
#undef glGetStageIndexNV
#endif
#ifdef PFNGLGETSTAGEINDEXNVPROC
#undef PFNGLGETSTAGEINDEXNVPROC
#endif
typedef GLushort  (*PFNGLGETSTAGEINDEXNVPROC)(GLenum shadertype);

#ifdef glDrawCommandsNV
#undef glDrawCommandsNV
#endif
#ifdef PFNGLDRAWCOMMANDSNVPROC
#undef PFNGLDRAWCOMMANDSNVPROC
#endif
typedef void  (*PFNGLDRAWCOMMANDSNVPROC)(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);

#ifdef glDrawCommandsAddressNV
#undef glDrawCommandsAddressNV
#endif
#ifdef PFNGLDRAWCOMMANDSADDRESSNVPROC
#undef PFNGLDRAWCOMMANDSADDRESSNVPROC
#endif
typedef void  (*PFNGLDRAWCOMMANDSADDRESSNVPROC)(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);

#ifdef glDrawCommandsStatesNV
#undef glDrawCommandsStatesNV
#endif
#ifdef PFNGLDRAWCOMMANDSSTATESNVPROC
#undef PFNGLDRAWCOMMANDSSTATESNVPROC
#endif
typedef void  (*PFNGLDRAWCOMMANDSSTATESNVPROC)(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);

#ifdef glDrawCommandsStatesAddressNV
#undef glDrawCommandsStatesAddressNV
#endif
#ifdef PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC
#undef PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC
#endif
typedef void  (*PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC)(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);

#ifdef glCreateCommandListsNV
#undef glCreateCommandListsNV
#endif
#ifdef PFNGLCREATECOMMANDLISTSNVPROC
#undef PFNGLCREATECOMMANDLISTSNVPROC
#endif
typedef void  (*PFNGLCREATECOMMANDLISTSNVPROC)(GLsizei n, GLuint *lists);

#ifdef glDeleteCommandListsNV
#undef glDeleteCommandListsNV
#endif
#ifdef PFNGLDELETECOMMANDLISTSNVPROC
#undef PFNGLDELETECOMMANDLISTSNVPROC
#endif
typedef void  (*PFNGLDELETECOMMANDLISTSNVPROC)(GLsizei n, const GLuint *lists);

#ifdef glIsCommandListNV
#undef glIsCommandListNV
#endif
#ifdef PFNGLISCOMMANDLISTNVPROC
#undef PFNGLISCOMMANDLISTNVPROC
#endif
typedef GLboolean  (*PFNGLISCOMMANDLISTNVPROC)(GLuint list);

#ifdef glListDrawCommandsStatesClientNV
#undef glListDrawCommandsStatesClientNV
#endif
#ifdef PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC
#undef PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC
#endif
typedef void  (*PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC)(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);

#ifdef glCommandListSegmentsNV
#undef glCommandListSegmentsNV
#endif
#ifdef PFNGLCOMMANDLISTSEGMENTSNVPROC
#undef PFNGLCOMMANDLISTSEGMENTSNVPROC
#endif
typedef void  (*PFNGLCOMMANDLISTSEGMENTSNVPROC)(GLuint list, GLuint segments);

#ifdef glCompileCommandListNV
#undef glCompileCommandListNV
#endif
#ifdef PFNGLCOMPILECOMMANDLISTNVPROC
#undef PFNGLCOMPILECOMMANDLISTNVPROC
#endif
typedef void  (*PFNGLCOMPILECOMMANDLISTNVPROC)(GLuint list);

#ifdef glCallCommandListNV
#undef glCallCommandListNV
#endif
#ifdef PFNGLCALLCOMMANDLISTNVPROC
#undef PFNGLCALLCOMMANDLISTNVPROC
#endif
typedef void  (*PFNGLCALLCOMMANDLISTNVPROC)(GLuint list);

#ifndef GL_TERMINATE_SEQUENCE_COMMAND_NV
#define GL_TERMINATE_SEQUENCE_COMMAND_NV 0x0000
#endif

#ifndef GL_NOP_COMMAND_NV
#define GL_NOP_COMMAND_NV 0x0001
#endif

#ifndef GL_DRAW_ELEMENTS_COMMAND_NV
#define GL_DRAW_ELEMENTS_COMMAND_NV 0x0002
#endif

#ifndef GL_DRAW_ARRAYS_COMMAND_NV
#define GL_DRAW_ARRAYS_COMMAND_NV 0x0003
#endif

#ifndef GL_DRAW_ELEMENTS_STRIP_COMMAND_NV
#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV 0x0004
#endif

#ifndef GL_DRAW_ARRAYS_STRIP_COMMAND_NV
#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV 0x0005
#endif

#ifndef GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV
#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV 0x0006
#endif

#ifndef GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV
#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV 0x0007
#endif

#ifndef GL_ELEMENT_ADDRESS_COMMAND_NV
#define GL_ELEMENT_ADDRESS_COMMAND_NV 0x0008
#endif

#ifndef GL_ATTRIBUTE_ADDRESS_COMMAND_NV
#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV 0x0009
#endif

#ifndef GL_UNIFORM_ADDRESS_COMMAND_NV
#define GL_UNIFORM_ADDRESS_COMMAND_NV 0x000A
#endif

#ifndef GL_BLEND_COLOR_COMMAND_NV
#define GL_BLEND_COLOR_COMMAND_NV 0x000B
#endif

#ifndef GL_STENCIL_REF_COMMAND_NV
#define GL_STENCIL_REF_COMMAND_NV 0x000C
#endif

#ifndef GL_LINE_WIDTH_COMMAND_NV
#define GL_LINE_WIDTH_COMMAND_NV 0x000D
#endif

#ifndef GL_POLYGON_OFFSET_COMMAND_NV
#define GL_POLYGON_OFFSET_COMMAND_NV 0x000E
#endif

#ifndef GL_ALPHA_REF_COMMAND_NV
#define GL_ALPHA_REF_COMMAND_NV 0x000F
#endif

#ifndef GL_VIEWPORT_COMMAND_NV
#define GL_VIEWPORT_COMMAND_NV 0x0010
#endif

#ifndef GL_SCISSOR_COMMAND_NV
#define GL_SCISSOR_COMMAND_NV 0x0011
#endif

#ifndef GL_FRONT_FACE_COMMAND_NV
#define GL_FRONT_FACE_COMMAND_NV 0x0012
#endif

#ifndef GL_NV_compute_program5
#define GL_NV_compute_program5 1
#endif

#ifndef GL_COMPUTE_PROGRAM_NV
#define GL_COMPUTE_PROGRAM_NV 0x90FB
#endif

#ifndef GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV
#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV 0x90FC
#endif

#ifndef GL_NV_conditional_render
#define GL_NV_conditional_render 1
#endif

#ifdef glBeginConditionalRenderNV
#undef glBeginConditionalRenderNV
#endif
#ifdef PFNGLBEGINCONDITIONALRENDERNVPROC
#undef PFNGLBEGINCONDITIONALRENDERNVPROC
#endif
typedef void  (*PFNGLBEGINCONDITIONALRENDERNVPROC)(GLuint id, GLenum mode);

#ifdef glEndConditionalRenderNV
#undef glEndConditionalRenderNV
#endif
#ifdef PFNGLENDCONDITIONALRENDERNVPROC
#undef PFNGLENDCONDITIONALRENDERNVPROC
#endif
typedef void  (*PFNGLENDCONDITIONALRENDERNVPROC)(void);

#ifndef GL_QUERY_WAIT_NV
#define GL_QUERY_WAIT_NV 0x8E13
#endif

#ifndef GL_QUERY_NO_WAIT_NV
#define GL_QUERY_NO_WAIT_NV 0x8E14
#endif

#ifndef GL_QUERY_BY_REGION_WAIT_NV
#define GL_QUERY_BY_REGION_WAIT_NV 0x8E15
#endif

#ifndef GL_QUERY_BY_REGION_NO_WAIT_NV
#define GL_QUERY_BY_REGION_NO_WAIT_NV 0x8E16
#endif

#ifndef GL_NV_conservative_raster
#define GL_NV_conservative_raster 1
#endif

#ifdef glSubpixelPrecisionBiasNV
#undef glSubpixelPrecisionBiasNV
#endif
#ifdef PFNGLSUBPIXELPRECISIONBIASNVPROC
#undef PFNGLSUBPIXELPRECISIONBIASNVPROC
#endif
typedef void  (*PFNGLSUBPIXELPRECISIONBIASNVPROC)(GLuint xbits, GLuint ybits);

#ifndef GL_CONSERVATIVE_RASTERIZATION_NV
#define GL_CONSERVATIVE_RASTERIZATION_NV 0x9346
#endif

#ifndef GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV
#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV 0x9347
#endif

#ifndef GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV
#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV 0x9348
#endif

#ifndef GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV
#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV 0x9349
#endif

#ifndef GL_NV_copy_buffer
#define GL_NV_copy_buffer 1
#endif

#ifdef glCopyBufferSubDataNV
#undef glCopyBufferSubDataNV
#endif
#ifdef PFNGLCOPYBUFFERSUBDATANVPROC
#undef PFNGLCOPYBUFFERSUBDATANVPROC
#endif
typedef void  (*PFNGLCOPYBUFFERSUBDATANVPROC)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);

#ifndef GL_COPY_READ_BUFFER_NV
#define GL_COPY_READ_BUFFER_NV 0x8F36
#endif

#ifndef GL_COPY_WRITE_BUFFER_NV
#define GL_COPY_WRITE_BUFFER_NV 0x8F37
#endif

#ifndef GL_NV_copy_depth_to_color
#define GL_NV_copy_depth_to_color 1
#endif

#ifndef GL_DEPTH_STENCIL_TO_RGBA_NV
#define GL_DEPTH_STENCIL_TO_RGBA_NV 0x886E
#endif

#ifndef GL_DEPTH_STENCIL_TO_BGRA_NV
#define GL_DEPTH_STENCIL_TO_BGRA_NV 0x886F
#endif

#ifndef GL_NV_copy_image
#define GL_NV_copy_image 1
#endif

#ifdef glCopyImageSubDataNV
#undef glCopyImageSubDataNV
#endif
#ifdef PFNGLCOPYIMAGESUBDATANVPROC
#undef PFNGLCOPYIMAGESUBDATANVPROC
#endif
typedef void  (*PFNGLCOPYIMAGESUBDATANVPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);

#ifndef GL_NV_coverage_sample
#define GL_NV_coverage_sample 1
#endif

#ifdef glCoverageMaskNV
#undef glCoverageMaskNV
#endif
#ifdef PFNGLCOVERAGEMASKNVPROC
#undef PFNGLCOVERAGEMASKNVPROC
#endif
typedef void  (*PFNGLCOVERAGEMASKNVPROC)(GLboolean mask);

#ifdef glCoverageOperationNV
#undef glCoverageOperationNV
#endif
#ifdef PFNGLCOVERAGEOPERATIONNVPROC
#undef PFNGLCOVERAGEOPERATIONNVPROC
#endif
typedef void  (*PFNGLCOVERAGEOPERATIONNVPROC)(GLenum operation);

#ifndef GL_COVERAGE_COMPONENT_NV
#define GL_COVERAGE_COMPONENT_NV 0x8ED0
#endif

#ifndef GL_COVERAGE_COMPONENT4_NV
#define GL_COVERAGE_COMPONENT4_NV 0x8ED1
#endif

#ifndef GL_COVERAGE_ATTACHMENT_NV
#define GL_COVERAGE_ATTACHMENT_NV 0x8ED2
#endif

#ifndef GL_COVERAGE_BUFFERS_NV
#define GL_COVERAGE_BUFFERS_NV 0x8ED3
#endif

#ifndef GL_COVERAGE_SAMPLES_NV
#define GL_COVERAGE_SAMPLES_NV 0x8ED4
#endif

#ifndef GL_COVERAGE_ALL_FRAGMENTS_NV
#define GL_COVERAGE_ALL_FRAGMENTS_NV 0x8ED5
#endif

#ifndef GL_COVERAGE_EDGE_FRAGMENTS_NV
#define GL_COVERAGE_EDGE_FRAGMENTS_NV 0x8ED6
#endif

#ifndef GL_COVERAGE_AUTOMATIC_NV
#define GL_COVERAGE_AUTOMATIC_NV 0x8ED7
#endif

#ifndef GL_COVERAGE_BUFFER_BIT_NV
#define GL_COVERAGE_BUFFER_BIT_NV 0x00008000
#endif

#ifndef GL_NV_deep_texture3D
#define GL_NV_deep_texture3D 1
#endif

#ifndef GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV
#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV 0x90D0
#endif

#ifndef GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV
#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV 0x90D1
#endif

#ifndef GL_NV_depth_buffer_float
#define GL_NV_depth_buffer_float 1
#endif

#ifdef glDepthRangedNV
#undef glDepthRangedNV
#endif
#ifdef PFNGLDEPTHRANGEDNVPROC
#undef PFNGLDEPTHRANGEDNVPROC
#endif
typedef void  (*PFNGLDEPTHRANGEDNVPROC)(GLdouble zNear, GLdouble zFar);

#ifdef glClearDepthdNV
#undef glClearDepthdNV
#endif
#ifdef PFNGLCLEARDEPTHDNVPROC
#undef PFNGLCLEARDEPTHDNVPROC
#endif
typedef void  (*PFNGLCLEARDEPTHDNVPROC)(GLdouble depth);

#ifdef glDepthBoundsdNV
#undef glDepthBoundsdNV
#endif
#ifdef PFNGLDEPTHBOUNDSDNVPROC
#undef PFNGLDEPTHBOUNDSDNVPROC
#endif
typedef void  (*PFNGLDEPTHBOUNDSDNVPROC)(GLdouble zmin, GLdouble zmax);

#ifndef GL_DEPTH_COMPONENT32F_NV
#define GL_DEPTH_COMPONENT32F_NV 0x8DAB
#endif

#ifndef GL_DEPTH32F_STENCIL8_NV
#define GL_DEPTH32F_STENCIL8_NV 0x8DAC
#endif

#ifndef GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
#endif

#ifndef GL_DEPTH_BUFFER_FLOAT_MODE_NV
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV 0x8DAF
#endif

#ifndef GL_NV_depth_clamp
#define GL_NV_depth_clamp 1
#endif

#ifndef GL_DEPTH_CLAMP_NV
#define GL_DEPTH_CLAMP_NV 0x864F
#endif

#ifndef GL_NV_depth_nonlinear
#define GL_NV_depth_nonlinear 1
#endif

#ifndef GL_DEPTH_COMPONENT16_NONLINEAR_NV
#define GL_DEPTH_COMPONENT16_NONLINEAR_NV 0x8E2C
#endif

#ifndef GL_NV_draw_buffers
#define GL_NV_draw_buffers 1
#endif

#ifdef glDrawBuffersNV
#undef glDrawBuffersNV
#endif
#ifdef PFNGLDRAWBUFFERSNVPROC
#undef PFNGLDRAWBUFFERSNVPROC
#endif
typedef void  (*PFNGLDRAWBUFFERSNVPROC)(GLsizei n, const GLenum *bufs);

#ifndef GL_MAX_DRAW_BUFFERS_NV
#define GL_MAX_DRAW_BUFFERS_NV 0x8824
#endif

#ifndef GL_DRAW_BUFFER0_NV
#define GL_DRAW_BUFFER0_NV 0x8825
#endif

#ifndef GL_DRAW_BUFFER1_NV
#define GL_DRAW_BUFFER1_NV 0x8826
#endif

#ifndef GL_DRAW_BUFFER2_NV
#define GL_DRAW_BUFFER2_NV 0x8827
#endif

#ifndef GL_DRAW_BUFFER3_NV
#define GL_DRAW_BUFFER3_NV 0x8828
#endif

#ifndef GL_DRAW_BUFFER4_NV
#define GL_DRAW_BUFFER4_NV 0x8829
#endif

#ifndef GL_DRAW_BUFFER5_NV
#define GL_DRAW_BUFFER5_NV 0x882A
#endif

#ifndef GL_DRAW_BUFFER6_NV
#define GL_DRAW_BUFFER6_NV 0x882B
#endif

#ifndef GL_DRAW_BUFFER7_NV
#define GL_DRAW_BUFFER7_NV 0x882C
#endif

#ifndef GL_DRAW_BUFFER8_NV
#define GL_DRAW_BUFFER8_NV 0x882D
#endif

#ifndef GL_DRAW_BUFFER9_NV
#define GL_DRAW_BUFFER9_NV 0x882E
#endif

#ifndef GL_DRAW_BUFFER10_NV
#define GL_DRAW_BUFFER10_NV 0x882F
#endif

#ifndef GL_DRAW_BUFFER11_NV
#define GL_DRAW_BUFFER11_NV 0x8830
#endif

#ifndef GL_DRAW_BUFFER12_NV
#define GL_DRAW_BUFFER12_NV 0x8831
#endif

#ifndef GL_DRAW_BUFFER13_NV
#define GL_DRAW_BUFFER13_NV 0x8832
#endif

#ifndef GL_DRAW_BUFFER14_NV
#define GL_DRAW_BUFFER14_NV 0x8833
#endif

#ifndef GL_DRAW_BUFFER15_NV
#define GL_DRAW_BUFFER15_NV 0x8834
#endif

#ifndef GL_COLOR_ATTACHMENT0_NV
#define GL_COLOR_ATTACHMENT0_NV 0x8CE0
#endif

#ifndef GL_COLOR_ATTACHMENT1_NV
#define GL_COLOR_ATTACHMENT1_NV 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2_NV
#define GL_COLOR_ATTACHMENT2_NV 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3_NV
#define GL_COLOR_ATTACHMENT3_NV 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4_NV
#define GL_COLOR_ATTACHMENT4_NV 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5_NV
#define GL_COLOR_ATTACHMENT5_NV 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6_NV
#define GL_COLOR_ATTACHMENT6_NV 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7_NV
#define GL_COLOR_ATTACHMENT7_NV 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8_NV
#define GL_COLOR_ATTACHMENT8_NV 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9_NV
#define GL_COLOR_ATTACHMENT9_NV 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10_NV
#define GL_COLOR_ATTACHMENT10_NV 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11_NV
#define GL_COLOR_ATTACHMENT11_NV 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12_NV
#define GL_COLOR_ATTACHMENT12_NV 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13_NV
#define GL_COLOR_ATTACHMENT13_NV 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14_NV
#define GL_COLOR_ATTACHMENT14_NV 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15_NV
#define GL_COLOR_ATTACHMENT15_NV 0x8CEF
#endif

#ifndef GL_NV_draw_instanced
#define GL_NV_draw_instanced 1
#endif

#ifdef glDrawArraysInstancedNV
#undef glDrawArraysInstancedNV
#endif
#ifdef PFNGLDRAWARRAYSINSTANCEDNVPROC
#undef PFNGLDRAWARRAYSINSTANCEDNVPROC
#endif
typedef void  (*PFNGLDRAWARRAYSINSTANCEDNVPROC)(GLenum mode, GLint first, GLsizei count, GLsizei primcount);

#ifdef glDrawElementsInstancedNV
#undef glDrawElementsInstancedNV
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDNVPROC
#undef PFNGLDRAWELEMENTSINSTANCEDNVPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDNVPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);

#ifndef GL_NV_draw_texture
#define GL_NV_draw_texture 1
#endif

#ifdef glDrawTextureNV
#undef glDrawTextureNV
#endif
#ifdef PFNGLDRAWTEXTURENVPROC
#undef PFNGLDRAWTEXTURENVPROC
#endif
typedef void  (*PFNGLDRAWTEXTURENVPROC)(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);

#ifndef GL_NV_evaluators
#define GL_NV_evaluators 1
#endif

#ifdef glMapControlPointsNV
#undef glMapControlPointsNV
#endif
#ifdef PFNGLMAPCONTROLPOINTSNVPROC
#undef PFNGLMAPCONTROLPOINTSNVPROC
#endif
typedef void  (*PFNGLMAPCONTROLPOINTSNVPROC)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);

#ifdef glMapParameterivNV
#undef glMapParameterivNV
#endif
#ifdef PFNGLMAPPARAMETERIVNVPROC
#undef PFNGLMAPPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLMAPPARAMETERIVNVPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glMapParameterfvNV
#undef glMapParameterfvNV
#endif
#ifdef PFNGLMAPPARAMETERFVNVPROC
#undef PFNGLMAPPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLMAPPARAMETERFVNVPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glGetMapControlPointsNV
#undef glGetMapControlPointsNV
#endif
#ifdef PFNGLGETMAPCONTROLPOINTSNVPROC
#undef PFNGLGETMAPCONTROLPOINTSNVPROC
#endif
typedef void  (*PFNGLGETMAPCONTROLPOINTSNVPROC)(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);

#ifdef glGetMapParameterivNV
#undef glGetMapParameterivNV
#endif
#ifdef PFNGLGETMAPPARAMETERIVNVPROC
#undef PFNGLGETMAPPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLGETMAPPARAMETERIVNVPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetMapParameterfvNV
#undef glGetMapParameterfvNV
#endif
#ifdef PFNGLGETMAPPARAMETERFVNVPROC
#undef PFNGLGETMAPPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETMAPPARAMETERFVNVPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetMapAttribParameterivNV
#undef glGetMapAttribParameterivNV
#endif
#ifdef PFNGLGETMAPATTRIBPARAMETERIVNVPROC
#undef PFNGLGETMAPATTRIBPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLGETMAPATTRIBPARAMETERIVNVPROC)(GLenum target, GLuint index, GLenum pname, GLint *params);

#ifdef glGetMapAttribParameterfvNV
#undef glGetMapAttribParameterfvNV
#endif
#ifdef PFNGLGETMAPATTRIBPARAMETERFVNVPROC
#undef PFNGLGETMAPATTRIBPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETMAPATTRIBPARAMETERFVNVPROC)(GLenum target, GLuint index, GLenum pname, GLfloat *params);

#ifdef glEvalMapsNV
#undef glEvalMapsNV
#endif
#ifdef PFNGLEVALMAPSNVPROC
#undef PFNGLEVALMAPSNVPROC
#endif
typedef void  (*PFNGLEVALMAPSNVPROC)(GLenum target, GLenum mode);

#ifndef GL_EVAL_2D_NV
#define GL_EVAL_2D_NV 0x86C0
#endif

#ifndef GL_EVAL_TRIANGULAR_2D_NV
#define GL_EVAL_TRIANGULAR_2D_NV 0x86C1
#endif

#ifndef GL_MAP_TESSELLATION_NV
#define GL_MAP_TESSELLATION_NV 0x86C2
#endif

#ifndef GL_MAP_ATTRIB_U_ORDER_NV
#define GL_MAP_ATTRIB_U_ORDER_NV 0x86C3
#endif

#ifndef GL_MAP_ATTRIB_V_ORDER_NV
#define GL_MAP_ATTRIB_V_ORDER_NV 0x86C4
#endif

#ifndef GL_EVAL_FRACTIONAL_TESSELLATION_NV
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB0_NV
#define GL_EVAL_VERTEX_ATTRIB0_NV 0x86C6
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB1_NV
#define GL_EVAL_VERTEX_ATTRIB1_NV 0x86C7
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB2_NV
#define GL_EVAL_VERTEX_ATTRIB2_NV 0x86C8
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB3_NV
#define GL_EVAL_VERTEX_ATTRIB3_NV 0x86C9
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB4_NV
#define GL_EVAL_VERTEX_ATTRIB4_NV 0x86CA
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB5_NV
#define GL_EVAL_VERTEX_ATTRIB5_NV 0x86CB
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB6_NV
#define GL_EVAL_VERTEX_ATTRIB6_NV 0x86CC
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB7_NV
#define GL_EVAL_VERTEX_ATTRIB7_NV 0x86CD
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB8_NV
#define GL_EVAL_VERTEX_ATTRIB8_NV 0x86CE
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB9_NV
#define GL_EVAL_VERTEX_ATTRIB9_NV 0x86CF
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB10_NV
#define GL_EVAL_VERTEX_ATTRIB10_NV 0x86D0
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB11_NV
#define GL_EVAL_VERTEX_ATTRIB11_NV 0x86D1
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB12_NV
#define GL_EVAL_VERTEX_ATTRIB12_NV 0x86D2
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB13_NV
#define GL_EVAL_VERTEX_ATTRIB13_NV 0x86D3
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB14_NV
#define GL_EVAL_VERTEX_ATTRIB14_NV 0x86D4
#endif

#ifndef GL_EVAL_VERTEX_ATTRIB15_NV
#define GL_EVAL_VERTEX_ATTRIB15_NV 0x86D5
#endif

#ifndef GL_MAX_MAP_TESSELLATION_NV
#define GL_MAX_MAP_TESSELLATION_NV 0x86D6
#endif

#ifndef GL_MAX_RATIONAL_EVAL_ORDER_NV
#define GL_MAX_RATIONAL_EVAL_ORDER_NV 0x86D7
#endif

#ifndef GL_NV_explicit_attrib_location
#define GL_NV_explicit_attrib_location 1
#endif

#ifndef GL_NV_explicit_multisample
#define GL_NV_explicit_multisample 1
#endif

#ifdef glGetMultisamplefvNV
#undef glGetMultisamplefvNV
#endif
#ifdef PFNGLGETMULTISAMPLEFVNVPROC
#undef PFNGLGETMULTISAMPLEFVNVPROC
#endif
typedef void  (*PFNGLGETMULTISAMPLEFVNVPROC)(GLenum pname, GLuint index, GLfloat *val);

#ifdef glSampleMaskIndexedNV
#undef glSampleMaskIndexedNV
#endif
#ifdef PFNGLSAMPLEMASKINDEXEDNVPROC
#undef PFNGLSAMPLEMASKINDEXEDNVPROC
#endif
typedef void  (*PFNGLSAMPLEMASKINDEXEDNVPROC)(GLuint index, GLbitfield mask);

#ifdef glTexRenderbufferNV
#undef glTexRenderbufferNV
#endif
#ifdef PFNGLTEXRENDERBUFFERNVPROC
#undef PFNGLTEXRENDERBUFFERNVPROC
#endif
typedef void  (*PFNGLTEXRENDERBUFFERNVPROC)(GLenum target, GLuint renderbuffer);

#ifndef GL_SAMPLE_POSITION_NV
#define GL_SAMPLE_POSITION_NV 0x8E50
#endif

#ifndef GL_SAMPLE_MASK_NV
#define GL_SAMPLE_MASK_NV 0x8E51
#endif

#ifndef GL_SAMPLE_MASK_VALUE_NV
#define GL_SAMPLE_MASK_VALUE_NV 0x8E52
#endif

#ifndef GL_TEXTURE_BINDING_RENDERBUFFER_NV
#define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
#endif

#ifndef GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV
#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
#endif

#ifndef GL_TEXTURE_RENDERBUFFER_NV
#define GL_TEXTURE_RENDERBUFFER_NV 0x8E55
#endif

#ifndef GL_SAMPLER_RENDERBUFFER_NV
#define GL_SAMPLER_RENDERBUFFER_NV 0x8E56
#endif

#ifndef GL_INT_SAMPLER_RENDERBUFFER_NV
#define GL_INT_SAMPLER_RENDERBUFFER_NV 0x8E57
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV
#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
#endif

#ifndef GL_MAX_SAMPLE_MASK_WORDS_NV
#define GL_MAX_SAMPLE_MASK_WORDS_NV 0x8E59
#endif

#ifndef GL_NV_fbo_color_attachments
#define GL_NV_fbo_color_attachments 1
#endif

#ifndef GL_MAX_COLOR_ATTACHMENTS_NV
#define GL_MAX_COLOR_ATTACHMENTS_NV 0x8CDF
#endif

#ifndef GL_COLOR_ATTACHMENT0_NV
#define GL_COLOR_ATTACHMENT0_NV 0x8CE0
#endif

#ifndef GL_COLOR_ATTACHMENT1_NV
#define GL_COLOR_ATTACHMENT1_NV 0x8CE1
#endif

#ifndef GL_COLOR_ATTACHMENT2_NV
#define GL_COLOR_ATTACHMENT2_NV 0x8CE2
#endif

#ifndef GL_COLOR_ATTACHMENT3_NV
#define GL_COLOR_ATTACHMENT3_NV 0x8CE3
#endif

#ifndef GL_COLOR_ATTACHMENT4_NV
#define GL_COLOR_ATTACHMENT4_NV 0x8CE4
#endif

#ifndef GL_COLOR_ATTACHMENT5_NV
#define GL_COLOR_ATTACHMENT5_NV 0x8CE5
#endif

#ifndef GL_COLOR_ATTACHMENT6_NV
#define GL_COLOR_ATTACHMENT6_NV 0x8CE6
#endif

#ifndef GL_COLOR_ATTACHMENT7_NV
#define GL_COLOR_ATTACHMENT7_NV 0x8CE7
#endif

#ifndef GL_COLOR_ATTACHMENT8_NV
#define GL_COLOR_ATTACHMENT8_NV 0x8CE8
#endif

#ifndef GL_COLOR_ATTACHMENT9_NV
#define GL_COLOR_ATTACHMENT9_NV 0x8CE9
#endif

#ifndef GL_COLOR_ATTACHMENT10_NV
#define GL_COLOR_ATTACHMENT10_NV 0x8CEA
#endif

#ifndef GL_COLOR_ATTACHMENT11_NV
#define GL_COLOR_ATTACHMENT11_NV 0x8CEB
#endif

#ifndef GL_COLOR_ATTACHMENT12_NV
#define GL_COLOR_ATTACHMENT12_NV 0x8CEC
#endif

#ifndef GL_COLOR_ATTACHMENT13_NV
#define GL_COLOR_ATTACHMENT13_NV 0x8CED
#endif

#ifndef GL_COLOR_ATTACHMENT14_NV
#define GL_COLOR_ATTACHMENT14_NV 0x8CEE
#endif

#ifndef GL_COLOR_ATTACHMENT15_NV
#define GL_COLOR_ATTACHMENT15_NV 0x8CEF
#endif

#ifndef GL_NV_fence
#define GL_NV_fence 1
#endif

#ifdef glDeleteFencesNV
#undef glDeleteFencesNV
#endif
#ifdef PFNGLDELETEFENCESNVPROC
#undef PFNGLDELETEFENCESNVPROC
#endif
typedef void  (*PFNGLDELETEFENCESNVPROC)(GLsizei n, const GLuint *fences);

#ifdef glGenFencesNV
#undef glGenFencesNV
#endif
#ifdef PFNGLGENFENCESNVPROC
#undef PFNGLGENFENCESNVPROC
#endif
typedef void  (*PFNGLGENFENCESNVPROC)(GLsizei n, GLuint *fences);

#ifdef glIsFenceNV
#undef glIsFenceNV
#endif
#ifdef PFNGLISFENCENVPROC
#undef PFNGLISFENCENVPROC
#endif
typedef GLboolean  (*PFNGLISFENCENVPROC)(GLuint fence);

#ifdef glTestFenceNV
#undef glTestFenceNV
#endif
#ifdef PFNGLTESTFENCENVPROC
#undef PFNGLTESTFENCENVPROC
#endif
typedef GLboolean  (*PFNGLTESTFENCENVPROC)(GLuint fence);

#ifdef glGetFenceivNV
#undef glGetFenceivNV
#endif
#ifdef PFNGLGETFENCEIVNVPROC
#undef PFNGLGETFENCEIVNVPROC
#endif
typedef void  (*PFNGLGETFENCEIVNVPROC)(GLuint fence, GLenum pname, GLint *params);

#ifdef glFinishFenceNV
#undef glFinishFenceNV
#endif
#ifdef PFNGLFINISHFENCENVPROC
#undef PFNGLFINISHFENCENVPROC
#endif
typedef void  (*PFNGLFINISHFENCENVPROC)(GLuint fence);

#ifdef glSetFenceNV
#undef glSetFenceNV
#endif
#ifdef PFNGLSETFENCENVPROC
#undef PFNGLSETFENCENVPROC
#endif
typedef void  (*PFNGLSETFENCENVPROC)(GLuint fence, GLenum condition);

#ifndef GL_ALL_COMPLETED_NV
#define GL_ALL_COMPLETED_NV 0x84F2
#endif

#ifndef GL_FENCE_STATUS_NV
#define GL_FENCE_STATUS_NV 0x84F3
#endif

#ifndef GL_FENCE_CONDITION_NV
#define GL_FENCE_CONDITION_NV 0x84F4
#endif

#ifndef GL_NV_fill_rectangle
#define GL_NV_fill_rectangle 1
#endif

#ifndef GL_FILL_RECTANGLE_NV
#define GL_FILL_RECTANGLE_NV 0x933C
#endif

#ifndef GL_NV_float_buffer
#define GL_NV_float_buffer 1
#endif

#ifndef GL_FLOAT_R_NV
#define GL_FLOAT_R_NV 0x8880
#endif

#ifndef GL_FLOAT_RG_NV
#define GL_FLOAT_RG_NV 0x8881
#endif

#ifndef GL_FLOAT_RGB_NV
#define GL_FLOAT_RGB_NV 0x8882
#endif

#ifndef GL_FLOAT_RGBA_NV
#define GL_FLOAT_RGBA_NV 0x8883
#endif

#ifndef GL_FLOAT_R16_NV
#define GL_FLOAT_R16_NV 0x8884
#endif

#ifndef GL_FLOAT_R32_NV
#define GL_FLOAT_R32_NV 0x8885
#endif

#ifndef GL_FLOAT_RG16_NV
#define GL_FLOAT_RG16_NV 0x8886
#endif

#ifndef GL_FLOAT_RG32_NV
#define GL_FLOAT_RG32_NV 0x8887
#endif

#ifndef GL_FLOAT_RGB16_NV
#define GL_FLOAT_RGB16_NV 0x8888
#endif

#ifndef GL_FLOAT_RGB32_NV
#define GL_FLOAT_RGB32_NV 0x8889
#endif

#ifndef GL_FLOAT_RGBA16_NV
#define GL_FLOAT_RGBA16_NV 0x888A
#endif

#ifndef GL_FLOAT_RGBA32_NV
#define GL_FLOAT_RGBA32_NV 0x888B
#endif

#ifndef GL_TEXTURE_FLOAT_COMPONENTS_NV
#define GL_TEXTURE_FLOAT_COMPONENTS_NV 0x888C
#endif

#ifndef GL_FLOAT_CLEAR_COLOR_VALUE_NV
#define GL_FLOAT_CLEAR_COLOR_VALUE_NV 0x888D
#endif

#ifndef GL_FLOAT_RGBA_MODE_NV
#define GL_FLOAT_RGBA_MODE_NV 0x888E
#endif

#ifndef GL_NV_fog_distance
#define GL_NV_fog_distance 1
#endif

#ifndef GL_FOG_DISTANCE_MODE_NV
#define GL_FOG_DISTANCE_MODE_NV 0x855A
#endif

#ifndef GL_EYE_RADIAL_NV
#define GL_EYE_RADIAL_NV 0x855B
#endif

#ifndef GL_EYE_PLANE_ABSOLUTE_NV
#define GL_EYE_PLANE_ABSOLUTE_NV 0x855C
#endif

#ifndef GL_EYE_PLANE
#define GL_EYE_PLANE 0x2502
#endif

#ifndef GL_NV_fragment_coverage_to_color
#define GL_NV_fragment_coverage_to_color 1
#endif

#ifdef glFragmentCoverageColorNV
#undef glFragmentCoverageColorNV
#endif
#ifdef PFNGLFRAGMENTCOVERAGECOLORNVPROC
#undef PFNGLFRAGMENTCOVERAGECOLORNVPROC
#endif
typedef void  (*PFNGLFRAGMENTCOVERAGECOLORNVPROC)(GLuint color);

#ifndef GL_FRAGMENT_COVERAGE_TO_COLOR_NV
#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV 0x92DD
#endif

#ifndef GL_FRAGMENT_COVERAGE_COLOR_NV
#define GL_FRAGMENT_COVERAGE_COLOR_NV 0x92DE
#endif

#ifndef GL_NV_fragment_program
#define GL_NV_fragment_program 1
#endif

#ifndef GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV
#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
#endif

#ifndef GL_FRAGMENT_PROGRAM_NV
#define GL_FRAGMENT_PROGRAM_NV 0x8870
#endif

#ifndef GL_MAX_TEXTURE_COORDS_NV
#define GL_MAX_TEXTURE_COORDS_NV 0x8871
#endif

#ifndef GL_MAX_TEXTURE_IMAGE_UNITS_NV
#define GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
#endif

#ifndef GL_FRAGMENT_PROGRAM_BINDING_NV
#define GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
#endif

#ifndef GL_PROGRAM_ERROR_STRING_NV
#define GL_PROGRAM_ERROR_STRING_NV 0x8874
#endif

#ifdef glProgramNamedParameter4fNV
#undef glProgramNamedParameter4fNV
#endif
#ifdef PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
#undef PFNGLPROGRAMNAMEDPARAMETER4FNVPROC
#endif
typedef void  (*PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glProgramNamedParameter4fvNV
#undef glProgramNamedParameter4fvNV
#endif
#ifdef PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
#undef PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC
#endif
typedef void  (*PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);

#ifdef glProgramNamedParameter4dNV
#undef glProgramNamedParameter4dNV
#endif
#ifdef PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
#undef PFNGLPROGRAMNAMEDPARAMETER4DNVPROC
#endif
typedef void  (*PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glProgramNamedParameter4dvNV
#undef glProgramNamedParameter4dvNV
#endif
#ifdef PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
#undef PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC
#endif
typedef void  (*PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);

#ifdef glGetProgramNamedParameterfvNV
#undef glGetProgramNamedParameterfvNV
#endif
#ifdef PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
#undef PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);

#ifdef glGetProgramNamedParameterdvNV
#undef glGetProgramNamedParameterdvNV
#endif
#ifdef PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
#undef PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);

#ifndef GL_NV_fragment_program2
#define GL_NV_fragment_program2 1
#endif

#ifndef GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#endif

#ifndef GL_MAX_PROGRAM_CALL_DEPTH_NV
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
#endif

#ifndef GL_MAX_PROGRAM_IF_DEPTH_NV
#define GL_MAX_PROGRAM_IF_DEPTH_NV 0x88F6
#endif

#ifndef GL_MAX_PROGRAM_LOOP_DEPTH_NV
#define GL_MAX_PROGRAM_LOOP_DEPTH_NV 0x88F7
#endif

#ifndef GL_MAX_PROGRAM_LOOP_COUNT_NV
#define GL_MAX_PROGRAM_LOOP_COUNT_NV 0x88F8
#endif

#ifndef GL_NV_fragment_program4
#define GL_NV_fragment_program4 1
#endif

#ifndef GL_NV_fragment_program_option
#define GL_NV_fragment_program_option 1
#endif

#ifndef GL_NV_fragment_shader_interlock
#define GL_NV_fragment_shader_interlock 1
#endif

#ifndef GL_NV_framebuffer_blit
#define GL_NV_framebuffer_blit 1
#endif

#ifdef glBlitFramebufferNV
#undef glBlitFramebufferNV
#endif
#ifdef PFNGLBLITFRAMEBUFFERNVPROC
#undef PFNGLBLITFRAMEBUFFERNVPROC
#endif
typedef void  (*PFNGLBLITFRAMEBUFFERNVPROC)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#ifndef GL_READ_FRAMEBUFFER_NV
#define GL_READ_FRAMEBUFFER_NV 0x8CA8
#endif

#ifndef GL_DRAW_FRAMEBUFFER_NV
#define GL_DRAW_FRAMEBUFFER_NV 0x8CA9
#endif

#ifndef GL_DRAW_FRAMEBUFFER_BINDING_NV
#define GL_DRAW_FRAMEBUFFER_BINDING_NV 0x8CA6
#endif

#ifndef GL_READ_FRAMEBUFFER_BINDING_NV
#define GL_READ_FRAMEBUFFER_BINDING_NV 0x8CAA
#endif

#ifndef GL_NV_framebuffer_mixed_samples
#define GL_NV_framebuffer_mixed_samples 1
#endif

#ifdef glRasterSamplesEXT
#undef glRasterSamplesEXT
#endif
#ifdef PFNGLRASTERSAMPLESEXTPROC
#undef PFNGLRASTERSAMPLESEXTPROC
#endif
typedef void  (*PFNGLRASTERSAMPLESEXTPROC)(GLuint samples, GLboolean fixedsamplelocations);

#ifdef glCoverageModulationTableNV
#undef glCoverageModulationTableNV
#endif
#ifdef PFNGLCOVERAGEMODULATIONTABLENVPROC
#undef PFNGLCOVERAGEMODULATIONTABLENVPROC
#endif
typedef void  (*PFNGLCOVERAGEMODULATIONTABLENVPROC)(GLsizei n, const GLfloat *v);

#ifdef glGetCoverageModulationTableNV
#undef glGetCoverageModulationTableNV
#endif
#ifdef PFNGLGETCOVERAGEMODULATIONTABLENVPROC
#undef PFNGLGETCOVERAGEMODULATIONTABLENVPROC
#endif
typedef void  (*PFNGLGETCOVERAGEMODULATIONTABLENVPROC)(GLsizei bufsize, GLfloat *v);

#ifdef glCoverageModulationNV
#undef glCoverageModulationNV
#endif
#ifdef PFNGLCOVERAGEMODULATIONNVPROC
#undef PFNGLCOVERAGEMODULATIONNVPROC
#endif
typedef void  (*PFNGLCOVERAGEMODULATIONNVPROC)(GLenum components);

#ifndef GL_RASTER_MULTISAMPLE_EXT
#define GL_RASTER_MULTISAMPLE_EXT 0x9327
#endif

#ifndef GL_COVERAGE_MODULATION_TABLE_NV
#define GL_COVERAGE_MODULATION_TABLE_NV 0x9331
#endif

#ifndef GL_RASTER_SAMPLES_EXT
#define GL_RASTER_SAMPLES_EXT 0x9328
#endif

#ifndef GL_MAX_RASTER_SAMPLES_EXT
#define GL_MAX_RASTER_SAMPLES_EXT 0x9329
#endif

#ifndef GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT
#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT 0x932A
#endif

#ifndef GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT
#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT 0x932B
#endif

#ifndef GL_EFFECTIVE_RASTER_SAMPLES_EXT
#define GL_EFFECTIVE_RASTER_SAMPLES_EXT 0x932C
#endif

#ifndef GL_COLOR_SAMPLES_NV
#define GL_COLOR_SAMPLES_NV 0x8E20
#endif

#ifndef GL_DEPTH_SAMPLES_NV
#define GL_DEPTH_SAMPLES_NV 0x932D
#endif

#ifndef GL_STENCIL_SAMPLES_NV
#define GL_STENCIL_SAMPLES_NV 0x932E
#endif

#ifndef GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV
#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV 0x932F
#endif

#ifndef GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV
#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV 0x9330
#endif

#ifndef GL_COVERAGE_MODULATION_NV
#define GL_COVERAGE_MODULATION_NV 0x9332
#endif

#ifndef GL_COVERAGE_MODULATION_TABLE_SIZE_NV
#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
#endif

#ifndef GL_NV_framebuffer_multisample
#define GL_NV_framebuffer_multisample 1
#endif

#ifdef glRenderbufferStorageMultisampleNV
#undef glRenderbufferStorageMultisampleNV
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);

#ifndef GL_RENDERBUFFER_SAMPLES_NV
#define GL_RENDERBUFFER_SAMPLES_NV 0x8CAB
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV 0x8D56
#endif

#ifndef GL_MAX_SAMPLES_NV
#define GL_MAX_SAMPLES_NV 0x8D57
#endif

#ifndef GL_NV_framebuffer_multisample_coverage
#define GL_NV_framebuffer_multisample_coverage 1
#endif

#ifdef glRenderbufferStorageMultisampleCoverageNV
#undef glRenderbufferStorageMultisampleCoverageNV
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
#undef PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);

#ifndef GL_RENDERBUFFER_COVERAGE_SAMPLES_NV
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
#endif

#ifndef GL_RENDERBUFFER_COLOR_SAMPLES_NV
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV 0x8E10
#endif

#ifndef GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
#endif

#ifndef GL_MULTISAMPLE_COVERAGE_MODES_NV
#define GL_MULTISAMPLE_COVERAGE_MODES_NV 0x8E12
#endif

#ifndef GL_NV_generate_mipmap_sRGB
#define GL_NV_generate_mipmap_sRGB 1
#endif

#ifndef GL_NV_geometry_program4
#define GL_NV_geometry_program4 1
#endif

#ifdef glProgramVertexLimitNV
#undef glProgramVertexLimitNV
#endif
#ifdef PFNGLPROGRAMVERTEXLIMITNVPROC
#undef PFNGLPROGRAMVERTEXLIMITNVPROC
#endif
typedef void  (*PFNGLPROGRAMVERTEXLIMITNVPROC)(GLenum target, GLint limit);

#ifdef glFramebufferTextureEXT
#undef glFramebufferTextureEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTUREEXTPROC
#undef PFNGLFRAMEBUFFERTEXTUREEXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTUREEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);

#ifdef glFramebufferTextureLayerEXT
#undef glFramebufferTextureLayerEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
#undef PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);

#ifdef glFramebufferTextureFaceEXT
#undef glFramebufferTextureFaceEXT
#endif
#ifdef PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
#undef PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);

#ifndef GL_LINES_ADJACENCY_EXT
#define GL_LINES_ADJACENCY_EXT 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_EXT
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_EXT
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_EXT
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#endif

#ifndef GL_GEOMETRY_PROGRAM_NV
#define GL_GEOMETRY_PROGRAM_NV 0x8C26
#endif

#ifndef GL_MAX_PROGRAM_OUTPUT_VERTICES_NV
#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
#endif

#ifndef GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV
#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
#endif

#ifndef GL_GEOMETRY_VERTICES_OUT_EXT
#define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
#endif

#ifndef GL_GEOMETRY_INPUT_TYPE_EXT
#define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
#endif

#ifndef GL_GEOMETRY_OUTPUT_TYPE_EXT
#define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#endif

#ifndef GL_PROGRAM_POINT_SIZE_EXT
#define GL_PROGRAM_POINT_SIZE_EXT 0x8642
#endif

#ifndef GL_NV_geometry_shader4
#define GL_NV_geometry_shader4 1
#endif

#ifndef GL_NV_geometry_shader_passthrough
#define GL_NV_geometry_shader_passthrough 1
#endif

#ifndef GL_NV_gpu_program4
#define GL_NV_gpu_program4 1
#endif

#ifdef glProgramLocalParameterI4iNV
#undef glProgramLocalParameterI4iNV
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETERI4INVPROC
#undef PFNGLPROGRAMLOCALPARAMETERI4INVPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETERI4INVPROC)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);

#ifdef glProgramLocalParameterI4ivNV
#undef glProgramLocalParameterI4ivNV
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
#undef PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)(GLenum target, GLuint index, const GLint *params);

#ifdef glProgramLocalParametersI4ivNV
#undef glProgramLocalParametersI4ivNV
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
#undef PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLint *params);

#ifdef glProgramLocalParameterI4uiNV
#undef glProgramLocalParameterI4uiNV
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
#undef PFNGLPROGRAMLOCALPARAMETERI4UINVPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);

#ifdef glProgramLocalParameterI4uivNV
#undef glProgramLocalParameterI4uivNV
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
#undef PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)(GLenum target, GLuint index, const GLuint *params);

#ifdef glProgramLocalParametersI4uivNV
#undef glProgramLocalParametersI4uivNV
#endif
#ifdef PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
#undef PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC
#endif
typedef void  (*PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLuint *params);

#ifdef glProgramEnvParameterI4iNV
#undef glProgramEnvParameterI4iNV
#endif
#ifdef PFNGLPROGRAMENVPARAMETERI4INVPROC
#undef PFNGLPROGRAMENVPARAMETERI4INVPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETERI4INVPROC)(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);

#ifdef glProgramEnvParameterI4ivNV
#undef glProgramEnvParameterI4ivNV
#endif
#ifdef PFNGLPROGRAMENVPARAMETERI4IVNVPROC
#undef PFNGLPROGRAMENVPARAMETERI4IVNVPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETERI4IVNVPROC)(GLenum target, GLuint index, const GLint *params);

#ifdef glProgramEnvParametersI4ivNV
#undef glProgramEnvParametersI4ivNV
#endif
#ifdef PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
#undef PFNGLPROGRAMENVPARAMETERSI4IVNVPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLint *params);

#ifdef glProgramEnvParameterI4uiNV
#undef glProgramEnvParameterI4uiNV
#endif
#ifdef PFNGLPROGRAMENVPARAMETERI4UINVPROC
#undef PFNGLPROGRAMENVPARAMETERI4UINVPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETERI4UINVPROC)(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);

#ifdef glProgramEnvParameterI4uivNV
#undef glProgramEnvParameterI4uivNV
#endif
#ifdef PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
#undef PFNGLPROGRAMENVPARAMETERI4UIVNVPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)(GLenum target, GLuint index, const GLuint *params);

#ifdef glProgramEnvParametersI4uivNV
#undef glProgramEnvParametersI4uivNV
#endif
#ifdef PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
#undef PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC
#endif
typedef void  (*PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLuint *params);

#ifdef glGetProgramLocalParameterIivNV
#undef glGetProgramLocalParameterIivNV
#endif
#ifdef PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
#undef PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC)(GLenum target, GLuint index, GLint *params);

#ifdef glGetProgramLocalParameterIuivNV
#undef glGetProgramLocalParameterIuivNV
#endif
#ifdef PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
#undef PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC)(GLenum target, GLuint index, GLuint *params);

#ifdef glGetProgramEnvParameterIivNV
#undef glGetProgramEnvParameterIivNV
#endif
#ifdef PFNGLGETPROGRAMENVPARAMETERIIVNVPROC
#undef PFNGLGETPROGRAMENVPARAMETERIIVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMENVPARAMETERIIVNVPROC)(GLenum target, GLuint index, GLint *params);

#ifdef glGetProgramEnvParameterIuivNV
#undef glGetProgramEnvParameterIuivNV
#endif
#ifdef PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
#undef PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC)(GLenum target, GLuint index, GLuint *params);

#ifndef GL_MIN_PROGRAM_TEXEL_OFFSET_NV
#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904
#endif

#ifndef GL_MAX_PROGRAM_TEXEL_OFFSET_NV
#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905
#endif

#ifndef GL_PROGRAM_ATTRIB_COMPONENTS_NV
#define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906
#endif

#ifndef GL_PROGRAM_RESULT_COMPONENTS_NV
#define GL_PROGRAM_RESULT_COMPONENTS_NV 0x8907
#endif

#ifndef GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV
#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
#endif

#ifndef GL_MAX_PROGRAM_RESULT_COMPONENTS_NV
#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
#endif

#ifndef GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV
#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
#endif

#ifndef GL_MAX_PROGRAM_GENERIC_RESULTS_NV
#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
#endif

#ifndef GL_NV_gpu_program5
#define GL_NV_gpu_program5 1
#endif

#ifdef glProgramSubroutineParametersuivNV
#undef glProgramSubroutineParametersuivNV
#endif
#ifdef PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC
#undef PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC
#endif
typedef void  (*PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC)(GLenum target, GLsizei count, const GLuint *params);

#ifdef glGetProgramSubroutineParameteruivNV
#undef glGetProgramSubroutineParameteruivNV
#endif
#ifdef PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC
#undef PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC)(GLenum target, GLuint index, GLuint *param);

#ifndef GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV
#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
#endif

#ifndef GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
#endif

#ifndef GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
#endif

#ifndef GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV
#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
#endif

#ifndef GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
#endif

#ifndef GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
#endif

#ifndef GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV
#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
#endif

#ifndef GL_MAX_PROGRAM_SUBROUTINE_NUM_NV
#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV 0x8F45
#endif

#ifndef GL_NV_gpu_program5_mem_extended
#define GL_NV_gpu_program5_mem_extended 1
#endif

#ifndef GL_NV_gpu_shader5
#define GL_NV_gpu_shader5 1
#endif

#ifdef glUniform1i64NV
#undef glUniform1i64NV
#endif
#ifdef PFNGLUNIFORM1I64NVPROC
#undef PFNGLUNIFORM1I64NVPROC
#endif
typedef void  (*PFNGLUNIFORM1I64NVPROC)(GLint location, GLint64EXT x);

#ifdef glUniform2i64NV
#undef glUniform2i64NV
#endif
#ifdef PFNGLUNIFORM2I64NVPROC
#undef PFNGLUNIFORM2I64NVPROC
#endif
typedef void  (*PFNGLUNIFORM2I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y);

#ifdef glUniform3i64NV
#undef glUniform3i64NV
#endif
#ifdef PFNGLUNIFORM3I64NVPROC
#undef PFNGLUNIFORM3I64NVPROC
#endif
typedef void  (*PFNGLUNIFORM3I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);

#ifdef glUniform4i64NV
#undef glUniform4i64NV
#endif
#ifdef PFNGLUNIFORM4I64NVPROC
#undef PFNGLUNIFORM4I64NVPROC
#endif
typedef void  (*PFNGLUNIFORM4I64NVPROC)(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);

#ifdef glUniform1i64vNV
#undef glUniform1i64vNV
#endif
#ifdef PFNGLUNIFORM1I64VNVPROC
#undef PFNGLUNIFORM1I64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM1I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glUniform2i64vNV
#undef glUniform2i64vNV
#endif
#ifdef PFNGLUNIFORM2I64VNVPROC
#undef PFNGLUNIFORM2I64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM2I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glUniform3i64vNV
#undef glUniform3i64vNV
#endif
#ifdef PFNGLUNIFORM3I64VNVPROC
#undef PFNGLUNIFORM3I64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM3I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glUniform4i64vNV
#undef glUniform4i64vNV
#endif
#ifdef PFNGLUNIFORM4I64VNVPROC
#undef PFNGLUNIFORM4I64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM4I64VNVPROC)(GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glUniform1ui64NV
#undef glUniform1ui64NV
#endif
#ifdef PFNGLUNIFORM1UI64NVPROC
#undef PFNGLUNIFORM1UI64NVPROC
#endif
typedef void  (*PFNGLUNIFORM1UI64NVPROC)(GLint location, GLuint64EXT x);

#ifdef glUniform2ui64NV
#undef glUniform2ui64NV
#endif
#ifdef PFNGLUNIFORM2UI64NVPROC
#undef PFNGLUNIFORM2UI64NVPROC
#endif
typedef void  (*PFNGLUNIFORM2UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y);

#ifdef glUniform3ui64NV
#undef glUniform3ui64NV
#endif
#ifdef PFNGLUNIFORM3UI64NVPROC
#undef PFNGLUNIFORM3UI64NVPROC
#endif
typedef void  (*PFNGLUNIFORM3UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);

#ifdef glUniform4ui64NV
#undef glUniform4ui64NV
#endif
#ifdef PFNGLUNIFORM4UI64NVPROC
#undef PFNGLUNIFORM4UI64NVPROC
#endif
typedef void  (*PFNGLUNIFORM4UI64NVPROC)(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);

#ifdef glUniform1ui64vNV
#undef glUniform1ui64vNV
#endif
#ifdef PFNGLUNIFORM1UI64VNVPROC
#undef PFNGLUNIFORM1UI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM1UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glUniform2ui64vNV
#undef glUniform2ui64vNV
#endif
#ifdef PFNGLUNIFORM2UI64VNVPROC
#undef PFNGLUNIFORM2UI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM2UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glUniform3ui64vNV
#undef glUniform3ui64vNV
#endif
#ifdef PFNGLUNIFORM3UI64VNVPROC
#undef PFNGLUNIFORM3UI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM3UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glUniform4ui64vNV
#undef glUniform4ui64vNV
#endif
#ifdef PFNGLUNIFORM4UI64VNVPROC
#undef PFNGLUNIFORM4UI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORM4UI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glGetUniformi64vNV
#undef glGetUniformi64vNV
#endif
#ifdef PFNGLGETUNIFORMI64VNVPROC
#undef PFNGLGETUNIFORMI64VNVPROC
#endif
typedef void  (*PFNGLGETUNIFORMI64VNVPROC)(GLuint program, GLint location, GLint64EXT *params);

#ifndef GL_INT64_NV
#define GL_INT64_NV 0x140E
#endif

#ifndef GL_UNSIGNED_INT64_NV
#define GL_UNSIGNED_INT64_NV 0x140F
#endif

#ifndef GL_INT8_NV
#define GL_INT8_NV 0x8FE0
#endif

#ifndef GL_INT8_VEC2_NV
#define GL_INT8_VEC2_NV 0x8FE1
#endif

#ifndef GL_INT8_VEC3_NV
#define GL_INT8_VEC3_NV 0x8FE2
#endif

#ifndef GL_INT8_VEC4_NV
#define GL_INT8_VEC4_NV 0x8FE3
#endif

#ifndef GL_INT16_NV
#define GL_INT16_NV 0x8FE4
#endif

#ifndef GL_INT16_VEC2_NV
#define GL_INT16_VEC2_NV 0x8FE5
#endif

#ifndef GL_INT16_VEC3_NV
#define GL_INT16_VEC3_NV 0x8FE6
#endif

#ifndef GL_INT16_VEC4_NV
#define GL_INT16_VEC4_NV 0x8FE7
#endif

#ifndef GL_INT64_VEC2_NV
#define GL_INT64_VEC2_NV 0x8FE9
#endif

#ifndef GL_INT64_VEC3_NV
#define GL_INT64_VEC3_NV 0x8FEA
#endif

#ifndef GL_INT64_VEC4_NV
#define GL_INT64_VEC4_NV 0x8FEB
#endif

#ifndef GL_UNSIGNED_INT8_NV
#define GL_UNSIGNED_INT8_NV 0x8FEC
#endif

#ifndef GL_UNSIGNED_INT8_VEC2_NV
#define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
#endif

#ifndef GL_UNSIGNED_INT8_VEC3_NV
#define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
#endif

#ifndef GL_UNSIGNED_INT8_VEC4_NV
#define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
#endif

#ifndef GL_UNSIGNED_INT16_NV
#define GL_UNSIGNED_INT16_NV 0x8FF0
#endif

#ifndef GL_UNSIGNED_INT16_VEC2_NV
#define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
#endif

#ifndef GL_UNSIGNED_INT16_VEC3_NV
#define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
#endif

#ifndef GL_UNSIGNED_INT16_VEC4_NV
#define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
#endif

#ifndef GL_UNSIGNED_INT64_VEC2_NV
#define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
#endif

#ifndef GL_UNSIGNED_INT64_VEC3_NV
#define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
#endif

#ifndef GL_UNSIGNED_INT64_VEC4_NV
#define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
#endif

#ifndef GL_FLOAT16_NV
#define GL_FLOAT16_NV 0x8FF8
#endif

#ifndef GL_FLOAT16_VEC2_NV
#define GL_FLOAT16_VEC2_NV 0x8FF9
#endif

#ifndef GL_FLOAT16_VEC3_NV
#define GL_FLOAT16_VEC3_NV 0x8FFA
#endif

#ifndef GL_FLOAT16_VEC4_NV
#define GL_FLOAT16_VEC4_NV 0x8FFB
#endif

#ifndef GL_PATCHES
#define GL_PATCHES 0x000E
#endif

#ifdef glProgramUniform1i64NV
#undef glProgramUniform1i64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM1I64NVPROC
#undef PFNGLPROGRAMUNIFORM1I64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1I64NVPROC)(GLuint program, GLint location, GLint64EXT x);

#ifdef glProgramUniform2i64NV
#undef glProgramUniform2i64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM2I64NVPROC
#undef PFNGLPROGRAMUNIFORM2I64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);

#ifdef glProgramUniform3i64NV
#undef glProgramUniform3i64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM3I64NVPROC
#undef PFNGLPROGRAMUNIFORM3I64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);

#ifdef glProgramUniform4i64NV
#undef glProgramUniform4i64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM4I64NVPROC
#undef PFNGLPROGRAMUNIFORM4I64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4I64NVPROC)(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);

#ifdef glProgramUniform1i64vNV
#undef glProgramUniform1i64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM1I64VNVPROC
#undef PFNGLPROGRAMUNIFORM1I64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glProgramUniform2i64vNV
#undef glProgramUniform2i64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM2I64VNVPROC
#undef PFNGLPROGRAMUNIFORM2I64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glProgramUniform3i64vNV
#undef glProgramUniform3i64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM3I64VNVPROC
#undef PFNGLPROGRAMUNIFORM3I64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glProgramUniform4i64vNV
#undef glProgramUniform4i64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM4I64VNVPROC
#undef PFNGLPROGRAMUNIFORM4I64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4I64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);

#ifdef glProgramUniform1ui64NV
#undef glProgramUniform1ui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM1UI64NVPROC
#undef PFNGLPROGRAMUNIFORM1UI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x);

#ifdef glProgramUniform2ui64NV
#undef glProgramUniform2ui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM2UI64NVPROC
#undef PFNGLPROGRAMUNIFORM2UI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);

#ifdef glProgramUniform3ui64NV
#undef glProgramUniform3ui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM3UI64NVPROC
#undef PFNGLPROGRAMUNIFORM3UI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);

#ifdef glProgramUniform4ui64NV
#undef glProgramUniform4ui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORM4UI64NVPROC
#undef PFNGLPROGRAMUNIFORM4UI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UI64NVPROC)(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);

#ifdef glProgramUniform1ui64vNV
#undef glProgramUniform1ui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM1UI64VNVPROC
#undef PFNGLPROGRAMUNIFORM1UI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM1UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glProgramUniform2ui64vNV
#undef glProgramUniform2ui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM2UI64VNVPROC
#undef PFNGLPROGRAMUNIFORM2UI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM2UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glProgramUniform3ui64vNV
#undef glProgramUniform3ui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM3UI64VNVPROC
#undef PFNGLPROGRAMUNIFORM3UI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM3UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glProgramUniform4ui64vNV
#undef glProgramUniform4ui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORM4UI64VNVPROC
#undef PFNGLPROGRAMUNIFORM4UI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORM4UI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifndef GL_NV_half_float
#define GL_NV_half_float 1
#endif

#ifdef glVertex2hNV
#undef glVertex2hNV
#endif
#ifdef PFNGLVERTEX2HNVPROC
#undef PFNGLVERTEX2HNVPROC
#endif
typedef void  (*PFNGLVERTEX2HNVPROC)(GLhalfNV x, GLhalfNV y);

#ifdef glVertex2hvNV
#undef glVertex2hvNV
#endif
#ifdef PFNGLVERTEX2HVNVPROC
#undef PFNGLVERTEX2HVNVPROC
#endif
typedef void  (*PFNGLVERTEX2HVNVPROC)(const GLhalfNV *v);

#ifdef glVertex3hNV
#undef glVertex3hNV
#endif
#ifdef PFNGLVERTEX3HNVPROC
#undef PFNGLVERTEX3HNVPROC
#endif
typedef void  (*PFNGLVERTEX3HNVPROC)(GLhalfNV x, GLhalfNV y, GLhalfNV z);

#ifdef glVertex3hvNV
#undef glVertex3hvNV
#endif
#ifdef PFNGLVERTEX3HVNVPROC
#undef PFNGLVERTEX3HVNVPROC
#endif
typedef void  (*PFNGLVERTEX3HVNVPROC)(const GLhalfNV *v);

#ifdef glVertex4hNV
#undef glVertex4hNV
#endif
#ifdef PFNGLVERTEX4HNVPROC
#undef PFNGLVERTEX4HNVPROC
#endif
typedef void  (*PFNGLVERTEX4HNVPROC)(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);

#ifdef glVertex4hvNV
#undef glVertex4hvNV
#endif
#ifdef PFNGLVERTEX4HVNVPROC
#undef PFNGLVERTEX4HVNVPROC
#endif
typedef void  (*PFNGLVERTEX4HVNVPROC)(const GLhalfNV *v);

#ifdef glNormal3hNV
#undef glNormal3hNV
#endif
#ifdef PFNGLNORMAL3HNVPROC
#undef PFNGLNORMAL3HNVPROC
#endif
typedef void  (*PFNGLNORMAL3HNVPROC)(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);

#ifdef glNormal3hvNV
#undef glNormal3hvNV
#endif
#ifdef PFNGLNORMAL3HVNVPROC
#undef PFNGLNORMAL3HVNVPROC
#endif
typedef void  (*PFNGLNORMAL3HVNVPROC)(const GLhalfNV *v);

#ifdef glColor3hNV
#undef glColor3hNV
#endif
#ifdef PFNGLCOLOR3HNVPROC
#undef PFNGLCOLOR3HNVPROC
#endif
typedef void  (*PFNGLCOLOR3HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);

#ifdef glColor3hvNV
#undef glColor3hvNV
#endif
#ifdef PFNGLCOLOR3HVNVPROC
#undef PFNGLCOLOR3HVNVPROC
#endif
typedef void  (*PFNGLCOLOR3HVNVPROC)(const GLhalfNV *v);

#ifdef glColor4hNV
#undef glColor4hNV
#endif
#ifdef PFNGLCOLOR4HNVPROC
#undef PFNGLCOLOR4HNVPROC
#endif
typedef void  (*PFNGLCOLOR4HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);

#ifdef glColor4hvNV
#undef glColor4hvNV
#endif
#ifdef PFNGLCOLOR4HVNVPROC
#undef PFNGLCOLOR4HVNVPROC
#endif
typedef void  (*PFNGLCOLOR4HVNVPROC)(const GLhalfNV *v);

#ifdef glTexCoord1hNV
#undef glTexCoord1hNV
#endif
#ifdef PFNGLTEXCOORD1HNVPROC
#undef PFNGLTEXCOORD1HNVPROC
#endif
typedef void  (*PFNGLTEXCOORD1HNVPROC)(GLhalfNV s);

#ifdef glTexCoord1hvNV
#undef glTexCoord1hvNV
#endif
#ifdef PFNGLTEXCOORD1HVNVPROC
#undef PFNGLTEXCOORD1HVNVPROC
#endif
typedef void  (*PFNGLTEXCOORD1HVNVPROC)(const GLhalfNV *v);

#ifdef glTexCoord2hNV
#undef glTexCoord2hNV
#endif
#ifdef PFNGLTEXCOORD2HNVPROC
#undef PFNGLTEXCOORD2HNVPROC
#endif
typedef void  (*PFNGLTEXCOORD2HNVPROC)(GLhalfNV s, GLhalfNV t);

#ifdef glTexCoord2hvNV
#undef glTexCoord2hvNV
#endif
#ifdef PFNGLTEXCOORD2HVNVPROC
#undef PFNGLTEXCOORD2HVNVPROC
#endif
typedef void  (*PFNGLTEXCOORD2HVNVPROC)(const GLhalfNV *v);

#ifdef glTexCoord3hNV
#undef glTexCoord3hNV
#endif
#ifdef PFNGLTEXCOORD3HNVPROC
#undef PFNGLTEXCOORD3HNVPROC
#endif
typedef void  (*PFNGLTEXCOORD3HNVPROC)(GLhalfNV s, GLhalfNV t, GLhalfNV r);

#ifdef glTexCoord3hvNV
#undef glTexCoord3hvNV
#endif
#ifdef PFNGLTEXCOORD3HVNVPROC
#undef PFNGLTEXCOORD3HVNVPROC
#endif
typedef void  (*PFNGLTEXCOORD3HVNVPROC)(const GLhalfNV *v);

#ifdef glTexCoord4hNV
#undef glTexCoord4hNV
#endif
#ifdef PFNGLTEXCOORD4HNVPROC
#undef PFNGLTEXCOORD4HNVPROC
#endif
typedef void  (*PFNGLTEXCOORD4HNVPROC)(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);

#ifdef glTexCoord4hvNV
#undef glTexCoord4hvNV
#endif
#ifdef PFNGLTEXCOORD4HVNVPROC
#undef PFNGLTEXCOORD4HVNVPROC
#endif
typedef void  (*PFNGLTEXCOORD4HVNVPROC)(const GLhalfNV *v);

#ifdef glMultiTexCoord1hNV
#undef glMultiTexCoord1hNV
#endif
#ifdef PFNGLMULTITEXCOORD1HNVPROC
#undef PFNGLMULTITEXCOORD1HNVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1HNVPROC)(GLenum target, GLhalfNV s);

#ifdef glMultiTexCoord1hvNV
#undef glMultiTexCoord1hvNV
#endif
#ifdef PFNGLMULTITEXCOORD1HVNVPROC
#undef PFNGLMULTITEXCOORD1HVNVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1HVNVPROC)(GLenum target, const GLhalfNV *v);

#ifdef glMultiTexCoord2hNV
#undef glMultiTexCoord2hNV
#endif
#ifdef PFNGLMULTITEXCOORD2HNVPROC
#undef PFNGLMULTITEXCOORD2HNVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t);

#ifdef glMultiTexCoord2hvNV
#undef glMultiTexCoord2hvNV
#endif
#ifdef PFNGLMULTITEXCOORD2HVNVPROC
#undef PFNGLMULTITEXCOORD2HVNVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2HVNVPROC)(GLenum target, const GLhalfNV *v);

#ifdef glMultiTexCoord3hNV
#undef glMultiTexCoord3hNV
#endif
#ifdef PFNGLMULTITEXCOORD3HNVPROC
#undef PFNGLMULTITEXCOORD3HNVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);

#ifdef glMultiTexCoord3hvNV
#undef glMultiTexCoord3hvNV
#endif
#ifdef PFNGLMULTITEXCOORD3HVNVPROC
#undef PFNGLMULTITEXCOORD3HVNVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3HVNVPROC)(GLenum target, const GLhalfNV *v);

#ifdef glMultiTexCoord4hNV
#undef glMultiTexCoord4hNV
#endif
#ifdef PFNGLMULTITEXCOORD4HNVPROC
#undef PFNGLMULTITEXCOORD4HNVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4HNVPROC)(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);

#ifdef glMultiTexCoord4hvNV
#undef glMultiTexCoord4hvNV
#endif
#ifdef PFNGLMULTITEXCOORD4HVNVPROC
#undef PFNGLMULTITEXCOORD4HVNVPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4HVNVPROC)(GLenum target, const GLhalfNV *v);

#ifdef glFogCoordhNV
#undef glFogCoordhNV
#endif
#ifdef PFNGLFOGCOORDHNVPROC
#undef PFNGLFOGCOORDHNVPROC
#endif
typedef void  (*PFNGLFOGCOORDHNVPROC)(GLhalfNV fog);

#ifdef glFogCoordhvNV
#undef glFogCoordhvNV
#endif
#ifdef PFNGLFOGCOORDHVNVPROC
#undef PFNGLFOGCOORDHVNVPROC
#endif
typedef void  (*PFNGLFOGCOORDHVNVPROC)(const GLhalfNV *fog);

#ifdef glSecondaryColor3hNV
#undef glSecondaryColor3hNV
#endif
#ifdef PFNGLSECONDARYCOLOR3HNVPROC
#undef PFNGLSECONDARYCOLOR3HNVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3HNVPROC)(GLhalfNV red, GLhalfNV green, GLhalfNV blue);

#ifdef glSecondaryColor3hvNV
#undef glSecondaryColor3hvNV
#endif
#ifdef PFNGLSECONDARYCOLOR3HVNVPROC
#undef PFNGLSECONDARYCOLOR3HVNVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLOR3HVNVPROC)(const GLhalfNV *v);

#ifdef glVertexWeighthNV
#undef glVertexWeighthNV
#endif
#ifdef PFNGLVERTEXWEIGHTHNVPROC
#undef PFNGLVERTEXWEIGHTHNVPROC
#endif
typedef void  (*PFNGLVERTEXWEIGHTHNVPROC)(GLhalfNV weight);

#ifdef glVertexWeighthvNV
#undef glVertexWeighthvNV
#endif
#ifdef PFNGLVERTEXWEIGHTHVNVPROC
#undef PFNGLVERTEXWEIGHTHVNVPROC
#endif
typedef void  (*PFNGLVERTEXWEIGHTHVNVPROC)(const GLhalfNV *weight);

#ifdef glVertexAttrib1hNV
#undef glVertexAttrib1hNV
#endif
#ifdef PFNGLVERTEXATTRIB1HNVPROC
#undef PFNGLVERTEXATTRIB1HNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1HNVPROC)(GLuint index, GLhalfNV x);

#ifdef glVertexAttrib1hvNV
#undef glVertexAttrib1hvNV
#endif
#ifdef PFNGLVERTEXATTRIB1HVNVPROC
#undef PFNGLVERTEXATTRIB1HVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1HVNVPROC)(GLuint index, const GLhalfNV *v);

#ifdef glVertexAttrib2hNV
#undef glVertexAttrib2hNV
#endif
#ifdef PFNGLVERTEXATTRIB2HNVPROC
#undef PFNGLVERTEXATTRIB2HNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y);

#ifdef glVertexAttrib2hvNV
#undef glVertexAttrib2hvNV
#endif
#ifdef PFNGLVERTEXATTRIB2HVNVPROC
#undef PFNGLVERTEXATTRIB2HVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2HVNVPROC)(GLuint index, const GLhalfNV *v);

#ifdef glVertexAttrib3hNV
#undef glVertexAttrib3hNV
#endif
#ifdef PFNGLVERTEXATTRIB3HNVPROC
#undef PFNGLVERTEXATTRIB3HNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);

#ifdef glVertexAttrib3hvNV
#undef glVertexAttrib3hvNV
#endif
#ifdef PFNGLVERTEXATTRIB3HVNVPROC
#undef PFNGLVERTEXATTRIB3HVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3HVNVPROC)(GLuint index, const GLhalfNV *v);

#ifdef glVertexAttrib4hNV
#undef glVertexAttrib4hNV
#endif
#ifdef PFNGLVERTEXATTRIB4HNVPROC
#undef PFNGLVERTEXATTRIB4HNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4HNVPROC)(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);

#ifdef glVertexAttrib4hvNV
#undef glVertexAttrib4hvNV
#endif
#ifdef PFNGLVERTEXATTRIB4HVNVPROC
#undef PFNGLVERTEXATTRIB4HVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4HVNVPROC)(GLuint index, const GLhalfNV *v);

#ifdef glVertexAttribs1hvNV
#undef glVertexAttribs1hvNV
#endif
#ifdef PFNGLVERTEXATTRIBS1HVNVPROC
#undef PFNGLVERTEXATTRIBS1HVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS1HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV *v);

#ifdef glVertexAttribs2hvNV
#undef glVertexAttribs2hvNV
#endif
#ifdef PFNGLVERTEXATTRIBS2HVNVPROC
#undef PFNGLVERTEXATTRIBS2HVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS2HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV *v);

#ifdef glVertexAttribs3hvNV
#undef glVertexAttribs3hvNV
#endif
#ifdef PFNGLVERTEXATTRIBS3HVNVPROC
#undef PFNGLVERTEXATTRIBS3HVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS3HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV *v);

#ifdef glVertexAttribs4hvNV
#undef glVertexAttribs4hvNV
#endif
#ifdef PFNGLVERTEXATTRIBS4HVNVPROC
#undef PFNGLVERTEXATTRIBS4HVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS4HVNVPROC)(GLuint index, GLsizei n, const GLhalfNV *v);

#ifndef GL_HALF_FLOAT_NV
#define GL_HALF_FLOAT_NV 0x140B
#endif

#ifndef GL_NV_image_formats
#define GL_NV_image_formats 1
#endif

#ifndef GL_NV_instanced_arrays
#define GL_NV_instanced_arrays 1
#endif

#ifdef glVertexAttribDivisorNV
#undef glVertexAttribDivisorNV
#endif
#ifdef PFNGLVERTEXATTRIBDIVISORNVPROC
#undef PFNGLVERTEXATTRIBDIVISORNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBDIVISORNVPROC)(GLuint index, GLuint divisor);

#ifndef GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV 0x88FE
#endif

#ifndef GL_NV_internalformat_sample_query
#define GL_NV_internalformat_sample_query 1
#endif

#ifdef glGetInternalformatSampleivNV
#undef glGetInternalformatSampleivNV
#endif
#ifdef PFNGLGETINTERNALFORMATSAMPLEIVNVPROC
#undef PFNGLGETINTERNALFORMATSAMPLEIVNVPROC
#endif
typedef void  (*PFNGLGETINTERNALFORMATSAMPLEIVNVPROC)(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);

#ifndef GL_RENDERBUFFER
#define GL_RENDERBUFFER 0x8D41
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#endif

#ifndef GL_TEXTURE_2D_MULTISAMPLE_ARRAY
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#endif

#ifndef GL_MULTISAMPLES_NV
#define GL_MULTISAMPLES_NV 0x9371
#endif

#ifndef GL_SUPERSAMPLE_SCALE_X_NV
#define GL_SUPERSAMPLE_SCALE_X_NV 0x9372
#endif

#ifndef GL_SUPERSAMPLE_SCALE_Y_NV
#define GL_SUPERSAMPLE_SCALE_Y_NV 0x9373
#endif

#ifndef GL_CONFORMANT_NV
#define GL_CONFORMANT_NV 0x9374
#endif

#ifndef GL_NV_light_max_exponent
#define GL_NV_light_max_exponent 1
#endif

#ifndef GL_MAX_SHININESS_NV
#define GL_MAX_SHININESS_NV 0x8504
#endif

#ifndef GL_MAX_SPOT_EXPONENT_NV
#define GL_MAX_SPOT_EXPONENT_NV 0x8505
#endif

#ifndef GL_NV_multisample_coverage
#define GL_NV_multisample_coverage 1
#endif

#ifndef GL_SAMPLES_ARB
#define GL_SAMPLES_ARB 0x80A9
#endif

#ifndef GL_COLOR_SAMPLES_NV
#define GL_COLOR_SAMPLES_NV 0x8E20
#endif

#ifndef GL_NV_multisample_filter_hint
#define GL_NV_multisample_filter_hint 1
#endif

#ifndef GL_MULTISAMPLE_FILTER_HINT_NV
#define GL_MULTISAMPLE_FILTER_HINT_NV 0x8534
#endif

#ifndef GL_NV_non_square_matrices
#define GL_NV_non_square_matrices 1
#endif

#ifdef glUniformMatrix2x3fvNV
#undef glUniformMatrix2x3fvNV
#endif
#ifdef PFNGLUNIFORMMATRIX2X3FVNVPROC
#undef PFNGLUNIFORMMATRIX2X3FVNVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X3FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3x2fvNV
#undef glUniformMatrix3x2fvNV
#endif
#ifdef PFNGLUNIFORMMATRIX3X2FVNVPROC
#undef PFNGLUNIFORMMATRIX3X2FVNVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X2FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix2x4fvNV
#undef glUniformMatrix2x4fvNV
#endif
#ifdef PFNGLUNIFORMMATRIX2X4FVNVPROC
#undef PFNGLUNIFORMMATRIX2X4FVNVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX2X4FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4x2fvNV
#undef glUniformMatrix4x2fvNV
#endif
#ifdef PFNGLUNIFORMMATRIX4X2FVNVPROC
#undef PFNGLUNIFORMMATRIX4X2FVNVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X2FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix3x4fvNV
#undef glUniformMatrix3x4fvNV
#endif
#ifdef PFNGLUNIFORMMATRIX3X4FVNVPROC
#undef PFNGLUNIFORMMATRIX3X4FVNVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX3X4FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifdef glUniformMatrix4x3fvNV
#undef glUniformMatrix4x3fvNV
#endif
#ifdef PFNGLUNIFORMMATRIX4X3FVNVPROC
#undef PFNGLUNIFORMMATRIX4X3FVNVPROC
#endif
typedef void  (*PFNGLUNIFORMMATRIX4X3FVNVPROC)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);

#ifndef GL_FLOAT_MAT2x3_NV
#define GL_FLOAT_MAT2x3_NV 0x8B65
#endif

#ifndef GL_FLOAT_MAT2x4_NV
#define GL_FLOAT_MAT2x4_NV 0x8B66
#endif

#ifndef GL_FLOAT_MAT3x2_NV
#define GL_FLOAT_MAT3x2_NV 0x8B67
#endif

#ifndef GL_FLOAT_MAT3x4_NV
#define GL_FLOAT_MAT3x4_NV 0x8B68
#endif

#ifndef GL_FLOAT_MAT4x2_NV
#define GL_FLOAT_MAT4x2_NV 0x8B69
#endif

#ifndef GL_FLOAT_MAT4x3_NV
#define GL_FLOAT_MAT4x3_NV 0x8B6A
#endif

#ifndef GL_NV_occlusion_query
#define GL_NV_occlusion_query 1
#endif

#ifdef glGenOcclusionQueriesNV
#undef glGenOcclusionQueriesNV
#endif
#ifdef PFNGLGENOCCLUSIONQUERIESNVPROC
#undef PFNGLGENOCCLUSIONQUERIESNVPROC
#endif
typedef void  (*PFNGLGENOCCLUSIONQUERIESNVPROC)(GLsizei n, GLuint *ids);

#ifdef glDeleteOcclusionQueriesNV
#undef glDeleteOcclusionQueriesNV
#endif
#ifdef PFNGLDELETEOCCLUSIONQUERIESNVPROC
#undef PFNGLDELETEOCCLUSIONQUERIESNVPROC
#endif
typedef void  (*PFNGLDELETEOCCLUSIONQUERIESNVPROC)(GLsizei n, const GLuint *ids);

#ifdef glIsOcclusionQueryNV
#undef glIsOcclusionQueryNV
#endif
#ifdef PFNGLISOCCLUSIONQUERYNVPROC
#undef PFNGLISOCCLUSIONQUERYNVPROC
#endif
typedef GLboolean  (*PFNGLISOCCLUSIONQUERYNVPROC)(GLuint id);

#ifdef glBeginOcclusionQueryNV
#undef glBeginOcclusionQueryNV
#endif
#ifdef PFNGLBEGINOCCLUSIONQUERYNVPROC
#undef PFNGLBEGINOCCLUSIONQUERYNVPROC
#endif
typedef void  (*PFNGLBEGINOCCLUSIONQUERYNVPROC)(GLuint id);

#ifdef glEndOcclusionQueryNV
#undef glEndOcclusionQueryNV
#endif
#ifdef PFNGLENDOCCLUSIONQUERYNVPROC
#undef PFNGLENDOCCLUSIONQUERYNVPROC
#endif
typedef void  (*PFNGLENDOCCLUSIONQUERYNVPROC)(void);

#ifdef glGetOcclusionQueryivNV
#undef glGetOcclusionQueryivNV
#endif
#ifdef PFNGLGETOCCLUSIONQUERYIVNVPROC
#undef PFNGLGETOCCLUSIONQUERYIVNVPROC
#endif
typedef void  (*PFNGLGETOCCLUSIONQUERYIVNVPROC)(GLuint id, GLenum pname, GLint *params);

#ifdef glGetOcclusionQueryuivNV
#undef glGetOcclusionQueryuivNV
#endif
#ifdef PFNGLGETOCCLUSIONQUERYUIVNVPROC
#undef PFNGLGETOCCLUSIONQUERYUIVNVPROC
#endif
typedef void  (*PFNGLGETOCCLUSIONQUERYUIVNVPROC)(GLuint id, GLenum pname, GLuint *params);

#ifndef GL_PIXEL_COUNTER_BITS_NV
#define GL_PIXEL_COUNTER_BITS_NV 0x8864
#endif

#ifndef GL_CURRENT_OCCLUSION_QUERY_ID_NV
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV 0x8865
#endif

#ifndef GL_PIXEL_COUNT_NV
#define GL_PIXEL_COUNT_NV 0x8866
#endif

#ifndef GL_PIXEL_COUNT_AVAILABLE_NV
#define GL_PIXEL_COUNT_AVAILABLE_NV 0x8867
#endif

#ifndef GL_NV_packed_depth_stencil
#define GL_NV_packed_depth_stencil 1
#endif

#ifndef GL_DEPTH_STENCIL_NV
#define GL_DEPTH_STENCIL_NV 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8_NV
#define GL_UNSIGNED_INT_24_8_NV 0x84FA
#endif

#ifndef GL_NV_parameter_buffer_object
#define GL_NV_parameter_buffer_object 1
#endif

#ifdef glProgramBufferParametersfvNV
#undef glProgramBufferParametersfvNV
#endif
#ifdef PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
#undef PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC
#endif
typedef void  (*PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);

#ifdef glProgramBufferParametersIivNV
#undef glProgramBufferParametersIivNV
#endif
#ifdef PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
#undef PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC
#endif
typedef void  (*PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);

#ifdef glProgramBufferParametersIuivNV
#undef glProgramBufferParametersIuivNV
#endif
#ifdef PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
#undef PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC
#endif
typedef void  (*PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);

#ifndef GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
#endif

#ifndef GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
#endif

#ifndef GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV
#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
#endif

#ifndef GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV
#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
#endif

#ifndef GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV
#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
#endif

#ifndef GL_NV_parameter_buffer_object2
#define GL_NV_parameter_buffer_object2 1
#endif

#ifndef GL_NV_path_rendering
#define GL_NV_path_rendering 1
#endif

#ifdef glGenPathsNV
#undef glGenPathsNV
#endif
#ifdef PFNGLGENPATHSNVPROC
#undef PFNGLGENPATHSNVPROC
#endif
typedef GLuint  (*PFNGLGENPATHSNVPROC)(GLsizei range);

#ifdef glDeletePathsNV
#undef glDeletePathsNV
#endif
#ifdef PFNGLDELETEPATHSNVPROC
#undef PFNGLDELETEPATHSNVPROC
#endif
typedef void  (*PFNGLDELETEPATHSNVPROC)(GLuint path, GLsizei range);

#ifdef glIsPathNV
#undef glIsPathNV
#endif
#ifdef PFNGLISPATHNVPROC
#undef PFNGLISPATHNVPROC
#endif
typedef GLboolean  (*PFNGLISPATHNVPROC)(GLuint path);

#ifdef glPathCommandsNV
#undef glPathCommandsNV
#endif
#ifdef PFNGLPATHCOMMANDSNVPROC
#undef PFNGLPATHCOMMANDSNVPROC
#endif
typedef void  (*PFNGLPATHCOMMANDSNVPROC)(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);

#ifdef glPathCoordsNV
#undef glPathCoordsNV
#endif
#ifdef PFNGLPATHCOORDSNVPROC
#undef PFNGLPATHCOORDSNVPROC
#endif
typedef void  (*PFNGLPATHCOORDSNVPROC)(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);

#ifdef glPathSubCommandsNV
#undef glPathSubCommandsNV
#endif
#ifdef PFNGLPATHSUBCOMMANDSNVPROC
#undef PFNGLPATHSUBCOMMANDSNVPROC
#endif
typedef void  (*PFNGLPATHSUBCOMMANDSNVPROC)(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);

#ifdef glPathSubCoordsNV
#undef glPathSubCoordsNV
#endif
#ifdef PFNGLPATHSUBCOORDSNVPROC
#undef PFNGLPATHSUBCOORDSNVPROC
#endif
typedef void  (*PFNGLPATHSUBCOORDSNVPROC)(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);

#ifdef glPathStringNV
#undef glPathStringNV
#endif
#ifdef PFNGLPATHSTRINGNVPROC
#undef PFNGLPATHSTRINGNVPROC
#endif
typedef void  (*PFNGLPATHSTRINGNVPROC)(GLuint path, GLenum format, GLsizei length, const void *pathString);

#ifdef glPathGlyphsNV
#undef glPathGlyphsNV
#endif
#ifdef PFNGLPATHGLYPHSNVPROC
#undef PFNGLPATHGLYPHSNVPROC
#endif
typedef void  (*PFNGLPATHGLYPHSNVPROC)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);

#ifdef glPathGlyphRangeNV
#undef glPathGlyphRangeNV
#endif
#ifdef PFNGLPATHGLYPHRANGENVPROC
#undef PFNGLPATHGLYPHRANGENVPROC
#endif
typedef void  (*PFNGLPATHGLYPHRANGENVPROC)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);

#ifdef glWeightPathsNV
#undef glWeightPathsNV
#endif
#ifdef PFNGLWEIGHTPATHSNVPROC
#undef PFNGLWEIGHTPATHSNVPROC
#endif
typedef void  (*PFNGLWEIGHTPATHSNVPROC)(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);

#ifdef glCopyPathNV
#undef glCopyPathNV
#endif
#ifdef PFNGLCOPYPATHNVPROC
#undef PFNGLCOPYPATHNVPROC
#endif
typedef void  (*PFNGLCOPYPATHNVPROC)(GLuint resultPath, GLuint srcPath);

#ifdef glInterpolatePathsNV
#undef glInterpolatePathsNV
#endif
#ifdef PFNGLINTERPOLATEPATHSNVPROC
#undef PFNGLINTERPOLATEPATHSNVPROC
#endif
typedef void  (*PFNGLINTERPOLATEPATHSNVPROC)(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);

#ifdef glTransformPathNV
#undef glTransformPathNV
#endif
#ifdef PFNGLTRANSFORMPATHNVPROC
#undef PFNGLTRANSFORMPATHNVPROC
#endif
typedef void  (*PFNGLTRANSFORMPATHNVPROC)(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);

#ifdef glPathParameterivNV
#undef glPathParameterivNV
#endif
#ifdef PFNGLPATHPARAMETERIVNVPROC
#undef PFNGLPATHPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLPATHPARAMETERIVNVPROC)(GLuint path, GLenum pname, const GLint *value);

#ifdef glPathParameteriNV
#undef glPathParameteriNV
#endif
#ifdef PFNGLPATHPARAMETERINVPROC
#undef PFNGLPATHPARAMETERINVPROC
#endif
typedef void  (*PFNGLPATHPARAMETERINVPROC)(GLuint path, GLenum pname, GLint value);

#ifdef glPathParameterfvNV
#undef glPathParameterfvNV
#endif
#ifdef PFNGLPATHPARAMETERFVNVPROC
#undef PFNGLPATHPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLPATHPARAMETERFVNVPROC)(GLuint path, GLenum pname, const GLfloat *value);

#ifdef glPathParameterfNV
#undef glPathParameterfNV
#endif
#ifdef PFNGLPATHPARAMETERFNVPROC
#undef PFNGLPATHPARAMETERFNVPROC
#endif
typedef void  (*PFNGLPATHPARAMETERFNVPROC)(GLuint path, GLenum pname, GLfloat value);

#ifdef glPathDashArrayNV
#undef glPathDashArrayNV
#endif
#ifdef PFNGLPATHDASHARRAYNVPROC
#undef PFNGLPATHDASHARRAYNVPROC
#endif
typedef void  (*PFNGLPATHDASHARRAYNVPROC)(GLuint path, GLsizei dashCount, const GLfloat *dashArray);

#ifdef glPathStencilFuncNV
#undef glPathStencilFuncNV
#endif
#ifdef PFNGLPATHSTENCILFUNCNVPROC
#undef PFNGLPATHSTENCILFUNCNVPROC
#endif
typedef void  (*PFNGLPATHSTENCILFUNCNVPROC)(GLenum func, GLint ref, GLuint mask);

#ifdef glPathStencilDepthOffsetNV
#undef glPathStencilDepthOffsetNV
#endif
#ifdef PFNGLPATHSTENCILDEPTHOFFSETNVPROC
#undef PFNGLPATHSTENCILDEPTHOFFSETNVPROC
#endif
typedef void  (*PFNGLPATHSTENCILDEPTHOFFSETNVPROC)(GLfloat factor, GLfloat units);

#ifdef glStencilFillPathNV
#undef glStencilFillPathNV
#endif
#ifdef PFNGLSTENCILFILLPATHNVPROC
#undef PFNGLSTENCILFILLPATHNVPROC
#endif
typedef void  (*PFNGLSTENCILFILLPATHNVPROC)(GLuint path, GLenum fillMode, GLuint mask);

#ifdef glStencilStrokePathNV
#undef glStencilStrokePathNV
#endif
#ifdef PFNGLSTENCILSTROKEPATHNVPROC
#undef PFNGLSTENCILSTROKEPATHNVPROC
#endif
typedef void  (*PFNGLSTENCILSTROKEPATHNVPROC)(GLuint path, GLint reference, GLuint mask);

#ifdef glStencilFillPathInstancedNV
#undef glStencilFillPathInstancedNV
#endif
#ifdef PFNGLSTENCILFILLPATHINSTANCEDNVPROC
#undef PFNGLSTENCILFILLPATHINSTANCEDNVPROC
#endif
typedef void  (*PFNGLSTENCILFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);

#ifdef glStencilStrokePathInstancedNV
#undef glStencilStrokePathInstancedNV
#endif
#ifdef PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC
#undef PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC
#endif
typedef void  (*PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);

#ifdef glPathCoverDepthFuncNV
#undef glPathCoverDepthFuncNV
#endif
#ifdef PFNGLPATHCOVERDEPTHFUNCNVPROC
#undef PFNGLPATHCOVERDEPTHFUNCNVPROC
#endif
typedef void  (*PFNGLPATHCOVERDEPTHFUNCNVPROC)(GLenum func);

#ifdef glCoverFillPathNV
#undef glCoverFillPathNV
#endif
#ifdef PFNGLCOVERFILLPATHNVPROC
#undef PFNGLCOVERFILLPATHNVPROC
#endif
typedef void  (*PFNGLCOVERFILLPATHNVPROC)(GLuint path, GLenum coverMode);

#ifdef glCoverStrokePathNV
#undef glCoverStrokePathNV
#endif
#ifdef PFNGLCOVERSTROKEPATHNVPROC
#undef PFNGLCOVERSTROKEPATHNVPROC
#endif
typedef void  (*PFNGLCOVERSTROKEPATHNVPROC)(GLuint path, GLenum coverMode);

#ifdef glCoverFillPathInstancedNV
#undef glCoverFillPathInstancedNV
#endif
#ifdef PFNGLCOVERFILLPATHINSTANCEDNVPROC
#undef PFNGLCOVERFILLPATHINSTANCEDNVPROC
#endif
typedef void  (*PFNGLCOVERFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);

#ifdef glCoverStrokePathInstancedNV
#undef glCoverStrokePathInstancedNV
#endif
#ifdef PFNGLCOVERSTROKEPATHINSTANCEDNVPROC
#undef PFNGLCOVERSTROKEPATHINSTANCEDNVPROC
#endif
typedef void  (*PFNGLCOVERSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);

#ifdef glGetPathParameterivNV
#undef glGetPathParameterivNV
#endif
#ifdef PFNGLGETPATHPARAMETERIVNVPROC
#undef PFNGLGETPATHPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLGETPATHPARAMETERIVNVPROC)(GLuint path, GLenum pname, GLint *value);

#ifdef glGetPathParameterfvNV
#undef glGetPathParameterfvNV
#endif
#ifdef PFNGLGETPATHPARAMETERFVNVPROC
#undef PFNGLGETPATHPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETPATHPARAMETERFVNVPROC)(GLuint path, GLenum pname, GLfloat *value);

#ifdef glGetPathCommandsNV
#undef glGetPathCommandsNV
#endif
#ifdef PFNGLGETPATHCOMMANDSNVPROC
#undef PFNGLGETPATHCOMMANDSNVPROC
#endif
typedef void  (*PFNGLGETPATHCOMMANDSNVPROC)(GLuint path, GLubyte *commands);

#ifdef glGetPathCoordsNV
#undef glGetPathCoordsNV
#endif
#ifdef PFNGLGETPATHCOORDSNVPROC
#undef PFNGLGETPATHCOORDSNVPROC
#endif
typedef void  (*PFNGLGETPATHCOORDSNVPROC)(GLuint path, GLfloat *coords);

#ifdef glGetPathDashArrayNV
#undef glGetPathDashArrayNV
#endif
#ifdef PFNGLGETPATHDASHARRAYNVPROC
#undef PFNGLGETPATHDASHARRAYNVPROC
#endif
typedef void  (*PFNGLGETPATHDASHARRAYNVPROC)(GLuint path, GLfloat *dashArray);

#ifdef glGetPathMetricsNV
#undef glGetPathMetricsNV
#endif
#ifdef PFNGLGETPATHMETRICSNVPROC
#undef PFNGLGETPATHMETRICSNVPROC
#endif
typedef void  (*PFNGLGETPATHMETRICSNVPROC)(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);

#ifdef glGetPathMetricRangeNV
#undef glGetPathMetricRangeNV
#endif
#ifdef PFNGLGETPATHMETRICRANGENVPROC
#undef PFNGLGETPATHMETRICRANGENVPROC
#endif
typedef void  (*PFNGLGETPATHMETRICRANGENVPROC)(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);

#ifdef glGetPathSpacingNV
#undef glGetPathSpacingNV
#endif
#ifdef PFNGLGETPATHSPACINGNVPROC
#undef PFNGLGETPATHSPACINGNVPROC
#endif
typedef void  (*PFNGLGETPATHSPACINGNVPROC)(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);

#ifdef glIsPointInFillPathNV
#undef glIsPointInFillPathNV
#endif
#ifdef PFNGLISPOINTINFILLPATHNVPROC
#undef PFNGLISPOINTINFILLPATHNVPROC
#endif
typedef GLboolean  (*PFNGLISPOINTINFILLPATHNVPROC)(GLuint path, GLuint mask, GLfloat x, GLfloat y);

#ifdef glIsPointInStrokePathNV
#undef glIsPointInStrokePathNV
#endif
#ifdef PFNGLISPOINTINSTROKEPATHNVPROC
#undef PFNGLISPOINTINSTROKEPATHNVPROC
#endif
typedef GLboolean  (*PFNGLISPOINTINSTROKEPATHNVPROC)(GLuint path, GLfloat x, GLfloat y);

#ifdef glGetPathLengthNV
#undef glGetPathLengthNV
#endif
#ifdef PFNGLGETPATHLENGTHNVPROC
#undef PFNGLGETPATHLENGTHNVPROC
#endif
typedef GLfloat  (*PFNGLGETPATHLENGTHNVPROC)(GLuint path, GLsizei startSegment, GLsizei numSegments);

#ifdef glPointAlongPathNV
#undef glPointAlongPathNV
#endif
#ifdef PFNGLPOINTALONGPATHNVPROC
#undef PFNGLPOINTALONGPATHNVPROC
#endif
typedef GLboolean  (*PFNGLPOINTALONGPATHNVPROC)(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);

#ifndef GL_PATH_FORMAT_SVG_NV
#define GL_PATH_FORMAT_SVG_NV 0x9070
#endif

#ifndef GL_PATH_FORMAT_PS_NV
#define GL_PATH_FORMAT_PS_NV 0x9071
#endif

#ifndef GL_STANDARD_FONT_NAME_NV
#define GL_STANDARD_FONT_NAME_NV 0x9072
#endif

#ifndef GL_SYSTEM_FONT_NAME_NV
#define GL_SYSTEM_FONT_NAME_NV 0x9073
#endif

#ifndef GL_FILE_NAME_NV
#define GL_FILE_NAME_NV 0x9074
#endif

#ifndef GL_PATH_STROKE_WIDTH_NV
#define GL_PATH_STROKE_WIDTH_NV 0x9075
#endif

#ifndef GL_PATH_END_CAPS_NV
#define GL_PATH_END_CAPS_NV 0x9076
#endif

#ifndef GL_PATH_INITIAL_END_CAP_NV
#define GL_PATH_INITIAL_END_CAP_NV 0x9077
#endif

#ifndef GL_PATH_TERMINAL_END_CAP_NV
#define GL_PATH_TERMINAL_END_CAP_NV 0x9078
#endif

#ifndef GL_PATH_JOIN_STYLE_NV
#define GL_PATH_JOIN_STYLE_NV 0x9079
#endif

#ifndef GL_PATH_MITER_LIMIT_NV
#define GL_PATH_MITER_LIMIT_NV 0x907A
#endif

#ifndef GL_PATH_DASH_CAPS_NV
#define GL_PATH_DASH_CAPS_NV 0x907B
#endif

#ifndef GL_PATH_INITIAL_DASH_CAP_NV
#define GL_PATH_INITIAL_DASH_CAP_NV 0x907C
#endif

#ifndef GL_PATH_TERMINAL_DASH_CAP_NV
#define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D
#endif

#ifndef GL_PATH_DASH_OFFSET_NV
#define GL_PATH_DASH_OFFSET_NV 0x907E
#endif

#ifndef GL_PATH_CLIENT_LENGTH_NV
#define GL_PATH_CLIENT_LENGTH_NV 0x907F
#endif

#ifndef GL_PATH_FILL_MODE_NV
#define GL_PATH_FILL_MODE_NV 0x9080
#endif

#ifndef GL_PATH_FILL_MASK_NV
#define GL_PATH_FILL_MASK_NV 0x9081
#endif

#ifndef GL_PATH_FILL_COVER_MODE_NV
#define GL_PATH_FILL_COVER_MODE_NV 0x9082
#endif

#ifndef GL_PATH_STROKE_COVER_MODE_NV
#define GL_PATH_STROKE_COVER_MODE_NV 0x9083
#endif

#ifndef GL_PATH_STROKE_MASK_NV
#define GL_PATH_STROKE_MASK_NV 0x9084
#endif

#ifndef GL_COUNT_UP_NV
#define GL_COUNT_UP_NV 0x9088
#endif

#ifndef GL_COUNT_DOWN_NV
#define GL_COUNT_DOWN_NV 0x9089
#endif

#ifndef GL_PATH_OBJECT_BOUNDING_BOX_NV
#define GL_PATH_OBJECT_BOUNDING_BOX_NV 0x908A
#endif

#ifndef GL_CONVEX_HULL_NV
#define GL_CONVEX_HULL_NV 0x908B
#endif

#ifndef GL_BOUNDING_BOX_NV
#define GL_BOUNDING_BOX_NV 0x908D
#endif

#ifndef GL_TRANSLATE_X_NV
#define GL_TRANSLATE_X_NV 0x908E
#endif

#ifndef GL_TRANSLATE_Y_NV
#define GL_TRANSLATE_Y_NV 0x908F
#endif

#ifndef GL_TRANSLATE_2D_NV
#define GL_TRANSLATE_2D_NV 0x9090
#endif

#ifndef GL_TRANSLATE_3D_NV
#define GL_TRANSLATE_3D_NV 0x9091
#endif

#ifndef GL_AFFINE_2D_NV
#define GL_AFFINE_2D_NV 0x9092
#endif

#ifndef GL_AFFINE_3D_NV
#define GL_AFFINE_3D_NV 0x9094
#endif

#ifndef GL_TRANSPOSE_AFFINE_2D_NV
#define GL_TRANSPOSE_AFFINE_2D_NV 0x9096
#endif

#ifndef GL_TRANSPOSE_AFFINE_3D_NV
#define GL_TRANSPOSE_AFFINE_3D_NV 0x9098
#endif

#ifndef GL_UTF8_NV
#define GL_UTF8_NV 0x909A
#endif

#ifndef GL_UTF16_NV
#define GL_UTF16_NV 0x909B
#endif

#ifndef GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
#endif

#ifndef GL_PATH_COMMAND_COUNT_NV
#define GL_PATH_COMMAND_COUNT_NV 0x909D
#endif

#ifndef GL_PATH_COORD_COUNT_NV
#define GL_PATH_COORD_COUNT_NV 0x909E
#endif

#ifndef GL_PATH_DASH_ARRAY_COUNT_NV
#define GL_PATH_DASH_ARRAY_COUNT_NV 0x909F
#endif

#ifndef GL_PATH_COMPUTED_LENGTH_NV
#define GL_PATH_COMPUTED_LENGTH_NV 0x90A0
#endif

#ifndef GL_PATH_FILL_BOUNDING_BOX_NV
#define GL_PATH_FILL_BOUNDING_BOX_NV 0x90A1
#endif

#ifndef GL_PATH_STROKE_BOUNDING_BOX_NV
#define GL_PATH_STROKE_BOUNDING_BOX_NV 0x90A2
#endif

#ifndef GL_SQUARE_NV
#define GL_SQUARE_NV 0x90A3
#endif

#ifndef GL_ROUND_NV
#define GL_ROUND_NV 0x90A4
#endif

#ifndef GL_TRIANGULAR_NV
#define GL_TRIANGULAR_NV 0x90A5
#endif

#ifndef GL_BEVEL_NV
#define GL_BEVEL_NV 0x90A6
#endif

#ifndef GL_MITER_REVERT_NV
#define GL_MITER_REVERT_NV 0x90A7
#endif

#ifndef GL_MITER_TRUNCATE_NV
#define GL_MITER_TRUNCATE_NV 0x90A8
#endif

#ifndef GL_SKIP_MISSING_GLYPH_NV
#define GL_SKIP_MISSING_GLYPH_NV 0x90A9
#endif

#ifndef GL_USE_MISSING_GLYPH_NV
#define GL_USE_MISSING_GLYPH_NV 0x90AA
#endif

#ifndef GL_PATH_ERROR_POSITION_NV
#define GL_PATH_ERROR_POSITION_NV 0x90AB
#endif

#ifndef GL_ACCUM_ADJACENT_PAIRS_NV
#define GL_ACCUM_ADJACENT_PAIRS_NV 0x90AD
#endif

#ifndef GL_ADJACENT_PAIRS_NV
#define GL_ADJACENT_PAIRS_NV 0x90AE
#endif

#ifndef GL_FIRST_TO_REST_NV
#define GL_FIRST_TO_REST_NV 0x90AF
#endif

#ifndef GL_PATH_GEN_MODE_NV
#define GL_PATH_GEN_MODE_NV 0x90B0
#endif

#ifndef GL_PATH_GEN_COEFF_NV
#define GL_PATH_GEN_COEFF_NV 0x90B1
#endif

#ifndef GL_PATH_GEN_COMPONENTS_NV
#define GL_PATH_GEN_COMPONENTS_NV 0x90B3
#endif

#ifndef GL_PATH_STENCIL_FUNC_NV
#define GL_PATH_STENCIL_FUNC_NV 0x90B7
#endif

#ifndef GL_PATH_STENCIL_REF_NV
#define GL_PATH_STENCIL_REF_NV 0x90B8
#endif

#ifndef GL_PATH_STENCIL_VALUE_MASK_NV
#define GL_PATH_STENCIL_VALUE_MASK_NV 0x90B9
#endif

#ifndef GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
#endif

#ifndef GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
#endif

#ifndef GL_PATH_COVER_DEPTH_FUNC_NV
#define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF
#endif

#ifndef GL_PATH_DASH_OFFSET_RESET_NV
#define GL_PATH_DASH_OFFSET_RESET_NV 0x90B4
#endif

#ifndef GL_MOVE_TO_RESETS_NV
#define GL_MOVE_TO_RESETS_NV 0x90B5
#endif

#ifndef GL_MOVE_TO_CONTINUES_NV
#define GL_MOVE_TO_CONTINUES_NV 0x90B6
#endif

#ifndef GL_CLOSE_PATH_NV
#define GL_CLOSE_PATH_NV 0x00
#endif

#ifndef GL_MOVE_TO_NV
#define GL_MOVE_TO_NV 0x02
#endif

#ifndef GL_RELATIVE_MOVE_TO_NV
#define GL_RELATIVE_MOVE_TO_NV 0x03
#endif

#ifndef GL_LINE_TO_NV
#define GL_LINE_TO_NV 0x04
#endif

#ifndef GL_RELATIVE_LINE_TO_NV
#define GL_RELATIVE_LINE_TO_NV 0x05
#endif

#ifndef GL_HORIZONTAL_LINE_TO_NV
#define GL_HORIZONTAL_LINE_TO_NV 0x06
#endif

#ifndef GL_RELATIVE_HORIZONTAL_LINE_TO_NV
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
#endif

#ifndef GL_VERTICAL_LINE_TO_NV
#define GL_VERTICAL_LINE_TO_NV 0x08
#endif

#ifndef GL_RELATIVE_VERTICAL_LINE_TO_NV
#define GL_RELATIVE_VERTICAL_LINE_TO_NV 0x09
#endif

#ifndef GL_QUADRATIC_CURVE_TO_NV
#define GL_QUADRATIC_CURVE_TO_NV 0x0A
#endif

#ifndef GL_RELATIVE_QUADRATIC_CURVE_TO_NV
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
#endif

#ifndef GL_CUBIC_CURVE_TO_NV
#define GL_CUBIC_CURVE_TO_NV 0x0C
#endif

#ifndef GL_RELATIVE_CUBIC_CURVE_TO_NV
#define GL_RELATIVE_CUBIC_CURVE_TO_NV 0x0D
#endif

#ifndef GL_SMOOTH_QUADRATIC_CURVE_TO_NV
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0E
#endif

#ifndef GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
#endif

#ifndef GL_SMOOTH_CUBIC_CURVE_TO_NV
#define GL_SMOOTH_CUBIC_CURVE_TO_NV 0x10
#endif

#ifndef GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
#endif

#ifndef GL_SMALL_CCW_ARC_TO_NV
#define GL_SMALL_CCW_ARC_TO_NV 0x12
#endif

#ifndef GL_RELATIVE_SMALL_CCW_ARC_TO_NV
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV 0x13
#endif

#ifndef GL_SMALL_CW_ARC_TO_NV
#define GL_SMALL_CW_ARC_TO_NV 0x14
#endif

#ifndef GL_RELATIVE_SMALL_CW_ARC_TO_NV
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV 0x15
#endif

#ifndef GL_LARGE_CCW_ARC_TO_NV
#define GL_LARGE_CCW_ARC_TO_NV 0x16
#endif

#ifndef GL_RELATIVE_LARGE_CCW_ARC_TO_NV
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV 0x17
#endif

#ifndef GL_LARGE_CW_ARC_TO_NV
#define GL_LARGE_CW_ARC_TO_NV 0x18
#endif

#ifndef GL_RELATIVE_LARGE_CW_ARC_TO_NV
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV 0x19
#endif

#ifndef GL_RESTART_PATH_NV
#define GL_RESTART_PATH_NV 0xF0
#endif

#ifndef GL_DUP_FIRST_CUBIC_CURVE_TO_NV
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV 0xF2
#endif

#ifndef GL_DUP_LAST_CUBIC_CURVE_TO_NV
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV 0xF4
#endif

#ifndef GL_RECT_NV
#define GL_RECT_NV 0xF6
#endif

#ifndef GL_CIRCULAR_CCW_ARC_TO_NV
#define GL_CIRCULAR_CCW_ARC_TO_NV 0xF8
#endif

#ifndef GL_CIRCULAR_CW_ARC_TO_NV
#define GL_CIRCULAR_CW_ARC_TO_NV 0xFA
#endif

#ifndef GL_CIRCULAR_TANGENT_ARC_TO_NV
#define GL_CIRCULAR_TANGENT_ARC_TO_NV 0xFC
#endif

#ifndef GL_ARC_TO_NV
#define GL_ARC_TO_NV 0xFE
#endif

#ifndef GL_RELATIVE_ARC_TO_NV
#define GL_RELATIVE_ARC_TO_NV 0xFF
#endif

#ifndef GL_BOLD_BIT_NV
#define GL_BOLD_BIT_NV 0x01
#endif

#ifndef GL_ITALIC_BIT_NV
#define GL_ITALIC_BIT_NV 0x02
#endif

#ifndef GL_GLYPH_WIDTH_BIT_NV
#define GL_GLYPH_WIDTH_BIT_NV 0x01
#endif

#ifndef GL_GLYPH_HEIGHT_BIT_NV
#define GL_GLYPH_HEIGHT_BIT_NV 0x02
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
#endif

#ifndef GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_X_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
#endif

#ifndef GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
#endif

#ifndef GL_GLYPH_HAS_KERNING_BIT_NV
#define GL_GLYPH_HAS_KERNING_BIT_NV 0x100
#endif

#ifndef GL_FONT_X_MIN_BOUNDS_BIT_NV
#define GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000
#endif

#ifndef GL_FONT_Y_MIN_BOUNDS_BIT_NV
#define GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000
#endif

#ifndef GL_FONT_X_MAX_BOUNDS_BIT_NV
#define GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000
#endif

#ifndef GL_FONT_Y_MAX_BOUNDS_BIT_NV
#define GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000
#endif

#ifndef GL_FONT_UNITS_PER_EM_BIT_NV
#define GL_FONT_UNITS_PER_EM_BIT_NV 0x00100000
#endif

#ifndef GL_FONT_ASCENDER_BIT_NV
#define GL_FONT_ASCENDER_BIT_NV 0x00200000
#endif

#ifndef GL_FONT_DESCENDER_BIT_NV
#define GL_FONT_DESCENDER_BIT_NV 0x00400000
#endif

#ifndef GL_FONT_HEIGHT_BIT_NV
#define GL_FONT_HEIGHT_BIT_NV 0x00800000
#endif

#ifndef GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV
#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV 0x01000000
#endif

#ifndef GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV
#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV 0x02000000
#endif

#ifndef GL_FONT_UNDERLINE_POSITION_BIT_NV
#define GL_FONT_UNDERLINE_POSITION_BIT_NV 0x04000000
#endif

#ifndef GL_FONT_UNDERLINE_THICKNESS_BIT_NV
#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV 0x08000000
#endif

#ifndef GL_FONT_HAS_KERNING_BIT_NV
#define GL_FONT_HAS_KERNING_BIT_NV 0x10000000
#endif

#ifdef glMatrixLoad3x2fNV
#undef glMatrixLoad3x2fNV
#endif
#ifdef PFNGLMATRIXLOAD3X2FNVPROC
#undef PFNGLMATRIXLOAD3X2FNVPROC
#endif
typedef void  (*PFNGLMATRIXLOAD3X2FNVPROC)(GLenum matrixMode, const GLfloat *m);

#ifdef glMatrixLoad3x3fNV
#undef glMatrixLoad3x3fNV
#endif
#ifdef PFNGLMATRIXLOAD3X3FNVPROC
#undef PFNGLMATRIXLOAD3X3FNVPROC
#endif
typedef void  (*PFNGLMATRIXLOAD3X3FNVPROC)(GLenum matrixMode, const GLfloat *m);

#ifdef glMatrixLoadTranspose3x3fNV
#undef glMatrixLoadTranspose3x3fNV
#endif
#ifdef PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC
#undef PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC
#endif
typedef void  (*PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC)(GLenum matrixMode, const GLfloat *m);

#ifdef glMatrixMult3x2fNV
#undef glMatrixMult3x2fNV
#endif
#ifdef PFNGLMATRIXMULT3X2FNVPROC
#undef PFNGLMATRIXMULT3X2FNVPROC
#endif
typedef void  (*PFNGLMATRIXMULT3X2FNVPROC)(GLenum matrixMode, const GLfloat *m);

#ifdef glMatrixMult3x3fNV
#undef glMatrixMult3x3fNV
#endif
#ifdef PFNGLMATRIXMULT3X3FNVPROC
#undef PFNGLMATRIXMULT3X3FNVPROC
#endif
typedef void  (*PFNGLMATRIXMULT3X3FNVPROC)(GLenum matrixMode, const GLfloat *m);

#ifdef glMatrixMultTranspose3x3fNV
#undef glMatrixMultTranspose3x3fNV
#endif
#ifdef PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC
#undef PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC
#endif
typedef void  (*PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC)(GLenum matrixMode, const GLfloat *m);

#ifdef glStencilThenCoverFillPathNV
#undef glStencilThenCoverFillPathNV
#endif
#ifdef PFNGLSTENCILTHENCOVERFILLPATHNVPROC
#undef PFNGLSTENCILTHENCOVERFILLPATHNVPROC
#endif
typedef void  (*PFNGLSTENCILTHENCOVERFILLPATHNVPROC)(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);

#ifdef glStencilThenCoverStrokePathNV
#undef glStencilThenCoverStrokePathNV
#endif
#ifdef PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC
#undef PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC
#endif
typedef void  (*PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC)(GLuint path, GLint reference, GLuint mask, GLenum coverMode);

#ifdef glStencilThenCoverFillPathInstancedNV
#undef glStencilThenCoverFillPathInstancedNV
#endif
#ifdef PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC
#undef PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC
#endif
typedef void  (*PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);

#ifdef glStencilThenCoverStrokePathInstancedNV
#undef glStencilThenCoverStrokePathInstancedNV
#endif
#ifdef PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC
#undef PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC
#endif
typedef void  (*PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);

#ifdef glPathGlyphIndexRangeNV
#undef glPathGlyphIndexRangeNV
#endif
#ifdef PFNGLPATHGLYPHINDEXRANGENVPROC
#undef PFNGLPATHGLYPHINDEXRANGENVPROC
#endif
typedef GLenum  (*PFNGLPATHGLYPHINDEXRANGENVPROC)(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);

#ifndef GL_ROUNDED_RECT_NV
#define GL_ROUNDED_RECT_NV 0xE8
#endif

#ifndef GL_RELATIVE_ROUNDED_RECT_NV
#define GL_RELATIVE_ROUNDED_RECT_NV 0xE9
#endif

#ifndef GL_ROUNDED_RECT2_NV
#define GL_ROUNDED_RECT2_NV 0xEA
#endif

#ifndef GL_RELATIVE_ROUNDED_RECT2_NV
#define GL_RELATIVE_ROUNDED_RECT2_NV 0xEB
#endif

#ifndef GL_ROUNDED_RECT4_NV
#define GL_ROUNDED_RECT4_NV 0xEC
#endif

#ifndef GL_RELATIVE_ROUNDED_RECT4_NV
#define GL_RELATIVE_ROUNDED_RECT4_NV 0xED
#endif

#ifndef GL_ROUNDED_RECT8_NV
#define GL_ROUNDED_RECT8_NV 0xEE
#endif

#ifndef GL_RELATIVE_ROUNDED_RECT8_NV
#define GL_RELATIVE_ROUNDED_RECT8_NV 0xEF
#endif

#ifndef GL_RELATIVE_RECT_NV
#define GL_RELATIVE_RECT_NV 0xF7
#endif

#ifndef GL_FONT_GLYPHS_AVAILABLE_NV
#define GL_FONT_GLYPHS_AVAILABLE_NV 0x9368
#endif

#ifndef GL_FONT_TARGET_UNAVAILABLE_NV
#define GL_FONT_TARGET_UNAVAILABLE_NV 0x9369
#endif

#ifndef GL_FONT_UNAVAILABLE_NV
#define GL_FONT_UNAVAILABLE_NV 0x936A
#endif

#ifndef GL_FONT_UNINTELLIGIBLE_NV
#define GL_FONT_UNINTELLIGIBLE_NV 0x936B
#endif

#ifdef glPathGlyphIndexArrayNV
#undef glPathGlyphIndexArrayNV
#endif
#ifdef PFNGLPATHGLYPHINDEXARRAYNVPROC
#undef PFNGLPATHGLYPHINDEXARRAYNVPROC
#endif
typedef GLenum  (*PFNGLPATHGLYPHINDEXARRAYNVPROC)(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);

#ifdef glPathMemoryGlyphIndexArrayNV
#undef glPathMemoryGlyphIndexArrayNV
#endif
#ifdef PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC
#undef PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC
#endif
typedef GLenum  (*PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC)(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);

#ifdef glProgramPathFragmentInputGenNV
#undef glProgramPathFragmentInputGenNV
#endif
#ifdef PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC
#undef PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC
#endif
typedef void  (*PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC)(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);

#ifdef glGetProgramResourcefvNV
#undef glGetProgramResourcefvNV
#endif
#ifdef PFNGLGETPROGRAMRESOURCEFVNVPROC
#undef PFNGLGETPROGRAMRESOURCEFVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMRESOURCEFVNVPROC)(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);

#ifndef GL_CONIC_CURVE_TO_NV
#define GL_CONIC_CURVE_TO_NV 0x1A
#endif

#ifndef GL_RELATIVE_CONIC_CURVE_TO_NV
#define GL_RELATIVE_CONIC_CURVE_TO_NV 0x1B
#endif

#ifndef GL_FONT_NUM_GLYPH_INDICES_BIT_NV
#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV 0x20000000
#endif

#ifndef GL_STANDARD_FONT_FORMAT_NV
#define GL_STANDARD_FONT_FORMAT_NV 0x936C
#endif

#ifdef glPathColorGenNV
#undef glPathColorGenNV
#endif
#ifdef PFNGLPATHCOLORGENNVPROC
#undef PFNGLPATHCOLORGENNVPROC
#endif
typedef void  (*PFNGLPATHCOLORGENNVPROC)(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);

#ifdef glPathTexGenNV
#undef glPathTexGenNV
#endif
#ifdef PFNGLPATHTEXGENNVPROC
#undef PFNGLPATHTEXGENNVPROC
#endif
typedef void  (*PFNGLPATHTEXGENNVPROC)(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);

#ifdef glPathFogGenNV
#undef glPathFogGenNV
#endif
#ifdef PFNGLPATHFOGGENNVPROC
#undef PFNGLPATHFOGGENNVPROC
#endif
typedef void  (*PFNGLPATHFOGGENNVPROC)(GLenum genMode);

#ifdef glGetPathColorGenivNV
#undef glGetPathColorGenivNV
#endif
#ifdef PFNGLGETPATHCOLORGENIVNVPROC
#undef PFNGLGETPATHCOLORGENIVNVPROC
#endif
typedef void  (*PFNGLGETPATHCOLORGENIVNVPROC)(GLenum color, GLenum pname, GLint *value);

#ifdef glGetPathColorGenfvNV
#undef glGetPathColorGenfvNV
#endif
#ifdef PFNGLGETPATHCOLORGENFVNVPROC
#undef PFNGLGETPATHCOLORGENFVNVPROC
#endif
typedef void  (*PFNGLGETPATHCOLORGENFVNVPROC)(GLenum color, GLenum pname, GLfloat *value);

#ifdef glGetPathTexGenivNV
#undef glGetPathTexGenivNV
#endif
#ifdef PFNGLGETPATHTEXGENIVNVPROC
#undef PFNGLGETPATHTEXGENIVNVPROC
#endif
typedef void  (*PFNGLGETPATHTEXGENIVNVPROC)(GLenum texCoordSet, GLenum pname, GLint *value);

#ifdef glGetPathTexGenfvNV
#undef glGetPathTexGenfvNV
#endif
#ifdef PFNGLGETPATHTEXGENFVNVPROC
#undef PFNGLGETPATHTEXGENFVNVPROC
#endif
typedef void  (*PFNGLGETPATHTEXGENFVNVPROC)(GLenum texCoordSet, GLenum pname, GLfloat *value);

#ifndef GL_2_BYTES_NV
#define GL_2_BYTES_NV 0x1407
#endif

#ifndef GL_3_BYTES_NV
#define GL_3_BYTES_NV 0x1408
#endif

#ifndef GL_4_BYTES_NV
#define GL_4_BYTES_NV 0x1409
#endif

#ifndef GL_EYE_LINEAR_NV
#define GL_EYE_LINEAR_NV 0x2400
#endif

#ifndef GL_OBJECT_LINEAR_NV
#define GL_OBJECT_LINEAR_NV 0x2401
#endif

#ifndef GL_CONSTANT_NV
#define GL_CONSTANT_NV 0x8576
#endif

#ifndef GL_PATH_FOG_GEN_MODE_NV
#define GL_PATH_FOG_GEN_MODE_NV 0x90AC
#endif

#ifndef GL_PRIMARY_COLOR
#define GL_PRIMARY_COLOR 0x8577
#endif

#ifndef GL_PRIMARY_COLOR_NV
#define GL_PRIMARY_COLOR_NV 0x852C
#endif

#ifndef GL_SECONDARY_COLOR_NV
#define GL_SECONDARY_COLOR_NV 0x852D
#endif

#ifndef GL_PATH_GEN_COLOR_FORMAT_NV
#define GL_PATH_GEN_COLOR_FORMAT_NV 0x90B2
#endif

#ifndef GL_PATH_PROJECTION_NV
#define GL_PATH_PROJECTION_NV 0x1701
#endif

#ifndef GL_PATH_MODELVIEW_NV
#define GL_PATH_MODELVIEW_NV 0x1700
#endif

#ifndef GL_PATH_MODELVIEW_STACK_DEPTH_NV
#define GL_PATH_MODELVIEW_STACK_DEPTH_NV 0x0BA3
#endif

#ifndef GL_PATH_MODELVIEW_MATRIX_NV
#define GL_PATH_MODELVIEW_MATRIX_NV 0x0BA6
#endif

#ifndef GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV
#define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV 0x0D36
#endif

#ifndef GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV
#define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV 0x84E3
#endif

#ifndef GL_PATH_PROJECTION_STACK_DEPTH_NV
#define GL_PATH_PROJECTION_STACK_DEPTH_NV 0x0BA4
#endif

#ifndef GL_PATH_PROJECTION_MATRIX_NV
#define GL_PATH_PROJECTION_MATRIX_NV 0x0BA7
#endif

#ifndef GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV
#define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV 0x0D38
#endif

#ifndef GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV
#define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV 0x84E4
#endif

#ifndef GL_FRAGMENT_INPUT_NV
#define GL_FRAGMENT_INPUT_NV 0x936D
#endif

#ifndef GL_NV_pixel_data_range
#define GL_NV_pixel_data_range 1
#endif

#ifdef glPixelDataRangeNV
#undef glPixelDataRangeNV
#endif
#ifdef PFNGLPIXELDATARANGENVPROC
#undef PFNGLPIXELDATARANGENVPROC
#endif
typedef void  (*PFNGLPIXELDATARANGENVPROC)(GLenum target, GLsizei length, const void *pointer);

#ifdef glFlushPixelDataRangeNV
#undef glFlushPixelDataRangeNV
#endif
#ifdef PFNGLFLUSHPIXELDATARANGENVPROC
#undef PFNGLFLUSHPIXELDATARANGENVPROC
#endif
typedef void  (*PFNGLFLUSHPIXELDATARANGENVPROC)(GLenum target);

#ifndef GL_WRITE_PIXEL_DATA_RANGE_NV
#define GL_WRITE_PIXEL_DATA_RANGE_NV 0x8878
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_NV
#define GL_READ_PIXEL_DATA_RANGE_NV 0x8879
#endif

#ifndef GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV
#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_LENGTH_NV
#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
#endif

#ifndef GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV
#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
#endif

#ifndef GL_READ_PIXEL_DATA_RANGE_POINTER_NV
#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
#endif

#ifndef GL_NV_point_sprite
#define GL_NV_point_sprite 1
#endif

#ifdef glPointParameteriNV
#undef glPointParameteriNV
#endif
#ifdef PFNGLPOINTPARAMETERINVPROC
#undef PFNGLPOINTPARAMETERINVPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERINVPROC)(GLenum pname, GLint param);

#ifdef glPointParameterivNV
#undef glPointParameterivNV
#endif
#ifdef PFNGLPOINTPARAMETERIVNVPROC
#undef PFNGLPOINTPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERIVNVPROC)(GLenum pname, const GLint *params);

#ifndef GL_POINT_SPRITE_NV
#define GL_POINT_SPRITE_NV 0x8861
#endif

#ifndef GL_COORD_REPLACE_NV
#define GL_COORD_REPLACE_NV 0x8862
#endif

#ifndef GL_POINT_SPRITE_R_MODE_NV
#define GL_POINT_SPRITE_R_MODE_NV 0x8863
#endif

#ifndef GL_NV_polygon_mode
#define GL_NV_polygon_mode 1
#endif

#ifdef glPolygonModeNV
#undef glPolygonModeNV
#endif
#ifdef PFNGLPOLYGONMODENVPROC
#undef PFNGLPOLYGONMODENVPROC
#endif
typedef void  (*PFNGLPOLYGONMODENVPROC)(GLenum face, GLenum mode);

#ifndef GL_POLYGON_MODE_NV
#define GL_POLYGON_MODE_NV 0x0B40
#endif

#ifndef GL_POLYGON_OFFSET_POINT_NV
#define GL_POLYGON_OFFSET_POINT_NV 0x2A01
#endif

#ifndef GL_POLYGON_OFFSET_LINE_NV
#define GL_POLYGON_OFFSET_LINE_NV 0x2A02
#endif

#ifndef GL_POINT_NV
#define GL_POINT_NV 0x1B00
#endif

#ifndef GL_LINE_NV
#define GL_LINE_NV 0x1B01
#endif

#ifndef GL_FILL_NV
#define GL_FILL_NV 0x1B02
#endif

#ifndef GL_NV_present_video
#define GL_NV_present_video 1
#endif

#ifdef glPresentFrameKeyedNV
#undef glPresentFrameKeyedNV
#endif
#ifdef PFNGLPRESENTFRAMEKEYEDNVPROC
#undef PFNGLPRESENTFRAMEKEYEDNVPROC
#endif
typedef void  (*PFNGLPRESENTFRAMEKEYEDNVPROC)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);

#ifdef glPresentFrameDualFillNV
#undef glPresentFrameDualFillNV
#endif
#ifdef PFNGLPRESENTFRAMEDUALFILLNVPROC
#undef PFNGLPRESENTFRAMEDUALFILLNVPROC
#endif
typedef void  (*PFNGLPRESENTFRAMEDUALFILLNVPROC)(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);

#ifdef glGetVideoivNV
#undef glGetVideoivNV
#endif
#ifdef PFNGLGETVIDEOIVNVPROC
#undef PFNGLGETVIDEOIVNVPROC
#endif
typedef void  (*PFNGLGETVIDEOIVNVPROC)(GLuint video_slot, GLenum pname, GLint *params);

#ifdef glGetVideouivNV
#undef glGetVideouivNV
#endif
#ifdef PFNGLGETVIDEOUIVNVPROC
#undef PFNGLGETVIDEOUIVNVPROC
#endif
typedef void  (*PFNGLGETVIDEOUIVNVPROC)(GLuint video_slot, GLenum pname, GLuint *params);

#ifdef glGetVideoi64vNV
#undef glGetVideoi64vNV
#endif
#ifdef PFNGLGETVIDEOI64VNVPROC
#undef PFNGLGETVIDEOI64VNVPROC
#endif
typedef void  (*PFNGLGETVIDEOI64VNVPROC)(GLuint video_slot, GLenum pname, GLint64EXT *params);

#ifdef glGetVideoui64vNV
#undef glGetVideoui64vNV
#endif
#ifdef PFNGLGETVIDEOUI64VNVPROC
#undef PFNGLGETVIDEOUI64VNVPROC
#endif
typedef void  (*PFNGLGETVIDEOUI64VNVPROC)(GLuint video_slot, GLenum pname, GLuint64EXT *params);

#ifndef GL_FRAME_NV
#define GL_FRAME_NV 0x8E26
#endif

#ifndef GL_FIELDS_NV
#define GL_FIELDS_NV 0x8E27
#endif

#ifndef GL_CURRENT_TIME_NV
#define GL_CURRENT_TIME_NV 0x8E28
#endif

#ifndef GL_NUM_FILL_STREAMS_NV
#define GL_NUM_FILL_STREAMS_NV 0x8E29
#endif

#ifndef GL_PRESENT_TIME_NV
#define GL_PRESENT_TIME_NV 0x8E2A
#endif

#ifndef GL_PRESENT_DURATION_NV
#define GL_PRESENT_DURATION_NV 0x8E2B
#endif

#ifndef GL_NV_primitive_restart
#define GL_NV_primitive_restart 1
#endif

#ifdef glPrimitiveRestartNV
#undef glPrimitiveRestartNV
#endif
#ifdef PFNGLPRIMITIVERESTARTNVPROC
#undef PFNGLPRIMITIVERESTARTNVPROC
#endif
typedef void  (*PFNGLPRIMITIVERESTARTNVPROC)(void);

#ifdef glPrimitiveRestartIndexNV
#undef glPrimitiveRestartIndexNV
#endif
#ifdef PFNGLPRIMITIVERESTARTINDEXNVPROC
#undef PFNGLPRIMITIVERESTARTINDEXNVPROC
#endif
typedef void  (*PFNGLPRIMITIVERESTARTINDEXNVPROC)(GLuint index);

#ifndef GL_PRIMITIVE_RESTART_NV
#define GL_PRIMITIVE_RESTART_NV 0x8558
#endif

#ifndef GL_PRIMITIVE_RESTART_INDEX_NV
#define GL_PRIMITIVE_RESTART_INDEX_NV 0x8559
#endif

#ifndef GL_NV_read_buffer
#define GL_NV_read_buffer 1
#endif

#ifdef glReadBufferNV
#undef glReadBufferNV
#endif
#ifdef PFNGLREADBUFFERNVPROC
#undef PFNGLREADBUFFERNVPROC
#endif
typedef void  (*PFNGLREADBUFFERNVPROC)(GLenum mode);

#ifndef GL_READ_BUFFER_NV
#define GL_READ_BUFFER_NV 0x0C02
#endif

#ifndef GL_NV_read_buffer_front
#define GL_NV_read_buffer_front 1
#endif

#ifndef GL_NV_read_depth
#define GL_NV_read_depth 1
#endif

#ifndef GL_NV_read_depth_stencil
#define GL_NV_read_depth_stencil 1
#endif

#ifndef GL_NV_read_stencil
#define GL_NV_read_stencil 1
#endif

#ifndef GL_NV_register_combiners
#define GL_NV_register_combiners 1
#endif

#ifdef glCombinerParameterfvNV
#undef glCombinerParameterfvNV
#endif
#ifdef PFNGLCOMBINERPARAMETERFVNVPROC
#undef PFNGLCOMBINERPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLCOMBINERPARAMETERFVNVPROC)(GLenum pname, const GLfloat *params);

#ifdef glCombinerParameterfNV
#undef glCombinerParameterfNV
#endif
#ifdef PFNGLCOMBINERPARAMETERFNVPROC
#undef PFNGLCOMBINERPARAMETERFNVPROC
#endif
typedef void  (*PFNGLCOMBINERPARAMETERFNVPROC)(GLenum pname, GLfloat param);

#ifdef glCombinerParameterivNV
#undef glCombinerParameterivNV
#endif
#ifdef PFNGLCOMBINERPARAMETERIVNVPROC
#undef PFNGLCOMBINERPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLCOMBINERPARAMETERIVNVPROC)(GLenum pname, const GLint *params);

#ifdef glCombinerParameteriNV
#undef glCombinerParameteriNV
#endif
#ifdef PFNGLCOMBINERPARAMETERINVPROC
#undef PFNGLCOMBINERPARAMETERINVPROC
#endif
typedef void  (*PFNGLCOMBINERPARAMETERINVPROC)(GLenum pname, GLint param);

#ifdef glCombinerInputNV
#undef glCombinerInputNV
#endif
#ifdef PFNGLCOMBINERINPUTNVPROC
#undef PFNGLCOMBINERINPUTNVPROC
#endif
typedef void  (*PFNGLCOMBINERINPUTNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);

#ifdef glCombinerOutputNV
#undef glCombinerOutputNV
#endif
#ifdef PFNGLCOMBINEROUTPUTNVPROC
#undef PFNGLCOMBINEROUTPUTNVPROC
#endif
typedef void  (*PFNGLCOMBINEROUTPUTNVPROC)(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);

#ifdef glFinalCombinerInputNV
#undef glFinalCombinerInputNV
#endif
#ifdef PFNGLFINALCOMBINERINPUTNVPROC
#undef PFNGLFINALCOMBINERINPUTNVPROC
#endif
typedef void  (*PFNGLFINALCOMBINERINPUTNVPROC)(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);

#ifdef glGetCombinerInputParameterfvNV
#undef glGetCombinerInputParameterfvNV
#endif
#ifdef PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
#undef PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);

#ifdef glGetCombinerInputParameterivNV
#undef glGetCombinerInputParameterivNV
#endif
#ifdef PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
#undef PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);

#ifdef glGetCombinerOutputParameterfvNV
#undef glGetCombinerOutputParameterfvNV
#endif
#ifdef PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
#undef PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)(GLenum stage, GLenum portion, GLenum pname, GLfloat *params);

#ifdef glGetCombinerOutputParameterivNV
#undef glGetCombinerOutputParameterivNV
#endif
#ifdef PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
#undef PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)(GLenum stage, GLenum portion, GLenum pname, GLint *params);

#ifdef glGetFinalCombinerInputParameterfvNV
#undef glGetFinalCombinerInputParameterfvNV
#endif
#ifdef PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
#undef PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)(GLenum variable, GLenum pname, GLfloat *params);

#ifdef glGetFinalCombinerInputParameterivNV
#undef glGetFinalCombinerInputParameterivNV
#endif
#ifdef PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
#undef PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)(GLenum variable, GLenum pname, GLint *params);

#ifndef GL_REGISTER_COMBINERS_NV
#define GL_REGISTER_COMBINERS_NV 0x8522
#endif

#ifndef GL_VARIABLE_A_NV
#define GL_VARIABLE_A_NV 0x8523
#endif

#ifndef GL_VARIABLE_B_NV
#define GL_VARIABLE_B_NV 0x8524
#endif

#ifndef GL_VARIABLE_C_NV
#define GL_VARIABLE_C_NV 0x8525
#endif

#ifndef GL_VARIABLE_D_NV
#define GL_VARIABLE_D_NV 0x8526
#endif

#ifndef GL_VARIABLE_E_NV
#define GL_VARIABLE_E_NV 0x8527
#endif

#ifndef GL_VARIABLE_F_NV
#define GL_VARIABLE_F_NV 0x8528
#endif

#ifndef GL_VARIABLE_G_NV
#define GL_VARIABLE_G_NV 0x8529
#endif

#ifndef GL_CONSTANT_COLOR0_NV
#define GL_CONSTANT_COLOR0_NV 0x852A
#endif

#ifndef GL_CONSTANT_COLOR1_NV
#define GL_CONSTANT_COLOR1_NV 0x852B
#endif

#ifndef GL_PRIMARY_COLOR_NV
#define GL_PRIMARY_COLOR_NV 0x852C
#endif

#ifndef GL_SECONDARY_COLOR_NV
#define GL_SECONDARY_COLOR_NV 0x852D
#endif

#ifndef GL_SPARE0_NV
#define GL_SPARE0_NV 0x852E
#endif

#ifndef GL_SPARE1_NV
#define GL_SPARE1_NV 0x852F
#endif

#ifndef GL_DISCARD_NV
#define GL_DISCARD_NV 0x8530
#endif

#ifndef GL_E_TIMES_F_NV
#define GL_E_TIMES_F_NV 0x8531
#endif

#ifndef GL_SPARE0_PLUS_SECONDARY_COLOR_NV
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#endif

#ifndef GL_UNSIGNED_IDENTITY_NV
#define GL_UNSIGNED_IDENTITY_NV 0x8536
#endif

#ifndef GL_UNSIGNED_INVERT_NV
#define GL_UNSIGNED_INVERT_NV 0x8537
#endif

#ifndef GL_EXPAND_NORMAL_NV
#define GL_EXPAND_NORMAL_NV 0x8538
#endif

#ifndef GL_EXPAND_NEGATE_NV
#define GL_EXPAND_NEGATE_NV 0x8539
#endif

#ifndef GL_HALF_BIAS_NORMAL_NV
#define GL_HALF_BIAS_NORMAL_NV 0x853A
#endif

#ifndef GL_HALF_BIAS_NEGATE_NV
#define GL_HALF_BIAS_NEGATE_NV 0x853B
#endif

#ifndef GL_SIGNED_IDENTITY_NV
#define GL_SIGNED_IDENTITY_NV 0x853C
#endif

#ifndef GL_SIGNED_NEGATE_NV
#define GL_SIGNED_NEGATE_NV 0x853D
#endif

#ifndef GL_SCALE_BY_TWO_NV
#define GL_SCALE_BY_TWO_NV 0x853E
#endif

#ifndef GL_SCALE_BY_FOUR_NV
#define GL_SCALE_BY_FOUR_NV 0x853F
#endif

#ifndef GL_SCALE_BY_ONE_HALF_NV
#define GL_SCALE_BY_ONE_HALF_NV 0x8540
#endif

#ifndef GL_BIAS_BY_NEGATIVE_ONE_HALF_NV
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
#endif

#ifndef GL_COMBINER_INPUT_NV
#define GL_COMBINER_INPUT_NV 0x8542
#endif

#ifndef GL_COMBINER_MAPPING_NV
#define GL_COMBINER_MAPPING_NV 0x8543
#endif

#ifndef GL_COMBINER_COMPONENT_USAGE_NV
#define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
#endif

#ifndef GL_COMBINER_AB_DOT_PRODUCT_NV
#define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
#endif

#ifndef GL_COMBINER_CD_DOT_PRODUCT_NV
#define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
#endif

#ifndef GL_COMBINER_MUX_SUM_NV
#define GL_COMBINER_MUX_SUM_NV 0x8547
#endif

#ifndef GL_COMBINER_SCALE_NV
#define GL_COMBINER_SCALE_NV 0x8548
#endif

#ifndef GL_COMBINER_BIAS_NV
#define GL_COMBINER_BIAS_NV 0x8549
#endif

#ifndef GL_COMBINER_AB_OUTPUT_NV
#define GL_COMBINER_AB_OUTPUT_NV 0x854A
#endif

#ifndef GL_COMBINER_CD_OUTPUT_NV
#define GL_COMBINER_CD_OUTPUT_NV 0x854B
#endif

#ifndef GL_COMBINER_SUM_OUTPUT_NV
#define GL_COMBINER_SUM_OUTPUT_NV 0x854C
#endif

#ifndef GL_MAX_GENERAL_COMBINERS_NV
#define GL_MAX_GENERAL_COMBINERS_NV 0x854D
#endif

#ifndef GL_NUM_GENERAL_COMBINERS_NV
#define GL_NUM_GENERAL_COMBINERS_NV 0x854E
#endif

#ifndef GL_COLOR_SUM_CLAMP_NV
#define GL_COLOR_SUM_CLAMP_NV 0x854F
#endif

#ifndef GL_COMBINER0_NV
#define GL_COMBINER0_NV 0x8550
#endif

#ifndef GL_COMBINER1_NV
#define GL_COMBINER1_NV 0x8551
#endif

#ifndef GL_COMBINER2_NV
#define GL_COMBINER2_NV 0x8552
#endif

#ifndef GL_COMBINER3_NV
#define GL_COMBINER3_NV 0x8553
#endif

#ifndef GL_COMBINER4_NV
#define GL_COMBINER4_NV 0x8554
#endif

#ifndef GL_COMBINER5_NV
#define GL_COMBINER5_NV 0x8555
#endif

#ifndef GL_COMBINER6_NV
#define GL_COMBINER6_NV 0x8556
#endif

#ifndef GL_COMBINER7_NV
#define GL_COMBINER7_NV 0x8557
#endif

#ifndef GL_TEXTURE0_ARB
#define GL_TEXTURE0_ARB 0x84C0
#endif

#ifndef GL_TEXTURE1_ARB
#define GL_TEXTURE1_ARB 0x84C1
#endif

#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_NONE
#define GL_NONE 0
#endif

#ifndef GL_FOG
#define GL_FOG 0x0B60
#endif

#ifndef GL_NV_path_rendering_shared_edge
#define GL_NV_path_rendering_shared_edge 1
#endif

#ifndef GL_SHARED_EDGE_NV
#define GL_SHARED_EDGE_NV 0xC0
#endif

#ifndef GL_NV_register_combiners2
#define GL_NV_register_combiners2 1
#endif

#ifdef glCombinerStageParameterfvNV
#undef glCombinerStageParameterfvNV
#endif
#ifdef PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
#undef PFNGLCOMBINERSTAGEPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum stage, GLenum pname, const GLfloat *params);

#ifdef glGetCombinerStageParameterfvNV
#undef glGetCombinerStageParameterfvNV
#endif
#ifdef PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
#undef PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum stage, GLenum pname, GLfloat *params);

#ifndef GL_PER_STAGE_CONSTANTS_NV
#define GL_PER_STAGE_CONSTANTS_NV 0x8535
#endif

#ifndef GL_NV_sRGB_formats
#define GL_NV_sRGB_formats 1
#endif

#ifndef GL_SLUMINANCE_NV
#define GL_SLUMINANCE_NV 0x8C46
#endif

#ifndef GL_SLUMINANCE_ALPHA_NV
#define GL_SLUMINANCE_ALPHA_NV 0x8C44
#endif

#ifndef GL_SRGB8_NV
#define GL_SRGB8_NV 0x8C41
#endif

#ifndef GL_SLUMINANCE8_NV
#define GL_SLUMINANCE8_NV 0x8C47
#endif

#ifndef GL_SLUMINANCE8_ALPHA8_NV
#define GL_SLUMINANCE8_ALPHA8_NV 0x8C45
#endif

#ifndef GL_COMPRESSED_SRGB_S3TC_DXT1_NV
#define GL_COMPRESSED_SRGB_S3TC_DXT1_NV 0x8C4C
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV 0x8C4D
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV 0x8C4E
#endif

#ifndef GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV 0x8C4F
#endif

#ifndef GL_ETC1_SRGB8_NV
#define GL_ETC1_SRGB8_NV 0x88EE
#endif

#ifndef GL_NV_sample_locations
#define GL_NV_sample_locations 1
#endif

#ifdef glFramebufferSampleLocationsfvNV
#undef glFramebufferSampleLocationsfvNV
#endif
#ifdef PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
#undef PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLenum target, GLuint start, GLsizei count, const GLfloat *v);

#ifdef glNamedFramebufferSampleLocationsfvNV
#undef glNamedFramebufferSampleLocationsfvNV
#endif
#ifdef PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
#undef PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC
#endif
typedef void  (*PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);

#ifdef glResolveDepthValuesNV
#undef glResolveDepthValuesNV
#endif
#ifdef PFNGLRESOLVEDEPTHVALUESNVPROC
#undef PFNGLRESOLVEDEPTHVALUESNVPROC
#endif
typedef void  (*PFNGLRESOLVEDEPTHVALUESNVPROC)(void);

#ifndef GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV 0x933D
#endif

#ifndef GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV 0x933E
#endif

#ifndef GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV 0x933F
#endif

#ifndef GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV 0x9340
#endif

#ifndef GL_SAMPLE_LOCATION_NV
#define GL_SAMPLE_LOCATION_NV 0x8E50
#endif

#ifndef GL_PROGRAMMABLE_SAMPLE_LOCATION_NV
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9341
#endif

#ifndef GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV 0x9342
#endif

#ifndef GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV 0x9343
#endif

#ifndef GL_NV_sample_mask_override_coverage
#define GL_NV_sample_mask_override_coverage 1
#endif

#ifndef GL_NV_shader_atomic_counters
#define GL_NV_shader_atomic_counters 1
#endif

#ifndef GL_NV_shader_atomic_float
#define GL_NV_shader_atomic_float 1
#endif

#ifndef GL_NV_shader_atomic_fp16_vector
#define GL_NV_shader_atomic_fp16_vector 1
#endif

#ifndef GL_NV_shader_atomic_int64
#define GL_NV_shader_atomic_int64 1
#endif

#ifndef GL_NV_shader_buffer_load
#define GL_NV_shader_buffer_load 1
#endif

#ifdef glMakeBufferResidentNV
#undef glMakeBufferResidentNV
#endif
#ifdef PFNGLMAKEBUFFERRESIDENTNVPROC
#undef PFNGLMAKEBUFFERRESIDENTNVPROC
#endif
typedef void  (*PFNGLMAKEBUFFERRESIDENTNVPROC)(GLenum target, GLenum access);

#ifdef glMakeBufferNonResidentNV
#undef glMakeBufferNonResidentNV
#endif
#ifdef PFNGLMAKEBUFFERNONRESIDENTNVPROC
#undef PFNGLMAKEBUFFERNONRESIDENTNVPROC
#endif
typedef void  (*PFNGLMAKEBUFFERNONRESIDENTNVPROC)(GLenum target);

#ifdef glIsBufferResidentNV
#undef glIsBufferResidentNV
#endif
#ifdef PFNGLISBUFFERRESIDENTNVPROC
#undef PFNGLISBUFFERRESIDENTNVPROC
#endif
typedef GLboolean  (*PFNGLISBUFFERRESIDENTNVPROC)(GLenum target);

#ifdef glMakeNamedBufferResidentNV
#undef glMakeNamedBufferResidentNV
#endif
#ifdef PFNGLMAKENAMEDBUFFERRESIDENTNVPROC
#undef PFNGLMAKENAMEDBUFFERRESIDENTNVPROC
#endif
typedef void  (*PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)(GLuint buffer, GLenum access);

#ifdef glMakeNamedBufferNonResidentNV
#undef glMakeNamedBufferNonResidentNV
#endif
#ifdef PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC
#undef PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC
#endif
typedef void  (*PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)(GLuint buffer);

#ifdef glIsNamedBufferResidentNV
#undef glIsNamedBufferResidentNV
#endif
#ifdef PFNGLISNAMEDBUFFERRESIDENTNVPROC
#undef PFNGLISNAMEDBUFFERRESIDENTNVPROC
#endif
typedef GLboolean  (*PFNGLISNAMEDBUFFERRESIDENTNVPROC)(GLuint buffer);

#ifdef glGetBufferParameterui64vNV
#undef glGetBufferParameterui64vNV
#endif
#ifdef PFNGLGETBUFFERPARAMETERUI64VNVPROC
#undef PFNGLGETBUFFERPARAMETERUI64VNVPROC
#endif
typedef void  (*PFNGLGETBUFFERPARAMETERUI64VNVPROC)(GLenum target, GLenum pname, GLuint64EXT *params);

#ifdef glGetNamedBufferParameterui64vNV
#undef glGetNamedBufferParameterui64vNV
#endif
#ifdef PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
#undef PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC
#endif
typedef void  (*PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)(GLuint buffer, GLenum pname, GLuint64EXT *params);

#ifdef glGetIntegerui64vNV
#undef glGetIntegerui64vNV
#endif
#ifdef PFNGLGETINTEGERUI64VNVPROC
#undef PFNGLGETINTEGERUI64VNVPROC
#endif
typedef void  (*PFNGLGETINTEGERUI64VNVPROC)(GLenum value, GLuint64EXT *result);

#ifdef glUniformui64NV
#undef glUniformui64NV
#endif
#ifdef PFNGLUNIFORMUI64NVPROC
#undef PFNGLUNIFORMUI64NVPROC
#endif
typedef void  (*PFNGLUNIFORMUI64NVPROC)(GLint location, GLuint64EXT value);

#ifdef glUniformui64vNV
#undef glUniformui64vNV
#endif
#ifdef PFNGLUNIFORMUI64VNVPROC
#undef PFNGLUNIFORMUI64VNVPROC
#endif
typedef void  (*PFNGLUNIFORMUI64VNVPROC)(GLint location, GLsizei count, const GLuint64EXT *value);

#ifdef glGetUniformui64vNV
#undef glGetUniformui64vNV
#endif
#ifdef PFNGLGETUNIFORMUI64VNVPROC
#undef PFNGLGETUNIFORMUI64VNVPROC
#endif
typedef void  (*PFNGLGETUNIFORMUI64VNVPROC)(GLuint program, GLint location, GLuint64EXT *params);

#ifdef glProgramUniformui64NV
#undef glProgramUniformui64NV
#endif
#ifdef PFNGLPROGRAMUNIFORMUI64NVPROC
#undef PFNGLPROGRAMUNIFORMUI64NVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMUI64NVPROC)(GLuint program, GLint location, GLuint64EXT value);

#ifdef glProgramUniformui64vNV
#undef glProgramUniformui64vNV
#endif
#ifdef PFNGLPROGRAMUNIFORMUI64VNVPROC
#undef PFNGLPROGRAMUNIFORMUI64VNVPROC
#endif
typedef void  (*PFNGLPROGRAMUNIFORMUI64VNVPROC)(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);

#ifndef GL_BUFFER_GPU_ADDRESS_NV
#define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#endif

#ifndef GL_GPU_ADDRESS_NV
#define GL_GPU_ADDRESS_NV 0x8F34
#endif

#ifndef GL_MAX_SHADER_BUFFER_ADDRESS_NV
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#endif

#ifndef GL_NV_shader_buffer_store
#define GL_NV_shader_buffer_store 1
#endif

#ifndef GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
#endif

#ifndef GL_READ_WRITE
#define GL_READ_WRITE 0x88BA
#endif

#ifndef GL_WRITE_ONLY
#define GL_WRITE_ONLY 0x88B9
#endif

#ifndef GL_NV_shader_noperspective_interpolation
#define GL_NV_shader_noperspective_interpolation 1
#endif

#ifndef GL_NV_shader_storage_buffer_object
#define GL_NV_shader_storage_buffer_object 1
#endif

#ifndef GL_NV_shader_thread_group
#define GL_NV_shader_thread_group 1
#endif

#ifndef GL_WARP_SIZE_NV
#define GL_WARP_SIZE_NV 0x9339
#endif

#ifndef GL_WARPS_PER_SM_NV
#define GL_WARPS_PER_SM_NV 0x933A
#endif

#ifndef GL_SM_COUNT_NV
#define GL_SM_COUNT_NV 0x933B
#endif

#ifndef GL_NV_shader_thread_shuffle
#define GL_NV_shader_thread_shuffle 1
#endif

#ifndef GL_NV_shadow_samplers_array
#define GL_NV_shadow_samplers_array 1
#endif

#ifndef GL_SAMPLER_2D_ARRAY_SHADOW_NV
#define GL_SAMPLER_2D_ARRAY_SHADOW_NV 0x8DC4
#endif

#ifndef GL_NV_shadow_samplers_cube
#define GL_NV_shadow_samplers_cube 1
#endif

#ifndef GL_SAMPLER_CUBE_SHADOW_NV
#define GL_SAMPLER_CUBE_SHADOW_NV 0x8DC5
#endif

#ifndef GL_NV_tessellation_program5
#define GL_NV_tessellation_program5 1
#endif

#ifndef GL_MAX_PROGRAM_PATCH_ATTRIBS_NV
#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV 0x86D8
#endif

#ifndef GL_TESS_CONTROL_PROGRAM_NV
#define GL_TESS_CONTROL_PROGRAM_NV 0x891E
#endif

#ifndef GL_TESS_EVALUATION_PROGRAM_NV
#define GL_TESS_EVALUATION_PROGRAM_NV 0x891F
#endif

#ifndef GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV
#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
#endif

#ifndef GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV
#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
#endif

#ifndef GL_NV_texgen_emboss
#define GL_NV_texgen_emboss 1
#endif

#ifndef GL_EMBOSS_LIGHT_NV
#define GL_EMBOSS_LIGHT_NV 0x855D
#endif

#ifndef GL_EMBOSS_CONSTANT_NV
#define GL_EMBOSS_CONSTANT_NV 0x855E
#endif

#ifndef GL_EMBOSS_MAP_NV
#define GL_EMBOSS_MAP_NV 0x855F
#endif

#ifndef GL_NV_texgen_reflection
#define GL_NV_texgen_reflection 1
#endif

#ifndef GL_NORMAL_MAP_NV
#define GL_NORMAL_MAP_NV 0x8511
#endif

#ifndef GL_REFLECTION_MAP_NV
#define GL_REFLECTION_MAP_NV 0x8512
#endif

#ifndef GL_NV_texture_barrier
#define GL_NV_texture_barrier 1
#endif

#ifdef glTextureBarrierNV
#undef glTextureBarrierNV
#endif
#ifdef PFNGLTEXTUREBARRIERNVPROC
#undef PFNGLTEXTUREBARRIERNVPROC
#endif
typedef void  (*PFNGLTEXTUREBARRIERNVPROC)(void);

#ifndef GL_NV_texture_border_clamp
#define GL_NV_texture_border_clamp 1
#endif

#ifndef GL_TEXTURE_BORDER_COLOR_NV
#define GL_TEXTURE_BORDER_COLOR_NV 0x1004
#endif

#ifndef GL_CLAMP_TO_BORDER_NV
#define GL_CLAMP_TO_BORDER_NV 0x812D
#endif

#ifndef GL_NV_texture_compression_s3tc_update
#define GL_NV_texture_compression_s3tc_update 1
#endif

#ifndef GL_NV_texture_compression_vtc
#define GL_NV_texture_compression_vtc 1
#endif

#ifndef GL_NV_texture_env_combine4
#define GL_NV_texture_env_combine4 1
#endif

#ifndef GL_COMBINE4_NV
#define GL_COMBINE4_NV 0x8503
#endif

#ifndef GL_SOURCE3_RGB_NV
#define GL_SOURCE3_RGB_NV 0x8583
#endif

#ifndef GL_SOURCE3_ALPHA_NV
#define GL_SOURCE3_ALPHA_NV 0x858B
#endif

#ifndef GL_OPERAND3_RGB_NV
#define GL_OPERAND3_RGB_NV 0x8593
#endif

#ifndef GL_OPERAND3_ALPHA_NV
#define GL_OPERAND3_ALPHA_NV 0x859B
#endif

#ifndef GL_NV_texture_expand_normal
#define GL_NV_texture_expand_normal 1
#endif

#ifndef GL_TEXTURE_UNSIGNED_REMAP_MODE_NV
#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
#endif

#ifndef GL_NV_texture_multisample
#define GL_NV_texture_multisample 1
#endif

#ifdef glTexImage2DMultisampleCoverageNV
#undef glTexImage2DMultisampleCoverageNV
#endif
#ifdef PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC
#undef PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC
#endif
typedef void  (*PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);

#ifdef glTexImage3DMultisampleCoverageNV
#undef glTexImage3DMultisampleCoverageNV
#endif
#ifdef PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC
#undef PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC
#endif
typedef void  (*PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);

#ifndef GL_TEXTURE_COVERAGE_SAMPLES_NV
#define GL_TEXTURE_COVERAGE_SAMPLES_NV 0x9045
#endif

#ifndef GL_TEXTURE_COLOR_SAMPLES_NV
#define GL_TEXTURE_COLOR_SAMPLES_NV 0x9046
#endif

#ifdef glTextureImage2DMultisampleNV
#undef glTextureImage2DMultisampleNV
#endif
#ifdef PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC
#undef PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC
#endif
typedef void  (*PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);

#ifdef glTextureImage3DMultisampleNV
#undef glTextureImage3DMultisampleNV
#endif
#ifdef PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC
#undef PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC
#endif
typedef void  (*PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);

#ifdef glTextureImage2DMultisampleCoverageNV
#undef glTextureImage2DMultisampleCoverageNV
#endif
#ifdef PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC
#undef PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC
#endif
typedef void  (*PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);

#ifdef glTextureImage3DMultisampleCoverageNV
#undef glTextureImage3DMultisampleCoverageNV
#endif
#ifdef PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC
#undef PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC
#endif
typedef void  (*PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);

#ifndef GL_NV_texture_npot_2D_mipmap
#define GL_NV_texture_npot_2D_mipmap 1
#endif

#ifndef GL_NV_texture_rectangle
#define GL_NV_texture_rectangle 1
#endif

#ifndef GL_TEXTURE_RECTANGLE_NV
#define GL_TEXTURE_RECTANGLE_NV 0x84F5
#endif

#ifndef GL_TEXTURE_BINDING_RECTANGLE_NV
#define GL_TEXTURE_BINDING_RECTANGLE_NV 0x84F6
#endif

#ifndef GL_PROXY_TEXTURE_RECTANGLE_NV
#define GL_PROXY_TEXTURE_RECTANGLE_NV 0x84F7
#endif

#ifndef GL_MAX_RECTANGLE_TEXTURE_SIZE_NV
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV 0x84F8
#endif

#ifndef GL_NV_texture_shader
#define GL_NV_texture_shader 1
#endif

#ifndef GL_OFFSET_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_TEXTURE_RECTANGLE_NV 0x864C
#endif

#ifndef GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
#endif

#ifndef GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
#endif

#ifndef GL_UNSIGNED_INT_S8_S8_8_8_NV
#define GL_UNSIGNED_INT_S8_S8_8_8_NV 0x86DA
#endif

#ifndef GL_UNSIGNED_INT_8_8_S8_S8_REV_NV
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 0x86DB
#endif

#ifndef GL_DSDT_MAG_INTENSITY_NV
#define GL_DSDT_MAG_INTENSITY_NV 0x86DC
#endif

#ifndef GL_SHADER_CONSISTENT_NV
#define GL_SHADER_CONSISTENT_NV 0x86DD
#endif

#ifndef GL_TEXTURE_SHADER_NV
#define GL_TEXTURE_SHADER_NV 0x86DE
#endif

#ifndef GL_SHADER_OPERATION_NV
#define GL_SHADER_OPERATION_NV 0x86DF
#endif

#ifndef GL_CULL_MODES_NV
#define GL_CULL_MODES_NV 0x86E0
#endif

#ifndef GL_OFFSET_TEXTURE_MATRIX_NV
#define GL_OFFSET_TEXTURE_MATRIX_NV 0x86E1
#endif

#ifndef GL_OFFSET_TEXTURE_SCALE_NV
#define GL_OFFSET_TEXTURE_SCALE_NV 0x86E2
#endif

#ifndef GL_OFFSET_TEXTURE_BIAS_NV
#define GL_OFFSET_TEXTURE_BIAS_NV 0x86E3
#endif

#ifndef GL_OFFSET_TEXTURE_2D_MATRIX_NV
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV 0x86E1
#endif

#ifndef GL_OFFSET_TEXTURE_2D_SCALE_NV
#define GL_OFFSET_TEXTURE_2D_SCALE_NV 0x86E2
#endif

#ifndef GL_OFFSET_TEXTURE_2D_BIAS_NV
#define GL_OFFSET_TEXTURE_2D_BIAS_NV 0x86E3
#endif

#ifndef GL_PREVIOUS_TEXTURE_INPUT_NV
#define GL_PREVIOUS_TEXTURE_INPUT_NV 0x86E4
#endif

#ifndef GL_CONST_EYE_NV
#define GL_CONST_EYE_NV 0x86E5
#endif

#ifndef GL_PASS_THROUGH_NV
#define GL_PASS_THROUGH_NV 0x86E6
#endif

#ifndef GL_CULL_FRAGMENT_NV
#define GL_CULL_FRAGMENT_NV 0x86E7
#endif

#ifndef GL_OFFSET_TEXTURE_2D_NV
#define GL_OFFSET_TEXTURE_2D_NV 0x86E8
#endif

#ifndef GL_DEPENDENT_AR_TEXTURE_2D_NV
#define GL_DEPENDENT_AR_TEXTURE_2D_NV 0x86E9
#endif

#ifndef GL_DEPENDENT_GB_TEXTURE_2D_NV
#define GL_DEPENDENT_GB_TEXTURE_2D_NV 0x86EA
#endif

#ifndef GL_DOT_PRODUCT_NV
#define GL_DOT_PRODUCT_NV 0x86EC
#endif

#ifndef GL_DOT_PRODUCT_DEPTH_REPLACE_NV
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV 0x86ED
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_2D_NV
#define GL_DOT_PRODUCT_TEXTURE_2D_NV 0x86EE
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
#endif

#ifndef GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
#endif

#ifndef GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
#endif

#ifndef GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
#endif

#ifndef GL_HILO_NV
#define GL_HILO_NV 0x86F4
#endif

#ifndef GL_DSDT_NV
#define GL_DSDT_NV 0x86F5
#endif

#ifndef GL_DSDT_MAG_NV
#define GL_DSDT_MAG_NV 0x86F6
#endif

#ifndef GL_DSDT_MAG_VIB_NV
#define GL_DSDT_MAG_VIB_NV 0x86F7
#endif

#ifndef GL_HILO16_NV
#define GL_HILO16_NV 0x86F8
#endif

#ifndef GL_SIGNED_HILO_NV
#define GL_SIGNED_HILO_NV 0x86F9
#endif

#ifndef GL_SIGNED_HILO16_NV
#define GL_SIGNED_HILO16_NV 0x86FA
#endif

#ifndef GL_SIGNED_RGBA_NV
#define GL_SIGNED_RGBA_NV 0x86FB
#endif

#ifndef GL_SIGNED_RGBA8_NV
#define GL_SIGNED_RGBA8_NV 0x86FC
#endif

#ifndef GL_SIGNED_RGB_NV
#define GL_SIGNED_RGB_NV 0x86FE
#endif

#ifndef GL_SIGNED_RGB8_NV
#define GL_SIGNED_RGB8_NV 0x86FF
#endif

#ifndef GL_SIGNED_LUMINANCE_NV
#define GL_SIGNED_LUMINANCE_NV 0x8701
#endif

#ifndef GL_SIGNED_LUMINANCE8_NV
#define GL_SIGNED_LUMINANCE8_NV 0x8702
#endif

#ifndef GL_SIGNED_LUMINANCE_ALPHA_NV
#define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703
#endif

#ifndef GL_SIGNED_LUMINANCE8_ALPHA8_NV
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704
#endif

#ifndef GL_SIGNED_ALPHA_NV
#define GL_SIGNED_ALPHA_NV 0x8705
#endif

#ifndef GL_SIGNED_ALPHA8_NV
#define GL_SIGNED_ALPHA8_NV 0x8706
#endif

#ifndef GL_SIGNED_INTENSITY_NV
#define GL_SIGNED_INTENSITY_NV 0x8707
#endif

#ifndef GL_SIGNED_INTENSITY8_NV
#define GL_SIGNED_INTENSITY8_NV 0x8708
#endif

#ifndef GL_DSDT8_NV
#define GL_DSDT8_NV 0x8709
#endif

#ifndef GL_DSDT8_MAG8_NV
#define GL_DSDT8_MAG8_NV 0x870A
#endif

#ifndef GL_DSDT8_MAG8_INTENSITY8_NV
#define GL_DSDT8_MAG8_INTENSITY8_NV 0x870B
#endif

#ifndef GL_SIGNED_RGB_UNSIGNED_ALPHA_NV
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 0x870C
#endif

#ifndef GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
#endif

#ifndef GL_HI_SCALE_NV
#define GL_HI_SCALE_NV 0x870E
#endif

#ifndef GL_LO_SCALE_NV
#define GL_LO_SCALE_NV 0x870F
#endif

#ifndef GL_DS_SCALE_NV
#define GL_DS_SCALE_NV 0x8710
#endif

#ifndef GL_DT_SCALE_NV
#define GL_DT_SCALE_NV 0x8711
#endif

#ifndef GL_MAGNITUDE_SCALE_NV
#define GL_MAGNITUDE_SCALE_NV 0x8712
#endif

#ifndef GL_VIBRANCE_SCALE_NV
#define GL_VIBRANCE_SCALE_NV 0x8713
#endif

#ifndef GL_HI_BIAS_NV
#define GL_HI_BIAS_NV 0x8714
#endif

#ifndef GL_LO_BIAS_NV
#define GL_LO_BIAS_NV 0x8715
#endif

#ifndef GL_DS_BIAS_NV
#define GL_DS_BIAS_NV 0x8716
#endif

#ifndef GL_DT_BIAS_NV
#define GL_DT_BIAS_NV 0x8717
#endif

#ifndef GL_MAGNITUDE_BIAS_NV
#define GL_MAGNITUDE_BIAS_NV 0x8718
#endif

#ifndef GL_VIBRANCE_BIAS_NV
#define GL_VIBRANCE_BIAS_NV 0x8719
#endif

#ifndef GL_TEXTURE_BORDER_VALUES_NV
#define GL_TEXTURE_BORDER_VALUES_NV 0x871A
#endif

#ifndef GL_TEXTURE_HI_SIZE_NV
#define GL_TEXTURE_HI_SIZE_NV 0x871B
#endif

#ifndef GL_TEXTURE_LO_SIZE_NV
#define GL_TEXTURE_LO_SIZE_NV 0x871C
#endif

#ifndef GL_TEXTURE_DS_SIZE_NV
#define GL_TEXTURE_DS_SIZE_NV 0x871D
#endif

#ifndef GL_TEXTURE_DT_SIZE_NV
#define GL_TEXTURE_DT_SIZE_NV 0x871E
#endif

#ifndef GL_TEXTURE_MAG_SIZE_NV
#define GL_TEXTURE_MAG_SIZE_NV 0x871F
#endif

#ifndef GL_NV_texture_shader2
#define GL_NV_texture_shader2 1
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_3D_NV
#define GL_DOT_PRODUCT_TEXTURE_3D_NV 0x86EF
#endif

#ifndef GL_NV_texture_shader3
#define GL_NV_texture_shader3 1
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
#endif

#ifndef GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
#endif

#ifndef GL_OFFSET_HILO_TEXTURE_2D_NV
#define GL_OFFSET_HILO_TEXTURE_2D_NV 0x8854
#endif

#ifndef GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
#endif

#ifndef GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
#endif

#ifndef GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
#endif

#ifndef GL_DEPENDENT_HILO_TEXTURE_2D_NV
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV 0x8858
#endif

#ifndef GL_DEPENDENT_RGB_TEXTURE_3D_NV
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV 0x8859
#endif

#ifndef GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
#endif

#ifndef GL_DOT_PRODUCT_PASS_THROUGH_NV
#define GL_DOT_PRODUCT_PASS_THROUGH_NV 0x885B
#endif

#ifndef GL_DOT_PRODUCT_TEXTURE_1D_NV
#define GL_DOT_PRODUCT_TEXTURE_1D_NV 0x885C
#endif

#ifndef GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
#endif

#ifndef GL_HILO8_NV
#define GL_HILO8_NV 0x885E
#endif

#ifndef GL_SIGNED_HILO8_NV
#define GL_SIGNED_HILO8_NV 0x885F
#endif

#ifndef GL_FORCE_BLUE_TO_ONE_NV
#define GL_FORCE_BLUE_TO_ONE_NV 0x8860
#endif

#ifndef GL_NV_transform_feedback
#define GL_NV_transform_feedback 1
#endif

#ifdef glBeginTransformFeedbackNV
#undef glBeginTransformFeedbackNV
#endif
#ifdef PFNGLBEGINTRANSFORMFEEDBACKNVPROC
#undef PFNGLBEGINTRANSFORMFEEDBACKNVPROC
#endif
typedef void  (*PFNGLBEGINTRANSFORMFEEDBACKNVPROC)(GLenum primitiveMode);

#ifdef glEndTransformFeedbackNV
#undef glEndTransformFeedbackNV
#endif
#ifdef PFNGLENDTRANSFORMFEEDBACKNVPROC
#undef PFNGLENDTRANSFORMFEEDBACKNVPROC
#endif
typedef void  (*PFNGLENDTRANSFORMFEEDBACKNVPROC)(void);

#ifdef glTransformFeedbackAttribsNV
#undef glTransformFeedbackAttribsNV
#endif
#ifdef PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
#undef PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)(GLsizei count, const GLint *attribs, GLenum bufferMode);

#ifdef glBindBufferRangeNV
#undef glBindBufferRangeNV
#endif
#ifdef PFNGLBINDBUFFERRANGENVPROC
#undef PFNGLBINDBUFFERRANGENVPROC
#endif
typedef void  (*PFNGLBINDBUFFERRANGENVPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifdef glBindBufferOffsetNV
#undef glBindBufferOffsetNV
#endif
#ifdef PFNGLBINDBUFFEROFFSETNVPROC
#undef PFNGLBINDBUFFEROFFSETNVPROC
#endif
typedef void  (*PFNGLBINDBUFFEROFFSETNVPROC)(GLenum target, GLuint index, GLuint buffer, GLintptr offset);

#ifdef glBindBufferBaseNV
#undef glBindBufferBaseNV
#endif
#ifdef PFNGLBINDBUFFERBASENVPROC
#undef PFNGLBINDBUFFERBASENVPROC
#endif
typedef void  (*PFNGLBINDBUFFERBASENVPROC)(GLenum target, GLuint index, GLuint buffer);

#ifdef glTransformFeedbackVaryingsNV
#undef glTransformFeedbackVaryingsNV
#endif
#ifdef PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
#undef PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);

#ifdef glActiveVaryingNV
#undef glActiveVaryingNV
#endif
#ifdef PFNGLACTIVEVARYINGNVPROC
#undef PFNGLACTIVEVARYINGNVPROC
#endif
typedef void  (*PFNGLACTIVEVARYINGNVPROC)(GLuint program, const GLchar *name);

#ifdef glGetVaryingLocationNV
#undef glGetVaryingLocationNV
#endif
#ifdef PFNGLGETVARYINGLOCATIONNVPROC
#undef PFNGLGETVARYINGLOCATIONNVPROC
#endif
typedef GLint  (*PFNGLGETVARYINGLOCATIONNVPROC)(GLuint program, const GLchar *name);

#ifdef glGetActiveVaryingNV
#undef glGetActiveVaryingNV
#endif
#ifdef PFNGLGETACTIVEVARYINGNVPROC
#undef PFNGLGETACTIVEVARYINGNVPROC
#endif
typedef void  (*PFNGLGETACTIVEVARYINGNVPROC)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);

#ifdef glGetTransformFeedbackVaryingNV
#undef glGetTransformFeedbackVaryingNV
#endif
#ifdef PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
#undef PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC
#endif
typedef void  (*PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)(GLuint program, GLuint index, GLint *location);

#ifndef GL_BACK_PRIMARY_COLOR_NV
#define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#endif

#ifndef GL_BACK_SECONDARY_COLOR_NV
#define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#endif

#ifndef GL_TEXTURE_COORD_NV
#define GL_TEXTURE_COORD_NV 0x8C79
#endif

#ifndef GL_CLIP_DISTANCE_NV
#define GL_CLIP_DISTANCE_NV 0x8C7A
#endif

#ifndef GL_VERTEX_ID_NV
#define GL_VERTEX_ID_NV 0x8C7B
#endif

#ifndef GL_PRIMITIVE_ID_NV
#define GL_PRIMITIVE_ID_NV 0x8C7C
#endif

#ifndef GL_GENERIC_ATTRIB_NV
#define GL_GENERIC_ATTRIB_NV 0x8C7D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_ATTRIBS_NV
#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#endif

#ifndef GL_ACTIVE_VARYINGS_NV
#define GL_ACTIVE_VARYINGS_NV 0x8C81
#endif

#ifndef GL_ACTIVE_VARYING_MAX_LENGTH_NV
#define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#endif

#ifndef GL_TRANSFORM_FEEDBACK_VARYINGS_NV
#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_START_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#endif

#ifndef GL_TRANSFORM_FEEDBACK_RECORD_NV
#define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#endif

#ifndef GL_PRIMITIVES_GENERATED_NV
#define GL_PRIMITIVES_GENERATED_NV 0x8C87
#endif

#ifndef GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#endif

#ifndef GL_RASTERIZER_DISCARD_NV
#define GL_RASTERIZER_DISCARD_NV 0x8C89
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#endif

#ifndef GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#endif

#ifndef GL_INTERLEAVED_ATTRIBS_NV
#define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#endif

#ifndef GL_SEPARATE_ATTRIBS_NV
#define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#endif

#ifndef GL_LAYER_NV
#define GL_LAYER_NV 0x8DAA
#endif

#ifdef glTransformFeedbackStreamAttribsNV
#undef glTransformFeedbackStreamAttribsNV
#endif
#ifdef PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC
#undef PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC
#endif
typedef void  (*PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC)(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);

#ifndef GL_NEXT_BUFFER_NV
#define GL_NEXT_BUFFER_NV -2
#endif

#ifndef GL_SKIP_COMPONENTS4_NV
#define GL_SKIP_COMPONENTS4_NV -3
#endif

#ifndef GL_SKIP_COMPONENTS3_NV
#define GL_SKIP_COMPONENTS3_NV -4
#endif

#ifndef GL_SKIP_COMPONENTS2_NV
#define GL_SKIP_COMPONENTS2_NV -5
#endif

#ifndef GL_SKIP_COMPONENTS1_NV
#define GL_SKIP_COMPONENTS1_NV -6
#endif

#ifndef GL_NV_transform_feedback2
#define GL_NV_transform_feedback2 1
#endif

#ifdef glBindTransformFeedbackNV
#undef glBindTransformFeedbackNV
#endif
#ifdef PFNGLBINDTRANSFORMFEEDBACKNVPROC
#undef PFNGLBINDTRANSFORMFEEDBACKNVPROC
#endif
typedef void  (*PFNGLBINDTRANSFORMFEEDBACKNVPROC)(GLenum target, GLuint id);

#ifdef glDeleteTransformFeedbacksNV
#undef glDeleteTransformFeedbacksNV
#endif
#ifdef PFNGLDELETETRANSFORMFEEDBACKSNVPROC
#undef PFNGLDELETETRANSFORMFEEDBACKSNVPROC
#endif
typedef void  (*PFNGLDELETETRANSFORMFEEDBACKSNVPROC)(GLsizei n, const GLuint *ids);

#ifdef glGenTransformFeedbacksNV
#undef glGenTransformFeedbacksNV
#endif
#ifdef PFNGLGENTRANSFORMFEEDBACKSNVPROC
#undef PFNGLGENTRANSFORMFEEDBACKSNVPROC
#endif
typedef void  (*PFNGLGENTRANSFORMFEEDBACKSNVPROC)(GLsizei n, GLuint *ids);

#ifdef glIsTransformFeedbackNV
#undef glIsTransformFeedbackNV
#endif
#ifdef PFNGLISTRANSFORMFEEDBACKNVPROC
#undef PFNGLISTRANSFORMFEEDBACKNVPROC
#endif
typedef GLboolean  (*PFNGLISTRANSFORMFEEDBACKNVPROC)(GLuint id);

#ifdef glPauseTransformFeedbackNV
#undef glPauseTransformFeedbackNV
#endif
#ifdef PFNGLPAUSETRANSFORMFEEDBACKNVPROC
#undef PFNGLPAUSETRANSFORMFEEDBACKNVPROC
#endif
typedef void  (*PFNGLPAUSETRANSFORMFEEDBACKNVPROC)(void);

#ifdef glResumeTransformFeedbackNV
#undef glResumeTransformFeedbackNV
#endif
#ifdef PFNGLRESUMETRANSFORMFEEDBACKNVPROC
#undef PFNGLRESUMETRANSFORMFEEDBACKNVPROC
#endif
typedef void  (*PFNGLRESUMETRANSFORMFEEDBACKNVPROC)(void);

#ifdef glDrawTransformFeedbackNV
#undef glDrawTransformFeedbackNV
#endif
#ifdef PFNGLDRAWTRANSFORMFEEDBACKNVPROC
#undef PFNGLDRAWTRANSFORMFEEDBACKNVPROC
#endif
typedef void  (*PFNGLDRAWTRANSFORMFEEDBACKNVPROC)(GLenum mode, GLuint id);

#ifndef GL_TRANSFORM_FEEDBACK_NV
#define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#endif

#ifndef GL_TRANSFORM_FEEDBACK_BINDING_NV
#define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#endif

#ifndef GL_NV_uniform_buffer_unified_memory
#define GL_NV_uniform_buffer_unified_memory 1
#endif

#ifndef GL_UNIFORM_BUFFER_UNIFIED_NV
#define GL_UNIFORM_BUFFER_UNIFIED_NV 0x936E
#endif

#ifndef GL_UNIFORM_BUFFER_ADDRESS_NV
#define GL_UNIFORM_BUFFER_ADDRESS_NV 0x936F
#endif

#ifndef GL_UNIFORM_BUFFER_LENGTH_NV
#define GL_UNIFORM_BUFFER_LENGTH_NV 0x9370
#endif

#ifndef GL_NV_vdpau_interop
#define GL_NV_vdpau_interop 1
#endif

#ifdef glVDPAUInitNV
#undef glVDPAUInitNV
#endif
#ifdef PFNGLVDPAUINITNVPROC
#undef PFNGLVDPAUINITNVPROC
#endif
typedef void  (*PFNGLVDPAUINITNVPROC)(const void *vdpDevice, const void *getProcAddress);

#ifdef glVDPAUFiniNV
#undef glVDPAUFiniNV
#endif
#ifdef PFNGLVDPAUFININVPROC
#undef PFNGLVDPAUFININVPROC
#endif
typedef void  (*PFNGLVDPAUFININVPROC)(void);

#ifdef glVDPAURegisterVideoSurfaceNV
#undef glVDPAURegisterVideoSurfaceNV
#endif
#ifdef PFNGLVDPAUREGISTERVIDEOSURFACENVPROC
#undef PFNGLVDPAUREGISTERVIDEOSURFACENVPROC
#endif
typedef GLvdpauSurfaceNV  (*PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);

#ifdef glVDPAURegisterOutputSurfaceNV
#undef glVDPAURegisterOutputSurfaceNV
#endif
#ifdef PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC
#undef PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC
#endif
typedef GLvdpauSurfaceNV  (*PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);

#ifdef glVDPAUIsSurfaceNV
#undef glVDPAUIsSurfaceNV
#endif
#ifdef PFNGLVDPAUISSURFACENVPROC
#undef PFNGLVDPAUISSURFACENVPROC
#endif
typedef GLboolean  (*PFNGLVDPAUISSURFACENVPROC)(GLvdpauSurfaceNV surface);

#ifdef glVDPAUUnregisterSurfaceNV
#undef glVDPAUUnregisterSurfaceNV
#endif
#ifdef PFNGLVDPAUUNREGISTERSURFACENVPROC
#undef PFNGLVDPAUUNREGISTERSURFACENVPROC
#endif
typedef void  (*PFNGLVDPAUUNREGISTERSURFACENVPROC)(GLvdpauSurfaceNV surface);

#ifdef glVDPAUGetSurfaceivNV
#undef glVDPAUGetSurfaceivNV
#endif
#ifdef PFNGLVDPAUGETSURFACEIVNVPROC
#undef PFNGLVDPAUGETSURFACEIVNVPROC
#endif
typedef void  (*PFNGLVDPAUGETSURFACEIVNVPROC)(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);

#ifdef glVDPAUSurfaceAccessNV
#undef glVDPAUSurfaceAccessNV
#endif
#ifdef PFNGLVDPAUSURFACEACCESSNVPROC
#undef PFNGLVDPAUSURFACEACCESSNVPROC
#endif
typedef void  (*PFNGLVDPAUSURFACEACCESSNVPROC)(GLvdpauSurfaceNV surface, GLenum access);

#ifdef glVDPAUMapSurfacesNV
#undef glVDPAUMapSurfacesNV
#endif
#ifdef PFNGLVDPAUMAPSURFACESNVPROC
#undef PFNGLVDPAUMAPSURFACESNVPROC
#endif
typedef void  (*PFNGLVDPAUMAPSURFACESNVPROC)(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);

#ifdef glVDPAUUnmapSurfacesNV
#undef glVDPAUUnmapSurfacesNV
#endif
#ifdef PFNGLVDPAUUNMAPSURFACESNVPROC
#undef PFNGLVDPAUUNMAPSURFACESNVPROC
#endif
typedef void  (*PFNGLVDPAUUNMAPSURFACESNVPROC)(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);

#ifndef GL_SURFACE_STATE_NV
#define GL_SURFACE_STATE_NV 0x86EB
#endif

#ifndef GL_SURFACE_REGISTERED_NV
#define GL_SURFACE_REGISTERED_NV 0x86FD
#endif

#ifndef GL_SURFACE_MAPPED_NV
#define GL_SURFACE_MAPPED_NV 0x8700
#endif

#ifndef GL_WRITE_DISCARD_NV
#define GL_WRITE_DISCARD_NV 0x88BE
#endif

#ifndef GL_NV_vertex_array_range
#define GL_NV_vertex_array_range 1
#endif

#ifdef glFlushVertexArrayRangeNV
#undef glFlushVertexArrayRangeNV
#endif
#ifdef PFNGLFLUSHVERTEXARRAYRANGENVPROC
#undef PFNGLFLUSHVERTEXARRAYRANGENVPROC
#endif
typedef void  (*PFNGLFLUSHVERTEXARRAYRANGENVPROC)(void);

#ifdef glVertexArrayRangeNV
#undef glVertexArrayRangeNV
#endif
#ifdef PFNGLVERTEXARRAYRANGENVPROC
#undef PFNGLVERTEXARRAYRANGENVPROC
#endif
typedef void  (*PFNGLVERTEXARRAYRANGENVPROC)(GLsizei length, const void *pointer);

#ifndef GL_VERTEX_ARRAY_RANGE_NV
#define GL_VERTEX_ARRAY_RANGE_NV 0x851D
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_LENGTH_NV
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV 0x851E
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_VALID_NV
#define GL_VERTEX_ARRAY_RANGE_VALID_NV 0x851F
#endif

#ifndef GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_POINTER_NV
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV 0x8521
#endif

#ifndef GL_NV_vertex_array_range2
#define GL_NV_vertex_array_range2 1
#endif

#ifndef GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV
#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
#endif

#ifndef GL_NV_vertex_attrib_integer_64bit
#define GL_NV_vertex_attrib_integer_64bit 1
#endif

#ifdef glVertexAttribL1i64NV
#undef glVertexAttribL1i64NV
#endif
#ifdef PFNGLVERTEXATTRIBL1I64NVPROC
#undef PFNGLVERTEXATTRIBL1I64NVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1I64NVPROC)(GLuint index, GLint64EXT x);

#ifdef glVertexAttribL2i64NV
#undef glVertexAttribL2i64NV
#endif
#ifdef PFNGLVERTEXATTRIBL2I64NVPROC
#undef PFNGLVERTEXATTRIBL2I64NVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y);

#ifdef glVertexAttribL3i64NV
#undef glVertexAttribL3i64NV
#endif
#ifdef PFNGLVERTEXATTRIBL3I64NVPROC
#undef PFNGLVERTEXATTRIBL3I64NVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);

#ifdef glVertexAttribL4i64NV
#undef glVertexAttribL4i64NV
#endif
#ifdef PFNGLVERTEXATTRIBL4I64NVPROC
#undef PFNGLVERTEXATTRIBL4I64NVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4I64NVPROC)(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);

#ifdef glVertexAttribL1i64vNV
#undef glVertexAttribL1i64vNV
#endif
#ifdef PFNGLVERTEXATTRIBL1I64VNVPROC
#undef PFNGLVERTEXATTRIBL1I64VNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1I64VNVPROC)(GLuint index, const GLint64EXT *v);

#ifdef glVertexAttribL2i64vNV
#undef glVertexAttribL2i64vNV
#endif
#ifdef PFNGLVERTEXATTRIBL2I64VNVPROC
#undef PFNGLVERTEXATTRIBL2I64VNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2I64VNVPROC)(GLuint index, const GLint64EXT *v);

#ifdef glVertexAttribL3i64vNV
#undef glVertexAttribL3i64vNV
#endif
#ifdef PFNGLVERTEXATTRIBL3I64VNVPROC
#undef PFNGLVERTEXATTRIBL3I64VNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3I64VNVPROC)(GLuint index, const GLint64EXT *v);

#ifdef glVertexAttribL4i64vNV
#undef glVertexAttribL4i64vNV
#endif
#ifdef PFNGLVERTEXATTRIBL4I64VNVPROC
#undef PFNGLVERTEXATTRIBL4I64VNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4I64VNVPROC)(GLuint index, const GLint64EXT *v);

#ifdef glVertexAttribL1ui64NV
#undef glVertexAttribL1ui64NV
#endif
#ifdef PFNGLVERTEXATTRIBL1UI64NVPROC
#undef PFNGLVERTEXATTRIBL1UI64NVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1UI64NVPROC)(GLuint index, GLuint64EXT x);

#ifdef glVertexAttribL2ui64NV
#undef glVertexAttribL2ui64NV
#endif
#ifdef PFNGLVERTEXATTRIBL2UI64NVPROC
#undef PFNGLVERTEXATTRIBL2UI64NVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y);

#ifdef glVertexAttribL3ui64NV
#undef glVertexAttribL3ui64NV
#endif
#ifdef PFNGLVERTEXATTRIBL3UI64NVPROC
#undef PFNGLVERTEXATTRIBL3UI64NVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);

#ifdef glVertexAttribL4ui64NV
#undef glVertexAttribL4ui64NV
#endif
#ifdef PFNGLVERTEXATTRIBL4UI64NVPROC
#undef PFNGLVERTEXATTRIBL4UI64NVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4UI64NVPROC)(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);

#ifdef glVertexAttribL1ui64vNV
#undef glVertexAttribL1ui64vNV
#endif
#ifdef PFNGLVERTEXATTRIBL1UI64VNVPROC
#undef PFNGLVERTEXATTRIBL1UI64VNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL1UI64VNVPROC)(GLuint index, const GLuint64EXT *v);

#ifdef glVertexAttribL2ui64vNV
#undef glVertexAttribL2ui64vNV
#endif
#ifdef PFNGLVERTEXATTRIBL2UI64VNVPROC
#undef PFNGLVERTEXATTRIBL2UI64VNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL2UI64VNVPROC)(GLuint index, const GLuint64EXT *v);

#ifdef glVertexAttribL3ui64vNV
#undef glVertexAttribL3ui64vNV
#endif
#ifdef PFNGLVERTEXATTRIBL3UI64VNVPROC
#undef PFNGLVERTEXATTRIBL3UI64VNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL3UI64VNVPROC)(GLuint index, const GLuint64EXT *v);

#ifdef glVertexAttribL4ui64vNV
#undef glVertexAttribL4ui64vNV
#endif
#ifdef PFNGLVERTEXATTRIBL4UI64VNVPROC
#undef PFNGLVERTEXATTRIBL4UI64VNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBL4UI64VNVPROC)(GLuint index, const GLuint64EXT *v);

#ifdef glGetVertexAttribLi64vNV
#undef glGetVertexAttribLi64vNV
#endif
#ifdef PFNGLGETVERTEXATTRIBLI64VNVPROC
#undef PFNGLGETVERTEXATTRIBLI64VNVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBLI64VNVPROC)(GLuint index, GLenum pname, GLint64EXT *params);

#ifdef glGetVertexAttribLui64vNV
#undef glGetVertexAttribLui64vNV
#endif
#ifdef PFNGLGETVERTEXATTRIBLUI64VNVPROC
#undef PFNGLGETVERTEXATTRIBLUI64VNVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBLUI64VNVPROC)(GLuint index, GLenum pname, GLuint64EXT *params);

#ifdef glVertexAttribLFormatNV
#undef glVertexAttribLFormatNV
#endif
#ifdef PFNGLVERTEXATTRIBLFORMATNVPROC
#undef PFNGLVERTEXATTRIBLFORMATNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBLFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLsizei stride);

#ifndef GL_INT64_NV
#define GL_INT64_NV 0x140E
#endif

#ifndef GL_UNSIGNED_INT64_NV
#define GL_UNSIGNED_INT64_NV 0x140F
#endif

#ifndef GL_NV_vertex_buffer_unified_memory
#define GL_NV_vertex_buffer_unified_memory 1
#endif

#ifdef glBufferAddressRangeNV
#undef glBufferAddressRangeNV
#endif
#ifdef PFNGLBUFFERADDRESSRANGENVPROC
#undef PFNGLBUFFERADDRESSRANGENVPROC
#endif
typedef void  (*PFNGLBUFFERADDRESSRANGENVPROC)(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);

#ifdef glVertexFormatNV
#undef glVertexFormatNV
#endif
#ifdef PFNGLVERTEXFORMATNVPROC
#undef PFNGLVERTEXFORMATNVPROC
#endif
typedef void  (*PFNGLVERTEXFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);

#ifdef glNormalFormatNV
#undef glNormalFormatNV
#endif
#ifdef PFNGLNORMALFORMATNVPROC
#undef PFNGLNORMALFORMATNVPROC
#endif
typedef void  (*PFNGLNORMALFORMATNVPROC)(GLenum type, GLsizei stride);

#ifdef glColorFormatNV
#undef glColorFormatNV
#endif
#ifdef PFNGLCOLORFORMATNVPROC
#undef PFNGLCOLORFORMATNVPROC
#endif
typedef void  (*PFNGLCOLORFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);

#ifdef glIndexFormatNV
#undef glIndexFormatNV
#endif
#ifdef PFNGLINDEXFORMATNVPROC
#undef PFNGLINDEXFORMATNVPROC
#endif
typedef void  (*PFNGLINDEXFORMATNVPROC)(GLenum type, GLsizei stride);

#ifdef glTexCoordFormatNV
#undef glTexCoordFormatNV
#endif
#ifdef PFNGLTEXCOORDFORMATNVPROC
#undef PFNGLTEXCOORDFORMATNVPROC
#endif
typedef void  (*PFNGLTEXCOORDFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);

#ifdef glEdgeFlagFormatNV
#undef glEdgeFlagFormatNV
#endif
#ifdef PFNGLEDGEFLAGFORMATNVPROC
#undef PFNGLEDGEFLAGFORMATNVPROC
#endif
typedef void  (*PFNGLEDGEFLAGFORMATNVPROC)(GLsizei stride);

#ifdef glSecondaryColorFormatNV
#undef glSecondaryColorFormatNV
#endif
#ifdef PFNGLSECONDARYCOLORFORMATNVPROC
#undef PFNGLSECONDARYCOLORFORMATNVPROC
#endif
typedef void  (*PFNGLSECONDARYCOLORFORMATNVPROC)(GLint size, GLenum type, GLsizei stride);

#ifdef glFogCoordFormatNV
#undef glFogCoordFormatNV
#endif
#ifdef PFNGLFOGCOORDFORMATNVPROC
#undef PFNGLFOGCOORDFORMATNVPROC
#endif
typedef void  (*PFNGLFOGCOORDFORMATNVPROC)(GLenum type, GLsizei stride);

#ifdef glVertexAttribFormatNV
#undef glVertexAttribFormatNV
#endif
#ifdef PFNGLVERTEXATTRIBFORMATNVPROC
#undef PFNGLVERTEXATTRIBFORMATNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);

#ifdef glVertexAttribIFormatNV
#undef glVertexAttribIFormatNV
#endif
#ifdef PFNGLVERTEXATTRIBIFORMATNVPROC
#undef PFNGLVERTEXATTRIBIFORMATNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBIFORMATNVPROC)(GLuint index, GLint size, GLenum type, GLsizei stride);

#ifdef glGetIntegerui64i_vNV
#undef glGetIntegerui64i_vNV
#endif
#ifdef PFNGLGETINTEGERUI64I_VNVPROC
#undef PFNGLGETINTEGERUI64I_VNVPROC
#endif
typedef void  (*PFNGLGETINTEGERUI64I_VNVPROC)(GLenum value, GLuint index, GLuint64EXT *result);

#ifndef GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#endif

#ifndef GL_ELEMENT_ARRAY_UNIFIED_NV
#define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#endif

#ifndef GL_VERTEX_ARRAY_ADDRESS_NV
#define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#endif

#ifndef GL_NORMAL_ARRAY_ADDRESS_NV
#define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#endif

#ifndef GL_COLOR_ARRAY_ADDRESS_NV
#define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#endif

#ifndef GL_INDEX_ARRAY_ADDRESS_NV
#define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_ADDRESS_NV
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#endif

#ifndef GL_EDGE_FLAG_ARRAY_ADDRESS_NV
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#endif

#ifndef GL_FOG_COORD_ARRAY_ADDRESS_NV
#define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#endif

#ifndef GL_ELEMENT_ARRAY_ADDRESS_NV
#define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#endif

#ifndef GL_VERTEX_ARRAY_LENGTH_NV
#define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#endif

#ifndef GL_NORMAL_ARRAY_LENGTH_NV
#define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#endif

#ifndef GL_COLOR_ARRAY_LENGTH_NV
#define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#endif

#ifndef GL_INDEX_ARRAY_LENGTH_NV
#define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#endif

#ifndef GL_TEXTURE_COORD_ARRAY_LENGTH_NV
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#endif

#ifndef GL_EDGE_FLAG_ARRAY_LENGTH_NV
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#endif

#ifndef GL_SECONDARY_COLOR_ARRAY_LENGTH_NV
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#endif

#ifndef GL_FOG_COORD_ARRAY_LENGTH_NV
#define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#endif

#ifndef GL_ELEMENT_ARRAY_LENGTH_NV
#define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#endif

#ifndef GL_DRAW_INDIRECT_UNIFIED_NV
#define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#endif

#ifndef GL_DRAW_INDIRECT_ADDRESS_NV
#define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#endif

#ifndef GL_DRAW_INDIRECT_LENGTH_NV
#define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#endif

#ifndef GL_NV_vertex_program
#define GL_NV_vertex_program 1
#endif

#ifdef glAreProgramsResidentNV
#undef glAreProgramsResidentNV
#endif
#ifdef PFNGLAREPROGRAMSRESIDENTNVPROC
#undef PFNGLAREPROGRAMSRESIDENTNVPROC
#endif
typedef GLboolean  (*PFNGLAREPROGRAMSRESIDENTNVPROC)(GLsizei n, const GLuint *programs, GLboolean *residences);

#ifdef glBindProgramNV
#undef glBindProgramNV
#endif
#ifdef PFNGLBINDPROGRAMNVPROC
#undef PFNGLBINDPROGRAMNVPROC
#endif
typedef void  (*PFNGLBINDPROGRAMNVPROC)(GLenum target, GLuint id);

#ifdef glDeleteProgramsNV
#undef glDeleteProgramsNV
#endif
#ifdef PFNGLDELETEPROGRAMSNVPROC
#undef PFNGLDELETEPROGRAMSNVPROC
#endif
typedef void  (*PFNGLDELETEPROGRAMSNVPROC)(GLsizei n, const GLuint *programs);

#ifdef glExecuteProgramNV
#undef glExecuteProgramNV
#endif
#ifdef PFNGLEXECUTEPROGRAMNVPROC
#undef PFNGLEXECUTEPROGRAMNVPROC
#endif
typedef void  (*PFNGLEXECUTEPROGRAMNVPROC)(GLenum target, GLuint id, const GLfloat *params);

#ifdef glGenProgramsNV
#undef glGenProgramsNV
#endif
#ifdef PFNGLGENPROGRAMSNVPROC
#undef PFNGLGENPROGRAMSNVPROC
#endif
typedef void  (*PFNGLGENPROGRAMSNVPROC)(GLsizei n, GLuint *programs);

#ifdef glGetProgramParameterdvNV
#undef glGetProgramParameterdvNV
#endif
#ifdef PFNGLGETPROGRAMPARAMETERDVNVPROC
#undef PFNGLGETPROGRAMPARAMETERDVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMPARAMETERDVNVPROC)(GLenum target, GLuint index, GLenum pname, GLdouble *params);

#ifdef glGetProgramParameterfvNV
#undef glGetProgramParameterfvNV
#endif
#ifdef PFNGLGETPROGRAMPARAMETERFVNVPROC
#undef PFNGLGETPROGRAMPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMPARAMETERFVNVPROC)(GLenum target, GLuint index, GLenum pname, GLfloat *params);

#ifdef glGetProgramivNV
#undef glGetProgramivNV
#endif
#ifdef PFNGLGETPROGRAMIVNVPROC
#undef PFNGLGETPROGRAMIVNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMIVNVPROC)(GLuint id, GLenum pname, GLint *params);

#ifdef glGetProgramStringNV
#undef glGetProgramStringNV
#endif
#ifdef PFNGLGETPROGRAMSTRINGNVPROC
#undef PFNGLGETPROGRAMSTRINGNVPROC
#endif
typedef void  (*PFNGLGETPROGRAMSTRINGNVPROC)(GLuint id, GLenum pname, GLubyte *program);

#ifdef glGetTrackMatrixivNV
#undef glGetTrackMatrixivNV
#endif
#ifdef PFNGLGETTRACKMATRIXIVNVPROC
#undef PFNGLGETTRACKMATRIXIVNVPROC
#endif
typedef void  (*PFNGLGETTRACKMATRIXIVNVPROC)(GLenum target, GLuint address, GLenum pname, GLint *params);

#ifdef glGetVertexAttribdvNV
#undef glGetVertexAttribdvNV
#endif
#ifdef PFNGLGETVERTEXATTRIBDVNVPROC
#undef PFNGLGETVERTEXATTRIBDVNVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBDVNVPROC)(GLuint index, GLenum pname, GLdouble *params);

#ifdef glGetVertexAttribfvNV
#undef glGetVertexAttribfvNV
#endif
#ifdef PFNGLGETVERTEXATTRIBFVNVPROC
#undef PFNGLGETVERTEXATTRIBFVNVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBFVNVPROC)(GLuint index, GLenum pname, GLfloat *params);

#ifdef glGetVertexAttribivNV
#undef glGetVertexAttribivNV
#endif
#ifdef PFNGLGETVERTEXATTRIBIVNVPROC
#undef PFNGLGETVERTEXATTRIBIVNVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIVNVPROC)(GLuint index, GLenum pname, GLint *params);

#ifdef glGetVertexAttribPointervNV
#undef glGetVertexAttribPointervNV
#endif
#ifdef PFNGLGETVERTEXATTRIBPOINTERVNVPROC
#undef PFNGLGETVERTEXATTRIBPOINTERVNVPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBPOINTERVNVPROC)(GLuint index, GLenum pname, void **pointer);

#ifdef glIsProgramNV
#undef glIsProgramNV
#endif
#ifdef PFNGLISPROGRAMNVPROC
#undef PFNGLISPROGRAMNVPROC
#endif
typedef GLboolean  (*PFNGLISPROGRAMNVPROC)(GLuint id);

#ifdef glLoadProgramNV
#undef glLoadProgramNV
#endif
#ifdef PFNGLLOADPROGRAMNVPROC
#undef PFNGLLOADPROGRAMNVPROC
#endif
typedef void  (*PFNGLLOADPROGRAMNVPROC)(GLenum target, GLuint id, GLsizei len, const GLubyte *program);

#ifdef glProgramParameter4dNV
#undef glProgramParameter4dNV
#endif
#ifdef PFNGLPROGRAMPARAMETER4DNVPROC
#undef PFNGLPROGRAMPARAMETER4DNVPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETER4DNVPROC)(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glProgramParameter4dvNV
#undef glProgramParameter4dvNV
#endif
#ifdef PFNGLPROGRAMPARAMETER4DVNVPROC
#undef PFNGLPROGRAMPARAMETER4DVNVPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETER4DVNVPROC)(GLenum target, GLuint index, const GLdouble *v);

#ifdef glProgramParameter4fNV
#undef glProgramParameter4fNV
#endif
#ifdef PFNGLPROGRAMPARAMETER4FNVPROC
#undef PFNGLPROGRAMPARAMETER4FNVPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETER4FNVPROC)(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glProgramParameter4fvNV
#undef glProgramParameter4fvNV
#endif
#ifdef PFNGLPROGRAMPARAMETER4FVNVPROC
#undef PFNGLPROGRAMPARAMETER4FVNVPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETER4FVNVPROC)(GLenum target, GLuint index, const GLfloat *v);

#ifdef glProgramParameters4dvNV
#undef glProgramParameters4dvNV
#endif
#ifdef PFNGLPROGRAMPARAMETERS4DVNVPROC
#undef PFNGLPROGRAMPARAMETERS4DVNVPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETERS4DVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLdouble *v);

#ifdef glProgramParameters4fvNV
#undef glProgramParameters4fvNV
#endif
#ifdef PFNGLPROGRAMPARAMETERS4FVNVPROC
#undef PFNGLPROGRAMPARAMETERS4FVNVPROC
#endif
typedef void  (*PFNGLPROGRAMPARAMETERS4FVNVPROC)(GLenum target, GLuint index, GLsizei count, const GLfloat *v);

#ifdef glRequestResidentProgramsNV
#undef glRequestResidentProgramsNV
#endif
#ifdef PFNGLREQUESTRESIDENTPROGRAMSNVPROC
#undef PFNGLREQUESTRESIDENTPROGRAMSNVPROC
#endif
typedef void  (*PFNGLREQUESTRESIDENTPROGRAMSNVPROC)(GLsizei n, const GLuint *programs);

#ifdef glTrackMatrixNV
#undef glTrackMatrixNV
#endif
#ifdef PFNGLTRACKMATRIXNVPROC
#undef PFNGLTRACKMATRIXNVPROC
#endif
typedef void  (*PFNGLTRACKMATRIXNVPROC)(GLenum target, GLuint address, GLenum matrix, GLenum transform);

#ifdef glVertexAttribPointerNV
#undef glVertexAttribPointerNV
#endif
#ifdef PFNGLVERTEXATTRIBPOINTERNVPROC
#undef PFNGLVERTEXATTRIBPOINTERNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBPOINTERNVPROC)(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);

#ifdef glVertexAttrib1dNV
#undef glVertexAttrib1dNV
#endif
#ifdef PFNGLVERTEXATTRIB1DNVPROC
#undef PFNGLVERTEXATTRIB1DNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1DNVPROC)(GLuint index, GLdouble x);

#ifdef glVertexAttrib1dvNV
#undef glVertexAttrib1dvNV
#endif
#ifdef PFNGLVERTEXATTRIB1DVNVPROC
#undef PFNGLVERTEXATTRIB1DVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1DVNVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib1fNV
#undef glVertexAttrib1fNV
#endif
#ifdef PFNGLVERTEXATTRIB1FNVPROC
#undef PFNGLVERTEXATTRIB1FNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FNVPROC)(GLuint index, GLfloat x);

#ifdef glVertexAttrib1fvNV
#undef glVertexAttrib1fvNV
#endif
#ifdef PFNGLVERTEXATTRIB1FVNVPROC
#undef PFNGLVERTEXATTRIB1FVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1FVNVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib1sNV
#undef glVertexAttrib1sNV
#endif
#ifdef PFNGLVERTEXATTRIB1SNVPROC
#undef PFNGLVERTEXATTRIB1SNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1SNVPROC)(GLuint index, GLshort x);

#ifdef glVertexAttrib1svNV
#undef glVertexAttrib1svNV
#endif
#ifdef PFNGLVERTEXATTRIB1SVNVPROC
#undef PFNGLVERTEXATTRIB1SVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB1SVNVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib2dNV
#undef glVertexAttrib2dNV
#endif
#ifdef PFNGLVERTEXATTRIB2DNVPROC
#undef PFNGLVERTEXATTRIB2DNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2DNVPROC)(GLuint index, GLdouble x, GLdouble y);

#ifdef glVertexAttrib2dvNV
#undef glVertexAttrib2dvNV
#endif
#ifdef PFNGLVERTEXATTRIB2DVNVPROC
#undef PFNGLVERTEXATTRIB2DVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2DVNVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib2fNV
#undef glVertexAttrib2fNV
#endif
#ifdef PFNGLVERTEXATTRIB2FNVPROC
#undef PFNGLVERTEXATTRIB2FNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FNVPROC)(GLuint index, GLfloat x, GLfloat y);

#ifdef glVertexAttrib2fvNV
#undef glVertexAttrib2fvNV
#endif
#ifdef PFNGLVERTEXATTRIB2FVNVPROC
#undef PFNGLVERTEXATTRIB2FVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2FVNVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib2sNV
#undef glVertexAttrib2sNV
#endif
#ifdef PFNGLVERTEXATTRIB2SNVPROC
#undef PFNGLVERTEXATTRIB2SNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2SNVPROC)(GLuint index, GLshort x, GLshort y);

#ifdef glVertexAttrib2svNV
#undef glVertexAttrib2svNV
#endif
#ifdef PFNGLVERTEXATTRIB2SVNVPROC
#undef PFNGLVERTEXATTRIB2SVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB2SVNVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib3dNV
#undef glVertexAttrib3dNV
#endif
#ifdef PFNGLVERTEXATTRIB3DNVPROC
#undef PFNGLVERTEXATTRIB3DNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3DNVPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z);

#ifdef glVertexAttrib3dvNV
#undef glVertexAttrib3dvNV
#endif
#ifdef PFNGLVERTEXATTRIB3DVNVPROC
#undef PFNGLVERTEXATTRIB3DVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3DVNVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib3fNV
#undef glVertexAttrib3fNV
#endif
#ifdef PFNGLVERTEXATTRIB3FNVPROC
#undef PFNGLVERTEXATTRIB3FNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z);

#ifdef glVertexAttrib3fvNV
#undef glVertexAttrib3fvNV
#endif
#ifdef PFNGLVERTEXATTRIB3FVNVPROC
#undef PFNGLVERTEXATTRIB3FVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3FVNVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib3sNV
#undef glVertexAttrib3sNV
#endif
#ifdef PFNGLVERTEXATTRIB3SNVPROC
#undef PFNGLVERTEXATTRIB3SNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3SNVPROC)(GLuint index, GLshort x, GLshort y, GLshort z);

#ifdef glVertexAttrib3svNV
#undef glVertexAttrib3svNV
#endif
#ifdef PFNGLVERTEXATTRIB3SVNVPROC
#undef PFNGLVERTEXATTRIB3SVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB3SVNVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4dNV
#undef glVertexAttrib4dNV
#endif
#ifdef PFNGLVERTEXATTRIB4DNVPROC
#undef PFNGLVERTEXATTRIB4DNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4DNVPROC)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);

#ifdef glVertexAttrib4dvNV
#undef glVertexAttrib4dvNV
#endif
#ifdef PFNGLVERTEXATTRIB4DVNVPROC
#undef PFNGLVERTEXATTRIB4DVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4DVNVPROC)(GLuint index, const GLdouble *v);

#ifdef glVertexAttrib4fNV
#undef glVertexAttrib4fNV
#endif
#ifdef PFNGLVERTEXATTRIB4FNVPROC
#undef PFNGLVERTEXATTRIB4FNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glVertexAttrib4fvNV
#undef glVertexAttrib4fvNV
#endif
#ifdef PFNGLVERTEXATTRIB4FVNVPROC
#undef PFNGLVERTEXATTRIB4FVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4FVNVPROC)(GLuint index, const GLfloat *v);

#ifdef glVertexAttrib4sNV
#undef glVertexAttrib4sNV
#endif
#ifdef PFNGLVERTEXATTRIB4SNVPROC
#undef PFNGLVERTEXATTRIB4SNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4SNVPROC)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);

#ifdef glVertexAttrib4svNV
#undef glVertexAttrib4svNV
#endif
#ifdef PFNGLVERTEXATTRIB4SVNVPROC
#undef PFNGLVERTEXATTRIB4SVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4SVNVPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttrib4ubNV
#undef glVertexAttrib4ubNV
#endif
#ifdef PFNGLVERTEXATTRIB4UBNVPROC
#undef PFNGLVERTEXATTRIB4UBNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4UBNVPROC)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);

#ifdef glVertexAttrib4ubvNV
#undef glVertexAttrib4ubvNV
#endif
#ifdef PFNGLVERTEXATTRIB4UBVNVPROC
#undef PFNGLVERTEXATTRIB4UBVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIB4UBVNVPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttribs1dvNV
#undef glVertexAttribs1dvNV
#endif
#ifdef PFNGLVERTEXATTRIBS1DVNVPROC
#undef PFNGLVERTEXATTRIBS1DVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS1DVNVPROC)(GLuint index, GLsizei count, const GLdouble *v);

#ifdef glVertexAttribs1fvNV
#undef glVertexAttribs1fvNV
#endif
#ifdef PFNGLVERTEXATTRIBS1FVNVPROC
#undef PFNGLVERTEXATTRIBS1FVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS1FVNVPROC)(GLuint index, GLsizei count, const GLfloat *v);

#ifdef glVertexAttribs1svNV
#undef glVertexAttribs1svNV
#endif
#ifdef PFNGLVERTEXATTRIBS1SVNVPROC
#undef PFNGLVERTEXATTRIBS1SVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS1SVNVPROC)(GLuint index, GLsizei count, const GLshort *v);

#ifdef glVertexAttribs2dvNV
#undef glVertexAttribs2dvNV
#endif
#ifdef PFNGLVERTEXATTRIBS2DVNVPROC
#undef PFNGLVERTEXATTRIBS2DVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS2DVNVPROC)(GLuint index, GLsizei count, const GLdouble *v);

#ifdef glVertexAttribs2fvNV
#undef glVertexAttribs2fvNV
#endif
#ifdef PFNGLVERTEXATTRIBS2FVNVPROC
#undef PFNGLVERTEXATTRIBS2FVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS2FVNVPROC)(GLuint index, GLsizei count, const GLfloat *v);

#ifdef glVertexAttribs2svNV
#undef glVertexAttribs2svNV
#endif
#ifdef PFNGLVERTEXATTRIBS2SVNVPROC
#undef PFNGLVERTEXATTRIBS2SVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS2SVNVPROC)(GLuint index, GLsizei count, const GLshort *v);

#ifdef glVertexAttribs3dvNV
#undef glVertexAttribs3dvNV
#endif
#ifdef PFNGLVERTEXATTRIBS3DVNVPROC
#undef PFNGLVERTEXATTRIBS3DVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS3DVNVPROC)(GLuint index, GLsizei count, const GLdouble *v);

#ifdef glVertexAttribs3fvNV
#undef glVertexAttribs3fvNV
#endif
#ifdef PFNGLVERTEXATTRIBS3FVNVPROC
#undef PFNGLVERTEXATTRIBS3FVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS3FVNVPROC)(GLuint index, GLsizei count, const GLfloat *v);

#ifdef glVertexAttribs3svNV
#undef glVertexAttribs3svNV
#endif
#ifdef PFNGLVERTEXATTRIBS3SVNVPROC
#undef PFNGLVERTEXATTRIBS3SVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS3SVNVPROC)(GLuint index, GLsizei count, const GLshort *v);

#ifdef glVertexAttribs4dvNV
#undef glVertexAttribs4dvNV
#endif
#ifdef PFNGLVERTEXATTRIBS4DVNVPROC
#undef PFNGLVERTEXATTRIBS4DVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS4DVNVPROC)(GLuint index, GLsizei count, const GLdouble *v);

#ifdef glVertexAttribs4fvNV
#undef glVertexAttribs4fvNV
#endif
#ifdef PFNGLVERTEXATTRIBS4FVNVPROC
#undef PFNGLVERTEXATTRIBS4FVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS4FVNVPROC)(GLuint index, GLsizei count, const GLfloat *v);

#ifdef glVertexAttribs4svNV
#undef glVertexAttribs4svNV
#endif
#ifdef PFNGLVERTEXATTRIBS4SVNVPROC
#undef PFNGLVERTEXATTRIBS4SVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS4SVNVPROC)(GLuint index, GLsizei count, const GLshort *v);

#ifdef glVertexAttribs4ubvNV
#undef glVertexAttribs4ubvNV
#endif
#ifdef PFNGLVERTEXATTRIBS4UBVNVPROC
#undef PFNGLVERTEXATTRIBS4UBVNVPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBS4UBVNVPROC)(GLuint index, GLsizei count, const GLubyte *v);

#ifndef GL_VERTEX_PROGRAM_NV
#define GL_VERTEX_PROGRAM_NV 0x8620
#endif

#ifndef GL_VERTEX_STATE_PROGRAM_NV
#define GL_VERTEX_STATE_PROGRAM_NV 0x8621
#endif

#ifndef GL_ATTRIB_ARRAY_SIZE_NV
#define GL_ATTRIB_ARRAY_SIZE_NV 0x8623
#endif

#ifndef GL_ATTRIB_ARRAY_STRIDE_NV
#define GL_ATTRIB_ARRAY_STRIDE_NV 0x8624
#endif

#ifndef GL_ATTRIB_ARRAY_TYPE_NV
#define GL_ATTRIB_ARRAY_TYPE_NV 0x8625
#endif

#ifndef GL_CURRENT_ATTRIB_NV
#define GL_CURRENT_ATTRIB_NV 0x8626
#endif

#ifndef GL_PROGRAM_LENGTH_NV
#define GL_PROGRAM_LENGTH_NV 0x8627
#endif

#ifndef GL_PROGRAM_STRING_NV
#define GL_PROGRAM_STRING_NV 0x8628
#endif

#ifndef GL_MODELVIEW_PROJECTION_NV
#define GL_MODELVIEW_PROJECTION_NV 0x8629
#endif

#ifndef GL_IDENTITY_NV
#define GL_IDENTITY_NV 0x862A
#endif

#ifndef GL_INVERSE_NV
#define GL_INVERSE_NV 0x862B
#endif

#ifndef GL_TRANSPOSE_NV
#define GL_TRANSPOSE_NV 0x862C
#endif

#ifndef GL_INVERSE_TRANSPOSE_NV
#define GL_INVERSE_TRANSPOSE_NV 0x862D
#endif

#ifndef GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
#endif

#ifndef GL_MAX_TRACK_MATRICES_NV
#define GL_MAX_TRACK_MATRICES_NV 0x862F
#endif

#ifndef GL_MATRIX0_NV
#define GL_MATRIX0_NV 0x8630
#endif

#ifndef GL_MATRIX1_NV
#define GL_MATRIX1_NV 0x8631
#endif

#ifndef GL_MATRIX2_NV
#define GL_MATRIX2_NV 0x8632
#endif

#ifndef GL_MATRIX3_NV
#define GL_MATRIX3_NV 0x8633
#endif

#ifndef GL_MATRIX4_NV
#define GL_MATRIX4_NV 0x8634
#endif

#ifndef GL_MATRIX5_NV
#define GL_MATRIX5_NV 0x8635
#endif

#ifndef GL_MATRIX6_NV
#define GL_MATRIX6_NV 0x8636
#endif

#ifndef GL_MATRIX7_NV
#define GL_MATRIX7_NV 0x8637
#endif

#ifndef GL_CURRENT_MATRIX_STACK_DEPTH_NV
#define GL_CURRENT_MATRIX_STACK_DEPTH_NV 0x8640
#endif

#ifndef GL_CURRENT_MATRIX_NV
#define GL_CURRENT_MATRIX_NV 0x8641
#endif

#ifndef GL_VERTEX_PROGRAM_POINT_SIZE_NV
#define GL_VERTEX_PROGRAM_POINT_SIZE_NV 0x8642
#endif

#ifndef GL_VERTEX_PROGRAM_TWO_SIDE_NV
#define GL_VERTEX_PROGRAM_TWO_SIDE_NV 0x8643
#endif

#ifndef GL_PROGRAM_PARAMETER_NV
#define GL_PROGRAM_PARAMETER_NV 0x8644
#endif

#ifndef GL_ATTRIB_ARRAY_POINTER_NV
#define GL_ATTRIB_ARRAY_POINTER_NV 0x8645
#endif

#ifndef GL_PROGRAM_TARGET_NV
#define GL_PROGRAM_TARGET_NV 0x8646
#endif

#ifndef GL_PROGRAM_RESIDENT_NV
#define GL_PROGRAM_RESIDENT_NV 0x8647
#endif

#ifndef GL_TRACK_MATRIX_NV
#define GL_TRACK_MATRIX_NV 0x8648
#endif

#ifndef GL_TRACK_MATRIX_TRANSFORM_NV
#define GL_TRACK_MATRIX_TRANSFORM_NV 0x8649
#endif

#ifndef GL_VERTEX_PROGRAM_BINDING_NV
#define GL_VERTEX_PROGRAM_BINDING_NV 0x864A
#endif

#ifndef GL_PROGRAM_ERROR_POSITION_NV
#define GL_PROGRAM_ERROR_POSITION_NV 0x864B
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY0_NV
#define GL_VERTEX_ATTRIB_ARRAY0_NV 0x8650
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY1_NV
#define GL_VERTEX_ATTRIB_ARRAY1_NV 0x8651
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY2_NV
#define GL_VERTEX_ATTRIB_ARRAY2_NV 0x8652
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY3_NV
#define GL_VERTEX_ATTRIB_ARRAY3_NV 0x8653
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY4_NV
#define GL_VERTEX_ATTRIB_ARRAY4_NV 0x8654
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY5_NV
#define GL_VERTEX_ATTRIB_ARRAY5_NV 0x8655
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY6_NV
#define GL_VERTEX_ATTRIB_ARRAY6_NV 0x8656
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY7_NV
#define GL_VERTEX_ATTRIB_ARRAY7_NV 0x8657
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY8_NV
#define GL_VERTEX_ATTRIB_ARRAY8_NV 0x8658
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY9_NV
#define GL_VERTEX_ATTRIB_ARRAY9_NV 0x8659
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY10_NV
#define GL_VERTEX_ATTRIB_ARRAY10_NV 0x865A
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY11_NV
#define GL_VERTEX_ATTRIB_ARRAY11_NV 0x865B
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY12_NV
#define GL_VERTEX_ATTRIB_ARRAY12_NV 0x865C
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY13_NV
#define GL_VERTEX_ATTRIB_ARRAY13_NV 0x865D
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY14_NV
#define GL_VERTEX_ATTRIB_ARRAY14_NV 0x865E
#endif

#ifndef GL_VERTEX_ATTRIB_ARRAY15_NV
#define GL_VERTEX_ATTRIB_ARRAY15_NV 0x865F
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB0_4_NV
#define GL_MAP1_VERTEX_ATTRIB0_4_NV 0x8660
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB1_4_NV
#define GL_MAP1_VERTEX_ATTRIB1_4_NV 0x8661
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB2_4_NV
#define GL_MAP1_VERTEX_ATTRIB2_4_NV 0x8662
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB3_4_NV
#define GL_MAP1_VERTEX_ATTRIB3_4_NV 0x8663
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB4_4_NV
#define GL_MAP1_VERTEX_ATTRIB4_4_NV 0x8664
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB5_4_NV
#define GL_MAP1_VERTEX_ATTRIB5_4_NV 0x8665
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB6_4_NV
#define GL_MAP1_VERTEX_ATTRIB6_4_NV 0x8666
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB7_4_NV
#define GL_MAP1_VERTEX_ATTRIB7_4_NV 0x8667
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB8_4_NV
#define GL_MAP1_VERTEX_ATTRIB8_4_NV 0x8668
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB9_4_NV
#define GL_MAP1_VERTEX_ATTRIB9_4_NV 0x8669
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB10_4_NV
#define GL_MAP1_VERTEX_ATTRIB10_4_NV 0x866A
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB11_4_NV
#define GL_MAP1_VERTEX_ATTRIB11_4_NV 0x866B
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB12_4_NV
#define GL_MAP1_VERTEX_ATTRIB12_4_NV 0x866C
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB13_4_NV
#define GL_MAP1_VERTEX_ATTRIB13_4_NV 0x866D
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB14_4_NV
#define GL_MAP1_VERTEX_ATTRIB14_4_NV 0x866E
#endif

#ifndef GL_MAP1_VERTEX_ATTRIB15_4_NV
#define GL_MAP1_VERTEX_ATTRIB15_4_NV 0x866F
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB0_4_NV
#define GL_MAP2_VERTEX_ATTRIB0_4_NV 0x8670
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB1_4_NV
#define GL_MAP2_VERTEX_ATTRIB1_4_NV 0x8671
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB2_4_NV
#define GL_MAP2_VERTEX_ATTRIB2_4_NV 0x8672
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB3_4_NV
#define GL_MAP2_VERTEX_ATTRIB3_4_NV 0x8673
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB4_4_NV
#define GL_MAP2_VERTEX_ATTRIB4_4_NV 0x8674
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB5_4_NV
#define GL_MAP2_VERTEX_ATTRIB5_4_NV 0x8675
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB6_4_NV
#define GL_MAP2_VERTEX_ATTRIB6_4_NV 0x8676
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB7_4_NV
#define GL_MAP2_VERTEX_ATTRIB7_4_NV 0x8677
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB8_4_NV
#define GL_MAP2_VERTEX_ATTRIB8_4_NV 0x8678
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB9_4_NV
#define GL_MAP2_VERTEX_ATTRIB9_4_NV 0x8679
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB10_4_NV
#define GL_MAP2_VERTEX_ATTRIB10_4_NV 0x867A
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB11_4_NV
#define GL_MAP2_VERTEX_ATTRIB11_4_NV 0x867B
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB12_4_NV
#define GL_MAP2_VERTEX_ATTRIB12_4_NV 0x867C
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB13_4_NV
#define GL_MAP2_VERTEX_ATTRIB13_4_NV 0x867D
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB14_4_NV
#define GL_MAP2_VERTEX_ATTRIB14_4_NV 0x867E
#endif

#ifndef GL_MAP2_VERTEX_ATTRIB15_4_NV
#define GL_MAP2_VERTEX_ATTRIB15_4_NV 0x867F
#endif

#ifndef GL_NV_vertex_program1_1
#define GL_NV_vertex_program1_1 1
#endif

#ifndef GL_NV_vertex_program2
#define GL_NV_vertex_program2 1
#endif

#ifndef GL_NV_vertex_program2_option
#define GL_NV_vertex_program2_option 1
#endif

#ifndef GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#endif

#ifndef GL_MAX_PROGRAM_CALL_DEPTH_NV
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
#endif

#ifndef GL_NV_vertex_program3
#define GL_NV_vertex_program3 1
#endif

#ifndef GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#endif

#ifndef GL_NV_vertex_program4
#define GL_NV_vertex_program4 1
#endif

#ifdef glVertexAttribI1iEXT
#undef glVertexAttribI1iEXT
#endif
#ifdef PFNGLVERTEXATTRIBI1IEXTPROC
#undef PFNGLVERTEXATTRIBI1IEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI1IEXTPROC)(GLuint index, GLint x);

#ifdef glVertexAttribI2iEXT
#undef glVertexAttribI2iEXT
#endif
#ifdef PFNGLVERTEXATTRIBI2IEXTPROC
#undef PFNGLVERTEXATTRIBI2IEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI2IEXTPROC)(GLuint index, GLint x, GLint y);

#ifdef glVertexAttribI3iEXT
#undef glVertexAttribI3iEXT
#endif
#ifdef PFNGLVERTEXATTRIBI3IEXTPROC
#undef PFNGLVERTEXATTRIBI3IEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI3IEXTPROC)(GLuint index, GLint x, GLint y, GLint z);

#ifdef glVertexAttribI4iEXT
#undef glVertexAttribI4iEXT
#endif
#ifdef PFNGLVERTEXATTRIBI4IEXTPROC
#undef PFNGLVERTEXATTRIBI4IEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4IEXTPROC)(GLuint index, GLint x, GLint y, GLint z, GLint w);

#ifdef glVertexAttribI1uiEXT
#undef glVertexAttribI1uiEXT
#endif
#ifdef PFNGLVERTEXATTRIBI1UIEXTPROC
#undef PFNGLVERTEXATTRIBI1UIEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI1UIEXTPROC)(GLuint index, GLuint x);

#ifdef glVertexAttribI2uiEXT
#undef glVertexAttribI2uiEXT
#endif
#ifdef PFNGLVERTEXATTRIBI2UIEXTPROC
#undef PFNGLVERTEXATTRIBI2UIEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI2UIEXTPROC)(GLuint index, GLuint x, GLuint y);

#ifdef glVertexAttribI3uiEXT
#undef glVertexAttribI3uiEXT
#endif
#ifdef PFNGLVERTEXATTRIBI3UIEXTPROC
#undef PFNGLVERTEXATTRIBI3UIEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI3UIEXTPROC)(GLuint index, GLuint x, GLuint y, GLuint z);

#ifdef glVertexAttribI4uiEXT
#undef glVertexAttribI4uiEXT
#endif
#ifdef PFNGLVERTEXATTRIBI4UIEXTPROC
#undef PFNGLVERTEXATTRIBI4UIEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4UIEXTPROC)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);

#ifdef glVertexAttribI1ivEXT
#undef glVertexAttribI1ivEXT
#endif
#ifdef PFNGLVERTEXATTRIBI1IVEXTPROC
#undef PFNGLVERTEXATTRIBI1IVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI1IVEXTPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI2ivEXT
#undef glVertexAttribI2ivEXT
#endif
#ifdef PFNGLVERTEXATTRIBI2IVEXTPROC
#undef PFNGLVERTEXATTRIBI2IVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI2IVEXTPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI3ivEXT
#undef glVertexAttribI3ivEXT
#endif
#ifdef PFNGLVERTEXATTRIBI3IVEXTPROC
#undef PFNGLVERTEXATTRIBI3IVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI3IVEXTPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI4ivEXT
#undef glVertexAttribI4ivEXT
#endif
#ifdef PFNGLVERTEXATTRIBI4IVEXTPROC
#undef PFNGLVERTEXATTRIBI4IVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4IVEXTPROC)(GLuint index, const GLint *v);

#ifdef glVertexAttribI1uivEXT
#undef glVertexAttribI1uivEXT
#endif
#ifdef PFNGLVERTEXATTRIBI1UIVEXTPROC
#undef PFNGLVERTEXATTRIBI1UIVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI1UIVEXTPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribI2uivEXT
#undef glVertexAttribI2uivEXT
#endif
#ifdef PFNGLVERTEXATTRIBI2UIVEXTPROC
#undef PFNGLVERTEXATTRIBI2UIVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI2UIVEXTPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribI3uivEXT
#undef glVertexAttribI3uivEXT
#endif
#ifdef PFNGLVERTEXATTRIBI3UIVEXTPROC
#undef PFNGLVERTEXATTRIBI3UIVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI3UIVEXTPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribI4uivEXT
#undef glVertexAttribI4uivEXT
#endif
#ifdef PFNGLVERTEXATTRIBI4UIVEXTPROC
#undef PFNGLVERTEXATTRIBI4UIVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4UIVEXTPROC)(GLuint index, const GLuint *v);

#ifdef glVertexAttribI4bvEXT
#undef glVertexAttribI4bvEXT
#endif
#ifdef PFNGLVERTEXATTRIBI4BVEXTPROC
#undef PFNGLVERTEXATTRIBI4BVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4BVEXTPROC)(GLuint index, const GLbyte *v);

#ifdef glVertexAttribI4svEXT
#undef glVertexAttribI4svEXT
#endif
#ifdef PFNGLVERTEXATTRIBI4SVEXTPROC
#undef PFNGLVERTEXATTRIBI4SVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4SVEXTPROC)(GLuint index, const GLshort *v);

#ifdef glVertexAttribI4ubvEXT
#undef glVertexAttribI4ubvEXT
#endif
#ifdef PFNGLVERTEXATTRIBI4UBVEXTPROC
#undef PFNGLVERTEXATTRIBI4UBVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4UBVEXTPROC)(GLuint index, const GLubyte *v);

#ifdef glVertexAttribI4usvEXT
#undef glVertexAttribI4usvEXT
#endif
#ifdef PFNGLVERTEXATTRIBI4USVEXTPROC
#undef PFNGLVERTEXATTRIBI4USVEXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBI4USVEXTPROC)(GLuint index, const GLushort *v);

#ifdef glVertexAttribIPointerEXT
#undef glVertexAttribIPointerEXT
#endif
#ifdef PFNGLVERTEXATTRIBIPOINTEREXTPROC
#undef PFNGLVERTEXATTRIBIPOINTEREXTPROC
#endif
typedef void  (*PFNGLVERTEXATTRIBIPOINTEREXTPROC)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glGetVertexAttribIivEXT
#undef glGetVertexAttribIivEXT
#endif
#ifdef PFNGLGETVERTEXATTRIBIIVEXTPROC
#undef PFNGLGETVERTEXATTRIBIIVEXTPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIIVEXTPROC)(GLuint index, GLenum pname, GLint *params);

#ifdef glGetVertexAttribIuivEXT
#undef glGetVertexAttribIuivEXT
#endif
#ifdef PFNGLGETVERTEXATTRIBIUIVEXTPROC
#undef PFNGLGETVERTEXATTRIBIUIVEXTPROC
#endif
typedef void  (*PFNGLGETVERTEXATTRIBIUIVEXTPROC)(GLuint index, GLenum pname, GLuint *params);

#ifndef GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
#endif

#ifndef GL_NV_video_capture
#define GL_NV_video_capture 1
#endif

#ifdef glBeginVideoCaptureNV
#undef glBeginVideoCaptureNV
#endif
#ifdef PFNGLBEGINVIDEOCAPTURENVPROC
#undef PFNGLBEGINVIDEOCAPTURENVPROC
#endif
typedef void  (*PFNGLBEGINVIDEOCAPTURENVPROC)(GLuint video_capture_slot);

#ifdef glBindVideoCaptureStreamBufferNV
#undef glBindVideoCaptureStreamBufferNV
#endif
#ifdef PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
#undef PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC
#endif
typedef void  (*PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);

#ifdef glBindVideoCaptureStreamTextureNV
#undef glBindVideoCaptureStreamTextureNV
#endif
#ifdef PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
#undef PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC
#endif
typedef void  (*PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC)(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);

#ifdef glEndVideoCaptureNV
#undef glEndVideoCaptureNV
#endif
#ifdef PFNGLENDVIDEOCAPTURENVPROC
#undef PFNGLENDVIDEOCAPTURENVPROC
#endif
typedef void  (*PFNGLENDVIDEOCAPTURENVPROC)(GLuint video_capture_slot);

#ifdef glGetVideoCaptureivNV
#undef glGetVideoCaptureivNV
#endif
#ifdef PFNGLGETVIDEOCAPTUREIVNVPROC
#undef PFNGLGETVIDEOCAPTUREIVNVPROC
#endif
typedef void  (*PFNGLGETVIDEOCAPTUREIVNVPROC)(GLuint video_capture_slot, GLenum pname, GLint *params);

#ifdef glGetVideoCaptureStreamivNV
#undef glGetVideoCaptureStreamivNV
#endif
#ifdef PFNGLGETVIDEOCAPTURESTREAMIVNVPROC
#undef PFNGLGETVIDEOCAPTURESTREAMIVNVPROC
#endif
typedef void  (*PFNGLGETVIDEOCAPTURESTREAMIVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);

#ifdef glGetVideoCaptureStreamfvNV
#undef glGetVideoCaptureStreamfvNV
#endif
#ifdef PFNGLGETVIDEOCAPTURESTREAMFVNVPROC
#undef PFNGLGETVIDEOCAPTURESTREAMFVNVPROC
#endif
typedef void  (*PFNGLGETVIDEOCAPTURESTREAMFVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);

#ifdef glGetVideoCaptureStreamdvNV
#undef glGetVideoCaptureStreamdvNV
#endif
#ifdef PFNGLGETVIDEOCAPTURESTREAMDVNVPROC
#undef PFNGLGETVIDEOCAPTURESTREAMDVNVPROC
#endif
typedef void  (*PFNGLGETVIDEOCAPTURESTREAMDVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);

#ifdef glVideoCaptureNV
#undef glVideoCaptureNV
#endif
#ifdef PFNGLVIDEOCAPTURENVPROC
#undef PFNGLVIDEOCAPTURENVPROC
#endif
typedef GLenum  (*PFNGLVIDEOCAPTURENVPROC)(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);

#ifdef glVideoCaptureStreamParameterivNV
#undef glVideoCaptureStreamParameterivNV
#endif
#ifdef PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
#undef PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC
#endif
typedef void  (*PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);

#ifdef glVideoCaptureStreamParameterfvNV
#undef glVideoCaptureStreamParameterfvNV
#endif
#ifdef PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
#undef PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC
#endif
typedef void  (*PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);

#ifdef glVideoCaptureStreamParameterdvNV
#undef glVideoCaptureStreamParameterdvNV
#endif
#ifdef PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
#undef PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC
#endif
typedef void  (*PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC)(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);

#ifndef GL_VIDEO_BUFFER_NV
#define GL_VIDEO_BUFFER_NV 0x9020
#endif

#ifndef GL_VIDEO_BUFFER_BINDING_NV
#define GL_VIDEO_BUFFER_BINDING_NV 0x9021
#endif

#ifndef GL_FIELD_UPPER_NV
#define GL_FIELD_UPPER_NV 0x9022
#endif

#ifndef GL_FIELD_LOWER_NV
#define GL_FIELD_LOWER_NV 0x9023
#endif

#ifndef GL_NUM_VIDEO_CAPTURE_STREAMS_NV
#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV 0x9024
#endif

#ifndef GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV
#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
#endif

#ifndef GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV
#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
#endif

#ifndef GL_LAST_VIDEO_CAPTURE_STATUS_NV
#define GL_LAST_VIDEO_CAPTURE_STATUS_NV 0x9027
#endif

#ifndef GL_VIDEO_BUFFER_PITCH_NV
#define GL_VIDEO_BUFFER_PITCH_NV 0x9028
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MATRIX_NV
#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MAX_NV
#define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_MIN_NV
#define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B
#endif

#ifndef GL_VIDEO_COLOR_CONVERSION_OFFSET_NV
#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
#endif

#ifndef GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV
#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
#endif

#ifndef GL_PARTIAL_SUCCESS_NV
#define GL_PARTIAL_SUCCESS_NV 0x902E
#endif

#ifndef GL_SUCCESS_NV
#define GL_SUCCESS_NV 0x902F
#endif

#ifndef GL_FAILURE_NV
#define GL_FAILURE_NV 0x9030
#endif

#ifndef GL_YCBYCR8_422_NV
#define GL_YCBYCR8_422_NV 0x9031
#endif

#ifndef GL_YCBAYCR8A_4224_NV
#define GL_YCBAYCR8A_4224_NV 0x9032
#endif

#ifndef GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV
#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV 0x9033
#endif

#ifndef GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV
#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
#endif

#ifndef GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV
#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV 0x9035
#endif

#ifndef GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV
#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
#endif

#ifndef GL_Z4Y12Z4CB12Z4CR12_444_NV
#define GL_Z4Y12Z4CB12Z4CR12_444_NV 0x9037
#endif

#ifndef GL_VIDEO_CAPTURE_FRAME_WIDTH_NV
#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV 0x9038
#endif

#ifndef GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV 0x9039
#endif

#ifndef GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
#endif

#ifndef GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV
#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
#endif

#ifndef GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV
#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
#endif

#ifndef GL_NV_viewport_array
#define GL_NV_viewport_array 1
#endif

#ifdef glViewportArrayvNV
#undef glViewportArrayvNV
#endif
#ifdef PFNGLVIEWPORTARRAYVNVPROC
#undef PFNGLVIEWPORTARRAYVNVPROC
#endif
typedef void  (*PFNGLVIEWPORTARRAYVNVPROC)(GLuint first, GLsizei count, const GLfloat *v);

#ifdef glViewportIndexedfNV
#undef glViewportIndexedfNV
#endif
#ifdef PFNGLVIEWPORTINDEXEDFNVPROC
#undef PFNGLVIEWPORTINDEXEDFNVPROC
#endif
typedef void  (*PFNGLVIEWPORTINDEXEDFNVPROC)(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);

#ifdef glViewportIndexedfvNV
#undef glViewportIndexedfvNV
#endif
#ifdef PFNGLVIEWPORTINDEXEDFVNVPROC
#undef PFNGLVIEWPORTINDEXEDFVNVPROC
#endif
typedef void  (*PFNGLVIEWPORTINDEXEDFVNVPROC)(GLuint index, const GLfloat *v);

#ifdef glScissorArrayvNV
#undef glScissorArrayvNV
#endif
#ifdef PFNGLSCISSORARRAYVNVPROC
#undef PFNGLSCISSORARRAYVNVPROC
#endif
typedef void  (*PFNGLSCISSORARRAYVNVPROC)(GLuint first, GLsizei count, const GLint *v);

#ifdef glScissorIndexedNV
#undef glScissorIndexedNV
#endif
#ifdef PFNGLSCISSORINDEXEDNVPROC
#undef PFNGLSCISSORINDEXEDNVPROC
#endif
typedef void  (*PFNGLSCISSORINDEXEDNVPROC)(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);

#ifdef glScissorIndexedvNV
#undef glScissorIndexedvNV
#endif
#ifdef PFNGLSCISSORINDEXEDVNVPROC
#undef PFNGLSCISSORINDEXEDVNVPROC
#endif
typedef void  (*PFNGLSCISSORINDEXEDVNVPROC)(GLuint index, const GLint *v);

#ifdef glDepthRangeArrayfvNV
#undef glDepthRangeArrayfvNV
#endif
#ifdef PFNGLDEPTHRANGEARRAYFVNVPROC
#undef PFNGLDEPTHRANGEARRAYFVNVPROC
#endif
typedef void  (*PFNGLDEPTHRANGEARRAYFVNVPROC)(GLuint first, GLsizei count, const GLfloat *v);

#ifdef glDepthRangeIndexedfNV
#undef glDepthRangeIndexedfNV
#endif
#ifdef PFNGLDEPTHRANGEINDEXEDFNVPROC
#undef PFNGLDEPTHRANGEINDEXEDFNVPROC
#endif
typedef void  (*PFNGLDEPTHRANGEINDEXEDFNVPROC)(GLuint index, GLfloat n, GLfloat f);

#ifdef glGetFloati_vNV
#undef glGetFloati_vNV
#endif
#ifdef PFNGLGETFLOATI_VNVPROC
#undef PFNGLGETFLOATI_VNVPROC
#endif
typedef void  (*PFNGLGETFLOATI_VNVPROC)(GLenum target, GLuint index, GLfloat *data);

#ifdef glEnableiNV
#undef glEnableiNV
#endif
#ifdef PFNGLENABLEINVPROC
#undef PFNGLENABLEINVPROC
#endif
typedef void  (*PFNGLENABLEINVPROC)(GLenum target, GLuint index);

#ifdef glDisableiNV
#undef glDisableiNV
#endif
#ifdef PFNGLDISABLEINVPROC
#undef PFNGLDISABLEINVPROC
#endif
typedef void  (*PFNGLDISABLEINVPROC)(GLenum target, GLuint index);

#ifdef glIsEnablediNV
#undef glIsEnablediNV
#endif
#ifdef PFNGLISENABLEDINVPROC
#undef PFNGLISENABLEDINVPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDINVPROC)(GLenum target, GLuint index);

#ifndef GL_MAX_VIEWPORTS_NV
#define GL_MAX_VIEWPORTS_NV 0x825B
#endif

#ifndef GL_VIEWPORT_SUBPIXEL_BITS_NV
#define GL_VIEWPORT_SUBPIXEL_BITS_NV 0x825C
#endif

#ifndef GL_VIEWPORT_BOUNDS_RANGE_NV
#define GL_VIEWPORT_BOUNDS_RANGE_NV 0x825D
#endif

#ifndef GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV 0x825F
#endif

#ifndef GL_SCISSOR_BOX
#define GL_SCISSOR_BOX 0x0C10
#endif

#ifndef GL_VIEWPORT
#define GL_VIEWPORT 0x0BA2
#endif

#ifndef GL_DEPTH_RANGE
#define GL_DEPTH_RANGE 0x0B70
#endif

#ifndef GL_SCISSOR_TEST
#define GL_SCISSOR_TEST 0x0C11
#endif

#ifndef GL_NV_viewport_array2
#define GL_NV_viewport_array2 1
#endif

#ifndef GL_OES_EGL_image
#define GL_OES_EGL_image 1
#endif

#ifdef glEGLImageTargetTexture2DOES
#undef glEGLImageTargetTexture2DOES
#endif
#ifdef PFNGLEGLIMAGETARGETTEXTURE2DOESPROC
#undef PFNGLEGLIMAGETARGETTEXTURE2DOESPROC
#endif
typedef void  (*PFNGLEGLIMAGETARGETTEXTURE2DOESPROC)(GLenum target, GLeglImageOES image);

#ifdef glEGLImageTargetRenderbufferStorageOES
#undef glEGLImageTargetRenderbufferStorageOES
#endif
#ifdef PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
#undef PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC
#endif
typedef void  (*PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC)(GLenum target, GLeglImageOES image);

#ifndef GL_OES_EGL_image_external
#define GL_OES_EGL_image_external 1
#endif

#ifndef GL_TEXTURE_EXTERNAL_OES
#define GL_TEXTURE_EXTERNAL_OES 0x8D65
#endif

#ifndef GL_TEXTURE_BINDING_EXTERNAL_OES
#define GL_TEXTURE_BINDING_EXTERNAL_OES 0x8D67
#endif

#ifndef GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES
#define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES 0x8D68
#endif

#ifndef GL_SAMPLER_EXTERNAL_OES
#define GL_SAMPLER_EXTERNAL_OES 0x8D66
#endif

#ifndef GL_OES_EGL_image_external_essl3
#define GL_OES_EGL_image_external_essl3 1
#endif

#ifndef GL_OES_blend_equation_separate
#define GL_OES_blend_equation_separate 1
#endif

#ifdef glBlendEquationSeparateOES
#undef glBlendEquationSeparateOES
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEOESPROC
#undef PFNGLBLENDEQUATIONSEPARATEOESPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEOESPROC)(GLenum modeRGB, GLenum modeAlpha);

#ifndef GL_BLEND_EQUATION_RGB_OES
#define GL_BLEND_EQUATION_RGB_OES 0x8009
#endif

#ifndef GL_BLEND_EQUATION_ALPHA_OES
#define GL_BLEND_EQUATION_ALPHA_OES 0x883D
#endif

#ifndef GL_OES_blend_func_separate
#define GL_OES_blend_func_separate 1
#endif

#ifdef glBlendFuncSeparateOES
#undef glBlendFuncSeparateOES
#endif
#ifdef PFNGLBLENDFUNCSEPARATEOESPROC
#undef PFNGLBLENDFUNCSEPARATEOESPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEOESPROC)(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

#ifndef GL_BLEND_DST_RGB_OES
#define GL_BLEND_DST_RGB_OES 0x80C8
#endif

#ifndef GL_BLEND_SRC_RGB_OES
#define GL_BLEND_SRC_RGB_OES 0x80C9
#endif

#ifndef GL_BLEND_DST_ALPHA_OES
#define GL_BLEND_DST_ALPHA_OES 0x80CA
#endif

#ifndef GL_BLEND_SRC_ALPHA_OES
#define GL_BLEND_SRC_ALPHA_OES 0x80CB
#endif

#ifndef GL_OES_blend_subtract
#define GL_OES_blend_subtract 1
#endif

#ifdef glBlendEquationOES
#undef glBlendEquationOES
#endif
#ifdef PFNGLBLENDEQUATIONOESPROC
#undef PFNGLBLENDEQUATIONOESPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONOESPROC)(GLenum mode);

#ifndef GL_BLEND_EQUATION_OES
#define GL_BLEND_EQUATION_OES 0x8009
#endif

#ifndef GL_FUNC_ADD_OES
#define GL_FUNC_ADD_OES 0x8006
#endif

#ifndef GL_FUNC_SUBTRACT_OES
#define GL_FUNC_SUBTRACT_OES 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT_OES
#define GL_FUNC_REVERSE_SUBTRACT_OES 0x800B
#endif

#ifndef GL_OES_byte_coordinates
#define GL_OES_byte_coordinates 1
#endif

#ifndef GL_BYTE
#define GL_BYTE 0x1400
#endif

#ifdef glMultiTexCoord1bOES
#undef glMultiTexCoord1bOES
#endif
#ifdef PFNGLMULTITEXCOORD1BOESPROC
#undef PFNGLMULTITEXCOORD1BOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1BOESPROC)(GLenum texture, GLbyte s);

#ifdef glMultiTexCoord1bvOES
#undef glMultiTexCoord1bvOES
#endif
#ifdef PFNGLMULTITEXCOORD1BVOESPROC
#undef PFNGLMULTITEXCOORD1BVOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1BVOESPROC)(GLenum texture, const GLbyte *coords);

#ifdef glMultiTexCoord2bOES
#undef glMultiTexCoord2bOES
#endif
#ifdef PFNGLMULTITEXCOORD2BOESPROC
#undef PFNGLMULTITEXCOORD2BOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2BOESPROC)(GLenum texture, GLbyte s, GLbyte t);

#ifdef glMultiTexCoord2bvOES
#undef glMultiTexCoord2bvOES
#endif
#ifdef PFNGLMULTITEXCOORD2BVOESPROC
#undef PFNGLMULTITEXCOORD2BVOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2BVOESPROC)(GLenum texture, const GLbyte *coords);

#ifdef glMultiTexCoord3bOES
#undef glMultiTexCoord3bOES
#endif
#ifdef PFNGLMULTITEXCOORD3BOESPROC
#undef PFNGLMULTITEXCOORD3BOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3BOESPROC)(GLenum texture, GLbyte s, GLbyte t, GLbyte r);

#ifdef glMultiTexCoord3bvOES
#undef glMultiTexCoord3bvOES
#endif
#ifdef PFNGLMULTITEXCOORD3BVOESPROC
#undef PFNGLMULTITEXCOORD3BVOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3BVOESPROC)(GLenum texture, const GLbyte *coords);

#ifdef glMultiTexCoord4bOES
#undef glMultiTexCoord4bOES
#endif
#ifdef PFNGLMULTITEXCOORD4BOESPROC
#undef PFNGLMULTITEXCOORD4BOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4BOESPROC)(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);

#ifdef glMultiTexCoord4bvOES
#undef glMultiTexCoord4bvOES
#endif
#ifdef PFNGLMULTITEXCOORD4BVOESPROC
#undef PFNGLMULTITEXCOORD4BVOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4BVOESPROC)(GLenum texture, const GLbyte *coords);

#ifdef glTexCoord1bOES
#undef glTexCoord1bOES
#endif
#ifdef PFNGLTEXCOORD1BOESPROC
#undef PFNGLTEXCOORD1BOESPROC
#endif
typedef void  (*PFNGLTEXCOORD1BOESPROC)(GLbyte s);

#ifdef glTexCoord1bvOES
#undef glTexCoord1bvOES
#endif
#ifdef PFNGLTEXCOORD1BVOESPROC
#undef PFNGLTEXCOORD1BVOESPROC
#endif
typedef void  (*PFNGLTEXCOORD1BVOESPROC)(const GLbyte *coords);

#ifdef glTexCoord2bOES
#undef glTexCoord2bOES
#endif
#ifdef PFNGLTEXCOORD2BOESPROC
#undef PFNGLTEXCOORD2BOESPROC
#endif
typedef void  (*PFNGLTEXCOORD2BOESPROC)(GLbyte s, GLbyte t);

#ifdef glTexCoord2bvOES
#undef glTexCoord2bvOES
#endif
#ifdef PFNGLTEXCOORD2BVOESPROC
#undef PFNGLTEXCOORD2BVOESPROC
#endif
typedef void  (*PFNGLTEXCOORD2BVOESPROC)(const GLbyte *coords);

#ifdef glTexCoord3bOES
#undef glTexCoord3bOES
#endif
#ifdef PFNGLTEXCOORD3BOESPROC
#undef PFNGLTEXCOORD3BOESPROC
#endif
typedef void  (*PFNGLTEXCOORD3BOESPROC)(GLbyte s, GLbyte t, GLbyte r);

#ifdef glTexCoord3bvOES
#undef glTexCoord3bvOES
#endif
#ifdef PFNGLTEXCOORD3BVOESPROC
#undef PFNGLTEXCOORD3BVOESPROC
#endif
typedef void  (*PFNGLTEXCOORD3BVOESPROC)(const GLbyte *coords);

#ifdef glTexCoord4bOES
#undef glTexCoord4bOES
#endif
#ifdef PFNGLTEXCOORD4BOESPROC
#undef PFNGLTEXCOORD4BOESPROC
#endif
typedef void  (*PFNGLTEXCOORD4BOESPROC)(GLbyte s, GLbyte t, GLbyte r, GLbyte q);

#ifdef glTexCoord4bvOES
#undef glTexCoord4bvOES
#endif
#ifdef PFNGLTEXCOORD4BVOESPROC
#undef PFNGLTEXCOORD4BVOESPROC
#endif
typedef void  (*PFNGLTEXCOORD4BVOESPROC)(const GLbyte *coords);

#ifdef glVertex2bOES
#undef glVertex2bOES
#endif
#ifdef PFNGLVERTEX2BOESPROC
#undef PFNGLVERTEX2BOESPROC
#endif
typedef void  (*PFNGLVERTEX2BOESPROC)(GLbyte x, GLbyte y);

#ifdef glVertex2bvOES
#undef glVertex2bvOES
#endif
#ifdef PFNGLVERTEX2BVOESPROC
#undef PFNGLVERTEX2BVOESPROC
#endif
typedef void  (*PFNGLVERTEX2BVOESPROC)(const GLbyte *coords);

#ifdef glVertex3bOES
#undef glVertex3bOES
#endif
#ifdef PFNGLVERTEX3BOESPROC
#undef PFNGLVERTEX3BOESPROC
#endif
typedef void  (*PFNGLVERTEX3BOESPROC)(GLbyte x, GLbyte y, GLbyte z);

#ifdef glVertex3bvOES
#undef glVertex3bvOES
#endif
#ifdef PFNGLVERTEX3BVOESPROC
#undef PFNGLVERTEX3BVOESPROC
#endif
typedef void  (*PFNGLVERTEX3BVOESPROC)(const GLbyte *coords);

#ifdef glVertex4bOES
#undef glVertex4bOES
#endif
#ifdef PFNGLVERTEX4BOESPROC
#undef PFNGLVERTEX4BOESPROC
#endif
typedef void  (*PFNGLVERTEX4BOESPROC)(GLbyte x, GLbyte y, GLbyte z, GLbyte w);

#ifdef glVertex4bvOES
#undef glVertex4bvOES
#endif
#ifdef PFNGLVERTEX4BVOESPROC
#undef PFNGLVERTEX4BVOESPROC
#endif
typedef void  (*PFNGLVERTEX4BVOESPROC)(const GLbyte *coords);

#ifndef GL_OES_compressed_ETC1_RGB8_sub_texture
#define GL_OES_compressed_ETC1_RGB8_sub_texture 1
#endif

#ifndef GL_OES_compressed_ETC1_RGB8_texture
#define GL_OES_compressed_ETC1_RGB8_texture 1
#endif

#ifndef GL_ETC1_RGB8_OES
#define GL_ETC1_RGB8_OES 0x8D64
#endif

#ifndef GL_OES_compressed_paletted_texture
#define GL_OES_compressed_paletted_texture 1
#endif

#ifndef GL_PALETTE4_RGB8_OES
#define GL_PALETTE4_RGB8_OES 0x8B90
#endif

#ifndef GL_PALETTE4_RGBA8_OES
#define GL_PALETTE4_RGBA8_OES 0x8B91
#endif

#ifndef GL_PALETTE4_R5_G6_B5_OES
#define GL_PALETTE4_R5_G6_B5_OES 0x8B92
#endif

#ifndef GL_PALETTE4_RGBA4_OES
#define GL_PALETTE4_RGBA4_OES 0x8B93
#endif

#ifndef GL_PALETTE4_RGB5_A1_OES
#define GL_PALETTE4_RGB5_A1_OES 0x8B94
#endif

#ifndef GL_PALETTE8_RGB8_OES
#define GL_PALETTE8_RGB8_OES 0x8B95
#endif

#ifndef GL_PALETTE8_RGBA8_OES
#define GL_PALETTE8_RGBA8_OES 0x8B96
#endif

#ifndef GL_PALETTE8_R5_G6_B5_OES
#define GL_PALETTE8_R5_G6_B5_OES 0x8B97
#endif

#ifndef GL_PALETTE8_RGBA4_OES
#define GL_PALETTE8_RGBA4_OES 0x8B98
#endif

#ifndef GL_PALETTE8_RGB5_A1_OES
#define GL_PALETTE8_RGB5_A1_OES 0x8B99
#endif

#ifndef GL_OES_copy_image
#define GL_OES_copy_image 1
#endif

#ifdef glCopyImageSubDataOES
#undef glCopyImageSubDataOES
#endif
#ifdef PFNGLCOPYIMAGESUBDATAOESPROC
#undef PFNGLCOPYIMAGESUBDATAOESPROC
#endif
typedef void  (*PFNGLCOPYIMAGESUBDATAOESPROC)(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);

#ifndef GL_OES_depth24
#define GL_OES_depth24 1
#endif

#ifndef GL_DEPTH_COMPONENT24_OES
#define GL_DEPTH_COMPONENT24_OES 0x81A6
#endif

#ifndef GL_OES_depth32
#define GL_OES_depth32 1
#endif

#ifndef GL_DEPTH_COMPONENT32_OES
#define GL_DEPTH_COMPONENT32_OES 0x81A7
#endif

#ifndef GL_OES_depth_texture
#define GL_OES_depth_texture 1
#endif

#ifndef GL_DEPTH_COMPONENT
#define GL_DEPTH_COMPONENT 0x1902
#endif

#ifndef GL_UNSIGNED_SHORT
#define GL_UNSIGNED_SHORT 0x1403
#endif

#ifndef GL_UNSIGNED_INT
#define GL_UNSIGNED_INT 0x1405
#endif

#ifndef GL_OES_draw_buffers_indexed
#define GL_OES_draw_buffers_indexed 1
#endif

#ifdef glEnableiOES
#undef glEnableiOES
#endif
#ifdef PFNGLENABLEIOESPROC
#undef PFNGLENABLEIOESPROC
#endif
typedef void  (*PFNGLENABLEIOESPROC)(GLenum target, GLuint index);

#ifdef glDisableiOES
#undef glDisableiOES
#endif
#ifdef PFNGLDISABLEIOESPROC
#undef PFNGLDISABLEIOESPROC
#endif
typedef void  (*PFNGLDISABLEIOESPROC)(GLenum target, GLuint index);

#ifdef glBlendEquationiOES
#undef glBlendEquationiOES
#endif
#ifdef PFNGLBLENDEQUATIONIOESPROC
#undef PFNGLBLENDEQUATIONIOESPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONIOESPROC)(GLuint buf, GLenum mode);

#ifdef glBlendEquationSeparateiOES
#undef glBlendEquationSeparateiOES
#endif
#ifdef PFNGLBLENDEQUATIONSEPARATEIOESPROC
#undef PFNGLBLENDEQUATIONSEPARATEIOESPROC
#endif
typedef void  (*PFNGLBLENDEQUATIONSEPARATEIOESPROC)(GLuint buf, GLenum modeRGB, GLenum modeAlpha);

#ifdef glBlendFunciOES
#undef glBlendFunciOES
#endif
#ifdef PFNGLBLENDFUNCIOESPROC
#undef PFNGLBLENDFUNCIOESPROC
#endif
typedef void  (*PFNGLBLENDFUNCIOESPROC)(GLuint buf, GLenum src, GLenum dst);

#ifdef glBlendFuncSeparateiOES
#undef glBlendFuncSeparateiOES
#endif
#ifdef PFNGLBLENDFUNCSEPARATEIOESPROC
#undef PFNGLBLENDFUNCSEPARATEIOESPROC
#endif
typedef void  (*PFNGLBLENDFUNCSEPARATEIOESPROC)(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);

#ifdef glColorMaskiOES
#undef glColorMaskiOES
#endif
#ifdef PFNGLCOLORMASKIOESPROC
#undef PFNGLCOLORMASKIOESPROC
#endif
typedef void  (*PFNGLCOLORMASKIOESPROC)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);

#ifdef glIsEnablediOES
#undef glIsEnablediOES
#endif
#ifdef PFNGLISENABLEDIOESPROC
#undef PFNGLISENABLEDIOESPROC
#endif
typedef GLboolean  (*PFNGLISENABLEDIOESPROC)(GLenum target, GLuint index);

#ifndef GL_BLEND_EQUATION_RGB
#define GL_BLEND_EQUATION_RGB 0x8009
#endif

#ifndef GL_BLEND_EQUATION_ALPHA
#define GL_BLEND_EQUATION_ALPHA 0x883D
#endif

#ifndef GL_BLEND_SRC_RGB
#define GL_BLEND_SRC_RGB 0x80C9
#endif

#ifndef GL_BLEND_SRC_ALPHA
#define GL_BLEND_SRC_ALPHA 0x80CB
#endif

#ifndef GL_BLEND_DST_RGB
#define GL_BLEND_DST_RGB 0x80C8
#endif

#ifndef GL_BLEND_DST_ALPHA
#define GL_BLEND_DST_ALPHA 0x80CA
#endif

#ifndef GL_COLOR_WRITEMASK
#define GL_COLOR_WRITEMASK 0x0C23
#endif

#ifndef GL_BLEND
#define GL_BLEND 0x0BE2
#endif

#ifndef GL_FUNC_ADD
#define GL_FUNC_ADD 0x8006
#endif

#ifndef GL_FUNC_SUBTRACT
#define GL_FUNC_SUBTRACT 0x800A
#endif

#ifndef GL_FUNC_REVERSE_SUBTRACT
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#endif

#ifndef GL_MIN
#define GL_MIN 0x8007
#endif

#ifndef GL_MAX
#define GL_MAX 0x8008
#endif

#ifndef GL_ZERO
#define GL_ZERO 0
#endif

#ifndef GL_ONE
#define GL_ONE 1
#endif

#ifndef GL_SRC_COLOR
#define GL_SRC_COLOR 0x0300
#endif

#ifndef GL_ONE_MINUS_SRC_COLOR
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#endif

#ifndef GL_DST_COLOR
#define GL_DST_COLOR 0x0306
#endif

#ifndef GL_ONE_MINUS_DST_COLOR
#define GL_ONE_MINUS_DST_COLOR 0x0307
#endif

#ifndef GL_SRC_ALPHA
#define GL_SRC_ALPHA 0x0302
#endif

#ifndef GL_ONE_MINUS_SRC_ALPHA
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#endif

#ifndef GL_DST_ALPHA
#define GL_DST_ALPHA 0x0304
#endif

#ifndef GL_ONE_MINUS_DST_ALPHA
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#endif

#ifndef GL_CONSTANT_COLOR
#define GL_CONSTANT_COLOR 0x8001
#endif

#ifndef GL_ONE_MINUS_CONSTANT_COLOR
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#endif

#ifndef GL_CONSTANT_ALPHA
#define GL_CONSTANT_ALPHA 0x8003
#endif

#ifndef GL_ONE_MINUS_CONSTANT_ALPHA
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#endif

#ifndef GL_SRC_ALPHA_SATURATE
#define GL_SRC_ALPHA_SATURATE 0x0308
#endif

#ifndef GL_OES_draw_elements_base_vertex
#define GL_OES_draw_elements_base_vertex 1
#endif

#ifdef glDrawElementsBaseVertexOES
#undef glDrawElementsBaseVertexOES
#endif
#ifdef PFNGLDRAWELEMENTSBASEVERTEXOESPROC
#undef PFNGLDRAWELEMENTSBASEVERTEXOESPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSBASEVERTEXOESPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);

#ifdef glDrawRangeElementsBaseVertexOES
#undef glDrawRangeElementsBaseVertexOES
#endif
#ifdef PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC
#undef PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC
#endif
typedef void  (*PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);

#ifdef glDrawElementsInstancedBaseVertexOES
#undef glDrawElementsInstancedBaseVertexOES
#endif
#ifdef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC
#undef PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC
#endif
typedef void  (*PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);

#ifdef glMultiDrawElementsBaseVertexOES
#undef glMultiDrawElementsBaseVertexOES
#endif
#ifdef PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC
#undef PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC
#endif
typedef void  (*PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex);

#ifndef GL_OES_draw_texture
#define GL_OES_draw_texture 1
#endif

#ifdef glDrawTexsOES
#undef glDrawTexsOES
#endif
#ifdef PFNGLDRAWTEXSOESPROC
#undef PFNGLDRAWTEXSOESPROC
#endif
typedef void  (*PFNGLDRAWTEXSOESPROC)(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);

#ifdef glDrawTexiOES
#undef glDrawTexiOES
#endif
#ifdef PFNGLDRAWTEXIOESPROC
#undef PFNGLDRAWTEXIOESPROC
#endif
typedef void  (*PFNGLDRAWTEXIOESPROC)(GLint x, GLint y, GLint z, GLint width, GLint height);

#ifdef glDrawTexxOES
#undef glDrawTexxOES
#endif
#ifdef PFNGLDRAWTEXXOESPROC
#undef PFNGLDRAWTEXXOESPROC
#endif
typedef void  (*PFNGLDRAWTEXXOESPROC)(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);

#ifdef glDrawTexsvOES
#undef glDrawTexsvOES
#endif
#ifdef PFNGLDRAWTEXSVOESPROC
#undef PFNGLDRAWTEXSVOESPROC
#endif
typedef void  (*PFNGLDRAWTEXSVOESPROC)(const GLshort *coords);

#ifdef glDrawTexivOES
#undef glDrawTexivOES
#endif
#ifdef PFNGLDRAWTEXIVOESPROC
#undef PFNGLDRAWTEXIVOESPROC
#endif
typedef void  (*PFNGLDRAWTEXIVOESPROC)(const GLint *coords);

#ifdef glDrawTexxvOES
#undef glDrawTexxvOES
#endif
#ifdef PFNGLDRAWTEXXVOESPROC
#undef PFNGLDRAWTEXXVOESPROC
#endif
typedef void  (*PFNGLDRAWTEXXVOESPROC)(const GLfixed *coords);

#ifdef glDrawTexfOES
#undef glDrawTexfOES
#endif
#ifdef PFNGLDRAWTEXFOESPROC
#undef PFNGLDRAWTEXFOESPROC
#endif
typedef void  (*PFNGLDRAWTEXFOESPROC)(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);

#ifdef glDrawTexfvOES
#undef glDrawTexfvOES
#endif
#ifdef PFNGLDRAWTEXFVOESPROC
#undef PFNGLDRAWTEXFVOESPROC
#endif
typedef void  (*PFNGLDRAWTEXFVOESPROC)(const GLfloat *coords);

#ifndef GL_TEXTURE_CROP_RECT_OES
#define GL_TEXTURE_CROP_RECT_OES 0x8B9D
#endif

#ifndef GL_OES_element_index_uint
#define GL_OES_element_index_uint 1
#endif

#ifndef GL_UNSIGNED_INT
#define GL_UNSIGNED_INT 0x1405
#endif

#ifndef GL_OES_extended_matrix_palette
#define GL_OES_extended_matrix_palette 1
#endif

#ifndef GL_OES_fbo_render_mipmap
#define GL_OES_fbo_render_mipmap 1
#endif

#ifndef GL_OES_fixed_point
#define GL_OES_fixed_point 1
#endif

#ifdef glAlphaFuncxOES
#undef glAlphaFuncxOES
#endif
#ifdef PFNGLALPHAFUNCXOESPROC
#undef PFNGLALPHAFUNCXOESPROC
#endif
typedef void  (*PFNGLALPHAFUNCXOESPROC)(GLenum func, GLfixed ref);

#ifdef glClearColorxOES
#undef glClearColorxOES
#endif
#ifdef PFNGLCLEARCOLORXOESPROC
#undef PFNGLCLEARCOLORXOESPROC
#endif
typedef void  (*PFNGLCLEARCOLORXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);

#ifdef glClearDepthxOES
#undef glClearDepthxOES
#endif
#ifdef PFNGLCLEARDEPTHXOESPROC
#undef PFNGLCLEARDEPTHXOESPROC
#endif
typedef void  (*PFNGLCLEARDEPTHXOESPROC)(GLfixed depth);

#ifdef glClipPlanexOES
#undef glClipPlanexOES
#endif
#ifdef PFNGLCLIPPLANEXOESPROC
#undef PFNGLCLIPPLANEXOESPROC
#endif
typedef void  (*PFNGLCLIPPLANEXOESPROC)(GLenum plane, const GLfixed *equation);

#ifdef glColor4xOES
#undef glColor4xOES
#endif
#ifdef PFNGLCOLOR4XOESPROC
#undef PFNGLCOLOR4XOESPROC
#endif
typedef void  (*PFNGLCOLOR4XOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);

#ifdef glDepthRangexOES
#undef glDepthRangexOES
#endif
#ifdef PFNGLDEPTHRANGEXOESPROC
#undef PFNGLDEPTHRANGEXOESPROC
#endif
typedef void  (*PFNGLDEPTHRANGEXOESPROC)(GLfixed n, GLfixed f);

#ifdef glFogxOES
#undef glFogxOES
#endif
#ifdef PFNGLFOGXOESPROC
#undef PFNGLFOGXOESPROC
#endif
typedef void  (*PFNGLFOGXOESPROC)(GLenum pname, GLfixed param);

#ifdef glFogxvOES
#undef glFogxvOES
#endif
#ifdef PFNGLFOGXVOESPROC
#undef PFNGLFOGXVOESPROC
#endif
typedef void  (*PFNGLFOGXVOESPROC)(GLenum pname, const GLfixed *param);

#ifdef glFrustumxOES
#undef glFrustumxOES
#endif
#ifdef PFNGLFRUSTUMXOESPROC
#undef PFNGLFRUSTUMXOESPROC
#endif
typedef void  (*PFNGLFRUSTUMXOESPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);

#ifdef glGetClipPlanexOES
#undef glGetClipPlanexOES
#endif
#ifdef PFNGLGETCLIPPLANEXOESPROC
#undef PFNGLGETCLIPPLANEXOESPROC
#endif
typedef void  (*PFNGLGETCLIPPLANEXOESPROC)(GLenum plane, GLfixed *equation);

#ifdef glGetFixedvOES
#undef glGetFixedvOES
#endif
#ifdef PFNGLGETFIXEDVOESPROC
#undef PFNGLGETFIXEDVOESPROC
#endif
typedef void  (*PFNGLGETFIXEDVOESPROC)(GLenum pname, GLfixed *params);

#ifdef glGetTexEnvxvOES
#undef glGetTexEnvxvOES
#endif
#ifdef PFNGLGETTEXENVXVOESPROC
#undef PFNGLGETTEXENVXVOESPROC
#endif
typedef void  (*PFNGLGETTEXENVXVOESPROC)(GLenum target, GLenum pname, GLfixed *params);

#ifdef glGetTexParameterxvOES
#undef glGetTexParameterxvOES
#endif
#ifdef PFNGLGETTEXPARAMETERXVOESPROC
#undef PFNGLGETTEXPARAMETERXVOESPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed *params);

#ifdef glLightModelxOES
#undef glLightModelxOES
#endif
#ifdef PFNGLLIGHTMODELXOESPROC
#undef PFNGLLIGHTMODELXOESPROC
#endif
typedef void  (*PFNGLLIGHTMODELXOESPROC)(GLenum pname, GLfixed param);

#ifdef glLightModelxvOES
#undef glLightModelxvOES
#endif
#ifdef PFNGLLIGHTMODELXVOESPROC
#undef PFNGLLIGHTMODELXVOESPROC
#endif
typedef void  (*PFNGLLIGHTMODELXVOESPROC)(GLenum pname, const GLfixed *param);

#ifdef glLightxOES
#undef glLightxOES
#endif
#ifdef PFNGLLIGHTXOESPROC
#undef PFNGLLIGHTXOESPROC
#endif
typedef void  (*PFNGLLIGHTXOESPROC)(GLenum light, GLenum pname, GLfixed param);

#ifdef glLightxvOES
#undef glLightxvOES
#endif
#ifdef PFNGLLIGHTXVOESPROC
#undef PFNGLLIGHTXVOESPROC
#endif
typedef void  (*PFNGLLIGHTXVOESPROC)(GLenum light, GLenum pname, const GLfixed *params);

#ifdef glLineWidthxOES
#undef glLineWidthxOES
#endif
#ifdef PFNGLLINEWIDTHXOESPROC
#undef PFNGLLINEWIDTHXOESPROC
#endif
typedef void  (*PFNGLLINEWIDTHXOESPROC)(GLfixed width);

#ifdef glLoadMatrixxOES
#undef glLoadMatrixxOES
#endif
#ifdef PFNGLLOADMATRIXXOESPROC
#undef PFNGLLOADMATRIXXOESPROC
#endif
typedef void  (*PFNGLLOADMATRIXXOESPROC)(const GLfixed *m);

#ifdef glMaterialxOES
#undef glMaterialxOES
#endif
#ifdef PFNGLMATERIALXOESPROC
#undef PFNGLMATERIALXOESPROC
#endif
typedef void  (*PFNGLMATERIALXOESPROC)(GLenum face, GLenum pname, GLfixed param);

#ifdef glMaterialxvOES
#undef glMaterialxvOES
#endif
#ifdef PFNGLMATERIALXVOESPROC
#undef PFNGLMATERIALXVOESPROC
#endif
typedef void  (*PFNGLMATERIALXVOESPROC)(GLenum face, GLenum pname, const GLfixed *param);

#ifdef glMultMatrixxOES
#undef glMultMatrixxOES
#endif
#ifdef PFNGLMULTMATRIXXOESPROC
#undef PFNGLMULTMATRIXXOESPROC
#endif
typedef void  (*PFNGLMULTMATRIXXOESPROC)(const GLfixed *m);

#ifdef glMultiTexCoord4xOES
#undef glMultiTexCoord4xOES
#endif
#ifdef PFNGLMULTITEXCOORD4XOESPROC
#undef PFNGLMULTITEXCOORD4XOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4XOESPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);

#ifdef glNormal3xOES
#undef glNormal3xOES
#endif
#ifdef PFNGLNORMAL3XOESPROC
#undef PFNGLNORMAL3XOESPROC
#endif
typedef void  (*PFNGLNORMAL3XOESPROC)(GLfixed nx, GLfixed ny, GLfixed nz);

#ifdef glOrthoxOES
#undef glOrthoxOES
#endif
#ifdef PFNGLORTHOXOESPROC
#undef PFNGLORTHOXOESPROC
#endif
typedef void  (*PFNGLORTHOXOESPROC)(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);

#ifdef glPointParameterxvOES
#undef glPointParameterxvOES
#endif
#ifdef PFNGLPOINTPARAMETERXVOESPROC
#undef PFNGLPOINTPARAMETERXVOESPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERXVOESPROC)(GLenum pname, const GLfixed *params);

#ifdef glPointSizexOES
#undef glPointSizexOES
#endif
#ifdef PFNGLPOINTSIZEXOESPROC
#undef PFNGLPOINTSIZEXOESPROC
#endif
typedef void  (*PFNGLPOINTSIZEXOESPROC)(GLfixed size);

#ifdef glPolygonOffsetxOES
#undef glPolygonOffsetxOES
#endif
#ifdef PFNGLPOLYGONOFFSETXOESPROC
#undef PFNGLPOLYGONOFFSETXOESPROC
#endif
typedef void  (*PFNGLPOLYGONOFFSETXOESPROC)(GLfixed factor, GLfixed units);

#ifdef glRotatexOES
#undef glRotatexOES
#endif
#ifdef PFNGLROTATEXOESPROC
#undef PFNGLROTATEXOESPROC
#endif
typedef void  (*PFNGLROTATEXOESPROC)(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);

#ifdef glScalexOES
#undef glScalexOES
#endif
#ifdef PFNGLSCALEXOESPROC
#undef PFNGLSCALEXOESPROC
#endif
typedef void  (*PFNGLSCALEXOESPROC)(GLfixed x, GLfixed y, GLfixed z);

#ifdef glTexEnvxOES
#undef glTexEnvxOES
#endif
#ifdef PFNGLTEXENVXOESPROC
#undef PFNGLTEXENVXOESPROC
#endif
typedef void  (*PFNGLTEXENVXOESPROC)(GLenum target, GLenum pname, GLfixed param);

#ifdef glTexEnvxvOES
#undef glTexEnvxvOES
#endif
#ifdef PFNGLTEXENVXVOESPROC
#undef PFNGLTEXENVXVOESPROC
#endif
typedef void  (*PFNGLTEXENVXVOESPROC)(GLenum target, GLenum pname, const GLfixed *params);

#ifdef glTexParameterxOES
#undef glTexParameterxOES
#endif
#ifdef PFNGLTEXPARAMETERXOESPROC
#undef PFNGLTEXPARAMETERXOESPROC
#endif
typedef void  (*PFNGLTEXPARAMETERXOESPROC)(GLenum target, GLenum pname, GLfixed param);

#ifdef glTexParameterxvOES
#undef glTexParameterxvOES
#endif
#ifdef PFNGLTEXPARAMETERXVOESPROC
#undef PFNGLTEXPARAMETERXVOESPROC
#endif
typedef void  (*PFNGLTEXPARAMETERXVOESPROC)(GLenum target, GLenum pname, const GLfixed *params);

#ifdef glTranslatexOES
#undef glTranslatexOES
#endif
#ifdef PFNGLTRANSLATEXOESPROC
#undef PFNGLTRANSLATEXOESPROC
#endif
typedef void  (*PFNGLTRANSLATEXOESPROC)(GLfixed x, GLfixed y, GLfixed z);

#ifndef GL_FIXED_OES
#define GL_FIXED_OES 0x140C
#endif

#ifdef glGetLightxvOES
#undef glGetLightxvOES
#endif
#ifdef PFNGLGETLIGHTXVOESPROC
#undef PFNGLGETLIGHTXVOESPROC
#endif
typedef void  (*PFNGLGETLIGHTXVOESPROC)(GLenum light, GLenum pname, GLfixed *params);

#ifdef glGetMaterialxvOES
#undef glGetMaterialxvOES
#endif
#ifdef PFNGLGETMATERIALXVOESPROC
#undef PFNGLGETMATERIALXVOESPROC
#endif
typedef void  (*PFNGLGETMATERIALXVOESPROC)(GLenum face, GLenum pname, GLfixed *params);

#ifdef glPointParameterxOES
#undef glPointParameterxOES
#endif
#ifdef PFNGLPOINTPARAMETERXOESPROC
#undef PFNGLPOINTPARAMETERXOESPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERXOESPROC)(GLenum pname, GLfixed param);

#ifdef glSampleCoveragexOES
#undef glSampleCoveragexOES
#endif
#ifdef PFNGLSAMPLECOVERAGEXOESPROC
#undef PFNGLSAMPLECOVERAGEXOESPROC
#endif
typedef void  (*PFNGLSAMPLECOVERAGEXOESPROC)(GLclampx value, GLboolean invert);

#ifdef glAccumxOES
#undef glAccumxOES
#endif
#ifdef PFNGLACCUMXOESPROC
#undef PFNGLACCUMXOESPROC
#endif
typedef void  (*PFNGLACCUMXOESPROC)(GLenum op, GLfixed value);

#ifdef glBitmapxOES
#undef glBitmapxOES
#endif
#ifdef PFNGLBITMAPXOESPROC
#undef PFNGLBITMAPXOESPROC
#endif
typedef void  (*PFNGLBITMAPXOESPROC)(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);

#ifdef glBlendColorxOES
#undef glBlendColorxOES
#endif
#ifdef PFNGLBLENDCOLORXOESPROC
#undef PFNGLBLENDCOLORXOESPROC
#endif
typedef void  (*PFNGLBLENDCOLORXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);

#ifdef glClearAccumxOES
#undef glClearAccumxOES
#endif
#ifdef PFNGLCLEARACCUMXOESPROC
#undef PFNGLCLEARACCUMXOESPROC
#endif
typedef void  (*PFNGLCLEARACCUMXOESPROC)(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);

#ifdef glColor3xOES
#undef glColor3xOES
#endif
#ifdef PFNGLCOLOR3XOESPROC
#undef PFNGLCOLOR3XOESPROC
#endif
typedef void  (*PFNGLCOLOR3XOESPROC)(GLfixed red, GLfixed green, GLfixed blue);

#ifdef glColor3xvOES
#undef glColor3xvOES
#endif
#ifdef PFNGLCOLOR3XVOESPROC
#undef PFNGLCOLOR3XVOESPROC
#endif
typedef void  (*PFNGLCOLOR3XVOESPROC)(const GLfixed *components);

#ifdef glColor4xvOES
#undef glColor4xvOES
#endif
#ifdef PFNGLCOLOR4XVOESPROC
#undef PFNGLCOLOR4XVOESPROC
#endif
typedef void  (*PFNGLCOLOR4XVOESPROC)(const GLfixed *components);

#ifdef glConvolutionParameterxOES
#undef glConvolutionParameterxOES
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERXOESPROC
#undef PFNGLCONVOLUTIONPARAMETERXOESPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERXOESPROC)(GLenum target, GLenum pname, GLfixed param);

#ifdef glConvolutionParameterxvOES
#undef glConvolutionParameterxvOES
#endif
#ifdef PFNGLCONVOLUTIONPARAMETERXVOESPROC
#undef PFNGLCONVOLUTIONPARAMETERXVOESPROC
#endif
typedef void  (*PFNGLCONVOLUTIONPARAMETERXVOESPROC)(GLenum target, GLenum pname, const GLfixed *params);

#ifdef glEvalCoord1xOES
#undef glEvalCoord1xOES
#endif
#ifdef PFNGLEVALCOORD1XOESPROC
#undef PFNGLEVALCOORD1XOESPROC
#endif
typedef void  (*PFNGLEVALCOORD1XOESPROC)(GLfixed u);

#ifdef glEvalCoord1xvOES
#undef glEvalCoord1xvOES
#endif
#ifdef PFNGLEVALCOORD1XVOESPROC
#undef PFNGLEVALCOORD1XVOESPROC
#endif
typedef void  (*PFNGLEVALCOORD1XVOESPROC)(const GLfixed *coords);

#ifdef glEvalCoord2xOES
#undef glEvalCoord2xOES
#endif
#ifdef PFNGLEVALCOORD2XOESPROC
#undef PFNGLEVALCOORD2XOESPROC
#endif
typedef void  (*PFNGLEVALCOORD2XOESPROC)(GLfixed u, GLfixed v);

#ifdef glEvalCoord2xvOES
#undef glEvalCoord2xvOES
#endif
#ifdef PFNGLEVALCOORD2XVOESPROC
#undef PFNGLEVALCOORD2XVOESPROC
#endif
typedef void  (*PFNGLEVALCOORD2XVOESPROC)(const GLfixed *coords);

#ifdef glFeedbackBufferxOES
#undef glFeedbackBufferxOES
#endif
#ifdef PFNGLFEEDBACKBUFFERXOESPROC
#undef PFNGLFEEDBACKBUFFERXOESPROC
#endif
typedef void  (*PFNGLFEEDBACKBUFFERXOESPROC)(GLsizei n, GLenum type, const GLfixed *buffer);

#ifdef glGetConvolutionParameterxvOES
#undef glGetConvolutionParameterxvOES
#endif
#ifdef PFNGLGETCONVOLUTIONPARAMETERXVOESPROC
#undef PFNGLGETCONVOLUTIONPARAMETERXVOESPROC
#endif
typedef void  (*PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed *params);

#ifdef glGetHistogramParameterxvOES
#undef glGetHistogramParameterxvOES
#endif
#ifdef PFNGLGETHISTOGRAMPARAMETERXVOESPROC
#undef PFNGLGETHISTOGRAMPARAMETERXVOESPROC
#endif
typedef void  (*PFNGLGETHISTOGRAMPARAMETERXVOESPROC)(GLenum target, GLenum pname, GLfixed *params);

#ifdef glGetLightxOES
#undef glGetLightxOES
#endif
#ifdef PFNGLGETLIGHTXOESPROC
#undef PFNGLGETLIGHTXOESPROC
#endif
typedef void  (*PFNGLGETLIGHTXOESPROC)(GLenum light, GLenum pname, GLfixed *params);

#ifdef glGetMapxvOES
#undef glGetMapxvOES
#endif
#ifdef PFNGLGETMAPXVOESPROC
#undef PFNGLGETMAPXVOESPROC
#endif
typedef void  (*PFNGLGETMAPXVOESPROC)(GLenum target, GLenum query, GLfixed *v);

#ifdef glGetMaterialxOES
#undef glGetMaterialxOES
#endif
#ifdef PFNGLGETMATERIALXOESPROC
#undef PFNGLGETMATERIALXOESPROC
#endif
typedef void  (*PFNGLGETMATERIALXOESPROC)(GLenum face, GLenum pname, GLfixed param);

#ifdef glGetPixelMapxv
#undef glGetPixelMapxv
#endif
#ifdef PFNGLGETPIXELMAPXVPROC
#undef PFNGLGETPIXELMAPXVPROC
#endif
typedef void  (*PFNGLGETPIXELMAPXVPROC)(GLenum map, GLint size, GLfixed *values);

#ifdef glGetTexGenxvOES
#undef glGetTexGenxvOES
#endif
#ifdef PFNGLGETTEXGENXVOESPROC
#undef PFNGLGETTEXGENXVOESPROC
#endif
typedef void  (*PFNGLGETTEXGENXVOESPROC)(GLenum coord, GLenum pname, GLfixed *params);

#ifdef glGetTexLevelParameterxvOES
#undef glGetTexLevelParameterxvOES
#endif
#ifdef PFNGLGETTEXLEVELPARAMETERXVOESPROC
#undef PFNGLGETTEXLEVELPARAMETERXVOESPROC
#endif
typedef void  (*PFNGLGETTEXLEVELPARAMETERXVOESPROC)(GLenum target, GLint level, GLenum pname, GLfixed *params);

#ifdef glIndexxOES
#undef glIndexxOES
#endif
#ifdef PFNGLINDEXXOESPROC
#undef PFNGLINDEXXOESPROC
#endif
typedef void  (*PFNGLINDEXXOESPROC)(GLfixed component);

#ifdef glIndexxvOES
#undef glIndexxvOES
#endif
#ifdef PFNGLINDEXXVOESPROC
#undef PFNGLINDEXXVOESPROC
#endif
typedef void  (*PFNGLINDEXXVOESPROC)(const GLfixed *component);

#ifdef glLoadTransposeMatrixxOES
#undef glLoadTransposeMatrixxOES
#endif
#ifdef PFNGLLOADTRANSPOSEMATRIXXOESPROC
#undef PFNGLLOADTRANSPOSEMATRIXXOESPROC
#endif
typedef void  (*PFNGLLOADTRANSPOSEMATRIXXOESPROC)(const GLfixed *m);

#ifdef glMap1xOES
#undef glMap1xOES
#endif
#ifdef PFNGLMAP1XOESPROC
#undef PFNGLMAP1XOESPROC
#endif
typedef void  (*PFNGLMAP1XOESPROC)(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);

#ifdef glMap2xOES
#undef glMap2xOES
#endif
#ifdef PFNGLMAP2XOESPROC
#undef PFNGLMAP2XOESPROC
#endif
typedef void  (*PFNGLMAP2XOESPROC)(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);

#ifdef glMapGrid1xOES
#undef glMapGrid1xOES
#endif
#ifdef PFNGLMAPGRID1XOESPROC
#undef PFNGLMAPGRID1XOESPROC
#endif
typedef void  (*PFNGLMAPGRID1XOESPROC)(GLint n, GLfixed u1, GLfixed u2);

#ifdef glMapGrid2xOES
#undef glMapGrid2xOES
#endif
#ifdef PFNGLMAPGRID2XOESPROC
#undef PFNGLMAPGRID2XOESPROC
#endif
typedef void  (*PFNGLMAPGRID2XOESPROC)(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);

#ifdef glMultTransposeMatrixxOES
#undef glMultTransposeMatrixxOES
#endif
#ifdef PFNGLMULTTRANSPOSEMATRIXXOESPROC
#undef PFNGLMULTTRANSPOSEMATRIXXOESPROC
#endif
typedef void  (*PFNGLMULTTRANSPOSEMATRIXXOESPROC)(const GLfixed *m);

#ifdef glMultiTexCoord1xOES
#undef glMultiTexCoord1xOES
#endif
#ifdef PFNGLMULTITEXCOORD1XOESPROC
#undef PFNGLMULTITEXCOORD1XOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1XOESPROC)(GLenum texture, GLfixed s);

#ifdef glMultiTexCoord1xvOES
#undef glMultiTexCoord1xvOES
#endif
#ifdef PFNGLMULTITEXCOORD1XVOESPROC
#undef PFNGLMULTITEXCOORD1XVOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD1XVOESPROC)(GLenum texture, const GLfixed *coords);

#ifdef glMultiTexCoord2xOES
#undef glMultiTexCoord2xOES
#endif
#ifdef PFNGLMULTITEXCOORD2XOESPROC
#undef PFNGLMULTITEXCOORD2XOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2XOESPROC)(GLenum texture, GLfixed s, GLfixed t);

#ifdef glMultiTexCoord2xvOES
#undef glMultiTexCoord2xvOES
#endif
#ifdef PFNGLMULTITEXCOORD2XVOESPROC
#undef PFNGLMULTITEXCOORD2XVOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD2XVOESPROC)(GLenum texture, const GLfixed *coords);

#ifdef glMultiTexCoord3xOES
#undef glMultiTexCoord3xOES
#endif
#ifdef PFNGLMULTITEXCOORD3XOESPROC
#undef PFNGLMULTITEXCOORD3XOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3XOESPROC)(GLenum texture, GLfixed s, GLfixed t, GLfixed r);

#ifdef glMultiTexCoord3xvOES
#undef glMultiTexCoord3xvOES
#endif
#ifdef PFNGLMULTITEXCOORD3XVOESPROC
#undef PFNGLMULTITEXCOORD3XVOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD3XVOESPROC)(GLenum texture, const GLfixed *coords);

#ifdef glMultiTexCoord4xvOES
#undef glMultiTexCoord4xvOES
#endif
#ifdef PFNGLMULTITEXCOORD4XVOESPROC
#undef PFNGLMULTITEXCOORD4XVOESPROC
#endif
typedef void  (*PFNGLMULTITEXCOORD4XVOESPROC)(GLenum texture, const GLfixed *coords);

#ifdef glNormal3xvOES
#undef glNormal3xvOES
#endif
#ifdef PFNGLNORMAL3XVOESPROC
#undef PFNGLNORMAL3XVOESPROC
#endif
typedef void  (*PFNGLNORMAL3XVOESPROC)(const GLfixed *coords);

#ifdef glPassThroughxOES
#undef glPassThroughxOES
#endif
#ifdef PFNGLPASSTHROUGHXOESPROC
#undef PFNGLPASSTHROUGHXOESPROC
#endif
typedef void  (*PFNGLPASSTHROUGHXOESPROC)(GLfixed token);

#ifdef glPixelMapx
#undef glPixelMapx
#endif
#ifdef PFNGLPIXELMAPXPROC
#undef PFNGLPIXELMAPXPROC
#endif
typedef void  (*PFNGLPIXELMAPXPROC)(GLenum map, GLint size, const GLfixed *values);

#ifdef glPixelStorex
#undef glPixelStorex
#endif
#ifdef PFNGLPIXELSTOREXPROC
#undef PFNGLPIXELSTOREXPROC
#endif
typedef void  (*PFNGLPIXELSTOREXPROC)(GLenum pname, GLfixed param);

#ifdef glPixelTransferxOES
#undef glPixelTransferxOES
#endif
#ifdef PFNGLPIXELTRANSFERXOESPROC
#undef PFNGLPIXELTRANSFERXOESPROC
#endif
typedef void  (*PFNGLPIXELTRANSFERXOESPROC)(GLenum pname, GLfixed param);

#ifdef glPixelZoomxOES
#undef glPixelZoomxOES
#endif
#ifdef PFNGLPIXELZOOMXOESPROC
#undef PFNGLPIXELZOOMXOESPROC
#endif
typedef void  (*PFNGLPIXELZOOMXOESPROC)(GLfixed xfactor, GLfixed yfactor);

#ifdef glPrioritizeTexturesxOES
#undef glPrioritizeTexturesxOES
#endif
#ifdef PFNGLPRIORITIZETEXTURESXOESPROC
#undef PFNGLPRIORITIZETEXTURESXOESPROC
#endif
typedef void  (*PFNGLPRIORITIZETEXTURESXOESPROC)(GLsizei n, const GLuint *textures, const GLfixed *priorities);

#ifdef glRasterPos2xOES
#undef glRasterPos2xOES
#endif
#ifdef PFNGLRASTERPOS2XOESPROC
#undef PFNGLRASTERPOS2XOESPROC
#endif
typedef void  (*PFNGLRASTERPOS2XOESPROC)(GLfixed x, GLfixed y);

#ifdef glRasterPos2xvOES
#undef glRasterPos2xvOES
#endif
#ifdef PFNGLRASTERPOS2XVOESPROC
#undef PFNGLRASTERPOS2XVOESPROC
#endif
typedef void  (*PFNGLRASTERPOS2XVOESPROC)(const GLfixed *coords);

#ifdef glRasterPos3xOES
#undef glRasterPos3xOES
#endif
#ifdef PFNGLRASTERPOS3XOESPROC
#undef PFNGLRASTERPOS3XOESPROC
#endif
typedef void  (*PFNGLRASTERPOS3XOESPROC)(GLfixed x, GLfixed y, GLfixed z);

#ifdef glRasterPos3xvOES
#undef glRasterPos3xvOES
#endif
#ifdef PFNGLRASTERPOS3XVOESPROC
#undef PFNGLRASTERPOS3XVOESPROC
#endif
typedef void  (*PFNGLRASTERPOS3XVOESPROC)(const GLfixed *coords);

#ifdef glRasterPos4xOES
#undef glRasterPos4xOES
#endif
#ifdef PFNGLRASTERPOS4XOESPROC
#undef PFNGLRASTERPOS4XOESPROC
#endif
typedef void  (*PFNGLRASTERPOS4XOESPROC)(GLfixed x, GLfixed y, GLfixed z, GLfixed w);

#ifdef glRasterPos4xvOES
#undef glRasterPos4xvOES
#endif
#ifdef PFNGLRASTERPOS4XVOESPROC
#undef PFNGLRASTERPOS4XVOESPROC
#endif
typedef void  (*PFNGLRASTERPOS4XVOESPROC)(const GLfixed *coords);

#ifdef glRectxOES
#undef glRectxOES
#endif
#ifdef PFNGLRECTXOESPROC
#undef PFNGLRECTXOESPROC
#endif
typedef void  (*PFNGLRECTXOESPROC)(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);

#ifdef glRectxvOES
#undef glRectxvOES
#endif
#ifdef PFNGLRECTXVOESPROC
#undef PFNGLRECTXVOESPROC
#endif
typedef void  (*PFNGLRECTXVOESPROC)(const GLfixed *v1, const GLfixed *v2);

#ifdef glTexCoord1xOES
#undef glTexCoord1xOES
#endif
#ifdef PFNGLTEXCOORD1XOESPROC
#undef PFNGLTEXCOORD1XOESPROC
#endif
typedef void  (*PFNGLTEXCOORD1XOESPROC)(GLfixed s);

#ifdef glTexCoord1xvOES
#undef glTexCoord1xvOES
#endif
#ifdef PFNGLTEXCOORD1XVOESPROC
#undef PFNGLTEXCOORD1XVOESPROC
#endif
typedef void  (*PFNGLTEXCOORD1XVOESPROC)(const GLfixed *coords);

#ifdef glTexCoord2xOES
#undef glTexCoord2xOES
#endif
#ifdef PFNGLTEXCOORD2XOESPROC
#undef PFNGLTEXCOORD2XOESPROC
#endif
typedef void  (*PFNGLTEXCOORD2XOESPROC)(GLfixed s, GLfixed t);

#ifdef glTexCoord2xvOES
#undef glTexCoord2xvOES
#endif
#ifdef PFNGLTEXCOORD2XVOESPROC
#undef PFNGLTEXCOORD2XVOESPROC
#endif
typedef void  (*PFNGLTEXCOORD2XVOESPROC)(const GLfixed *coords);

#ifdef glTexCoord3xOES
#undef glTexCoord3xOES
#endif
#ifdef PFNGLTEXCOORD3XOESPROC
#undef PFNGLTEXCOORD3XOESPROC
#endif
typedef void  (*PFNGLTEXCOORD3XOESPROC)(GLfixed s, GLfixed t, GLfixed r);

#ifdef glTexCoord3xvOES
#undef glTexCoord3xvOES
#endif
#ifdef PFNGLTEXCOORD3XVOESPROC
#undef PFNGLTEXCOORD3XVOESPROC
#endif
typedef void  (*PFNGLTEXCOORD3XVOESPROC)(const GLfixed *coords);

#ifdef glTexCoord4xOES
#undef glTexCoord4xOES
#endif
#ifdef PFNGLTEXCOORD4XOESPROC
#undef PFNGLTEXCOORD4XOESPROC
#endif
typedef void  (*PFNGLTEXCOORD4XOESPROC)(GLfixed s, GLfixed t, GLfixed r, GLfixed q);

#ifdef glTexCoord4xvOES
#undef glTexCoord4xvOES
#endif
#ifdef PFNGLTEXCOORD4XVOESPROC
#undef PFNGLTEXCOORD4XVOESPROC
#endif
typedef void  (*PFNGLTEXCOORD4XVOESPROC)(const GLfixed *coords);

#ifdef glTexGenxOES
#undef glTexGenxOES
#endif
#ifdef PFNGLTEXGENXOESPROC
#undef PFNGLTEXGENXOESPROC
#endif
typedef void  (*PFNGLTEXGENXOESPROC)(GLenum coord, GLenum pname, GLfixed param);

#ifdef glTexGenxvOES
#undef glTexGenxvOES
#endif
#ifdef PFNGLTEXGENXVOESPROC
#undef PFNGLTEXGENXVOESPROC
#endif
typedef void  (*PFNGLTEXGENXVOESPROC)(GLenum coord, GLenum pname, const GLfixed *params);

#ifdef glVertex2xOES
#undef glVertex2xOES
#endif
#ifdef PFNGLVERTEX2XOESPROC
#undef PFNGLVERTEX2XOESPROC
#endif
typedef void  (*PFNGLVERTEX2XOESPROC)(GLfixed x);

#ifdef glVertex2xvOES
#undef glVertex2xvOES
#endif
#ifdef PFNGLVERTEX2XVOESPROC
#undef PFNGLVERTEX2XVOESPROC
#endif
typedef void  (*PFNGLVERTEX2XVOESPROC)(const GLfixed *coords);

#ifdef glVertex3xOES
#undef glVertex3xOES
#endif
#ifdef PFNGLVERTEX3XOESPROC
#undef PFNGLVERTEX3XOESPROC
#endif
typedef void  (*PFNGLVERTEX3XOESPROC)(GLfixed x, GLfixed y);

#ifdef glVertex3xvOES
#undef glVertex3xvOES
#endif
#ifdef PFNGLVERTEX3XVOESPROC
#undef PFNGLVERTEX3XVOESPROC
#endif
typedef void  (*PFNGLVERTEX3XVOESPROC)(const GLfixed *coords);

#ifdef glVertex4xOES
#undef glVertex4xOES
#endif
#ifdef PFNGLVERTEX4XOESPROC
#undef PFNGLVERTEX4XOESPROC
#endif
typedef void  (*PFNGLVERTEX4XOESPROC)(GLfixed x, GLfixed y, GLfixed z);

#ifdef glVertex4xvOES
#undef glVertex4xvOES
#endif
#ifdef PFNGLVERTEX4XVOESPROC
#undef PFNGLVERTEX4XVOESPROC
#endif
typedef void  (*PFNGLVERTEX4XVOESPROC)(const GLfixed *coords);

#ifndef GL_OES_fragment_precision_high
#define GL_OES_fragment_precision_high 1
#endif

#ifndef GL_OES_framebuffer_object
#define GL_OES_framebuffer_object 1
#endif

#ifdef glIsRenderbufferOES
#undef glIsRenderbufferOES
#endif
#ifdef PFNGLISRENDERBUFFEROESPROC
#undef PFNGLISRENDERBUFFEROESPROC
#endif
typedef GLboolean  (*PFNGLISRENDERBUFFEROESPROC)(GLuint renderbuffer);

#ifdef glBindRenderbufferOES
#undef glBindRenderbufferOES
#endif
#ifdef PFNGLBINDRENDERBUFFEROESPROC
#undef PFNGLBINDRENDERBUFFEROESPROC
#endif
typedef void  (*PFNGLBINDRENDERBUFFEROESPROC)(GLenum target, GLuint renderbuffer);

#ifdef glDeleteRenderbuffersOES
#undef glDeleteRenderbuffersOES
#endif
#ifdef PFNGLDELETERENDERBUFFERSOESPROC
#undef PFNGLDELETERENDERBUFFERSOESPROC
#endif
typedef void  (*PFNGLDELETERENDERBUFFERSOESPROC)(GLsizei n, const GLuint *renderbuffers);

#ifdef glGenRenderbuffersOES
#undef glGenRenderbuffersOES
#endif
#ifdef PFNGLGENRENDERBUFFERSOESPROC
#undef PFNGLGENRENDERBUFFERSOESPROC
#endif
typedef void  (*PFNGLGENRENDERBUFFERSOESPROC)(GLsizei n, GLuint *renderbuffers);

#ifdef glRenderbufferStorageOES
#undef glRenderbufferStorageOES
#endif
#ifdef PFNGLRENDERBUFFERSTORAGEOESPROC
#undef PFNGLRENDERBUFFERSTORAGEOESPROC
#endif
typedef void  (*PFNGLRENDERBUFFERSTORAGEOESPROC)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);

#ifdef glGetRenderbufferParameterivOES
#undef glGetRenderbufferParameterivOES
#endif
#ifdef PFNGLGETRENDERBUFFERPARAMETERIVOESPROC
#undef PFNGLGETRENDERBUFFERPARAMETERIVOESPROC
#endif
typedef void  (*PFNGLGETRENDERBUFFERPARAMETERIVOESPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glIsFramebufferOES
#undef glIsFramebufferOES
#endif
#ifdef PFNGLISFRAMEBUFFEROESPROC
#undef PFNGLISFRAMEBUFFEROESPROC
#endif
typedef GLboolean  (*PFNGLISFRAMEBUFFEROESPROC)(GLuint framebuffer);

#ifdef glBindFramebufferOES
#undef glBindFramebufferOES
#endif
#ifdef PFNGLBINDFRAMEBUFFEROESPROC
#undef PFNGLBINDFRAMEBUFFEROESPROC
#endif
typedef void  (*PFNGLBINDFRAMEBUFFEROESPROC)(GLenum target, GLuint framebuffer);

#ifdef glDeleteFramebuffersOES
#undef glDeleteFramebuffersOES
#endif
#ifdef PFNGLDELETEFRAMEBUFFERSOESPROC
#undef PFNGLDELETEFRAMEBUFFERSOESPROC
#endif
typedef void  (*PFNGLDELETEFRAMEBUFFERSOESPROC)(GLsizei n, const GLuint *framebuffers);

#ifdef glGenFramebuffersOES
#undef glGenFramebuffersOES
#endif
#ifdef PFNGLGENFRAMEBUFFERSOESPROC
#undef PFNGLGENFRAMEBUFFERSOESPROC
#endif
typedef void  (*PFNGLGENFRAMEBUFFERSOESPROC)(GLsizei n, GLuint *framebuffers);

#ifdef glCheckFramebufferStatusOES
#undef glCheckFramebufferStatusOES
#endif
#ifdef PFNGLCHECKFRAMEBUFFERSTATUSOESPROC
#undef PFNGLCHECKFRAMEBUFFERSTATUSOESPROC
#endif
typedef GLenum  (*PFNGLCHECKFRAMEBUFFERSTATUSOESPROC)(GLenum target);

#ifdef glFramebufferRenderbufferOES
#undef glFramebufferRenderbufferOES
#endif
#ifdef PFNGLFRAMEBUFFERRENDERBUFFEROESPROC
#undef PFNGLFRAMEBUFFERRENDERBUFFEROESPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERRENDERBUFFEROESPROC)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);

#ifdef glFramebufferTexture2DOES
#undef glFramebufferTexture2DOES
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE2DOESPROC
#undef PFNGLFRAMEBUFFERTEXTURE2DOESPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE2DOESPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);

#ifdef glGetFramebufferAttachmentParameterivOES
#undef glGetFramebufferAttachmentParameterivOES
#endif
#ifdef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC
#undef PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC
#endif
typedef void  (*PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC)(GLenum target, GLenum attachment, GLenum pname, GLint *params);

#ifdef glGenerateMipmapOES
#undef glGenerateMipmapOES
#endif
#ifdef PFNGLGENERATEMIPMAPOESPROC
#undef PFNGLGENERATEMIPMAPOESPROC
#endif
typedef void  (*PFNGLGENERATEMIPMAPOESPROC)(GLenum target);

#ifndef GL_NONE_OES
#define GL_NONE_OES 0
#endif

#ifndef GL_FRAMEBUFFER_OES
#define GL_FRAMEBUFFER_OES 0x8D40
#endif

#ifndef GL_RENDERBUFFER_OES
#define GL_RENDERBUFFER_OES 0x8D41
#endif

#ifndef GL_RGBA4_OES
#define GL_RGBA4_OES 0x8056
#endif

#ifndef GL_RGB5_A1_OES
#define GL_RGB5_A1_OES 0x8057
#endif

#ifndef GL_RGB565_OES
#define GL_RGB565_OES 0x8D62
#endif

#ifndef GL_DEPTH_COMPONENT16_OES
#define GL_DEPTH_COMPONENT16_OES 0x81A5
#endif

#ifndef GL_RENDERBUFFER_WIDTH_OES
#define GL_RENDERBUFFER_WIDTH_OES 0x8D42
#endif

#ifndef GL_RENDERBUFFER_HEIGHT_OES
#define GL_RENDERBUFFER_HEIGHT_OES 0x8D43
#endif

#ifndef GL_RENDERBUFFER_INTERNAL_FORMAT_OES
#define GL_RENDERBUFFER_INTERNAL_FORMAT_OES 0x8D44
#endif

#ifndef GL_RENDERBUFFER_RED_SIZE_OES
#define GL_RENDERBUFFER_RED_SIZE_OES 0x8D50
#endif

#ifndef GL_RENDERBUFFER_GREEN_SIZE_OES
#define GL_RENDERBUFFER_GREEN_SIZE_OES 0x8D51
#endif

#ifndef GL_RENDERBUFFER_BLUE_SIZE_OES
#define GL_RENDERBUFFER_BLUE_SIZE_OES 0x8D52
#endif

#ifndef GL_RENDERBUFFER_ALPHA_SIZE_OES
#define GL_RENDERBUFFER_ALPHA_SIZE_OES 0x8D53
#endif

#ifndef GL_RENDERBUFFER_DEPTH_SIZE_OES
#define GL_RENDERBUFFER_DEPTH_SIZE_OES 0x8D54
#endif

#ifndef GL_RENDERBUFFER_STENCIL_SIZE_OES
#define GL_RENDERBUFFER_STENCIL_SIZE_OES 0x8D55
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES 0x8CD0
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES 0x8CD1
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES 0x8CD2
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES 0x8CD3
#endif

#ifndef GL_COLOR_ATTACHMENT0_OES
#define GL_COLOR_ATTACHMENT0_OES 0x8CE0
#endif

#ifndef GL_DEPTH_ATTACHMENT_OES
#define GL_DEPTH_ATTACHMENT_OES 0x8D00
#endif

#ifndef GL_STENCIL_ATTACHMENT_OES
#define GL_STENCIL_ATTACHMENT_OES 0x8D20
#endif

#ifndef GL_FRAMEBUFFER_COMPLETE_OES
#define GL_FRAMEBUFFER_COMPLETE_OES 0x8CD5
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES 0x8CD6
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES 0x8CD7
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES 0x8CD9
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES 0x8CDA
#endif

#ifndef GL_FRAMEBUFFER_UNSUPPORTED_OES
#define GL_FRAMEBUFFER_UNSUPPORTED_OES 0x8CDD
#endif

#ifndef GL_FRAMEBUFFER_BINDING_OES
#define GL_FRAMEBUFFER_BINDING_OES 0x8CA6
#endif

#ifndef GL_RENDERBUFFER_BINDING_OES
#define GL_RENDERBUFFER_BINDING_OES 0x8CA7
#endif

#ifndef GL_MAX_RENDERBUFFER_SIZE_OES
#define GL_MAX_RENDERBUFFER_SIZE_OES 0x84E8
#endif

#ifndef GL_INVALID_FRAMEBUFFER_OPERATION_OES
#define GL_INVALID_FRAMEBUFFER_OPERATION_OES 0x0506
#endif

#ifndef GL_OES_geometry_shader
#define GL_OES_geometry_shader 1
#endif

#ifdef glFramebufferTextureOES
#undef glFramebufferTextureOES
#endif
#ifdef PFNGLFRAMEBUFFERTEXTUREOESPROC
#undef PFNGLFRAMEBUFFERTEXTUREOESPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTUREOESPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level);

#ifndef GL_GEOMETRY_SHADER_OES
#define GL_GEOMETRY_SHADER_OES 0x8DD9
#endif

#ifndef GL_GEOMETRY_SHADER_BIT_OES
#define GL_GEOMETRY_SHADER_BIT_OES 0x00000004
#endif

#ifndef GL_GEOMETRY_LINKED_VERTICES_OUT_OES
#define GL_GEOMETRY_LINKED_VERTICES_OUT_OES 0x8916
#endif

#ifndef GL_GEOMETRY_LINKED_INPUT_TYPE_OES
#define GL_GEOMETRY_LINKED_INPUT_TYPE_OES 0x8917
#endif

#ifndef GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES
#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES 0x8918
#endif

#ifndef GL_GEOMETRY_SHADER_INVOCATIONS_OES
#define GL_GEOMETRY_SHADER_INVOCATIONS_OES 0x887F
#endif

#ifndef GL_LAYER_PROVOKING_VERTEX_OES
#define GL_LAYER_PROVOKING_VERTEX_OES 0x825E
#endif

#ifndef GL_LINES_ADJACENCY_OES
#define GL_LINES_ADJACENCY_OES 0x000A
#endif

#ifndef GL_LINE_STRIP_ADJACENCY_OES
#define GL_LINE_STRIP_ADJACENCY_OES 0x000B
#endif

#ifndef GL_TRIANGLES_ADJACENCY_OES
#define GL_TRIANGLES_ADJACENCY_OES 0x000C
#endif

#ifndef GL_TRIANGLE_STRIP_ADJACENCY_OES
#define GL_TRIANGLE_STRIP_ADJACENCY_OES 0x000D
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8DDF
#endif

#ifndef GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES 0x8A2C
#endif

#ifndef GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8A32
#endif

#ifndef GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES 0x9123
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES 0x9124
#endif

#ifndef GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES 0x8DE0
#endif

#ifndef GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES 0x8DE1
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES 0x8E5A
#endif

#ifndef GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES 0x8C29
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES 0x92CF
#endif

#ifndef GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES 0x92D5
#endif

#ifndef GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES 0x90CD
#endif

#ifndef GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES 0x90D7
#endif

#ifndef GL_FIRST_VERTEX_CONVENTION_OES
#define GL_FIRST_VERTEX_CONVENTION_OES 0x8E4D
#endif

#ifndef GL_LAST_VERTEX_CONVENTION_OES
#define GL_LAST_VERTEX_CONVENTION_OES 0x8E4E
#endif

#ifndef GL_UNDEFINED_VERTEX_OES
#define GL_UNDEFINED_VERTEX_OES 0x8260
#endif

#ifndef GL_PRIMITIVES_GENERATED_OES
#define GL_PRIMITIVES_GENERATED_OES 0x8C87
#endif

#ifndef GL_FRAMEBUFFER_DEFAULT_LAYERS_OES
#define GL_FRAMEBUFFER_DEFAULT_LAYERS_OES 0x9312
#endif

#ifndef GL_MAX_FRAMEBUFFER_LAYERS_OES
#define GL_MAX_FRAMEBUFFER_LAYERS_OES 0x9317
#endif

#ifndef GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES 0x8DA8
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES 0x8DA7
#endif

#ifndef GL_REFERENCED_BY_GEOMETRY_SHADER_OES
#define GL_REFERENCED_BY_GEOMETRY_SHADER_OES 0x9309
#endif

#ifndef GL_OES_geometry_point_size
#define GL_OES_geometry_point_size 1
#endif

#ifndef GL_OES_get_program_binary
#define GL_OES_get_program_binary 1
#endif

#ifdef glGetProgramBinaryOES
#undef glGetProgramBinaryOES
#endif
#ifdef PFNGLGETPROGRAMBINARYOESPROC
#undef PFNGLGETPROGRAMBINARYOESPROC
#endif
typedef void  (*PFNGLGETPROGRAMBINARYOESPROC)(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);

#ifdef glProgramBinaryOES
#undef glProgramBinaryOES
#endif
#ifdef PFNGLPROGRAMBINARYOESPROC
#undef PFNGLPROGRAMBINARYOESPROC
#endif
typedef void  (*PFNGLPROGRAMBINARYOESPROC)(GLuint program, GLenum binaryFormat, const void *binary, GLint length);

#ifndef GL_PROGRAM_BINARY_LENGTH_OES
#define GL_PROGRAM_BINARY_LENGTH_OES 0x8741
#endif

#ifndef GL_NUM_PROGRAM_BINARY_FORMATS_OES
#define GL_NUM_PROGRAM_BINARY_FORMATS_OES 0x87FE
#endif

#ifndef GL_PROGRAM_BINARY_FORMATS_OES
#define GL_PROGRAM_BINARY_FORMATS_OES 0x87FF
#endif

#ifndef GL_OES_gpu_shader5
#define GL_OES_gpu_shader5 1
#endif

#ifndef GL_OES_mapbuffer
#define GL_OES_mapbuffer 1
#endif

#ifdef glMapBufferOES
#undef glMapBufferOES
#endif
#ifdef PFNGLMAPBUFFEROESPROC
#undef PFNGLMAPBUFFEROESPROC
#endif
typedef void * (*PFNGLMAPBUFFEROESPROC)(GLenum target, GLenum access);

#ifdef glUnmapBufferOES
#undef glUnmapBufferOES
#endif
#ifdef PFNGLUNMAPBUFFEROESPROC
#undef PFNGLUNMAPBUFFEROESPROC
#endif
typedef GLboolean  (*PFNGLUNMAPBUFFEROESPROC)(GLenum target);

#ifdef glGetBufferPointervOES
#undef glGetBufferPointervOES
#endif
#ifdef PFNGLGETBUFFERPOINTERVOESPROC
#undef PFNGLGETBUFFERPOINTERVOESPROC
#endif
typedef void  (*PFNGLGETBUFFERPOINTERVOESPROC)(GLenum target, GLenum pname, void **params);

#ifndef GL_WRITE_ONLY_OES
#define GL_WRITE_ONLY_OES 0x88B9
#endif

#ifndef GL_BUFFER_ACCESS_OES
#define GL_BUFFER_ACCESS_OES 0x88BB
#endif

#ifndef GL_BUFFER_MAPPED_OES
#define GL_BUFFER_MAPPED_OES 0x88BC
#endif

#ifndef GL_BUFFER_MAP_POINTER_OES
#define GL_BUFFER_MAP_POINTER_OES 0x88BD
#endif

#ifndef GL_OES_matrix_get
#define GL_OES_matrix_get 1
#endif

#ifndef GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES
#define GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES 0x898D
#endif

#ifndef GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES
#define GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES 0x898E
#endif

#ifndef GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES
#define GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES 0x898F
#endif

#ifndef GL_OES_matrix_palette
#define GL_OES_matrix_palette 1
#endif

#ifdef glCurrentPaletteMatrixOES
#undef glCurrentPaletteMatrixOES
#endif
#ifdef PFNGLCURRENTPALETTEMATRIXOESPROC
#undef PFNGLCURRENTPALETTEMATRIXOESPROC
#endif
typedef void  (*PFNGLCURRENTPALETTEMATRIXOESPROC)(GLuint matrixpaletteindex);

#ifdef glLoadPaletteFromModelViewMatrixOES
#undef glLoadPaletteFromModelViewMatrixOES
#endif
#ifdef PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC
#undef PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC
#endif
typedef void  (*PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC)(void);

#ifdef glMatrixIndexPointerOES
#undef glMatrixIndexPointerOES
#endif
#ifdef PFNGLMATRIXINDEXPOINTEROESPROC
#undef PFNGLMATRIXINDEXPOINTEROESPROC
#endif
typedef void  (*PFNGLMATRIXINDEXPOINTEROESPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifdef glWeightPointerOES
#undef glWeightPointerOES
#endif
#ifdef PFNGLWEIGHTPOINTEROESPROC
#undef PFNGLWEIGHTPOINTEROESPROC
#endif
typedef void  (*PFNGLWEIGHTPOINTEROESPROC)(GLint size, GLenum type, GLsizei stride, const void *pointer);

#ifndef GL_MAX_VERTEX_UNITS_OES
#define GL_MAX_VERTEX_UNITS_OES 0x86A4
#endif

#ifndef GL_MAX_PALETTE_MATRICES_OES
#define GL_MAX_PALETTE_MATRICES_OES 0x8842
#endif

#ifndef GL_MATRIX_PALETTE_OES
#define GL_MATRIX_PALETTE_OES 0x8840
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_OES
#define GL_MATRIX_INDEX_ARRAY_OES 0x8844
#endif

#ifndef GL_WEIGHT_ARRAY_OES
#define GL_WEIGHT_ARRAY_OES 0x86AD
#endif

#ifndef GL_CURRENT_PALETTE_MATRIX_OES
#define GL_CURRENT_PALETTE_MATRIX_OES 0x8843
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_SIZE_OES
#define GL_MATRIX_INDEX_ARRAY_SIZE_OES 0x8846
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_TYPE_OES
#define GL_MATRIX_INDEX_ARRAY_TYPE_OES 0x8847
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_STRIDE_OES
#define GL_MATRIX_INDEX_ARRAY_STRIDE_OES 0x8848
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_POINTER_OES
#define GL_MATRIX_INDEX_ARRAY_POINTER_OES 0x8849
#endif

#ifndef GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES
#define GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES 0x8B9E
#endif

#ifndef GL_WEIGHT_ARRAY_SIZE_OES
#define GL_WEIGHT_ARRAY_SIZE_OES 0x86AB
#endif

#ifndef GL_WEIGHT_ARRAY_TYPE_OES
#define GL_WEIGHT_ARRAY_TYPE_OES 0x86A9
#endif

#ifndef GL_WEIGHT_ARRAY_STRIDE_OES
#define GL_WEIGHT_ARRAY_STRIDE_OES 0x86AA
#endif

#ifndef GL_WEIGHT_ARRAY_POINTER_OES
#define GL_WEIGHT_ARRAY_POINTER_OES 0x86AC
#endif

#ifndef GL_WEIGHT_ARRAY_BUFFER_BINDING_OES
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_OES 0x889E
#endif

#ifndef GL_OES_packed_depth_stencil
#define GL_OES_packed_depth_stencil 1
#endif

#ifndef GL_DEPTH_STENCIL_OES
#define GL_DEPTH_STENCIL_OES 0x84F9
#endif

#ifndef GL_UNSIGNED_INT_24_8_OES
#define GL_UNSIGNED_INT_24_8_OES 0x84FA
#endif

#ifndef GL_DEPTH24_STENCIL8_OES
#define GL_DEPTH24_STENCIL8_OES 0x88F0
#endif

#ifndef GL_OES_point_size_array
#define GL_OES_point_size_array 1
#endif

#ifdef glPointSizePointerOES
#undef glPointSizePointerOES
#endif
#ifdef PFNGLPOINTSIZEPOINTEROESPROC
#undef PFNGLPOINTSIZEPOINTEROESPROC
#endif
typedef void  (*PFNGLPOINTSIZEPOINTEROESPROC)(GLenum type, GLsizei stride, const void *pointer);

#ifndef GL_POINT_SIZE_ARRAY_OES
#define GL_POINT_SIZE_ARRAY_OES 0x8B9C
#endif

#ifndef GL_POINT_SIZE_ARRAY_TYPE_OES
#define GL_POINT_SIZE_ARRAY_TYPE_OES 0x898A
#endif

#ifndef GL_POINT_SIZE_ARRAY_STRIDE_OES
#define GL_POINT_SIZE_ARRAY_STRIDE_OES 0x898B
#endif

#ifndef GL_POINT_SIZE_ARRAY_POINTER_OES
#define GL_POINT_SIZE_ARRAY_POINTER_OES 0x898C
#endif

#ifndef GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES
#define GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES 0x8B9F
#endif

#ifndef GL_OES_point_sprite
#define GL_OES_point_sprite 1
#endif

#ifndef GL_POINT_SPRITE_OES
#define GL_POINT_SPRITE_OES 0x8861
#endif

#ifndef GL_COORD_REPLACE_OES
#define GL_COORD_REPLACE_OES 0x8862
#endif

#ifndef GL_OES_primitive_bounding_box
#define GL_OES_primitive_bounding_box 1
#endif

#ifdef glPrimitiveBoundingBoxOES
#undef glPrimitiveBoundingBoxOES
#endif
#ifdef PFNGLPRIMITIVEBOUNDINGBOXOESPROC
#undef PFNGLPRIMITIVEBOUNDINGBOXOESPROC
#endif
typedef void  (*PFNGLPRIMITIVEBOUNDINGBOXOESPROC)(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);

#ifndef GL_PRIMITIVE_BOUNDING_BOX_OES
#define GL_PRIMITIVE_BOUNDING_BOX_OES 0x92BE
#endif

#ifndef GL_OES_query_matrix
#define GL_OES_query_matrix 1
#endif

#ifdef glQueryMatrixxOES
#undef glQueryMatrixxOES
#endif
#ifdef PFNGLQUERYMATRIXXOESPROC
#undef PFNGLQUERYMATRIXXOESPROC
#endif
typedef GLbitfield  (*PFNGLQUERYMATRIXXOESPROC)(GLfixed *mantissa, GLint *exponent);

#ifndef GL_OES_read_format
#define GL_OES_read_format 1
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_TYPE_OES
#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
#endif

#ifndef GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
#endif

#ifndef GL_OES_required_internalformat
#define GL_OES_required_internalformat 1
#endif

#ifndef GL_ALPHA8_OES
#define GL_ALPHA8_OES 0x803C
#endif

#ifndef GL_DEPTH_COMPONENT16_OES
#define GL_DEPTH_COMPONENT16_OES 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24_OES
#define GL_DEPTH_COMPONENT24_OES 0x81A6
#endif

#ifndef GL_DEPTH24_STENCIL8_OES
#define GL_DEPTH24_STENCIL8_OES 0x88F0
#endif

#ifndef GL_DEPTH_COMPONENT32_OES
#define GL_DEPTH_COMPONENT32_OES 0x81A7
#endif

#ifndef GL_LUMINANCE4_ALPHA4_OES
#define GL_LUMINANCE4_ALPHA4_OES 0x8043
#endif

#ifndef GL_LUMINANCE8_ALPHA8_OES
#define GL_LUMINANCE8_ALPHA8_OES 0x8045
#endif

#ifndef GL_LUMINANCE8_OES
#define GL_LUMINANCE8_OES 0x8040
#endif

#ifndef GL_RGBA4_OES
#define GL_RGBA4_OES 0x8056
#endif

#ifndef GL_RGB5_A1_OES
#define GL_RGB5_A1_OES 0x8057
#endif

#ifndef GL_RGB565_OES
#define GL_RGB565_OES 0x8D62
#endif

#ifndef GL_RGB8_OES
#define GL_RGB8_OES 0x8051
#endif

#ifndef GL_RGBA8_OES
#define GL_RGBA8_OES 0x8058
#endif

#ifndef GL_RGB10_EXT
#define GL_RGB10_EXT 0x8052
#endif

#ifndef GL_RGB10_A2_EXT
#define GL_RGB10_A2_EXT 0x8059
#endif

#ifndef GL_OES_rgb8_rgba8
#define GL_OES_rgb8_rgba8 1
#endif

#ifndef GL_RGB8_OES
#define GL_RGB8_OES 0x8051
#endif

#ifndef GL_RGBA8_OES
#define GL_RGBA8_OES 0x8058
#endif

#ifndef GL_OES_sample_shading
#define GL_OES_sample_shading 1
#endif

#ifdef glMinSampleShadingOES
#undef glMinSampleShadingOES
#endif
#ifdef PFNGLMINSAMPLESHADINGOESPROC
#undef PFNGLMINSAMPLESHADINGOESPROC
#endif
typedef void  (*PFNGLMINSAMPLESHADINGOESPROC)(GLfloat value);

#ifndef GL_SAMPLE_SHADING_OES
#define GL_SAMPLE_SHADING_OES 0x8C36
#endif

#ifndef GL_MIN_SAMPLE_SHADING_VALUE_OES
#define GL_MIN_SAMPLE_SHADING_VALUE_OES 0x8C37
#endif

#ifndef GL_OES_sample_variables
#define GL_OES_sample_variables 1
#endif

#ifndef GL_OES_shader_image_atomic
#define GL_OES_shader_image_atomic 1
#endif

#ifndef GL_OES_shader_io_blocks
#define GL_OES_shader_io_blocks 1
#endif

#ifndef GL_OES_shader_multisample_interpolation
#define GL_OES_shader_multisample_interpolation 1
#endif

#ifndef GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES 0x8E5B
#endif

#ifndef GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES 0x8E5C
#endif

#ifndef GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES 0x8E5D
#endif

#ifndef GL_OES_single_precision
#define GL_OES_single_precision 1
#endif

#ifdef glClearDepthfOES
#undef glClearDepthfOES
#endif
#ifdef PFNGLCLEARDEPTHFOESPROC
#undef PFNGLCLEARDEPTHFOESPROC
#endif
typedef void  (*PFNGLCLEARDEPTHFOESPROC)(GLclampf depth);

#ifdef glClipPlanefOES
#undef glClipPlanefOES
#endif
#ifdef PFNGLCLIPPLANEFOESPROC
#undef PFNGLCLIPPLANEFOESPROC
#endif
typedef void  (*PFNGLCLIPPLANEFOESPROC)(GLenum plane, const GLfloat *equation);

#ifdef glDepthRangefOES
#undef glDepthRangefOES
#endif
#ifdef PFNGLDEPTHRANGEFOESPROC
#undef PFNGLDEPTHRANGEFOESPROC
#endif
typedef void  (*PFNGLDEPTHRANGEFOESPROC)(GLclampf n, GLclampf f);

#ifdef glFrustumfOES
#undef glFrustumfOES
#endif
#ifdef PFNGLFRUSTUMFOESPROC
#undef PFNGLFRUSTUMFOESPROC
#endif
typedef void  (*PFNGLFRUSTUMFOESPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);

#ifdef glGetClipPlanefOES
#undef glGetClipPlanefOES
#endif
#ifdef PFNGLGETCLIPPLANEFOESPROC
#undef PFNGLGETCLIPPLANEFOESPROC
#endif
typedef void  (*PFNGLGETCLIPPLANEFOESPROC)(GLenum plane, GLfloat *equation);

#ifdef glOrthofOES
#undef glOrthofOES
#endif
#ifdef PFNGLORTHOFOESPROC
#undef PFNGLORTHOFOESPROC
#endif
typedef void  (*PFNGLORTHOFOESPROC)(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);

#ifndef GL_OES_standard_derivatives
#define GL_OES_standard_derivatives 1
#endif

#ifndef GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES 0x8B8B
#endif

#ifndef GL_OES_stencil1
#define GL_OES_stencil1 1
#endif

#ifndef GL_STENCIL_INDEX1_OES
#define GL_STENCIL_INDEX1_OES 0x8D46
#endif

#ifndef GL_OES_stencil4
#define GL_OES_stencil4 1
#endif

#ifndef GL_STENCIL_INDEX4_OES
#define GL_STENCIL_INDEX4_OES 0x8D47
#endif

#ifndef GL_OES_stencil8
#define GL_OES_stencil8 1
#endif

#ifndef GL_STENCIL_INDEX8_OES
#define GL_STENCIL_INDEX8_OES 0x8D48
#endif

#ifndef GL_OES_stencil_wrap
#define GL_OES_stencil_wrap 1
#endif

#ifndef GL_INCR_WRAP_OES
#define GL_INCR_WRAP_OES 0x8507
#endif

#ifndef GL_DECR_WRAP_OES
#define GL_DECR_WRAP_OES 0x8508
#endif

#ifndef GL_OES_surfaceless_context
#define GL_OES_surfaceless_context 1
#endif

#ifndef GL_FRAMEBUFFER_UNDEFINED_OES
#define GL_FRAMEBUFFER_UNDEFINED_OES 0x8219
#endif

#ifndef GL_OES_tessellation_shader
#define GL_OES_tessellation_shader 1
#endif

#ifdef glPatchParameteriOES
#undef glPatchParameteriOES
#endif
#ifdef PFNGLPATCHPARAMETERIOESPROC
#undef PFNGLPATCHPARAMETERIOESPROC
#endif
typedef void  (*PFNGLPATCHPARAMETERIOESPROC)(GLenum pname, GLint value);

#ifndef GL_PATCHES_OES
#define GL_PATCHES_OES 0x000E
#endif

#ifndef GL_PATCH_VERTICES_OES
#define GL_PATCH_VERTICES_OES 0x8E72
#endif

#ifndef GL_TESS_CONTROL_OUTPUT_VERTICES_OES
#define GL_TESS_CONTROL_OUTPUT_VERTICES_OES 0x8E75
#endif

#ifndef GL_TESS_GEN_MODE_OES
#define GL_TESS_GEN_MODE_OES 0x8E76
#endif

#ifndef GL_TESS_GEN_SPACING_OES
#define GL_TESS_GEN_SPACING_OES 0x8E77
#endif

#ifndef GL_TESS_GEN_VERTEX_ORDER_OES
#define GL_TESS_GEN_VERTEX_ORDER_OES 0x8E78
#endif

#ifndef GL_TESS_GEN_POINT_MODE_OES
#define GL_TESS_GEN_POINT_MODE_OES 0x8E79
#endif

#ifndef GL_TRIANGLES
#define GL_TRIANGLES 0x0004
#endif

#ifndef GL_ISOLINES_OES
#define GL_ISOLINES_OES 0x8E7A
#endif

#ifndef GL_QUADS_OES
#define GL_QUADS_OES 0x0007
#endif

#ifndef GL_EQUAL
#define GL_EQUAL 0x0202
#endif

#ifndef GL_FRACTIONAL_ODD_OES
#define GL_FRACTIONAL_ODD_OES 0x8E7B
#endif

#ifndef GL_FRACTIONAL_EVEN_OES
#define GL_FRACTIONAL_EVEN_OES 0x8E7C
#endif

#ifndef GL_CCW
#define GL_CCW 0x0901
#endif

#ifndef GL_CW
#define GL_CW 0x0900
#endif

#ifndef GL_MAX_PATCH_VERTICES_OES
#define GL_MAX_PATCH_VERTICES_OES 0x8E7D
#endif

#ifndef GL_MAX_TESS_GEN_LEVEL_OES
#define GL_MAX_TESS_GEN_LEVEL_OES 0x8E7E
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E7F
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E80
#endif

#ifndef GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES 0x8E81
#endif

#ifndef GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES 0x8E82
#endif

#ifndef GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES 0x8E83
#endif

#ifndef GL_MAX_TESS_PATCH_COMPONENTS_OES
#define GL_MAX_TESS_PATCH_COMPONENTS_OES 0x8E84
#endif

#ifndef GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES 0x8E85
#endif

#ifndef GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES 0x8E86
#endif

#ifndef GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES 0x8E89
#endif

#ifndef GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES 0x8E8A
#endif

#ifndef GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES 0x886C
#endif

#ifndef GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES 0x886D
#endif

#ifndef GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E1E
#endif

#ifndef GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E1F
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES 0x92CD
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES 0x92CE
#endif

#ifndef GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES 0x92D3
#endif

#ifndef GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES 0x92D4
#endif

#ifndef GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES 0x90CB
#endif

#ifndef GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES 0x90CC
#endif

#ifndef GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES 0x90D8
#endif

#ifndef GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES 0x90D9
#endif

#ifndef GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES 0x8221
#endif

#ifndef GL_IS_PER_PATCH_OES
#define GL_IS_PER_PATCH_OES 0x92E7
#endif

#ifndef GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES 0x9307
#endif

#ifndef GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES 0x9308
#endif

#ifndef GL_TESS_CONTROL_SHADER_OES
#define GL_TESS_CONTROL_SHADER_OES 0x8E88
#endif

#ifndef GL_TESS_EVALUATION_SHADER_OES
#define GL_TESS_EVALUATION_SHADER_OES 0x8E87
#endif

#ifndef GL_TESS_CONTROL_SHADER_BIT_OES
#define GL_TESS_CONTROL_SHADER_BIT_OES 0x00000008
#endif

#ifndef GL_TESS_EVALUATION_SHADER_BIT_OES
#define GL_TESS_EVALUATION_SHADER_BIT_OES 0x00000010
#endif

#ifndef GL_OES_tessellation_point_size
#define GL_OES_tessellation_point_size 1
#endif

#ifndef GL_OES_texture_3D
#define GL_OES_texture_3D 1
#endif

#ifdef glTexImage3DOES
#undef glTexImage3DOES
#endif
#ifdef PFNGLTEXIMAGE3DOESPROC
#undef PFNGLTEXIMAGE3DOESPROC
#endif
typedef void  (*PFNGLTEXIMAGE3DOESPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTexSubImage3DOES
#undef glTexSubImage3DOES
#endif
#ifdef PFNGLTEXSUBIMAGE3DOESPROC
#undef PFNGLTEXSUBIMAGE3DOESPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE3DOESPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);

#ifdef glCopyTexSubImage3DOES
#undef glCopyTexSubImage3DOES
#endif
#ifdef PFNGLCOPYTEXSUBIMAGE3DOESPROC
#undef PFNGLCOPYTEXSUBIMAGE3DOESPROC
#endif
typedef void  (*PFNGLCOPYTEXSUBIMAGE3DOESPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);

#ifdef glCompressedTexImage3DOES
#undef glCompressedTexImage3DOES
#endif
#ifdef PFNGLCOMPRESSEDTEXIMAGE3DOESPROC
#undef PFNGLCOMPRESSEDTEXIMAGE3DOESPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXIMAGE3DOESPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);

#ifdef glCompressedTexSubImage3DOES
#undef glCompressedTexSubImage3DOES
#endif
#ifdef PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC
#undef PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC
#endif
typedef void  (*PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);

#ifdef glFramebufferTexture3DOES
#undef glFramebufferTexture3DOES
#endif
#ifdef PFNGLFRAMEBUFFERTEXTURE3DOESPROC
#undef PFNGLFRAMEBUFFERTEXTURE3DOESPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTURE3DOESPROC)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);

#ifndef GL_TEXTURE_WRAP_R_OES
#define GL_TEXTURE_WRAP_R_OES 0x8072
#endif

#ifndef GL_TEXTURE_3D_OES
#define GL_TEXTURE_3D_OES 0x806F
#endif

#ifndef GL_TEXTURE_BINDING_3D_OES
#define GL_TEXTURE_BINDING_3D_OES 0x806A
#endif

#ifndef GL_MAX_3D_TEXTURE_SIZE_OES
#define GL_MAX_3D_TEXTURE_SIZE_OES 0x8073
#endif

#ifndef GL_SAMPLER_3D_OES
#define GL_SAMPLER_3D_OES 0x8B5F
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES 0x8CD4
#endif

#ifndef GL_OES_texture_border_clamp
#define GL_OES_texture_border_clamp 1
#endif

#ifdef glTexParameterIivOES
#undef glTexParameterIivOES
#endif
#ifdef PFNGLTEXPARAMETERIIVOESPROC
#undef PFNGLTEXPARAMETERIIVOESPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIIVOESPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glTexParameterIuivOES
#undef glTexParameterIuivOES
#endif
#ifdef PFNGLTEXPARAMETERIUIVOESPROC
#undef PFNGLTEXPARAMETERIUIVOESPROC
#endif
typedef void  (*PFNGLTEXPARAMETERIUIVOESPROC)(GLenum target, GLenum pname, const GLuint *params);

#ifdef glGetTexParameterIivOES
#undef glGetTexParameterIivOES
#endif
#ifdef PFNGLGETTEXPARAMETERIIVOESPROC
#undef PFNGLGETTEXPARAMETERIIVOESPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIIVOESPROC)(GLenum target, GLenum pname, GLint *params);

#ifdef glGetTexParameterIuivOES
#undef glGetTexParameterIuivOES
#endif
#ifdef PFNGLGETTEXPARAMETERIUIVOESPROC
#undef PFNGLGETTEXPARAMETERIUIVOESPROC
#endif
typedef void  (*PFNGLGETTEXPARAMETERIUIVOESPROC)(GLenum target, GLenum pname, GLuint *params);

#ifdef glSamplerParameterIivOES
#undef glSamplerParameterIivOES
#endif
#ifdef PFNGLSAMPLERPARAMETERIIVOESPROC
#undef PFNGLSAMPLERPARAMETERIIVOESPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIIVOESPROC)(GLuint sampler, GLenum pname, const GLint *param);

#ifdef glSamplerParameterIuivOES
#undef glSamplerParameterIuivOES
#endif
#ifdef PFNGLSAMPLERPARAMETERIUIVOESPROC
#undef PFNGLSAMPLERPARAMETERIUIVOESPROC
#endif
typedef void  (*PFNGLSAMPLERPARAMETERIUIVOESPROC)(GLuint sampler, GLenum pname, const GLuint *param);

#ifdef glGetSamplerParameterIivOES
#undef glGetSamplerParameterIivOES
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIIVOESPROC
#undef PFNGLGETSAMPLERPARAMETERIIVOESPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIIVOESPROC)(GLuint sampler, GLenum pname, GLint *params);

#ifdef glGetSamplerParameterIuivOES
#undef glGetSamplerParameterIuivOES
#endif
#ifdef PFNGLGETSAMPLERPARAMETERIUIVOESPROC
#undef PFNGLGETSAMPLERPARAMETERIUIVOESPROC
#endif
typedef void  (*PFNGLGETSAMPLERPARAMETERIUIVOESPROC)(GLuint sampler, GLenum pname, GLuint *params);

#ifndef GL_TEXTURE_BORDER_COLOR_OES
#define GL_TEXTURE_BORDER_COLOR_OES 0x1004
#endif

#ifndef GL_CLAMP_TO_BORDER_OES
#define GL_CLAMP_TO_BORDER_OES 0x812D
#endif

#ifndef GL_OES_texture_buffer
#define GL_OES_texture_buffer 1
#endif

#ifdef glTexBufferOES
#undef glTexBufferOES
#endif
#ifdef PFNGLTEXBUFFEROESPROC
#undef PFNGLTEXBUFFEROESPROC
#endif
typedef void  (*PFNGLTEXBUFFEROESPROC)(GLenum target, GLenum internalformat, GLuint buffer);

#ifdef glTexBufferRangeOES
#undef glTexBufferRangeOES
#endif
#ifdef PFNGLTEXBUFFERRANGEOESPROC
#undef PFNGLTEXBUFFERRANGEOESPROC
#endif
typedef void  (*PFNGLTEXBUFFERRANGEOESPROC)(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);

#ifndef GL_TEXTURE_BUFFER_OES
#define GL_TEXTURE_BUFFER_OES 0x8C2A
#endif

#ifndef GL_TEXTURE_BUFFER_BINDING_OES
#define GL_TEXTURE_BUFFER_BINDING_OES 0x8C2A
#endif

#ifndef GL_MAX_TEXTURE_BUFFER_SIZE_OES
#define GL_MAX_TEXTURE_BUFFER_SIZE_OES 0x8C2B
#endif

#ifndef GL_TEXTURE_BINDING_BUFFER_OES
#define GL_TEXTURE_BINDING_BUFFER_OES 0x8C2C
#endif

#ifndef GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES 0x8C2D
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES 0x919F
#endif

#ifndef GL_SAMPLER_BUFFER_OES
#define GL_SAMPLER_BUFFER_OES 0x8DC2
#endif

#ifndef GL_INT_SAMPLER_BUFFER_OES
#define GL_INT_SAMPLER_BUFFER_OES 0x8DD0
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_BUFFER_OES
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_OES 0x8DD8
#endif

#ifndef GL_IMAGE_BUFFER_OES
#define GL_IMAGE_BUFFER_OES 0x9051
#endif

#ifndef GL_INT_IMAGE_BUFFER_OES
#define GL_INT_IMAGE_BUFFER_OES 0x905C
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_BUFFER_OES
#define GL_UNSIGNED_INT_IMAGE_BUFFER_OES 0x9067
#endif

#ifndef GL_TEXTURE_BUFFER_OFFSET_OES
#define GL_TEXTURE_BUFFER_OFFSET_OES 0x919D
#endif

#ifndef GL_TEXTURE_BUFFER_SIZE_OES
#define GL_TEXTURE_BUFFER_SIZE_OES 0x919E
#endif

#ifndef GL_OES_texture_compression_astc
#define GL_OES_texture_compression_astc 1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_4x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x4_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_8x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x5_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x6_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x8_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_10x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x10_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_12x12_KHR
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_3x3x3_OES
#define GL_COMPRESSED_RGBA_ASTC_3x3x3_OES 0x93C0
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_4x3x3_OES
#define GL_COMPRESSED_RGBA_ASTC_4x3x3_OES 0x93C1
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_4x4x3_OES
#define GL_COMPRESSED_RGBA_ASTC_4x4x3_OES 0x93C2
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_4x4x4_OES
#define GL_COMPRESSED_RGBA_ASTC_4x4x4_OES 0x93C3
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x4x4_OES
#define GL_COMPRESSED_RGBA_ASTC_5x4x4_OES 0x93C4
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x5x4_OES
#define GL_COMPRESSED_RGBA_ASTC_5x5x4_OES 0x93C5
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_5x5x5_OES
#define GL_COMPRESSED_RGBA_ASTC_5x5x5_OES 0x93C6
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x5x5_OES
#define GL_COMPRESSED_RGBA_ASTC_6x5x5_OES 0x93C7
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x6x5_OES
#define GL_COMPRESSED_RGBA_ASTC_6x6x5_OES 0x93C8
#endif

#ifndef GL_COMPRESSED_RGBA_ASTC_6x6x6_OES
#define GL_COMPRESSED_RGBA_ASTC_6x6x6_OES 0x93C9
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES 0x93E0
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES 0x93E1
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES 0x93E2
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES 0x93E3
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES 0x93E4
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES 0x93E5
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES 0x93E6
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES 0x93E7
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES 0x93E8
#endif

#ifndef GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES 0x93E9
#endif

#ifndef GL_OES_texture_cube_map
#define GL_OES_texture_cube_map 1
#endif

#ifdef glTexGenfOES
#undef glTexGenfOES
#endif
#ifdef PFNGLTEXGENFOESPROC
#undef PFNGLTEXGENFOESPROC
#endif
typedef void  (*PFNGLTEXGENFOESPROC)(GLenum coord, GLenum pname, GLfloat param);

#ifdef glTexGenfvOES
#undef glTexGenfvOES
#endif
#ifdef PFNGLTEXGENFVOESPROC
#undef PFNGLTEXGENFVOESPROC
#endif
typedef void  (*PFNGLTEXGENFVOESPROC)(GLenum coord, GLenum pname, const GLfloat *params);

#ifdef glTexGeniOES
#undef glTexGeniOES
#endif
#ifdef PFNGLTEXGENIOESPROC
#undef PFNGLTEXGENIOESPROC
#endif
typedef void  (*PFNGLTEXGENIOESPROC)(GLenum coord, GLenum pname, GLint param);

#ifdef glTexGenivOES
#undef glTexGenivOES
#endif
#ifdef PFNGLTEXGENIVOESPROC
#undef PFNGLTEXGENIVOESPROC
#endif
typedef void  (*PFNGLTEXGENIVOESPROC)(GLenum coord, GLenum pname, const GLint *params);

#ifdef glTexGenxOES
#undef glTexGenxOES
#endif
#ifdef PFNGLTEXGENXOESPROC
#undef PFNGLTEXGENXOESPROC
#endif
typedef void  (*PFNGLTEXGENXOESPROC)(GLenum coord, GLenum pname, GLfixed param);

#ifdef glTexGenxvOES
#undef glTexGenxvOES
#endif
#ifdef PFNGLTEXGENXVOESPROC
#undef PFNGLTEXGENXVOESPROC
#endif
typedef void  (*PFNGLTEXGENXVOESPROC)(GLenum coord, GLenum pname, const GLfixed *params);

#ifdef glGetTexGenfvOES
#undef glGetTexGenfvOES
#endif
#ifdef PFNGLGETTEXGENFVOESPROC
#undef PFNGLGETTEXGENFVOESPROC
#endif
typedef void  (*PFNGLGETTEXGENFVOESPROC)(GLenum coord, GLenum pname, GLfloat *params);

#ifdef glGetTexGenivOES
#undef glGetTexGenivOES
#endif
#ifdef PFNGLGETTEXGENIVOESPROC
#undef PFNGLGETTEXGENIVOESPROC
#endif
typedef void  (*PFNGLGETTEXGENIVOESPROC)(GLenum coord, GLenum pname, GLint *params);

#ifdef glGetTexGenxvOES
#undef glGetTexGenxvOES
#endif
#ifdef PFNGLGETTEXGENXVOESPROC
#undef PFNGLGETTEXGENXVOESPROC
#endif
typedef void  (*PFNGLGETTEXGENXVOESPROC)(GLenum coord, GLenum pname, GLfixed *params);

#ifndef GL_NORMAL_MAP_OES
#define GL_NORMAL_MAP_OES 0x8511
#endif

#ifndef GL_REFLECTION_MAP_OES
#define GL_REFLECTION_MAP_OES 0x8512
#endif

#ifndef GL_TEXTURE_CUBE_MAP_OES
#define GL_TEXTURE_CUBE_MAP_OES 0x8513
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_OES
#define GL_TEXTURE_BINDING_CUBE_MAP_OES 0x8514
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES 0x8515
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES 0x8516
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES 0x8517
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES 0x8518
#endif

#ifndef GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES 0x8519
#endif

#ifndef GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES 0x851A
#endif

#ifndef GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES 0x851C
#endif

#ifndef GL_TEXTURE_GEN_MODE_OES
#define GL_TEXTURE_GEN_MODE_OES 0x2500
#endif

#ifndef GL_TEXTURE_GEN_STR_OES
#define GL_TEXTURE_GEN_STR_OES 0x8D60
#endif

#ifndef GL_OES_texture_cube_map_array
#define GL_OES_texture_cube_map_array 1
#endif

#ifndef GL_TEXTURE_CUBE_MAP_ARRAY_OES
#define GL_TEXTURE_CUBE_MAP_ARRAY_OES 0x9009
#endif

#ifndef GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES 0x900A
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_OES
#define GL_SAMPLER_CUBE_MAP_ARRAY_OES 0x900C
#endif

#ifndef GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES 0x900D
#endif

#ifndef GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES 0x900E
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES 0x900F
#endif

#ifndef GL_IMAGE_CUBE_MAP_ARRAY_OES
#define GL_IMAGE_CUBE_MAP_ARRAY_OES 0x9054
#endif

#ifndef GL_INT_IMAGE_CUBE_MAP_ARRAY_OES
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_OES 0x905F
#endif

#ifndef GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES 0x906A
#endif

#ifndef GL_OES_texture_env_crossbar
#define GL_OES_texture_env_crossbar 1
#endif

#ifndef GL_OES_texture_float
#define GL_OES_texture_float 1
#endif

#ifndef GL_FLOAT
#define GL_FLOAT 0x1406
#endif

#ifndef GL_OES_texture_float_linear
#define GL_OES_texture_float_linear 1
#endif

#ifndef GL_OES_texture_half_float
#define GL_OES_texture_half_float 1
#endif

#ifndef GL_HALF_FLOAT_OES
#define GL_HALF_FLOAT_OES 0x8D61
#endif

#ifndef GL_OES_texture_half_float_linear
#define GL_OES_texture_half_float_linear 1
#endif

#ifndef GL_OES_texture_mirrored_repeat
#define GL_OES_texture_mirrored_repeat 1
#endif

#ifndef GL_MIRRORED_REPEAT_OES
#define GL_MIRRORED_REPEAT_OES 0x8370
#endif

#ifndef GL_OES_texture_npot
#define GL_OES_texture_npot 1
#endif

#ifndef GL_OES_texture_stencil8
#define GL_OES_texture_stencil8 1
#endif

#ifndef GL_STENCIL_INDEX_OES
#define GL_STENCIL_INDEX_OES 0x1901
#endif

#ifndef GL_STENCIL_INDEX8_OES
#define GL_STENCIL_INDEX8_OES 0x8D48
#endif

#ifndef GL_OES_texture_storage_multisample_2d_array
#define GL_OES_texture_storage_multisample_2d_array 1
#endif

#ifdef glTexStorage3DMultisampleOES
#undef glTexStorage3DMultisampleOES
#endif
#ifdef PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC
#undef PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC
#endif
typedef void  (*PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);

#ifndef GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES 0x9102
#endif

#ifndef GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES 0x9105
#endif

#ifndef GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910B
#endif

#ifndef GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910C
#endif

#ifndef GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910D
#endif

#ifndef GL_OES_texture_view
#define GL_OES_texture_view 1
#endif

#ifdef glTextureViewOES
#undef glTextureViewOES
#endif
#ifdef PFNGLTEXTUREVIEWOESPROC
#undef PFNGLTEXTUREVIEWOESPROC
#endif
typedef void  (*PFNGLTEXTUREVIEWOESPROC)(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);

#ifndef GL_TEXTURE_VIEW_MIN_LEVEL_OES
#define GL_TEXTURE_VIEW_MIN_LEVEL_OES 0x82DB
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LEVELS_OES
#define GL_TEXTURE_VIEW_NUM_LEVELS_OES 0x82DC
#endif

#ifndef GL_TEXTURE_VIEW_MIN_LAYER_OES
#define GL_TEXTURE_VIEW_MIN_LAYER_OES 0x82DD
#endif

#ifndef GL_TEXTURE_VIEW_NUM_LAYERS_OES
#define GL_TEXTURE_VIEW_NUM_LAYERS_OES 0x82DE
#endif

#ifndef GL_TEXTURE_IMMUTABLE_LEVELS
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#endif

#ifndef GL_OES_vertex_array_object
#define GL_OES_vertex_array_object 1
#endif

#ifdef glBindVertexArrayOES
#undef glBindVertexArrayOES
#endif
#ifdef PFNGLBINDVERTEXARRAYOESPROC
#undef PFNGLBINDVERTEXARRAYOESPROC
#endif
typedef void  (*PFNGLBINDVERTEXARRAYOESPROC)(GLuint array);

#ifdef glDeleteVertexArraysOES
#undef glDeleteVertexArraysOES
#endif
#ifdef PFNGLDELETEVERTEXARRAYSOESPROC
#undef PFNGLDELETEVERTEXARRAYSOESPROC
#endif
typedef void  (*PFNGLDELETEVERTEXARRAYSOESPROC)(GLsizei n, const GLuint *arrays);

#ifdef glGenVertexArraysOES
#undef glGenVertexArraysOES
#endif
#ifdef PFNGLGENVERTEXARRAYSOESPROC
#undef PFNGLGENVERTEXARRAYSOESPROC
#endif
typedef void  (*PFNGLGENVERTEXARRAYSOESPROC)(GLsizei n, GLuint *arrays);

#ifdef glIsVertexArrayOES
#undef glIsVertexArrayOES
#endif
#ifdef PFNGLISVERTEXARRAYOESPROC
#undef PFNGLISVERTEXARRAYOESPROC
#endif
typedef GLboolean  (*PFNGLISVERTEXARRAYOESPROC)(GLuint array);

#ifndef GL_VERTEX_ARRAY_BINDING_OES
#define GL_VERTEX_ARRAY_BINDING_OES 0x85B5
#endif

#ifndef GL_OES_vertex_half_float
#define GL_OES_vertex_half_float 1
#endif

#ifndef GL_HALF_FLOAT_OES
#define GL_HALF_FLOAT_OES 0x8D61
#endif

#ifndef GL_OES_vertex_type_10_10_10_2
#define GL_OES_vertex_type_10_10_10_2 1
#endif

#ifndef GL_UNSIGNED_INT_10_10_10_2_OES
#define GL_UNSIGNED_INT_10_10_10_2_OES 0x8DF6
#endif

#ifndef GL_INT_10_10_10_2_OES
#define GL_INT_10_10_10_2_OES 0x8DF7
#endif

#ifndef GL_OML_interlace
#define GL_OML_interlace 1
#endif

#ifndef GL_INTERLACE_OML
#define GL_INTERLACE_OML 0x8980
#endif

#ifndef GL_INTERLACE_READ_OML
#define GL_INTERLACE_READ_OML 0x8981
#endif

#ifndef GL_OML_resample
#define GL_OML_resample 1
#endif

#ifndef GL_PACK_RESAMPLE_OML
#define GL_PACK_RESAMPLE_OML 0x8984
#endif

#ifndef GL_UNPACK_RESAMPLE_OML
#define GL_UNPACK_RESAMPLE_OML 0x8985
#endif

#ifndef GL_RESAMPLE_REPLICATE_OML
#define GL_RESAMPLE_REPLICATE_OML 0x8986
#endif

#ifndef GL_RESAMPLE_ZERO_FILL_OML
#define GL_RESAMPLE_ZERO_FILL_OML 0x8987
#endif

#ifndef GL_RESAMPLE_AVERAGE_OML
#define GL_RESAMPLE_AVERAGE_OML 0x8988
#endif

#ifndef GL_RESAMPLE_DECIMATE_OML
#define GL_RESAMPLE_DECIMATE_OML 0x8989
#endif

#ifndef GL_OML_subsample
#define GL_OML_subsample 1
#endif

#ifndef GL_FORMAT_SUBSAMPLE_24_24_OML
#define GL_FORMAT_SUBSAMPLE_24_24_OML 0x8982
#endif

#ifndef GL_FORMAT_SUBSAMPLE_244_244_OML
#define GL_FORMAT_SUBSAMPLE_244_244_OML 0x8983
#endif

#ifndef GL_OVR_multiview
#define GL_OVR_multiview 1
#endif

#ifdef glFramebufferTextureMultiviewOVR
#undef glFramebufferTextureMultiviewOVR
#endif
#ifdef PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC
#undef PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC
#endif
typedef void  (*PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR 0x9630
#endif

#ifndef GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR 0x9632
#endif

#ifndef GL_MAX_VIEWS_OVR
#define GL_MAX_VIEWS_OVR 0x9631
#endif

#ifndef GL_OVR_multiview2
#define GL_OVR_multiview2 1
#endif

#ifndef GL_PGI_misc_hints
#define GL_PGI_misc_hints 1
#endif

#ifdef glHintPGI
#undef glHintPGI
#endif
#ifdef PFNGLHINTPGIPROC
#undef PFNGLHINTPGIPROC
#endif
typedef void  (*PFNGLHINTPGIPROC)(GLenum target, GLint mode);

#ifndef GL_PREFER_DOUBLEBUFFER_HINT_PGI
#define GL_PREFER_DOUBLEBUFFER_HINT_PGI 0x1A1F8
#endif

#ifndef GL_CONSERVE_MEMORY_HINT_PGI
#define GL_CONSERVE_MEMORY_HINT_PGI 0x1A1FD
#endif

#ifndef GL_RECLAIM_MEMORY_HINT_PGI
#define GL_RECLAIM_MEMORY_HINT_PGI 0x1A1FE
#endif

#ifndef GL_NATIVE_GRAPHICS_HANDLE_PGI
#define GL_NATIVE_GRAPHICS_HANDLE_PGI 0x1A202
#endif

#ifndef GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI
#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
#endif

#ifndef GL_NATIVE_GRAPHICS_END_HINT_PGI
#define GL_NATIVE_GRAPHICS_END_HINT_PGI 0x1A204
#endif

#ifndef GL_ALWAYS_FAST_HINT_PGI
#define GL_ALWAYS_FAST_HINT_PGI 0x1A20C
#endif

#ifndef GL_ALWAYS_SOFT_HINT_PGI
#define GL_ALWAYS_SOFT_HINT_PGI 0x1A20D
#endif

#ifndef GL_ALLOW_DRAW_OBJ_HINT_PGI
#define GL_ALLOW_DRAW_OBJ_HINT_PGI 0x1A20E
#endif

#ifndef GL_ALLOW_DRAW_WIN_HINT_PGI
#define GL_ALLOW_DRAW_WIN_HINT_PGI 0x1A20F
#endif

#ifndef GL_ALLOW_DRAW_FRG_HINT_PGI
#define GL_ALLOW_DRAW_FRG_HINT_PGI 0x1A210
#endif

#ifndef GL_ALLOW_DRAW_MEM_HINT_PGI
#define GL_ALLOW_DRAW_MEM_HINT_PGI 0x1A211
#endif

#ifndef GL_STRICT_DEPTHFUNC_HINT_PGI
#define GL_STRICT_DEPTHFUNC_HINT_PGI 0x1A216
#endif

#ifndef GL_STRICT_LIGHTING_HINT_PGI
#define GL_STRICT_LIGHTING_HINT_PGI 0x1A217
#endif

#ifndef GL_STRICT_SCISSOR_HINT_PGI
#define GL_STRICT_SCISSOR_HINT_PGI 0x1A218
#endif

#ifndef GL_FULL_STIPPLE_HINT_PGI
#define GL_FULL_STIPPLE_HINT_PGI 0x1A219
#endif

#ifndef GL_CLIP_NEAR_HINT_PGI
#define GL_CLIP_NEAR_HINT_PGI 0x1A220
#endif

#ifndef GL_CLIP_FAR_HINT_PGI
#define GL_CLIP_FAR_HINT_PGI 0x1A221
#endif

#ifndef GL_WIDE_LINE_HINT_PGI
#define GL_WIDE_LINE_HINT_PGI 0x1A222
#endif

#ifndef GL_BACK_NORMALS_HINT_PGI
#define GL_BACK_NORMALS_HINT_PGI 0x1A223
#endif

#ifndef GL_PGI_vertex_hints
#define GL_PGI_vertex_hints 1
#endif

#ifndef GL_VERTEX_DATA_HINT_PGI
#define GL_VERTEX_DATA_HINT_PGI 0x1A22A
#endif

#ifndef GL_VERTEX_CONSISTENT_HINT_PGI
#define GL_VERTEX_CONSISTENT_HINT_PGI 0x1A22B
#endif

#ifndef GL_MATERIAL_SIDE_HINT_PGI
#define GL_MATERIAL_SIDE_HINT_PGI 0x1A22C
#endif

#ifndef GL_MAX_VERTEX_HINT_PGI
#define GL_MAX_VERTEX_HINT_PGI 0x1A22D
#endif

#ifndef GL_COLOR3_BIT_PGI
#define GL_COLOR3_BIT_PGI 0x00010000
#endif

#ifndef GL_COLOR4_BIT_PGI
#define GL_COLOR4_BIT_PGI 0x00020000
#endif

#ifndef GL_EDGEFLAG_BIT_PGI
#define GL_EDGEFLAG_BIT_PGI 0x00040000
#endif

#ifndef GL_INDEX_BIT_PGI
#define GL_INDEX_BIT_PGI 0x00080000
#endif

#ifndef GL_MAT_AMBIENT_BIT_PGI
#define GL_MAT_AMBIENT_BIT_PGI 0x00100000
#endif

#ifndef GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI
#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
#endif

#ifndef GL_MAT_DIFFUSE_BIT_PGI
#define GL_MAT_DIFFUSE_BIT_PGI 0x00400000
#endif

#ifndef GL_MAT_EMISSION_BIT_PGI
#define GL_MAT_EMISSION_BIT_PGI 0x00800000
#endif

#ifndef GL_MAT_COLOR_INDEXES_BIT_PGI
#define GL_MAT_COLOR_INDEXES_BIT_PGI 0x01000000
#endif

#ifndef GL_MAT_SHININESS_BIT_PGI
#define GL_MAT_SHININESS_BIT_PGI 0x02000000
#endif

#ifndef GL_MAT_SPECULAR_BIT_PGI
#define GL_MAT_SPECULAR_BIT_PGI 0x04000000
#endif

#ifndef GL_NORMAL_BIT_PGI
#define GL_NORMAL_BIT_PGI 0x08000000
#endif

#ifndef GL_TEXCOORD1_BIT_PGI
#define GL_TEXCOORD1_BIT_PGI 0x10000000
#endif

#ifndef GL_TEXCOORD2_BIT_PGI
#define GL_TEXCOORD2_BIT_PGI 0x20000000
#endif

#ifndef GL_TEXCOORD3_BIT_PGI
#define GL_TEXCOORD3_BIT_PGI 0x40000000
#endif

#ifndef GL_TEXCOORD4_BIT_PGI
#define GL_TEXCOORD4_BIT_PGI 0x80000000
#endif

#ifndef GL_VERTEX23_BIT_PGI
#define GL_VERTEX23_BIT_PGI 0x00000004
#endif

#ifndef GL_VERTEX4_BIT_PGI
#define GL_VERTEX4_BIT_PGI 0x00000008
#endif

#ifndef GL_QCOM_alpha_test
#define GL_QCOM_alpha_test 1
#endif

#ifdef glAlphaFuncQCOM
#undef glAlphaFuncQCOM
#endif
#ifdef PFNGLALPHAFUNCQCOMPROC
#undef PFNGLALPHAFUNCQCOMPROC
#endif
typedef void  (*PFNGLALPHAFUNCQCOMPROC)(GLenum func, GLclampf ref);

#ifndef GL_ALPHA_TEST_QCOM
#define GL_ALPHA_TEST_QCOM 0x0BC0
#endif

#ifndef GL_ALPHA_TEST_FUNC_QCOM
#define GL_ALPHA_TEST_FUNC_QCOM 0x0BC1
#endif

#ifndef GL_ALPHA_TEST_REF_QCOM
#define GL_ALPHA_TEST_REF_QCOM 0x0BC2
#endif

#ifndef GL_QCOM_binning_control
#define GL_QCOM_binning_control 1
#endif

#ifndef GL_BINNING_CONTROL_HINT_QCOM
#define GL_BINNING_CONTROL_HINT_QCOM 0x8FB0
#endif

#ifndef GL_CPU_OPTIMIZED_QCOM
#define GL_CPU_OPTIMIZED_QCOM 0x8FB1
#endif

#ifndef GL_GPU_OPTIMIZED_QCOM
#define GL_GPU_OPTIMIZED_QCOM 0x8FB2
#endif

#ifndef GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM
#define GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM 0x8FB3
#endif

#ifndef GL_QCOM_driver_control
#define GL_QCOM_driver_control 1
#endif

#ifdef glGetDriverControlsQCOM
#undef glGetDriverControlsQCOM
#endif
#ifdef PFNGLGETDRIVERCONTROLSQCOMPROC
#undef PFNGLGETDRIVERCONTROLSQCOMPROC
#endif
typedef void  (*PFNGLGETDRIVERCONTROLSQCOMPROC)(GLint *num, GLsizei size, GLuint *driverControls);

#ifdef glGetDriverControlStringQCOM
#undef glGetDriverControlStringQCOM
#endif
#ifdef PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
#undef PFNGLGETDRIVERCONTROLSTRINGQCOMPROC
#endif
typedef void  (*PFNGLGETDRIVERCONTROLSTRINGQCOMPROC)(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);

#ifdef glEnableDriverControlQCOM
#undef glEnableDriverControlQCOM
#endif
#ifdef PFNGLENABLEDRIVERCONTROLQCOMPROC
#undef PFNGLENABLEDRIVERCONTROLQCOMPROC
#endif
typedef void  (*PFNGLENABLEDRIVERCONTROLQCOMPROC)(GLuint driverControl);

#ifdef glDisableDriverControlQCOM
#undef glDisableDriverControlQCOM
#endif
#ifdef PFNGLDISABLEDRIVERCONTROLQCOMPROC
#undef PFNGLDISABLEDRIVERCONTROLQCOMPROC
#endif
typedef void  (*PFNGLDISABLEDRIVERCONTROLQCOMPROC)(GLuint driverControl);

#ifndef GL_QCOM_extended_get
#define GL_QCOM_extended_get 1
#endif

#ifdef glExtGetTexturesQCOM
#undef glExtGetTexturesQCOM
#endif
#ifdef PFNGLEXTGETTEXTURESQCOMPROC
#undef PFNGLEXTGETTEXTURESQCOMPROC
#endif
typedef void  (*PFNGLEXTGETTEXTURESQCOMPROC)(GLuint *textures, GLint maxTextures, GLint *numTextures);

#ifdef glExtGetBuffersQCOM
#undef glExtGetBuffersQCOM
#endif
#ifdef PFNGLEXTGETBUFFERSQCOMPROC
#undef PFNGLEXTGETBUFFERSQCOMPROC
#endif
typedef void  (*PFNGLEXTGETBUFFERSQCOMPROC)(GLuint *buffers, GLint maxBuffers, GLint *numBuffers);

#ifdef glExtGetRenderbuffersQCOM
#undef glExtGetRenderbuffersQCOM
#endif
#ifdef PFNGLEXTGETRENDERBUFFERSQCOMPROC
#undef PFNGLEXTGETRENDERBUFFERSQCOMPROC
#endif
typedef void  (*PFNGLEXTGETRENDERBUFFERSQCOMPROC)(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);

#ifdef glExtGetFramebuffersQCOM
#undef glExtGetFramebuffersQCOM
#endif
#ifdef PFNGLEXTGETFRAMEBUFFERSQCOMPROC
#undef PFNGLEXTGETFRAMEBUFFERSQCOMPROC
#endif
typedef void  (*PFNGLEXTGETFRAMEBUFFERSQCOMPROC)(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);

#ifdef glExtGetTexLevelParameterivQCOM
#undef glExtGetTexLevelParameterivQCOM
#endif
#ifdef PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
#undef PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC
#endif
typedef void  (*PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC)(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);

#ifdef glExtTexObjectStateOverrideiQCOM
#undef glExtTexObjectStateOverrideiQCOM
#endif
#ifdef PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
#undef PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC
#endif
typedef void  (*PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC)(GLenum target, GLenum pname, GLint param);

#ifdef glExtGetTexSubImageQCOM
#undef glExtGetTexSubImageQCOM
#endif
#ifdef PFNGLEXTGETTEXSUBIMAGEQCOMPROC
#undef PFNGLEXTGETTEXSUBIMAGEQCOMPROC
#endif
typedef void  (*PFNGLEXTGETTEXSUBIMAGEQCOMPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels);

#ifdef glExtGetBufferPointervQCOM
#undef glExtGetBufferPointervQCOM
#endif
#ifdef PFNGLEXTGETBUFFERPOINTERVQCOMPROC
#undef PFNGLEXTGETBUFFERPOINTERVQCOMPROC
#endif
typedef void  (*PFNGLEXTGETBUFFERPOINTERVQCOMPROC)(GLenum target, void **params);

#ifndef GL_TEXTURE_WIDTH_QCOM
#define GL_TEXTURE_WIDTH_QCOM 0x8BD2
#endif

#ifndef GL_TEXTURE_HEIGHT_QCOM
#define GL_TEXTURE_HEIGHT_QCOM 0x8BD3
#endif

#ifndef GL_TEXTURE_DEPTH_QCOM
#define GL_TEXTURE_DEPTH_QCOM 0x8BD4
#endif

#ifndef GL_TEXTURE_INTERNAL_FORMAT_QCOM
#define GL_TEXTURE_INTERNAL_FORMAT_QCOM 0x8BD5
#endif

#ifndef GL_TEXTURE_FORMAT_QCOM
#define GL_TEXTURE_FORMAT_QCOM 0x8BD6
#endif

#ifndef GL_TEXTURE_TYPE_QCOM
#define GL_TEXTURE_TYPE_QCOM 0x8BD7
#endif

#ifndef GL_TEXTURE_IMAGE_VALID_QCOM
#define GL_TEXTURE_IMAGE_VALID_QCOM 0x8BD8
#endif

#ifndef GL_TEXTURE_NUM_LEVELS_QCOM
#define GL_TEXTURE_NUM_LEVELS_QCOM 0x8BD9
#endif

#ifndef GL_TEXTURE_TARGET_QCOM
#define GL_TEXTURE_TARGET_QCOM 0x8BDA
#endif

#ifndef GL_TEXTURE_OBJECT_VALID_QCOM
#define GL_TEXTURE_OBJECT_VALID_QCOM 0x8BDB
#endif

#ifndef GL_STATE_RESTORE
#define GL_STATE_RESTORE 0x8BDC
#endif

#ifndef GL_QCOM_extended_get2
#define GL_QCOM_extended_get2 1
#endif

#ifdef glExtGetShadersQCOM
#undef glExtGetShadersQCOM
#endif
#ifdef PFNGLEXTGETSHADERSQCOMPROC
#undef PFNGLEXTGETSHADERSQCOMPROC
#endif
typedef void  (*PFNGLEXTGETSHADERSQCOMPROC)(GLuint *shaders, GLint maxShaders, GLint *numShaders);

#ifdef glExtGetProgramsQCOM
#undef glExtGetProgramsQCOM
#endif
#ifdef PFNGLEXTGETPROGRAMSQCOMPROC
#undef PFNGLEXTGETPROGRAMSQCOMPROC
#endif
typedef void  (*PFNGLEXTGETPROGRAMSQCOMPROC)(GLuint *programs, GLint maxPrograms, GLint *numPrograms);

#ifdef glExtIsProgramBinaryQCOM
#undef glExtIsProgramBinaryQCOM
#endif
#ifdef PFNGLEXTISPROGRAMBINARYQCOMPROC
#undef PFNGLEXTISPROGRAMBINARYQCOMPROC
#endif
typedef GLboolean  (*PFNGLEXTISPROGRAMBINARYQCOMPROC)(GLuint program);

#ifdef glExtGetProgramBinarySourceQCOM
#undef glExtGetProgramBinarySourceQCOM
#endif
#ifdef PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
#undef PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC
#endif
typedef void  (*PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC)(GLuint program, GLenum shadertype, GLchar *source, GLint *length);

#ifndef GL_QCOM_perfmon_global_mode
#define GL_QCOM_perfmon_global_mode 1
#endif

#ifndef GL_PERFMON_GLOBAL_MODE_QCOM
#define GL_PERFMON_GLOBAL_MODE_QCOM 0x8FA0
#endif

#ifndef GL_QCOM_tiled_rendering
#define GL_QCOM_tiled_rendering 1
#endif

#ifdef glStartTilingQCOM
#undef glStartTilingQCOM
#endif
#ifdef PFNGLSTARTTILINGQCOMPROC
#undef PFNGLSTARTTILINGQCOMPROC
#endif
typedef void  (*PFNGLSTARTTILINGQCOMPROC)(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);

#ifdef glEndTilingQCOM
#undef glEndTilingQCOM
#endif
#ifdef PFNGLENDTILINGQCOMPROC
#undef PFNGLENDTILINGQCOMPROC
#endif
typedef void  (*PFNGLENDTILINGQCOMPROC)(GLbitfield preserveMask);

#ifndef GL_COLOR_BUFFER_BIT0_QCOM
#define GL_COLOR_BUFFER_BIT0_QCOM 0x00000001
#endif

#ifndef GL_COLOR_BUFFER_BIT1_QCOM
#define GL_COLOR_BUFFER_BIT1_QCOM 0x00000002
#endif

#ifndef GL_COLOR_BUFFER_BIT2_QCOM
#define GL_COLOR_BUFFER_BIT2_QCOM 0x00000004
#endif

#ifndef GL_COLOR_BUFFER_BIT3_QCOM
#define GL_COLOR_BUFFER_BIT3_QCOM 0x00000008
#endif

#ifndef GL_COLOR_BUFFER_BIT4_QCOM
#define GL_COLOR_BUFFER_BIT4_QCOM 0x00000010
#endif

#ifndef GL_COLOR_BUFFER_BIT5_QCOM
#define GL_COLOR_BUFFER_BIT5_QCOM 0x00000020
#endif

#ifndef GL_COLOR_BUFFER_BIT6_QCOM
#define GL_COLOR_BUFFER_BIT6_QCOM 0x00000040
#endif

#ifndef GL_COLOR_BUFFER_BIT7_QCOM
#define GL_COLOR_BUFFER_BIT7_QCOM 0x00000080
#endif

#ifndef GL_DEPTH_BUFFER_BIT0_QCOM
#define GL_DEPTH_BUFFER_BIT0_QCOM 0x00000100
#endif

#ifndef GL_DEPTH_BUFFER_BIT1_QCOM
#define GL_DEPTH_BUFFER_BIT1_QCOM 0x00000200
#endif

#ifndef GL_DEPTH_BUFFER_BIT2_QCOM
#define GL_DEPTH_BUFFER_BIT2_QCOM 0x00000400
#endif

#ifndef GL_DEPTH_BUFFER_BIT3_QCOM
#define GL_DEPTH_BUFFER_BIT3_QCOM 0x00000800
#endif

#ifndef GL_DEPTH_BUFFER_BIT4_QCOM
#define GL_DEPTH_BUFFER_BIT4_QCOM 0x00001000
#endif

#ifndef GL_DEPTH_BUFFER_BIT5_QCOM
#define GL_DEPTH_BUFFER_BIT5_QCOM 0x00002000
#endif

#ifndef GL_DEPTH_BUFFER_BIT6_QCOM
#define GL_DEPTH_BUFFER_BIT6_QCOM 0x00004000
#endif

#ifndef GL_DEPTH_BUFFER_BIT7_QCOM
#define GL_DEPTH_BUFFER_BIT7_QCOM 0x00008000
#endif

#ifndef GL_STENCIL_BUFFER_BIT0_QCOM
#define GL_STENCIL_BUFFER_BIT0_QCOM 0x00010000
#endif

#ifndef GL_STENCIL_BUFFER_BIT1_QCOM
#define GL_STENCIL_BUFFER_BIT1_QCOM 0x00020000
#endif

#ifndef GL_STENCIL_BUFFER_BIT2_QCOM
#define GL_STENCIL_BUFFER_BIT2_QCOM 0x00040000
#endif

#ifndef GL_STENCIL_BUFFER_BIT3_QCOM
#define GL_STENCIL_BUFFER_BIT3_QCOM 0x00080000
#endif

#ifndef GL_STENCIL_BUFFER_BIT4_QCOM
#define GL_STENCIL_BUFFER_BIT4_QCOM 0x00100000
#endif

#ifndef GL_STENCIL_BUFFER_BIT5_QCOM
#define GL_STENCIL_BUFFER_BIT5_QCOM 0x00200000
#endif

#ifndef GL_STENCIL_BUFFER_BIT6_QCOM
#define GL_STENCIL_BUFFER_BIT6_QCOM 0x00400000
#endif

#ifndef GL_STENCIL_BUFFER_BIT7_QCOM
#define GL_STENCIL_BUFFER_BIT7_QCOM 0x00800000
#endif

#ifndef GL_MULTISAMPLE_BUFFER_BIT0_QCOM
#define GL_MULTISAMPLE_BUFFER_BIT0_QCOM 0x01000000
#endif

#ifndef GL_MULTISAMPLE_BUFFER_BIT1_QCOM
#define GL_MULTISAMPLE_BUFFER_BIT1_QCOM 0x02000000
#endif

#ifndef GL_MULTISAMPLE_BUFFER_BIT2_QCOM
#define GL_MULTISAMPLE_BUFFER_BIT2_QCOM 0x04000000
#endif

#ifndef GL_MULTISAMPLE_BUFFER_BIT3_QCOM
#define GL_MULTISAMPLE_BUFFER_BIT3_QCOM 0x08000000
#endif

#ifndef GL_MULTISAMPLE_BUFFER_BIT4_QCOM
#define GL_MULTISAMPLE_BUFFER_BIT4_QCOM 0x10000000
#endif

#ifndef GL_MULTISAMPLE_BUFFER_BIT5_QCOM
#define GL_MULTISAMPLE_BUFFER_BIT5_QCOM 0x20000000
#endif

#ifndef GL_MULTISAMPLE_BUFFER_BIT6_QCOM
#define GL_MULTISAMPLE_BUFFER_BIT6_QCOM 0x40000000
#endif

#ifndef GL_MULTISAMPLE_BUFFER_BIT7_QCOM
#define GL_MULTISAMPLE_BUFFER_BIT7_QCOM 0x80000000
#endif

#ifndef GL_QCOM_writeonly_rendering
#define GL_QCOM_writeonly_rendering 1
#endif

#ifndef GL_WRITEONLY_RENDERING_QCOM
#define GL_WRITEONLY_RENDERING_QCOM 0x8823
#endif

#ifndef GL_REND_screen_coordinates
#define GL_REND_screen_coordinates 1
#endif

#ifndef GL_SCREEN_COORDINATES_REND
#define GL_SCREEN_COORDINATES_REND 0x8490
#endif

#ifndef GL_INVERTED_SCREEN_W_REND
#define GL_INVERTED_SCREEN_W_REND 0x8491
#endif

#ifndef GL_S3_s3tc
#define GL_S3_s3tc 1
#endif

#ifndef GL_RGB_S3TC
#define GL_RGB_S3TC 0x83A0
#endif

#ifndef GL_RGB4_S3TC
#define GL_RGB4_S3TC 0x83A1
#endif

#ifndef GL_RGBA_S3TC
#define GL_RGBA_S3TC 0x83A2
#endif

#ifndef GL_RGBA4_S3TC
#define GL_RGBA4_S3TC 0x83A3
#endif

#ifndef GL_RGBA_DXT5_S3TC
#define GL_RGBA_DXT5_S3TC 0x83A4
#endif

#ifndef GL_RGBA4_DXT5_S3TC
#define GL_RGBA4_DXT5_S3TC 0x83A5
#endif

#ifndef GL_SGIS_detail_texture
#define GL_SGIS_detail_texture 1
#endif

#ifdef glDetailTexFuncSGIS
#undef glDetailTexFuncSGIS
#endif
#ifdef PFNGLDETAILTEXFUNCSGISPROC
#undef PFNGLDETAILTEXFUNCSGISPROC
#endif
typedef void  (*PFNGLDETAILTEXFUNCSGISPROC)(GLenum target, GLsizei n, const GLfloat *points);

#ifdef glGetDetailTexFuncSGIS
#undef glGetDetailTexFuncSGIS
#endif
#ifdef PFNGLGETDETAILTEXFUNCSGISPROC
#undef PFNGLGETDETAILTEXFUNCSGISPROC
#endif
typedef void  (*PFNGLGETDETAILTEXFUNCSGISPROC)(GLenum target, GLfloat *points);

#ifndef GL_DETAIL_TEXTURE_2D_SGIS
#define GL_DETAIL_TEXTURE_2D_SGIS 0x8095
#endif

#ifndef GL_DETAIL_TEXTURE_2D_BINDING_SGIS
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
#endif

#ifndef GL_LINEAR_DETAIL_SGIS
#define GL_LINEAR_DETAIL_SGIS 0x8097
#endif

#ifndef GL_LINEAR_DETAIL_ALPHA_SGIS
#define GL_LINEAR_DETAIL_ALPHA_SGIS 0x8098
#endif

#ifndef GL_LINEAR_DETAIL_COLOR_SGIS
#define GL_LINEAR_DETAIL_COLOR_SGIS 0x8099
#endif

#ifndef GL_DETAIL_TEXTURE_LEVEL_SGIS
#define GL_DETAIL_TEXTURE_LEVEL_SGIS 0x809A
#endif

#ifndef GL_DETAIL_TEXTURE_MODE_SGIS
#define GL_DETAIL_TEXTURE_MODE_SGIS 0x809B
#endif

#ifndef GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
#endif

#ifndef GL_SGIS_fog_function
#define GL_SGIS_fog_function 1
#endif

#ifdef glFogFuncSGIS
#undef glFogFuncSGIS
#endif
#ifdef PFNGLFOGFUNCSGISPROC
#undef PFNGLFOGFUNCSGISPROC
#endif
typedef void  (*PFNGLFOGFUNCSGISPROC)(GLsizei n, const GLfloat *points);

#ifdef glGetFogFuncSGIS
#undef glGetFogFuncSGIS
#endif
#ifdef PFNGLGETFOGFUNCSGISPROC
#undef PFNGLGETFOGFUNCSGISPROC
#endif
typedef void  (*PFNGLGETFOGFUNCSGISPROC)(GLfloat *points);

#ifndef GL_FOG_FUNC_SGIS
#define GL_FOG_FUNC_SGIS 0x812A
#endif

#ifndef GL_FOG_FUNC_POINTS_SGIS
#define GL_FOG_FUNC_POINTS_SGIS 0x812B
#endif

#ifndef GL_MAX_FOG_FUNC_POINTS_SGIS
#define GL_MAX_FOG_FUNC_POINTS_SGIS 0x812C
#endif

#ifndef GL_SGIS_generate_mipmap
#define GL_SGIS_generate_mipmap 1
#endif

#ifndef GL_GENERATE_MIPMAP_SGIS
#define GL_GENERATE_MIPMAP_SGIS 0x8191
#endif

#ifndef GL_GENERATE_MIPMAP_HINT_SGIS
#define GL_GENERATE_MIPMAP_HINT_SGIS 0x8192
#endif

#ifndef GL_SGIS_multisample
#define GL_SGIS_multisample 1
#endif

#ifdef glSampleMaskSGIS
#undef glSampleMaskSGIS
#endif
#ifdef PFNGLSAMPLEMASKSGISPROC
#undef PFNGLSAMPLEMASKSGISPROC
#endif
typedef void  (*PFNGLSAMPLEMASKSGISPROC)(GLclampf value, GLboolean invert);

#ifdef glSamplePatternSGIS
#undef glSamplePatternSGIS
#endif
#ifdef PFNGLSAMPLEPATTERNSGISPROC
#undef PFNGLSAMPLEPATTERNSGISPROC
#endif
typedef void  (*PFNGLSAMPLEPATTERNSGISPROC)(GLenum pattern);

#ifndef GL_MULTISAMPLE_SGIS
#define GL_MULTISAMPLE_SGIS 0x809D
#endif

#ifndef GL_SAMPLE_ALPHA_TO_MASK_SGIS
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS 0x809E
#endif

#ifndef GL_SAMPLE_ALPHA_TO_ONE_SGIS
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS 0x809F
#endif

#ifndef GL_SAMPLE_MASK_SGIS
#define GL_SAMPLE_MASK_SGIS 0x80A0
#endif

#ifndef GL_1PASS_SGIS
#define GL_1PASS_SGIS 0x80A1
#endif

#ifndef GL_2PASS_0_SGIS
#define GL_2PASS_0_SGIS 0x80A2
#endif

#ifndef GL_2PASS_1_SGIS
#define GL_2PASS_1_SGIS 0x80A3
#endif

#ifndef GL_4PASS_0_SGIS
#define GL_4PASS_0_SGIS 0x80A4
#endif

#ifndef GL_4PASS_1_SGIS
#define GL_4PASS_1_SGIS 0x80A5
#endif

#ifndef GL_4PASS_2_SGIS
#define GL_4PASS_2_SGIS 0x80A6
#endif

#ifndef GL_4PASS_3_SGIS
#define GL_4PASS_3_SGIS 0x80A7
#endif

#ifndef GL_SAMPLE_BUFFERS_SGIS
#define GL_SAMPLE_BUFFERS_SGIS 0x80A8
#endif

#ifndef GL_SAMPLES_SGIS
#define GL_SAMPLES_SGIS 0x80A9
#endif

#ifndef GL_SAMPLE_MASK_VALUE_SGIS
#define GL_SAMPLE_MASK_VALUE_SGIS 0x80AA
#endif

#ifndef GL_SAMPLE_MASK_INVERT_SGIS
#define GL_SAMPLE_MASK_INVERT_SGIS 0x80AB
#endif

#ifndef GL_SAMPLE_PATTERN_SGIS
#define GL_SAMPLE_PATTERN_SGIS 0x80AC
#endif

#ifndef GL_SGIS_pixel_texture
#define GL_SGIS_pixel_texture 1
#endif

#ifdef glPixelTexGenParameteriSGIS
#undef glPixelTexGenParameteriSGIS
#endif
#ifdef PFNGLPIXELTEXGENPARAMETERISGISPROC
#undef PFNGLPIXELTEXGENPARAMETERISGISPROC
#endif
typedef void  (*PFNGLPIXELTEXGENPARAMETERISGISPROC)(GLenum pname, GLint param);

#ifdef glPixelTexGenParameterivSGIS
#undef glPixelTexGenParameterivSGIS
#endif
#ifdef PFNGLPIXELTEXGENPARAMETERIVSGISPROC
#undef PFNGLPIXELTEXGENPARAMETERIVSGISPROC
#endif
typedef void  (*PFNGLPIXELTEXGENPARAMETERIVSGISPROC)(GLenum pname, const GLint *params);

#ifdef glPixelTexGenParameterfSGIS
#undef glPixelTexGenParameterfSGIS
#endif
#ifdef PFNGLPIXELTEXGENPARAMETERFSGISPROC
#undef PFNGLPIXELTEXGENPARAMETERFSGISPROC
#endif
typedef void  (*PFNGLPIXELTEXGENPARAMETERFSGISPROC)(GLenum pname, GLfloat param);

#ifdef glPixelTexGenParameterfvSGIS
#undef glPixelTexGenParameterfvSGIS
#endif
#ifdef PFNGLPIXELTEXGENPARAMETERFVSGISPROC
#undef PFNGLPIXELTEXGENPARAMETERFVSGISPROC
#endif
typedef void  (*PFNGLPIXELTEXGENPARAMETERFVSGISPROC)(GLenum pname, const GLfloat *params);

#ifdef glGetPixelTexGenParameterivSGIS
#undef glGetPixelTexGenParameterivSGIS
#endif
#ifdef PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
#undef PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC
#endif
typedef void  (*PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC)(GLenum pname, GLint *params);

#ifdef glGetPixelTexGenParameterfvSGIS
#undef glGetPixelTexGenParameterfvSGIS
#endif
#ifdef PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
#undef PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC
#endif
typedef void  (*PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC)(GLenum pname, GLfloat *params);

#ifndef GL_PIXEL_TEXTURE_SGIS
#define GL_PIXEL_TEXTURE_SGIS 0x8353
#endif

#ifndef GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
#endif

#ifndef GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
#endif

#ifndef GL_PIXEL_GROUP_COLOR_SGIS
#define GL_PIXEL_GROUP_COLOR_SGIS 0x8356
#endif

#ifndef GL_SGIS_point_line_texgen
#define GL_SGIS_point_line_texgen 1
#endif

#ifndef GL_EYE_DISTANCE_TO_POINT_SGIS
#define GL_EYE_DISTANCE_TO_POINT_SGIS 0x81F0
#endif

#ifndef GL_OBJECT_DISTANCE_TO_POINT_SGIS
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS 0x81F1
#endif

#ifndef GL_EYE_DISTANCE_TO_LINE_SGIS
#define GL_EYE_DISTANCE_TO_LINE_SGIS 0x81F2
#endif

#ifndef GL_OBJECT_DISTANCE_TO_LINE_SGIS
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS 0x81F3
#endif

#ifndef GL_EYE_POINT_SGIS
#define GL_EYE_POINT_SGIS 0x81F4
#endif

#ifndef GL_OBJECT_POINT_SGIS
#define GL_OBJECT_POINT_SGIS 0x81F5
#endif

#ifndef GL_EYE_LINE_SGIS
#define GL_EYE_LINE_SGIS 0x81F6
#endif

#ifndef GL_OBJECT_LINE_SGIS
#define GL_OBJECT_LINE_SGIS 0x81F7
#endif

#ifndef GL_SGIS_point_parameters
#define GL_SGIS_point_parameters 1
#endif

#ifdef glPointParameterfSGIS
#undef glPointParameterfSGIS
#endif
#ifdef PFNGLPOINTPARAMETERFSGISPROC
#undef PFNGLPOINTPARAMETERFSGISPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFSGISPROC)(GLenum pname, GLfloat param);

#ifdef glPointParameterfvSGIS
#undef glPointParameterfvSGIS
#endif
#ifdef PFNGLPOINTPARAMETERFVSGISPROC
#undef PFNGLPOINTPARAMETERFVSGISPROC
#endif
typedef void  (*PFNGLPOINTPARAMETERFVSGISPROC)(GLenum pname, const GLfloat *params);

#ifndef GL_POINT_SIZE_MIN_SGIS
#define GL_POINT_SIZE_MIN_SGIS 0x8126
#endif

#ifndef GL_POINT_SIZE_MAX_SGIS
#define GL_POINT_SIZE_MAX_SGIS 0x8127
#endif

#ifndef GL_POINT_FADE_THRESHOLD_SIZE_SGIS
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
#endif

#ifndef GL_DISTANCE_ATTENUATION_SGIS
#define GL_DISTANCE_ATTENUATION_SGIS 0x8129
#endif

#ifndef GL_SGIS_sharpen_texture
#define GL_SGIS_sharpen_texture 1
#endif

#ifdef glSharpenTexFuncSGIS
#undef glSharpenTexFuncSGIS
#endif
#ifdef PFNGLSHARPENTEXFUNCSGISPROC
#undef PFNGLSHARPENTEXFUNCSGISPROC
#endif
typedef void  (*PFNGLSHARPENTEXFUNCSGISPROC)(GLenum target, GLsizei n, const GLfloat *points);

#ifdef glGetSharpenTexFuncSGIS
#undef glGetSharpenTexFuncSGIS
#endif
#ifdef PFNGLGETSHARPENTEXFUNCSGISPROC
#undef PFNGLGETSHARPENTEXFUNCSGISPROC
#endif
typedef void  (*PFNGLGETSHARPENTEXFUNCSGISPROC)(GLenum target, GLfloat *points);

#ifndef GL_LINEAR_SHARPEN_SGIS
#define GL_LINEAR_SHARPEN_SGIS 0x80AD
#endif

#ifndef GL_LINEAR_SHARPEN_ALPHA_SGIS
#define GL_LINEAR_SHARPEN_ALPHA_SGIS 0x80AE
#endif

#ifndef GL_LINEAR_SHARPEN_COLOR_SGIS
#define GL_LINEAR_SHARPEN_COLOR_SGIS 0x80AF
#endif

#ifndef GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
#endif

#ifndef GL_SGIS_texture4D
#define GL_SGIS_texture4D 1
#endif

#ifdef glTexImage4DSGIS
#undef glTexImage4DSGIS
#endif
#ifdef PFNGLTEXIMAGE4DSGISPROC
#undef PFNGLTEXIMAGE4DSGISPROC
#endif
typedef void  (*PFNGLTEXIMAGE4DSGISPROC)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);

#ifdef glTexSubImage4DSGIS
#undef glTexSubImage4DSGIS
#endif
#ifdef PFNGLTEXSUBIMAGE4DSGISPROC
#undef PFNGLTEXSUBIMAGE4DSGISPROC
#endif
typedef void  (*PFNGLTEXSUBIMAGE4DSGISPROC)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);

#ifndef GL_PACK_SKIP_VOLUMES_SGIS
#define GL_PACK_SKIP_VOLUMES_SGIS 0x8130
#endif

#ifndef GL_PACK_IMAGE_DEPTH_SGIS
#define GL_PACK_IMAGE_DEPTH_SGIS 0x8131
#endif

#ifndef GL_UNPACK_SKIP_VOLUMES_SGIS
#define GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
#endif

#ifndef GL_UNPACK_IMAGE_DEPTH_SGIS
#define GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
#endif

#ifndef GL_TEXTURE_4D_SGIS
#define GL_TEXTURE_4D_SGIS 0x8134
#endif

#ifndef GL_PROXY_TEXTURE_4D_SGIS
#define GL_PROXY_TEXTURE_4D_SGIS 0x8135
#endif

#ifndef GL_TEXTURE_4DSIZE_SGIS
#define GL_TEXTURE_4DSIZE_SGIS 0x8136
#endif

#ifndef GL_TEXTURE_WRAP_Q_SGIS
#define GL_TEXTURE_WRAP_Q_SGIS 0x8137
#endif

#ifndef GL_MAX_4D_TEXTURE_SIZE_SGIS
#define GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
#endif

#ifndef GL_TEXTURE_4D_BINDING_SGIS
#define GL_TEXTURE_4D_BINDING_SGIS 0x814F
#endif

#ifndef GL_SGIS_texture_border_clamp
#define GL_SGIS_texture_border_clamp 1
#endif

#ifndef GL_CLAMP_TO_BORDER_SGIS
#define GL_CLAMP_TO_BORDER_SGIS 0x812D
#endif

#ifndef GL_SGIS_texture_color_mask
#define GL_SGIS_texture_color_mask 1
#endif

#ifdef glTextureColorMaskSGIS
#undef glTextureColorMaskSGIS
#endif
#ifdef PFNGLTEXTURECOLORMASKSGISPROC
#undef PFNGLTEXTURECOLORMASKSGISPROC
#endif
typedef void  (*PFNGLTEXTURECOLORMASKSGISPROC)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);

#ifndef GL_TEXTURE_COLOR_WRITEMASK_SGIS
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS 0x81EF
#endif

#ifndef GL_SGIS_texture_edge_clamp
#define GL_SGIS_texture_edge_clamp 1
#endif

#ifndef GL_CLAMP_TO_EDGE_SGIS
#define GL_CLAMP_TO_EDGE_SGIS 0x812F
#endif

#ifndef GL_SGIS_texture_filter4
#define GL_SGIS_texture_filter4 1
#endif

#ifdef glGetTexFilterFuncSGIS
#undef glGetTexFilterFuncSGIS
#endif
#ifdef PFNGLGETTEXFILTERFUNCSGISPROC
#undef PFNGLGETTEXFILTERFUNCSGISPROC
#endif
typedef void  (*PFNGLGETTEXFILTERFUNCSGISPROC)(GLenum target, GLenum filter, GLfloat *weights);

#ifdef glTexFilterFuncSGIS
#undef glTexFilterFuncSGIS
#endif
#ifdef PFNGLTEXFILTERFUNCSGISPROC
#undef PFNGLTEXFILTERFUNCSGISPROC
#endif
typedef void  (*PFNGLTEXFILTERFUNCSGISPROC)(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);

#ifndef GL_FILTER4_SGIS
#define GL_FILTER4_SGIS 0x8146
#endif

#ifndef GL_TEXTURE_FILTER4_SIZE_SGIS
#define GL_TEXTURE_FILTER4_SIZE_SGIS 0x8147
#endif

#ifndef GL_SGIS_texture_lod
#define GL_SGIS_texture_lod 1
#endif

#ifndef GL_TEXTURE_MIN_LOD_SGIS
#define GL_TEXTURE_MIN_LOD_SGIS 0x813A
#endif

#ifndef GL_TEXTURE_MAX_LOD_SGIS
#define GL_TEXTURE_MAX_LOD_SGIS 0x813B
#endif

#ifndef GL_TEXTURE_BASE_LEVEL_SGIS
#define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C
#endif

#ifndef GL_TEXTURE_MAX_LEVEL_SGIS
#define GL_TEXTURE_MAX_LEVEL_SGIS 0x813D
#endif

#ifndef GL_SGIS_texture_select
#define GL_SGIS_texture_select 1
#endif

#ifndef GL_DUAL_ALPHA4_SGIS
#define GL_DUAL_ALPHA4_SGIS 0x8110
#endif

#ifndef GL_DUAL_ALPHA8_SGIS
#define GL_DUAL_ALPHA8_SGIS 0x8111
#endif

#ifndef GL_DUAL_ALPHA12_SGIS
#define GL_DUAL_ALPHA12_SGIS 0x8112
#endif

#ifndef GL_DUAL_ALPHA16_SGIS
#define GL_DUAL_ALPHA16_SGIS 0x8113
#endif

#ifndef GL_DUAL_LUMINANCE4_SGIS
#define GL_DUAL_LUMINANCE4_SGIS 0x8114
#endif

#ifndef GL_DUAL_LUMINANCE8_SGIS
#define GL_DUAL_LUMINANCE8_SGIS 0x8115
#endif

#ifndef GL_DUAL_LUMINANCE12_SGIS
#define GL_DUAL_LUMINANCE12_SGIS 0x8116
#endif

#ifndef GL_DUAL_LUMINANCE16_SGIS
#define GL_DUAL_LUMINANCE16_SGIS 0x8117
#endif

#ifndef GL_DUAL_INTENSITY4_SGIS
#define GL_DUAL_INTENSITY4_SGIS 0x8118
#endif

#ifndef GL_DUAL_INTENSITY8_SGIS
#define GL_DUAL_INTENSITY8_SGIS 0x8119
#endif

#ifndef GL_DUAL_INTENSITY12_SGIS
#define GL_DUAL_INTENSITY12_SGIS 0x811A
#endif

#ifndef GL_DUAL_INTENSITY16_SGIS
#define GL_DUAL_INTENSITY16_SGIS 0x811B
#endif

#ifndef GL_DUAL_LUMINANCE_ALPHA4_SGIS
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS 0x811C
#endif

#ifndef GL_DUAL_LUMINANCE_ALPHA8_SGIS
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS 0x811D
#endif

#ifndef GL_QUAD_ALPHA4_SGIS
#define GL_QUAD_ALPHA4_SGIS 0x811E
#endif

#ifndef GL_QUAD_ALPHA8_SGIS
#define GL_QUAD_ALPHA8_SGIS 0x811F
#endif

#ifndef GL_QUAD_LUMINANCE4_SGIS
#define GL_QUAD_LUMINANCE4_SGIS 0x8120
#endif

#ifndef GL_QUAD_LUMINANCE8_SGIS
#define GL_QUAD_LUMINANCE8_SGIS 0x8121
#endif

#ifndef GL_QUAD_INTENSITY4_SGIS
#define GL_QUAD_INTENSITY4_SGIS 0x8122
#endif

#ifndef GL_QUAD_INTENSITY8_SGIS
#define GL_QUAD_INTENSITY8_SGIS 0x8123
#endif

#ifndef GL_DUAL_TEXTURE_SELECT_SGIS
#define GL_DUAL_TEXTURE_SELECT_SGIS 0x8124
#endif

#ifndef GL_QUAD_TEXTURE_SELECT_SGIS
#define GL_QUAD_TEXTURE_SELECT_SGIS 0x8125
#endif

#ifndef GL_SGIX_async
#define GL_SGIX_async 1
#endif

#ifdef glAsyncMarkerSGIX
#undef glAsyncMarkerSGIX
#endif
#ifdef PFNGLASYNCMARKERSGIXPROC
#undef PFNGLASYNCMARKERSGIXPROC
#endif
typedef void  (*PFNGLASYNCMARKERSGIXPROC)(GLuint marker);

#ifdef glFinishAsyncSGIX
#undef glFinishAsyncSGIX
#endif
#ifdef PFNGLFINISHASYNCSGIXPROC
#undef PFNGLFINISHASYNCSGIXPROC
#endif
typedef GLint  (*PFNGLFINISHASYNCSGIXPROC)(GLuint *markerp);

#ifdef glPollAsyncSGIX
#undef glPollAsyncSGIX
#endif
#ifdef PFNGLPOLLASYNCSGIXPROC
#undef PFNGLPOLLASYNCSGIXPROC
#endif
typedef GLint  (*PFNGLPOLLASYNCSGIXPROC)(GLuint *markerp);

#ifdef glGenAsyncMarkersSGIX
#undef glGenAsyncMarkersSGIX
#endif
#ifdef PFNGLGENASYNCMARKERSSGIXPROC
#undef PFNGLGENASYNCMARKERSSGIXPROC
#endif
typedef GLuint  (*PFNGLGENASYNCMARKERSSGIXPROC)(GLsizei range);

#ifdef glDeleteAsyncMarkersSGIX
#undef glDeleteAsyncMarkersSGIX
#endif
#ifdef PFNGLDELETEASYNCMARKERSSGIXPROC
#undef PFNGLDELETEASYNCMARKERSSGIXPROC
#endif
typedef void  (*PFNGLDELETEASYNCMARKERSSGIXPROC)(GLuint marker, GLsizei range);

#ifdef glIsAsyncMarkerSGIX
#undef glIsAsyncMarkerSGIX
#endif
#ifdef PFNGLISASYNCMARKERSGIXPROC
#undef PFNGLISASYNCMARKERSGIXPROC
#endif
typedef GLboolean  (*PFNGLISASYNCMARKERSGIXPROC)(GLuint marker);

#ifndef GL_ASYNC_MARKER_SGIX
#define GL_ASYNC_MARKER_SGIX 0x8329
#endif

#ifndef GL_SGIX_async_histogram
#define GL_SGIX_async_histogram 1
#endif

#ifndef GL_ASYNC_HISTOGRAM_SGIX
#define GL_ASYNC_HISTOGRAM_SGIX 0x832C
#endif

#ifndef GL_MAX_ASYNC_HISTOGRAM_SGIX
#define GL_MAX_ASYNC_HISTOGRAM_SGIX 0x832D
#endif

#ifndef GL_SGIX_async_pixel
#define GL_SGIX_async_pixel 1
#endif

#ifndef GL_ASYNC_TEX_IMAGE_SGIX
#define GL_ASYNC_TEX_IMAGE_SGIX 0x835C
#endif

#ifndef GL_ASYNC_DRAW_PIXELS_SGIX
#define GL_ASYNC_DRAW_PIXELS_SGIX 0x835D
#endif

#ifndef GL_ASYNC_READ_PIXELS_SGIX
#define GL_ASYNC_READ_PIXELS_SGIX 0x835E
#endif

#ifndef GL_MAX_ASYNC_TEX_IMAGE_SGIX
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX 0x835F
#endif

#ifndef GL_MAX_ASYNC_DRAW_PIXELS_SGIX
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX 0x8360
#endif

#ifndef GL_MAX_ASYNC_READ_PIXELS_SGIX
#define GL_MAX_ASYNC_READ_PIXELS_SGIX 0x8361
#endif

#ifndef GL_SGIX_blend_alpha_minmax
#define GL_SGIX_blend_alpha_minmax 1
#endif

#ifndef GL_ALPHA_MIN_SGIX
#define GL_ALPHA_MIN_SGIX 0x8320
#endif

#ifndef GL_ALPHA_MAX_SGIX
#define GL_ALPHA_MAX_SGIX 0x8321
#endif

#ifndef GL_SGIX_calligraphic_fragment
#define GL_SGIX_calligraphic_fragment 1
#endif

#ifndef GL_CALLIGRAPHIC_FRAGMENT_SGIX
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX 0x8183
#endif

#ifndef GL_SGIX_clipmap
#define GL_SGIX_clipmap 1
#endif

#ifndef GL_LINEAR_CLIPMAP_LINEAR_SGIX
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX 0x8170
#endif

#ifndef GL_TEXTURE_CLIPMAP_CENTER_SGIX
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX 0x8171
#endif

#ifndef GL_TEXTURE_CLIPMAP_FRAME_SGIX
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX 0x8172
#endif

#ifndef GL_TEXTURE_CLIPMAP_OFFSET_SGIX
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX 0x8173
#endif

#ifndef GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
#endif

#ifndef GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
#endif

#ifndef GL_TEXTURE_CLIPMAP_DEPTH_SGIX
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX 0x8176
#endif

#ifndef GL_MAX_CLIPMAP_DEPTH_SGIX
#define GL_MAX_CLIPMAP_DEPTH_SGIX 0x8177
#endif

#ifndef GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
#endif

#ifndef GL_NEAREST_CLIPMAP_NEAREST_SGIX
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX 0x844D
#endif

#ifndef GL_NEAREST_CLIPMAP_LINEAR_SGIX
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX 0x844E
#endif

#ifndef GL_LINEAR_CLIPMAP_NEAREST_SGIX
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX 0x844F
#endif

#ifndef GL_SGIX_convolution_accuracy
#define GL_SGIX_convolution_accuracy 1
#endif

#ifndef GL_CONVOLUTION_HINT_SGIX
#define GL_CONVOLUTION_HINT_SGIX 0x8316
#endif

#ifndef GL_SGIX_depth_pass_instrument
#define GL_SGIX_depth_pass_instrument 1
#endif

#ifndef GL_SGIX_depth_texture
#define GL_SGIX_depth_texture 1
#endif

#ifndef GL_DEPTH_COMPONENT16_SGIX
#define GL_DEPTH_COMPONENT16_SGIX 0x81A5
#endif

#ifndef GL_DEPTH_COMPONENT24_SGIX
#define GL_DEPTH_COMPONENT24_SGIX 0x81A6
#endif

#ifndef GL_DEPTH_COMPONENT32_SGIX
#define GL_DEPTH_COMPONENT32_SGIX 0x81A7
#endif

#ifndef GL_SGIX_flush_raster
#define GL_SGIX_flush_raster 1
#endif

#ifdef glFlushRasterSGIX
#undef glFlushRasterSGIX
#endif
#ifdef PFNGLFLUSHRASTERSGIXPROC
#undef PFNGLFLUSHRASTERSGIXPROC
#endif
typedef void  (*PFNGLFLUSHRASTERSGIXPROC)(void);

#ifndef GL_SGIX_fog_offset
#define GL_SGIX_fog_offset 1
#endif

#ifndef GL_FOG_OFFSET_SGIX
#define GL_FOG_OFFSET_SGIX 0x8198
#endif

#ifndef GL_FOG_OFFSET_VALUE_SGIX
#define GL_FOG_OFFSET_VALUE_SGIX 0x8199
#endif

#ifndef GL_SGIX_fragment_lighting
#define GL_SGIX_fragment_lighting 1
#endif

#ifdef glFragmentColorMaterialSGIX
#undef glFragmentColorMaterialSGIX
#endif
#ifdef PFNGLFRAGMENTCOLORMATERIALSGIXPROC
#undef PFNGLFRAGMENTCOLORMATERIALSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTCOLORMATERIALSGIXPROC)(GLenum face, GLenum mode);

#ifdef glFragmentLightfSGIX
#undef glFragmentLightfSGIX
#endif
#ifdef PFNGLFRAGMENTLIGHTFSGIXPROC
#undef PFNGLFRAGMENTLIGHTFSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTLIGHTFSGIXPROC)(GLenum light, GLenum pname, GLfloat param);

#ifdef glFragmentLightfvSGIX
#undef glFragmentLightfvSGIX
#endif
#ifdef PFNGLFRAGMENTLIGHTFVSGIXPROC
#undef PFNGLFRAGMENTLIGHTFVSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTLIGHTFVSGIXPROC)(GLenum light, GLenum pname, const GLfloat *params);

#ifdef glFragmentLightiSGIX
#undef glFragmentLightiSGIX
#endif
#ifdef PFNGLFRAGMENTLIGHTISGIXPROC
#undef PFNGLFRAGMENTLIGHTISGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTLIGHTISGIXPROC)(GLenum light, GLenum pname, GLint param);

#ifdef glFragmentLightivSGIX
#undef glFragmentLightivSGIX
#endif
#ifdef PFNGLFRAGMENTLIGHTIVSGIXPROC
#undef PFNGLFRAGMENTLIGHTIVSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTLIGHTIVSGIXPROC)(GLenum light, GLenum pname, const GLint *params);

#ifdef glFragmentLightModelfSGIX
#undef glFragmentLightModelfSGIX
#endif
#ifdef PFNGLFRAGMENTLIGHTMODELFSGIXPROC
#undef PFNGLFRAGMENTLIGHTMODELFSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTLIGHTMODELFSGIXPROC)(GLenum pname, GLfloat param);

#ifdef glFragmentLightModelfvSGIX
#undef glFragmentLightModelfvSGIX
#endif
#ifdef PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
#undef PFNGLFRAGMENTLIGHTMODELFVSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)(GLenum pname, const GLfloat *params);

#ifdef glFragmentLightModeliSGIX
#undef glFragmentLightModeliSGIX
#endif
#ifdef PFNGLFRAGMENTLIGHTMODELISGIXPROC
#undef PFNGLFRAGMENTLIGHTMODELISGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTLIGHTMODELISGIXPROC)(GLenum pname, GLint param);

#ifdef glFragmentLightModelivSGIX
#undef glFragmentLightModelivSGIX
#endif
#ifdef PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
#undef PFNGLFRAGMENTLIGHTMODELIVSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)(GLenum pname, const GLint *params);

#ifdef glFragmentMaterialfSGIX
#undef glFragmentMaterialfSGIX
#endif
#ifdef PFNGLFRAGMENTMATERIALFSGIXPROC
#undef PFNGLFRAGMENTMATERIALFSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTMATERIALFSGIXPROC)(GLenum face, GLenum pname, GLfloat param);

#ifdef glFragmentMaterialfvSGIX
#undef glFragmentMaterialfvSGIX
#endif
#ifdef PFNGLFRAGMENTMATERIALFVSGIXPROC
#undef PFNGLFRAGMENTMATERIALFVSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTMATERIALFVSGIXPROC)(GLenum face, GLenum pname, const GLfloat *params);

#ifdef glFragmentMaterialiSGIX
#undef glFragmentMaterialiSGIX
#endif
#ifdef PFNGLFRAGMENTMATERIALISGIXPROC
#undef PFNGLFRAGMENTMATERIALISGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTMATERIALISGIXPROC)(GLenum face, GLenum pname, GLint param);

#ifdef glFragmentMaterialivSGIX
#undef glFragmentMaterialivSGIX
#endif
#ifdef PFNGLFRAGMENTMATERIALIVSGIXPROC
#undef PFNGLFRAGMENTMATERIALIVSGIXPROC
#endif
typedef void  (*PFNGLFRAGMENTMATERIALIVSGIXPROC)(GLenum face, GLenum pname, const GLint *params);

#ifdef glGetFragmentLightfvSGIX
#undef glGetFragmentLightfvSGIX
#endif
#ifdef PFNGLGETFRAGMENTLIGHTFVSGIXPROC
#undef PFNGLGETFRAGMENTLIGHTFVSGIXPROC
#endif
typedef void  (*PFNGLGETFRAGMENTLIGHTFVSGIXPROC)(GLenum light, GLenum pname, GLfloat *params);

#ifdef glGetFragmentLightivSGIX
#undef glGetFragmentLightivSGIX
#endif
#ifdef PFNGLGETFRAGMENTLIGHTIVSGIXPROC
#undef PFNGLGETFRAGMENTLIGHTIVSGIXPROC
#endif
typedef void  (*PFNGLGETFRAGMENTLIGHTIVSGIXPROC)(GLenum light, GLenum pname, GLint *params);

#ifdef glGetFragmentMaterialfvSGIX
#undef glGetFragmentMaterialfvSGIX
#endif
#ifdef PFNGLGETFRAGMENTMATERIALFVSGIXPROC
#undef PFNGLGETFRAGMENTMATERIALFVSGIXPROC
#endif
typedef void  (*PFNGLGETFRAGMENTMATERIALFVSGIXPROC)(GLenum face, GLenum pname, GLfloat *params);

#ifdef glGetFragmentMaterialivSGIX
#undef glGetFragmentMaterialivSGIX
#endif
#ifdef PFNGLGETFRAGMENTMATERIALIVSGIXPROC
#undef PFNGLGETFRAGMENTMATERIALIVSGIXPROC
#endif
typedef void  (*PFNGLGETFRAGMENTMATERIALIVSGIXPROC)(GLenum face, GLenum pname, GLint *params);

#ifdef glLightEnviSGIX
#undef glLightEnviSGIX
#endif
#ifdef PFNGLLIGHTENVISGIXPROC
#undef PFNGLLIGHTENVISGIXPROC
#endif
typedef void  (*PFNGLLIGHTENVISGIXPROC)(GLenum pname, GLint param);

#ifndef GL_FRAGMENT_LIGHTING_SGIX
#define GL_FRAGMENT_LIGHTING_SGIX 0x8400
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#endif

#ifndef GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#endif

#ifndef GL_MAX_FRAGMENT_LIGHTS_SGIX
#define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
#endif

#ifndef GL_MAX_ACTIVE_LIGHTS_SGIX
#define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
#endif

#ifndef GL_CURRENT_RASTER_NORMAL_SGIX
#define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
#endif

#ifndef GL_LIGHT_ENV_MODE_SGIX
#define GL_LIGHT_ENV_MODE_SGIX 0x8407
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#endif

#ifndef GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#endif

#ifndef GL_FRAGMENT_LIGHT0_SGIX
#define GL_FRAGMENT_LIGHT0_SGIX 0x840C
#endif

#ifndef GL_FRAGMENT_LIGHT1_SGIX
#define GL_FRAGMENT_LIGHT1_SGIX 0x840D
#endif

#ifndef GL_FRAGMENT_LIGHT2_SGIX
#define GL_FRAGMENT_LIGHT2_SGIX 0x840E
#endif

#ifndef GL_FRAGMENT_LIGHT3_SGIX
#define GL_FRAGMENT_LIGHT3_SGIX 0x840F
#endif

#ifndef GL_FRAGMENT_LIGHT4_SGIX
#define GL_FRAGMENT_LIGHT4_SGIX 0x8410
#endif

#ifndef GL_FRAGMENT_LIGHT5_SGIX
#define GL_FRAGMENT_LIGHT5_SGIX 0x8411
#endif

#ifndef GL_FRAGMENT_LIGHT6_SGIX
#define GL_FRAGMENT_LIGHT6_SGIX 0x8412
#endif

#ifndef GL_FRAGMENT_LIGHT7_SGIX
#define GL_FRAGMENT_LIGHT7_SGIX 0x8413
#endif

#ifndef GL_SGIX_framezoom
#define GL_SGIX_framezoom 1
#endif

#ifdef glFrameZoomSGIX
#undef glFrameZoomSGIX
#endif
#ifdef PFNGLFRAMEZOOMSGIXPROC
#undef PFNGLFRAMEZOOMSGIXPROC
#endif
typedef void  (*PFNGLFRAMEZOOMSGIXPROC)(GLint factor);

#ifndef GL_FRAMEZOOM_SGIX
#define GL_FRAMEZOOM_SGIX 0x818B
#endif

#ifndef GL_FRAMEZOOM_FACTOR_SGIX
#define GL_FRAMEZOOM_FACTOR_SGIX 0x818C
#endif

#ifndef GL_MAX_FRAMEZOOM_FACTOR_SGIX
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX 0x818D
#endif

#ifndef GL_SGIX_igloo_interface
#define GL_SGIX_igloo_interface 1
#endif

#ifdef glIglooInterfaceSGIX
#undef glIglooInterfaceSGIX
#endif
#ifdef PFNGLIGLOOINTERFACESGIXPROC
#undef PFNGLIGLOOINTERFACESGIXPROC
#endif
typedef void  (*PFNGLIGLOOINTERFACESGIXPROC)(GLenum pname, const void *params);

#ifndef GL_SGIX_instruments
#define GL_SGIX_instruments 1
#endif

#ifdef glGetInstrumentsSGIX
#undef glGetInstrumentsSGIX
#endif
#ifdef PFNGLGETINSTRUMENTSSGIXPROC
#undef PFNGLGETINSTRUMENTSSGIXPROC
#endif
typedef GLint  (*PFNGLGETINSTRUMENTSSGIXPROC)(void);

#ifdef glInstrumentsBufferSGIX
#undef glInstrumentsBufferSGIX
#endif
#ifdef PFNGLINSTRUMENTSBUFFERSGIXPROC
#undef PFNGLINSTRUMENTSBUFFERSGIXPROC
#endif
typedef void  (*PFNGLINSTRUMENTSBUFFERSGIXPROC)(GLsizei size, GLint *buffer);

#ifdef glPollInstrumentsSGIX
#undef glPollInstrumentsSGIX
#endif
#ifdef PFNGLPOLLINSTRUMENTSSGIXPROC
#undef PFNGLPOLLINSTRUMENTSSGIXPROC
#endif
typedef GLint  (*PFNGLPOLLINSTRUMENTSSGIXPROC)(GLint *marker_p);

#ifdef glReadInstrumentsSGIX
#undef glReadInstrumentsSGIX
#endif
#ifdef PFNGLREADINSTRUMENTSSGIXPROC
#undef PFNGLREADINSTRUMENTSSGIXPROC
#endif
typedef void  (*PFNGLREADINSTRUMENTSSGIXPROC)(GLint marker);

#ifdef glStartInstrumentsSGIX
#undef glStartInstrumentsSGIX
#endif
#ifdef PFNGLSTARTINSTRUMENTSSGIXPROC
#undef PFNGLSTARTINSTRUMENTSSGIXPROC
#endif
typedef void  (*PFNGLSTARTINSTRUMENTSSGIXPROC)(void);

#ifdef glStopInstrumentsSGIX
#undef glStopInstrumentsSGIX
#endif
#ifdef PFNGLSTOPINSTRUMENTSSGIXPROC
#undef PFNGLSTOPINSTRUMENTSSGIXPROC
#endif
typedef void  (*PFNGLSTOPINSTRUMENTSSGIXPROC)(GLint marker);

#ifndef GL_INSTRUMENT_BUFFER_POINTER_SGIX
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#endif

#ifndef GL_INSTRUMENT_MEASUREMENTS_SGIX
#define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
#endif

#ifndef GL_SGIX_interlace
#define GL_SGIX_interlace 1
#endif

#ifndef GL_INTERLACE_SGIX
#define GL_INTERLACE_SGIX 0x8094
#endif

#ifndef GL_SGIX_ir_instrument1
#define GL_SGIX_ir_instrument1 1
#endif

#ifndef GL_IR_INSTRUMENT1_SGIX
#define GL_IR_INSTRUMENT1_SGIX 0x817F
#endif

#ifndef GL_SGIX_list_priority
#define GL_SGIX_list_priority 1
#endif

#ifdef glGetListParameterfvSGIX
#undef glGetListParameterfvSGIX
#endif
#ifdef PFNGLGETLISTPARAMETERFVSGIXPROC
#undef PFNGLGETLISTPARAMETERFVSGIXPROC
#endif
typedef void  (*PFNGLGETLISTPARAMETERFVSGIXPROC)(GLuint list, GLenum pname, GLfloat *params);

#ifdef glGetListParameterivSGIX
#undef glGetListParameterivSGIX
#endif
#ifdef PFNGLGETLISTPARAMETERIVSGIXPROC
#undef PFNGLGETLISTPARAMETERIVSGIXPROC
#endif
typedef void  (*PFNGLGETLISTPARAMETERIVSGIXPROC)(GLuint list, GLenum pname, GLint *params);

#ifdef glListParameterfSGIX
#undef glListParameterfSGIX
#endif
#ifdef PFNGLLISTPARAMETERFSGIXPROC
#undef PFNGLLISTPARAMETERFSGIXPROC
#endif
typedef void  (*PFNGLLISTPARAMETERFSGIXPROC)(GLuint list, GLenum pname, GLfloat param);

#ifdef glListParameterfvSGIX
#undef glListParameterfvSGIX
#endif
#ifdef PFNGLLISTPARAMETERFVSGIXPROC
#undef PFNGLLISTPARAMETERFVSGIXPROC
#endif
typedef void  (*PFNGLLISTPARAMETERFVSGIXPROC)(GLuint list, GLenum pname, const GLfloat *params);

#ifdef glListParameteriSGIX
#undef glListParameteriSGIX
#endif
#ifdef PFNGLLISTPARAMETERISGIXPROC
#undef PFNGLLISTPARAMETERISGIXPROC
#endif
typedef void  (*PFNGLLISTPARAMETERISGIXPROC)(GLuint list, GLenum pname, GLint param);

#ifdef glListParameterivSGIX
#undef glListParameterivSGIX
#endif
#ifdef PFNGLLISTPARAMETERIVSGIXPROC
#undef PFNGLLISTPARAMETERIVSGIXPROC
#endif
typedef void  (*PFNGLLISTPARAMETERIVSGIXPROC)(GLuint list, GLenum pname, const GLint *params);

#ifndef GL_LIST_PRIORITY_SGIX
#define GL_LIST_PRIORITY_SGIX 0x8182
#endif

#ifndef GL_SGIX_pixel_texture
#define GL_SGIX_pixel_texture 1
#endif

#ifdef glPixelTexGenSGIX
#undef glPixelTexGenSGIX
#endif
#ifdef PFNGLPIXELTEXGENSGIXPROC
#undef PFNGLPIXELTEXGENSGIXPROC
#endif
typedef void  (*PFNGLPIXELTEXGENSGIXPROC)(GLenum mode);

#ifndef GL_PIXEL_TEX_GEN_SGIX
#define GL_PIXEL_TEX_GEN_SGIX 0x8139
#endif

#ifndef GL_PIXEL_TEX_GEN_MODE_SGIX
#define GL_PIXEL_TEX_GEN_MODE_SGIX 0x832B
#endif

#ifndef GL_SGIX_pixel_tiles
#define GL_SGIX_pixel_tiles 1
#endif

#ifndef GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
#endif

#ifndef GL_PIXEL_TILE_CACHE_INCREMENT_SGIX
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
#endif

#ifndef GL_PIXEL_TILE_WIDTH_SGIX
#define GL_PIXEL_TILE_WIDTH_SGIX 0x8140
#endif

#ifndef GL_PIXEL_TILE_HEIGHT_SGIX
#define GL_PIXEL_TILE_HEIGHT_SGIX 0x8141
#endif

#ifndef GL_PIXEL_TILE_GRID_WIDTH_SGIX
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX 0x8142
#endif

#ifndef GL_PIXEL_TILE_GRID_HEIGHT_SGIX
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX 0x8143
#endif

#ifndef GL_PIXEL_TILE_GRID_DEPTH_SGIX
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX 0x8144
#endif

#ifndef GL_PIXEL_TILE_CACHE_SIZE_SGIX
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX 0x8145
#endif

#ifndef GL_SGIX_polynomial_ffd
#define GL_SGIX_polynomial_ffd 1
#endif

#ifdef glDeformationMap3dSGIX
#undef glDeformationMap3dSGIX
#endif
#ifdef PFNGLDEFORMATIONMAP3DSGIXPROC
#undef PFNGLDEFORMATIONMAP3DSGIXPROC
#endif
typedef void  (*PFNGLDEFORMATIONMAP3DSGIXPROC)(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);

#ifdef glDeformationMap3fSGIX
#undef glDeformationMap3fSGIX
#endif
#ifdef PFNGLDEFORMATIONMAP3FSGIXPROC
#undef PFNGLDEFORMATIONMAP3FSGIXPROC
#endif
typedef void  (*PFNGLDEFORMATIONMAP3FSGIXPROC)(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);

#ifdef glDeformSGIX
#undef glDeformSGIX
#endif
#ifdef PFNGLDEFORMSGIXPROC
#undef PFNGLDEFORMSGIXPROC
#endif
typedef void  (*PFNGLDEFORMSGIXPROC)(GLbitfield mask);

#ifdef glLoadIdentityDeformationMapSGIX
#undef glLoadIdentityDeformationMapSGIX
#endif
#ifdef PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
#undef PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC
#endif
typedef void  (*PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC)(GLbitfield mask);

#ifndef GL_TEXTURE_DEFORMATION_BIT_SGIX
#define GL_TEXTURE_DEFORMATION_BIT_SGIX 0x00000001
#endif

#ifndef GL_GEOMETRY_DEFORMATION_BIT_SGIX
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX 0x00000002
#endif

#ifndef GL_GEOMETRY_DEFORMATION_SGIX
#define GL_GEOMETRY_DEFORMATION_SGIX 0x8194
#endif

#ifndef GL_TEXTURE_DEFORMATION_SGIX
#define GL_TEXTURE_DEFORMATION_SGIX 0x8195
#endif

#ifndef GL_DEFORMATIONS_MASK_SGIX
#define GL_DEFORMATIONS_MASK_SGIX 0x8196
#endif

#ifndef GL_MAX_DEFORMATION_ORDER_SGIX
#define GL_MAX_DEFORMATION_ORDER_SGIX 0x8197
#endif

#ifndef GL_SGIX_reference_plane
#define GL_SGIX_reference_plane 1
#endif

#ifdef glReferencePlaneSGIX
#undef glReferencePlaneSGIX
#endif
#ifdef PFNGLREFERENCEPLANESGIXPROC
#undef PFNGLREFERENCEPLANESGIXPROC
#endif
typedef void  (*PFNGLREFERENCEPLANESGIXPROC)(const GLdouble *equation);

#ifndef GL_REFERENCE_PLANE_SGIX
#define GL_REFERENCE_PLANE_SGIX 0x817D
#endif

#ifndef GL_REFERENCE_PLANE_EQUATION_SGIX
#define GL_REFERENCE_PLANE_EQUATION_SGIX 0x817E
#endif

#ifndef GL_SGIX_resample
#define GL_SGIX_resample 1
#endif

#ifndef GL_PACK_RESAMPLE_SGIX
#define GL_PACK_RESAMPLE_SGIX 0x842E
#endif

#ifndef GL_UNPACK_RESAMPLE_SGIX
#define GL_UNPACK_RESAMPLE_SGIX 0x842F
#endif

#ifndef GL_RESAMPLE_REPLICATE_SGIX
#define GL_RESAMPLE_REPLICATE_SGIX 0x8433
#endif

#ifndef GL_RESAMPLE_ZERO_FILL_SGIX
#define GL_RESAMPLE_ZERO_FILL_SGIX 0x8434
#endif

#ifndef GL_RESAMPLE_DECIMATE_SGIX
#define GL_RESAMPLE_DECIMATE_SGIX 0x8430
#endif

#ifndef GL_SGIX_scalebias_hint
#define GL_SGIX_scalebias_hint 1
#endif

#ifndef GL_SCALEBIAS_HINT_SGIX
#define GL_SCALEBIAS_HINT_SGIX 0x8322
#endif

#ifndef GL_SGIX_shadow
#define GL_SGIX_shadow 1
#endif

#ifndef GL_TEXTURE_COMPARE_SGIX
#define GL_TEXTURE_COMPARE_SGIX 0x819A
#endif

#ifndef GL_TEXTURE_COMPARE_OPERATOR_SGIX
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX 0x819B
#endif

#ifndef GL_TEXTURE_LEQUAL_R_SGIX
#define GL_TEXTURE_LEQUAL_R_SGIX 0x819C
#endif

#ifndef GL_TEXTURE_GEQUAL_R_SGIX
#define GL_TEXTURE_GEQUAL_R_SGIX 0x819D
#endif

#ifndef GL_SGIX_shadow_ambient
#define GL_SGIX_shadow_ambient 1
#endif

#ifndef GL_SHADOW_AMBIENT_SGIX
#define GL_SHADOW_AMBIENT_SGIX 0x80BF
#endif

#ifndef GL_SGIX_sprite
#define GL_SGIX_sprite 1
#endif

#ifdef glSpriteParameterfSGIX
#undef glSpriteParameterfSGIX
#endif
#ifdef PFNGLSPRITEPARAMETERFSGIXPROC
#undef PFNGLSPRITEPARAMETERFSGIXPROC
#endif
typedef void  (*PFNGLSPRITEPARAMETERFSGIXPROC)(GLenum pname, GLfloat param);

#ifdef glSpriteParameterfvSGIX
#undef glSpriteParameterfvSGIX
#endif
#ifdef PFNGLSPRITEPARAMETERFVSGIXPROC
#undef PFNGLSPRITEPARAMETERFVSGIXPROC
#endif
typedef void  (*PFNGLSPRITEPARAMETERFVSGIXPROC)(GLenum pname, const GLfloat *params);

#ifdef glSpriteParameteriSGIX
#undef glSpriteParameteriSGIX
#endif
#ifdef PFNGLSPRITEPARAMETERISGIXPROC
#undef PFNGLSPRITEPARAMETERISGIXPROC
#endif
typedef void  (*PFNGLSPRITEPARAMETERISGIXPROC)(GLenum pname, GLint param);

#ifdef glSpriteParameterivSGIX
#undef glSpriteParameterivSGIX
#endif
#ifdef PFNGLSPRITEPARAMETERIVSGIXPROC
#undef PFNGLSPRITEPARAMETERIVSGIXPROC
#endif
typedef void  (*PFNGLSPRITEPARAMETERIVSGIXPROC)(GLenum pname, const GLint *params);

#ifndef GL_SPRITE_SGIX
#define GL_SPRITE_SGIX 0x8148
#endif

#ifndef GL_SPRITE_MODE_SGIX
#define GL_SPRITE_MODE_SGIX 0x8149
#endif

#ifndef GL_SPRITE_AXIS_SGIX
#define GL_SPRITE_AXIS_SGIX 0x814A
#endif

#ifndef GL_SPRITE_TRANSLATION_SGIX
#define GL_SPRITE_TRANSLATION_SGIX 0x814B
#endif

#ifndef GL_SPRITE_AXIAL_SGIX
#define GL_SPRITE_AXIAL_SGIX 0x814C
#endif

#ifndef GL_SPRITE_OBJECT_ALIGNED_SGIX
#define GL_SPRITE_OBJECT_ALIGNED_SGIX 0x814D
#endif

#ifndef GL_SPRITE_EYE_ALIGNED_SGIX
#define GL_SPRITE_EYE_ALIGNED_SGIX 0x814E
#endif

#ifndef GL_SGIX_subsample
#define GL_SGIX_subsample 1
#endif

#ifndef GL_PACK_SUBSAMPLE_RATE_SGIX
#define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
#endif

#ifndef GL_UNPACK_SUBSAMPLE_RATE_SGIX
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
#endif

#ifndef GL_PIXEL_SUBSAMPLE_4444_SGIX
#define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
#endif

#ifndef GL_PIXEL_SUBSAMPLE_2424_SGIX
#define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
#endif

#ifndef GL_PIXEL_SUBSAMPLE_4242_SGIX
#define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
#endif

#ifndef GL_SGIX_tag_sample_buffer
#define GL_SGIX_tag_sample_buffer 1
#endif

#ifdef glTagSampleBufferSGIX
#undef glTagSampleBufferSGIX
#endif
#ifdef PFNGLTAGSAMPLEBUFFERSGIXPROC
#undef PFNGLTAGSAMPLEBUFFERSGIXPROC
#endif
typedef void  (*PFNGLTAGSAMPLEBUFFERSGIXPROC)(void);

#ifndef GL_SGIX_texture_add_env
#define GL_SGIX_texture_add_env 1
#endif

#ifndef GL_TEXTURE_ENV_BIAS_SGIX
#define GL_TEXTURE_ENV_BIAS_SGIX 0x80BE
#endif

#ifndef GL_SGIX_texture_coordinate_clamp
#define GL_SGIX_texture_coordinate_clamp 1
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_S_SGIX
#define GL_TEXTURE_MAX_CLAMP_S_SGIX 0x8369
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_T_SGIX
#define GL_TEXTURE_MAX_CLAMP_T_SGIX 0x836A
#endif

#ifndef GL_TEXTURE_MAX_CLAMP_R_SGIX
#define GL_TEXTURE_MAX_CLAMP_R_SGIX 0x836B
#endif

#ifndef GL_SGIX_texture_lod_bias
#define GL_SGIX_texture_lod_bias 1
#endif

#ifndef GL_TEXTURE_LOD_BIAS_S_SGIX
#define GL_TEXTURE_LOD_BIAS_S_SGIX 0x818E
#endif

#ifndef GL_TEXTURE_LOD_BIAS_T_SGIX
#define GL_TEXTURE_LOD_BIAS_T_SGIX 0x818F
#endif

#ifndef GL_TEXTURE_LOD_BIAS_R_SGIX
#define GL_TEXTURE_LOD_BIAS_R_SGIX 0x8190
#endif

#ifndef GL_SGIX_texture_multi_buffer
#define GL_SGIX_texture_multi_buffer 1
#endif

#ifndef GL_TEXTURE_MULTI_BUFFER_HINT_SGIX
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
#endif

#ifndef GL_SGIX_texture_scale_bias
#define GL_SGIX_texture_scale_bias 1
#endif

#ifndef GL_POST_TEXTURE_FILTER_BIAS_SGIX
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX 0x8179
#endif

#ifndef GL_POST_TEXTURE_FILTER_SCALE_SGIX
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
#endif

#ifndef GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
#endif

#ifndef GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
#endif

#ifndef GL_SGIX_vertex_preclip
#define GL_SGIX_vertex_preclip 1
#endif

#ifndef GL_VERTEX_PRECLIP_SGIX
#define GL_VERTEX_PRECLIP_SGIX 0x83EE
#endif

#ifndef GL_VERTEX_PRECLIP_HINT_SGIX
#define GL_VERTEX_PRECLIP_HINT_SGIX 0x83EF
#endif

#ifndef GL_SGIX_ycrcb
#define GL_SGIX_ycrcb 1
#endif

#ifndef GL_YCRCB_422_SGIX
#define GL_YCRCB_422_SGIX 0x81BB
#endif

#ifndef GL_YCRCB_444_SGIX
#define GL_YCRCB_444_SGIX 0x81BC
#endif

#ifndef GL_SGIX_ycrcb_subsample
#define GL_SGIX_ycrcb_subsample 1
#endif

#ifndef GL_SGIX_ycrcba
#define GL_SGIX_ycrcba 1
#endif

#ifndef GL_YCRCB_SGIX
#define GL_YCRCB_SGIX 0x8318
#endif

#ifndef GL_YCRCBA_SGIX
#define GL_YCRCBA_SGIX 0x8319
#endif

#ifndef GL_SGI_color_matrix
#define GL_SGI_color_matrix 1
#endif

#ifndef GL_COLOR_MATRIX_SGI
#define GL_COLOR_MATRIX_SGI 0x80B1
#endif

#ifndef GL_COLOR_MATRIX_STACK_DEPTH_SGI
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B2
#endif

#ifndef GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_SCALE_SGI
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
#endif

#ifndef GL_POST_COLOR_MATRIX_RED_BIAS_SGI
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
#endif

#ifndef GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
#endif

#ifndef GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
#endif

#ifndef GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
#endif

#ifndef GL_SGI_color_table
#define GL_SGI_color_table 1
#endif

#ifdef glColorTableSGI
#undef glColorTableSGI
#endif
#ifdef PFNGLCOLORTABLESGIPROC
#undef PFNGLCOLORTABLESGIPROC
#endif
typedef void  (*PFNGLCOLORTABLESGIPROC)(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);

#ifdef glColorTableParameterfvSGI
#undef glColorTableParameterfvSGI
#endif
#ifdef PFNGLCOLORTABLEPARAMETERFVSGIPROC
#undef PFNGLCOLORTABLEPARAMETERFVSGIPROC
#endif
typedef void  (*PFNGLCOLORTABLEPARAMETERFVSGIPROC)(GLenum target, GLenum pname, const GLfloat *params);

#ifdef glColorTableParameterivSGI
#undef glColorTableParameterivSGI
#endif
#ifdef PFNGLCOLORTABLEPARAMETERIVSGIPROC
#undef PFNGLCOLORTABLEPARAMETERIVSGIPROC
#endif
typedef void  (*PFNGLCOLORTABLEPARAMETERIVSGIPROC)(GLenum target, GLenum pname, const GLint *params);

#ifdef glCopyColorTableSGI
#undef glCopyColorTableSGI
#endif
#ifdef PFNGLCOPYCOLORTABLESGIPROC
#undef PFNGLCOPYCOLORTABLESGIPROC
#endif
typedef void  (*PFNGLCOPYCOLORTABLESGIPROC)(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);

#ifdef glGetColorTableSGI
#undef glGetColorTableSGI
#endif
#ifdef PFNGLGETCOLORTABLESGIPROC
#undef PFNGLGETCOLORTABLESGIPROC
#endif
typedef void  (*PFNGLGETCOLORTABLESGIPROC)(GLenum target, GLenum format, GLenum type, void *table);

#ifdef glGetColorTableParameterfvSGI
#undef glGetColorTableParameterfvSGI
#endif
#ifdef PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
#undef PFNGLGETCOLORTABLEPARAMETERFVSGIPROC
#endif
typedef void  (*PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)(GLenum target, GLenum pname, GLfloat *params);

#ifdef glGetColorTableParameterivSGI
#undef glGetColorTableParameterivSGI
#endif
#ifdef PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
#undef PFNGLGETCOLORTABLEPARAMETERIVSGIPROC
#endif
typedef void  (*PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)(GLenum target, GLenum pname, GLint *params);

#ifndef GL_COLOR_TABLE_SGI
#define GL_COLOR_TABLE_SGI 0x80D0
#endif

#ifndef GL_POST_CONVOLUTION_COLOR_TABLE_SGI
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
#endif

#ifndef GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
#endif

#ifndef GL_PROXY_COLOR_TABLE_SGI
#define GL_PROXY_COLOR_TABLE_SGI 0x80D3
#endif

#ifndef GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
#endif

#ifndef GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
#endif

#ifndef GL_COLOR_TABLE_SCALE_SGI
#define GL_COLOR_TABLE_SCALE_SGI 0x80D6
#endif

#ifndef GL_COLOR_TABLE_BIAS_SGI
#define GL_COLOR_TABLE_BIAS_SGI 0x80D7
#endif

#ifndef GL_COLOR_TABLE_FORMAT_SGI
#define GL_COLOR_TABLE_FORMAT_SGI 0x80D8
#endif

#ifndef GL_COLOR_TABLE_WIDTH_SGI
#define GL_COLOR_TABLE_WIDTH_SGI 0x80D9
#endif

#ifndef GL_COLOR_TABLE_RED_SIZE_SGI
#define GL_COLOR_TABLE_RED_SIZE_SGI 0x80DA
#endif

#ifndef GL_COLOR_TABLE_GREEN_SIZE_SGI
#define GL_COLOR_TABLE_GREEN_SIZE_SGI 0x80DB
#endif

#ifndef GL_COLOR_TABLE_BLUE_SIZE_SGI
#define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC
#endif

#ifndef GL_COLOR_TABLE_ALPHA_SIZE_SGI
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD
#endif

#ifndef GL_COLOR_TABLE_LUMINANCE_SIZE_SGI
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
#endif

#ifndef GL_COLOR_TABLE_INTENSITY_SIZE_SGI
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
#endif

#ifndef GL_SGI_texture_color_table
#define GL_SGI_texture_color_table 1
#endif

#ifndef GL_TEXTURE_COLOR_TABLE_SGI
#define GL_TEXTURE_COLOR_TABLE_SGI 0x80BC
#endif

#ifndef GL_PROXY_TEXTURE_COLOR_TABLE_SGI
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI 0x80BD
#endif

#ifndef GL_SUNX_constant_data
#define GL_SUNX_constant_data 1
#endif

#ifdef glFinishTextureSUNX
#undef glFinishTextureSUNX
#endif
#ifdef PFNGLFINISHTEXTURESUNXPROC
#undef PFNGLFINISHTEXTURESUNXPROC
#endif
typedef void  (*PFNGLFINISHTEXTURESUNXPROC)(void);

#ifndef GL_UNPACK_CONSTANT_DATA_SUNX
#define GL_UNPACK_CONSTANT_DATA_SUNX 0x81D5
#endif

#ifndef GL_TEXTURE_CONSTANT_DATA_SUNX
#define GL_TEXTURE_CONSTANT_DATA_SUNX 0x81D6
#endif

#ifndef GL_SUN_convolution_border_modes
#define GL_SUN_convolution_border_modes 1
#endif

#ifndef GL_WRAP_BORDER_SUN
#define GL_WRAP_BORDER_SUN 0x81D4
#endif

#ifndef GL_SUN_global_alpha
#define GL_SUN_global_alpha 1
#endif

#ifdef glGlobalAlphaFactorbSUN
#undef glGlobalAlphaFactorbSUN
#endif
#ifdef PFNGLGLOBALALPHAFACTORBSUNPROC
#undef PFNGLGLOBALALPHAFACTORBSUNPROC
#endif
typedef void  (*PFNGLGLOBALALPHAFACTORBSUNPROC)(GLbyte factor);

#ifdef glGlobalAlphaFactorsSUN
#undef glGlobalAlphaFactorsSUN
#endif
#ifdef PFNGLGLOBALALPHAFACTORSSUNPROC
#undef PFNGLGLOBALALPHAFACTORSSUNPROC
#endif
typedef void  (*PFNGLGLOBALALPHAFACTORSSUNPROC)(GLshort factor);

#ifdef glGlobalAlphaFactoriSUN
#undef glGlobalAlphaFactoriSUN
#endif
#ifdef PFNGLGLOBALALPHAFACTORISUNPROC
#undef PFNGLGLOBALALPHAFACTORISUNPROC
#endif
typedef void  (*PFNGLGLOBALALPHAFACTORISUNPROC)(GLint factor);

#ifdef glGlobalAlphaFactorfSUN
#undef glGlobalAlphaFactorfSUN
#endif
#ifdef PFNGLGLOBALALPHAFACTORFSUNPROC
#undef PFNGLGLOBALALPHAFACTORFSUNPROC
#endif
typedef void  (*PFNGLGLOBALALPHAFACTORFSUNPROC)(GLfloat factor);

#ifdef glGlobalAlphaFactordSUN
#undef glGlobalAlphaFactordSUN
#endif
#ifdef PFNGLGLOBALALPHAFACTORDSUNPROC
#undef PFNGLGLOBALALPHAFACTORDSUNPROC
#endif
typedef void  (*PFNGLGLOBALALPHAFACTORDSUNPROC)(GLdouble factor);

#ifdef glGlobalAlphaFactorubSUN
#undef glGlobalAlphaFactorubSUN
#endif
#ifdef PFNGLGLOBALALPHAFACTORUBSUNPROC
#undef PFNGLGLOBALALPHAFACTORUBSUNPROC
#endif
typedef void  (*PFNGLGLOBALALPHAFACTORUBSUNPROC)(GLubyte factor);

#ifdef glGlobalAlphaFactorusSUN
#undef glGlobalAlphaFactorusSUN
#endif
#ifdef PFNGLGLOBALALPHAFACTORUSSUNPROC
#undef PFNGLGLOBALALPHAFACTORUSSUNPROC
#endif
typedef void  (*PFNGLGLOBALALPHAFACTORUSSUNPROC)(GLushort factor);

#ifdef glGlobalAlphaFactoruiSUN
#undef glGlobalAlphaFactoruiSUN
#endif
#ifdef PFNGLGLOBALALPHAFACTORUISUNPROC
#undef PFNGLGLOBALALPHAFACTORUISUNPROC
#endif
typedef void  (*PFNGLGLOBALALPHAFACTORUISUNPROC)(GLuint factor);

#ifndef GL_GLOBAL_ALPHA_SUN
#define GL_GLOBAL_ALPHA_SUN 0x81D9
#endif

#ifndef GL_GLOBAL_ALPHA_FACTOR_SUN
#define GL_GLOBAL_ALPHA_FACTOR_SUN 0x81DA
#endif

#ifndef GL_SUN_mesh_array
#define GL_SUN_mesh_array 1
#endif

#ifdef glDrawMeshArraysSUN
#undef glDrawMeshArraysSUN
#endif
#ifdef PFNGLDRAWMESHARRAYSSUNPROC
#undef PFNGLDRAWMESHARRAYSSUNPROC
#endif
typedef void  (*PFNGLDRAWMESHARRAYSSUNPROC)(GLenum mode, GLint first, GLsizei count, GLsizei width);

#ifndef GL_QUAD_MESH_SUN
#define GL_QUAD_MESH_SUN 0x8614
#endif

#ifndef GL_TRIANGLE_MESH_SUN
#define GL_TRIANGLE_MESH_SUN 0x8615
#endif

#ifndef GL_SUN_slice_accum
#define GL_SUN_slice_accum 1
#endif

#ifndef GL_SLICE_ACCUM_SUN
#define GL_SLICE_ACCUM_SUN 0x85CC
#endif

#ifndef GL_SUN_triangle_list
#define GL_SUN_triangle_list 1
#endif

#ifdef glReplacementCodeuiSUN
#undef glReplacementCodeuiSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUISUNPROC
#undef PFNGLREPLACEMENTCODEUISUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUISUNPROC)(GLuint code);

#ifdef glReplacementCodeusSUN
#undef glReplacementCodeusSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUSSUNPROC
#undef PFNGLREPLACEMENTCODEUSSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUSSUNPROC)(GLushort code);

#ifdef glReplacementCodeubSUN
#undef glReplacementCodeubSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUBSUNPROC
#undef PFNGLREPLACEMENTCODEUBSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUBSUNPROC)(GLubyte code);

#ifdef glReplacementCodeuivSUN
#undef glReplacementCodeuivSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUIVSUNPROC
#undef PFNGLREPLACEMENTCODEUIVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUIVSUNPROC)(const GLuint *code);

#ifdef glReplacementCodeusvSUN
#undef glReplacementCodeusvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUSVSUNPROC
#undef PFNGLREPLACEMENTCODEUSVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUSVSUNPROC)(const GLushort *code);

#ifdef glReplacementCodeubvSUN
#undef glReplacementCodeubvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUBVSUNPROC
#undef PFNGLREPLACEMENTCODEUBVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUBVSUNPROC)(const GLubyte *code);

#ifdef glReplacementCodePointerSUN
#undef glReplacementCodePointerSUN
#endif
#ifdef PFNGLREPLACEMENTCODEPOINTERSUNPROC
#undef PFNGLREPLACEMENTCODEPOINTERSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEPOINTERSUNPROC)(GLenum type, GLsizei stride, const void **pointer);

#ifndef GL_RESTART_SUN
#define GL_RESTART_SUN 0x0001
#endif

#ifndef GL_REPLACE_MIDDLE_SUN
#define GL_REPLACE_MIDDLE_SUN 0x0002
#endif

#ifndef GL_REPLACE_OLDEST_SUN
#define GL_REPLACE_OLDEST_SUN 0x0003
#endif

#ifndef GL_TRIANGLE_LIST_SUN
#define GL_TRIANGLE_LIST_SUN 0x81D7
#endif

#ifndef GL_REPLACEMENT_CODE_SUN
#define GL_REPLACEMENT_CODE_SUN 0x81D8
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_SUN
#define GL_REPLACEMENT_CODE_ARRAY_SUN 0x85C0
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
#endif

#ifndef GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
#endif

#ifndef GL_R1UI_V3F_SUN
#define GL_R1UI_V3F_SUN 0x85C4
#endif

#ifndef GL_R1UI_C4UB_V3F_SUN
#define GL_R1UI_C4UB_V3F_SUN 0x85C5
#endif

#ifndef GL_R1UI_C3F_V3F_SUN
#define GL_R1UI_C3F_V3F_SUN 0x85C6
#endif

#ifndef GL_R1UI_N3F_V3F_SUN
#define GL_R1UI_N3F_V3F_SUN 0x85C7
#endif

#ifndef GL_R1UI_C4F_N3F_V3F_SUN
#define GL_R1UI_C4F_N3F_V3F_SUN 0x85C8
#endif

#ifndef GL_R1UI_T2F_V3F_SUN
#define GL_R1UI_T2F_V3F_SUN 0x85C9
#endif

#ifndef GL_R1UI_T2F_N3F_V3F_SUN
#define GL_R1UI_T2F_N3F_V3F_SUN 0x85CA
#endif

#ifndef GL_R1UI_T2F_C4F_N3F_V3F_SUN
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN 0x85CB
#endif

#ifndef GL_SUN_vertex
#define GL_SUN_vertex 1
#endif

#ifdef glColor4ubVertex2fSUN
#undef glColor4ubVertex2fSUN
#endif
#ifdef PFNGLCOLOR4UBVERTEX2FSUNPROC
#undef PFNGLCOLOR4UBVERTEX2FSUNPROC
#endif
typedef void  (*PFNGLCOLOR4UBVERTEX2FSUNPROC)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);

#ifdef glColor4ubVertex2fvSUN
#undef glColor4ubVertex2fvSUN
#endif
#ifdef PFNGLCOLOR4UBVERTEX2FVSUNPROC
#undef PFNGLCOLOR4UBVERTEX2FVSUNPROC
#endif
typedef void  (*PFNGLCOLOR4UBVERTEX2FVSUNPROC)(const GLubyte *c, const GLfloat *v);

#ifdef glColor4ubVertex3fSUN
#undef glColor4ubVertex3fSUN
#endif
#ifdef PFNGLCOLOR4UBVERTEX3FSUNPROC
#undef PFNGLCOLOR4UBVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLCOLOR4UBVERTEX3FSUNPROC)(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);

#ifdef glColor4ubVertex3fvSUN
#undef glColor4ubVertex3fvSUN
#endif
#ifdef PFNGLCOLOR4UBVERTEX3FVSUNPROC
#undef PFNGLCOLOR4UBVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLCOLOR4UBVERTEX3FVSUNPROC)(const GLubyte *c, const GLfloat *v);

#ifdef glColor3fVertex3fSUN
#undef glColor3fVertex3fSUN
#endif
#ifdef PFNGLCOLOR3FVERTEX3FSUNPROC
#undef PFNGLCOLOR3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLCOLOR3FVERTEX3FSUNPROC)(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);

#ifdef glColor3fVertex3fvSUN
#undef glColor3fVertex3fvSUN
#endif
#ifdef PFNGLCOLOR3FVERTEX3FVSUNPROC
#undef PFNGLCOLOR3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLCOLOR3FVERTEX3FVSUNPROC)(const GLfloat *c, const GLfloat *v);

#ifdef glNormal3fVertex3fSUN
#undef glNormal3fVertex3fSUN
#endif
#ifdef PFNGLNORMAL3FVERTEX3FSUNPROC
#undef PFNGLNORMAL3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLNORMAL3FVERTEX3FSUNPROC)(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);

#ifdef glNormal3fVertex3fvSUN
#undef glNormal3fVertex3fvSUN
#endif
#ifdef PFNGLNORMAL3FVERTEX3FVSUNPROC
#undef PFNGLNORMAL3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLNORMAL3FVERTEX3FVSUNPROC)(const GLfloat *n, const GLfloat *v);

#ifdef glColor4fNormal3fVertex3fSUN
#undef glColor4fNormal3fVertex3fSUN
#endif
#ifdef PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
#undef PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);

#ifdef glColor4fNormal3fVertex3fvSUN
#undef glColor4fNormal3fVertex3fvSUN
#endif
#ifdef PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
#undef PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat *c, const GLfloat *n, const GLfloat *v);

#ifdef glTexCoord2fVertex3fSUN
#undef glTexCoord2fVertex3fSUN
#endif
#ifdef PFNGLTEXCOORD2FVERTEX3FSUNPROC
#undef PFNGLTEXCOORD2FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);

#ifdef glTexCoord2fVertex3fvSUN
#undef glTexCoord2fVertex3fvSUN
#endif
#ifdef PFNGLTEXCOORD2FVERTEX3FVSUNPROC
#undef PFNGLTEXCOORD2FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FVERTEX3FVSUNPROC)(const GLfloat *tc, const GLfloat *v);

#ifdef glTexCoord4fVertex4fSUN
#undef glTexCoord4fVertex4fSUN
#endif
#ifdef PFNGLTEXCOORD4FVERTEX4FSUNPROC
#undef PFNGLTEXCOORD4FVERTEX4FSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD4FVERTEX4FSUNPROC)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glTexCoord4fVertex4fvSUN
#undef glTexCoord4fVertex4fvSUN
#endif
#ifdef PFNGLTEXCOORD4FVERTEX4FVSUNPROC
#undef PFNGLTEXCOORD4FVERTEX4FVSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD4FVERTEX4FVSUNPROC)(const GLfloat *tc, const GLfloat *v);

#ifdef glTexCoord2fColor4ubVertex3fSUN
#undef glTexCoord2fColor4ubVertex3fSUN
#endif
#ifdef PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
#undef PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);

#ifdef glTexCoord2fColor4ubVertex3fvSUN
#undef glTexCoord2fColor4ubVertex3fvSUN
#endif
#ifdef PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
#undef PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)(const GLfloat *tc, const GLubyte *c, const GLfloat *v);

#ifdef glTexCoord2fColor3fVertex3fSUN
#undef glTexCoord2fColor3fVertex3fSUN
#endif
#ifdef PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
#undef PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);

#ifdef glTexCoord2fColor3fVertex3fvSUN
#undef glTexCoord2fColor3fVertex3fvSUN
#endif
#ifdef PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
#undef PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)(const GLfloat *tc, const GLfloat *c, const GLfloat *v);

#ifdef glTexCoord2fNormal3fVertex3fSUN
#undef glTexCoord2fNormal3fVertex3fSUN
#endif
#ifdef PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
#undef PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);

#ifdef glTexCoord2fNormal3fVertex3fvSUN
#undef glTexCoord2fNormal3fVertex3fvSUN
#endif
#ifdef PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
#undef PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat *tc, const GLfloat *n, const GLfloat *v);

#ifdef glTexCoord2fColor4fNormal3fVertex3fSUN
#undef glTexCoord2fColor4fNormal3fVertex3fSUN
#endif
#ifdef PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
#undef PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);

#ifdef glTexCoord2fColor4fNormal3fVertex3fvSUN
#undef glTexCoord2fColor4fNormal3fVertex3fvSUN
#endif
#ifdef PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
#undef PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);

#ifdef glTexCoord4fColor4fNormal3fVertex4fSUN
#undef glTexCoord4fColor4fNormal3fVertex4fSUN
#endif
#ifdef PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
#undef PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);

#ifdef glTexCoord4fColor4fNormal3fVertex4fvSUN
#undef glTexCoord4fColor4fNormal3fVertex4fvSUN
#endif
#ifdef PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
#undef PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC
#endif
typedef void  (*PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);

#ifdef glReplacementCodeuiVertex3fSUN
#undef glReplacementCodeuiVertex3fSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
#undef PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)(GLuint rc, GLfloat x, GLfloat y, GLfloat z);

#ifdef glReplacementCodeuiVertex3fvSUN
#undef glReplacementCodeuiVertex3fvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
#undef PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)(const GLuint *rc, const GLfloat *v);

#ifdef glReplacementCodeuiColor4ubVertex3fSUN
#undef glReplacementCodeuiColor4ubVertex3fSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
#undef PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);

#ifdef glReplacementCodeuiColor4ubVertex3fvSUN
#undef glReplacementCodeuiColor4ubVertex3fvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
#undef PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)(const GLuint *rc, const GLubyte *c, const GLfloat *v);

#ifdef glReplacementCodeuiColor3fVertex3fSUN
#undef glReplacementCodeuiColor3fVertex3fSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
#undef PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);

#ifdef glReplacementCodeuiColor3fVertex3fvSUN
#undef glReplacementCodeuiColor3fVertex3fvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
#undef PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)(const GLuint *rc, const GLfloat *c, const GLfloat *v);

#ifdef glReplacementCodeuiNormal3fVertex3fSUN
#undef glReplacementCodeuiNormal3fVertex3fSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
#undef PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);

#ifdef glReplacementCodeuiNormal3fVertex3fvSUN
#undef glReplacementCodeuiNormal3fVertex3fvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
#undef PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)(const GLuint *rc, const GLfloat *n, const GLfloat *v);

#ifdef glReplacementCodeuiColor4fNormal3fVertex3fSUN
#undef glReplacementCodeuiColor4fNormal3fVertex3fSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
#undef PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);

#ifdef glReplacementCodeuiColor4fNormal3fVertex3fvSUN
#undef glReplacementCodeuiColor4fNormal3fVertex3fvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
#undef PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);

#ifdef glReplacementCodeuiTexCoord2fVertex3fSUN
#undef glReplacementCodeuiTexCoord2fVertex3fSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
#undef PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);

#ifdef glReplacementCodeuiTexCoord2fVertex3fvSUN
#undef glReplacementCodeuiTexCoord2fVertex3fvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
#undef PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)(const GLuint *rc, const GLfloat *tc, const GLfloat *v);

#ifdef glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
#undef glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
#undef PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);

#ifdef glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
#undef glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
#undef PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);

#ifdef glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
#undef glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
#undef PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);

#ifdef glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
#undef glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
#endif
#ifdef PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
#undef PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC
#endif
typedef void  (*PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);

#ifndef GL_VIV_shader_binary
#define GL_VIV_shader_binary 1
#endif

#ifndef GL_SHADER_BINARY_VIV
#define GL_SHADER_BINARY_VIV 0x8FC4
#endif

#ifndef GL_WIN_phong_shading
#define GL_WIN_phong_shading 1
#endif

#ifndef GL_PHONG_WIN
#define GL_PHONG_WIN 0x80EA
#endif

#ifndef GL_PHONG_HINT_WIN
#define GL_PHONG_HINT_WIN 0x80EB
#endif

#ifndef GL_WIN_specular_fog
#define GL_WIN_specular_fog 1
#endif

#ifndef GL_FOG_SPECULAR_TEXTURE_WIN
#define GL_FOG_SPECULAR_TEXTURE_WIN 0x80EC
#endif

extern bool GLFL_GL_3DFX_multisample;
extern bool GLFL_GL_3DFX_tbuffer;
extern bool GLFL_GL_3DFX_texture_compression_FXT1;
extern bool GLFL_GL_AMD_blend_minmax_factor;
extern bool GLFL_GL_AMD_compressed_3DC_texture;
extern bool GLFL_GL_AMD_compressed_ATC_texture;
extern bool GLFL_GL_AMD_conservative_depth;
extern bool GLFL_GL_AMD_debug_output;
extern bool GLFL_GL_AMD_depth_clamp_separate;
extern bool GLFL_GL_AMD_draw_buffers_blend;
extern bool GLFL_GL_AMD_gcn_shader;
extern bool GLFL_GL_AMD_gpu_shader_int64;
extern bool GLFL_GL_AMD_interleaved_elements;
extern bool GLFL_GL_AMD_multi_draw_indirect;
extern bool GLFL_GL_AMD_name_gen_delete;
extern bool GLFL_GL_AMD_occlusion_query_event;
extern bool GLFL_GL_AMD_performance_monitor;
extern bool GLFL_GL_AMD_pinned_memory;
extern bool GLFL_GL_AMD_program_binary_Z400;
extern bool GLFL_GL_AMD_query_buffer_object;
extern bool GLFL_GL_AMD_sample_positions;
extern bool GLFL_GL_AMD_seamless_cubemap_per_texture;
extern bool GLFL_GL_AMD_shader_atomic_counter_ops;
extern bool GLFL_GL_AMD_shader_stencil_export;
extern bool GLFL_GL_AMD_shader_trinary_minmax;
extern bool GLFL_GL_AMD_sparse_texture;
extern bool GLFL_GL_AMD_stencil_operation_extended;
extern bool GLFL_GL_AMD_texture_texture4;
extern bool GLFL_GL_AMD_transform_feedback3_lines_triangles;
extern bool GLFL_GL_AMD_transform_feedback4;
extern bool GLFL_GL_AMD_vertex_shader_layer;
extern bool GLFL_GL_AMD_vertex_shader_tessellator;
extern bool GLFL_GL_AMD_vertex_shader_viewport_index;
extern bool GLFL_GL_ANDROID_extension_pack_es31a;
extern bool GLFL_GL_ANGLE_depth_texture;
extern bool GLFL_GL_ANGLE_framebuffer_blit;
extern bool GLFL_GL_ANGLE_framebuffer_multisample;
extern bool GLFL_GL_ANGLE_instanced_arrays;
extern bool GLFL_GL_ANGLE_pack_reverse_row_order;
extern bool GLFL_GL_ANGLE_program_binary;
extern bool GLFL_GL_ANGLE_texture_compression_dxt3;
extern bool GLFL_GL_ANGLE_texture_compression_dxt5;
extern bool GLFL_GL_ANGLE_texture_usage;
extern bool GLFL_GL_ANGLE_translated_shader_source;
extern bool GLFL_GL_APPLE_aux_depth_stencil;
extern bool GLFL_GL_APPLE_client_storage;
extern bool GLFL_GL_APPLE_clip_distance;
extern bool GLFL_GL_APPLE_color_buffer_packed_float;
extern bool GLFL_GL_APPLE_copy_texture_levels;
extern bool GLFL_GL_APPLE_element_array;
extern bool GLFL_GL_APPLE_fence;
extern bool GLFL_GL_APPLE_float_pixels;
extern bool GLFL_GL_APPLE_flush_buffer_range;
extern bool GLFL_GL_APPLE_framebuffer_multisample;
extern bool GLFL_GL_APPLE_object_purgeable;
extern bool GLFL_GL_APPLE_rgb_422;
extern bool GLFL_GL_APPLE_row_bytes;
extern bool GLFL_GL_APPLE_specular_vector;
extern bool GLFL_GL_APPLE_sync;
extern bool GLFL_GL_APPLE_texture_2D_limited_npot;
extern bool GLFL_GL_APPLE_texture_format_BGRA8888;
extern bool GLFL_GL_APPLE_texture_max_level;
extern bool GLFL_GL_APPLE_texture_packed_float;
extern bool GLFL_GL_APPLE_texture_range;
extern bool GLFL_GL_APPLE_transform_hint;
extern bool GLFL_GL_APPLE_vertex_array_object;
extern bool GLFL_GL_APPLE_vertex_array_range;
extern bool GLFL_GL_APPLE_vertex_program_evaluators;
extern bool GLFL_GL_APPLE_ycbcr_422;
extern bool GLFL_GL_ARB_ES2_compatibility;
extern bool GLFL_GL_ARB_ES3_1_compatibility;
extern bool GLFL_GL_ARB_ES3_compatibility;
extern bool GLFL_GL_ARB_arrays_of_arrays;
extern bool GLFL_GL_ARB_base_instance;
extern bool GLFL_GL_ARB_bindless_texture;
extern bool GLFL_GL_ARB_blend_func_extended;
extern bool GLFL_GL_ARB_buffer_storage;
extern bool GLFL_GL_ARB_cl_event;
extern bool GLFL_GL_ARB_clear_buffer_object;
extern bool GLFL_GL_ARB_clear_texture;
extern bool GLFL_GL_ARB_clip_control;
extern bool GLFL_GL_ARB_color_buffer_float;
extern bool GLFL_GL_ARB_compatibility;
extern bool GLFL_GL_ARB_compressed_texture_pixel_storage;
extern bool GLFL_GL_ARB_compute_shader;
extern bool GLFL_GL_ARB_compute_variable_group_size;
extern bool GLFL_GL_ARB_conditional_render_inverted;
extern bool GLFL_GL_ARB_conservative_depth;
extern bool GLFL_GL_ARB_copy_buffer;
extern bool GLFL_GL_ARB_copy_image;
extern bool GLFL_GL_ARB_cull_distance;
extern bool GLFL_GL_ARB_debug_output;
extern bool GLFL_GL_ARB_depth_buffer_float;
extern bool GLFL_GL_ARB_depth_clamp;
extern bool GLFL_GL_ARB_depth_texture;
extern bool GLFL_GL_ARB_derivative_control;
extern bool GLFL_GL_ARB_direct_state_access;
extern bool GLFL_GL_ARB_draw_buffers;
extern bool GLFL_GL_ARB_draw_buffers_blend;
extern bool GLFL_GL_ARB_draw_elements_base_vertex;
extern bool GLFL_GL_ARB_draw_indirect;
extern bool GLFL_GL_ARB_draw_instanced;
extern bool GLFL_GL_ARB_enhanced_layouts;
extern bool GLFL_GL_ARB_explicit_attrib_location;
extern bool GLFL_GL_ARB_explicit_uniform_location;
extern bool GLFL_GL_ARB_fragment_coord_conventions;
extern bool GLFL_GL_ARB_fragment_layer_viewport;
extern bool GLFL_GL_ARB_fragment_program;
extern bool GLFL_GL_ARB_fragment_program_shadow;
extern bool GLFL_GL_ARB_fragment_shader;
extern bool GLFL_GL_ARB_framebuffer_no_attachments;
extern bool GLFL_GL_ARB_framebuffer_object;
extern bool GLFL_GL_ARB_framebuffer_sRGB;
extern bool GLFL_GL_ARB_geometry_shader4;
extern bool GLFL_GL_ARB_get_program_binary;
extern bool GLFL_GL_ARB_get_texture_sub_image;
extern bool GLFL_GL_ARB_gpu_shader5;
extern bool GLFL_GL_ARB_gpu_shader_fp64;
extern bool GLFL_GL_ARB_half_float_pixel;
extern bool GLFL_GL_ARB_half_float_vertex;
extern bool GLFL_GL_ARB_imaging;
extern bool GLFL_GL_ARB_indirect_parameters;
extern bool GLFL_GL_ARB_instanced_arrays;
extern bool GLFL_GL_ARB_internalformat_query;
extern bool GLFL_GL_ARB_internalformat_query2;
extern bool GLFL_GL_ARB_invalidate_subdata;
extern bool GLFL_GL_ARB_map_buffer_alignment;
extern bool GLFL_GL_ARB_map_buffer_range;
extern bool GLFL_GL_ARB_matrix_palette;
extern bool GLFL_GL_ARB_multi_bind;
extern bool GLFL_GL_ARB_multi_draw_indirect;
extern bool GLFL_GL_ARB_multisample;
extern bool GLFL_GL_ARB_multitexture;
extern bool GLFL_GL_ARB_occlusion_query;
extern bool GLFL_GL_ARB_occlusion_query2;
extern bool GLFL_GL_ARB_pipeline_statistics_query;
extern bool GLFL_GL_ARB_pixel_buffer_object;
extern bool GLFL_GL_ARB_point_parameters;
extern bool GLFL_GL_ARB_point_sprite;
extern bool GLFL_GL_ARB_program_interface_query;
extern bool GLFL_GL_ARB_provoking_vertex;
extern bool GLFL_GL_ARB_query_buffer_object;
extern bool GLFL_GL_ARB_robust_buffer_access_behavior;
extern bool GLFL_GL_ARB_robustness;
extern bool GLFL_GL_ARB_robustness_isolation;
extern bool GLFL_GL_ARB_sample_shading;
extern bool GLFL_GL_ARB_sampler_objects;
extern bool GLFL_GL_ARB_seamless_cube_map;
extern bool GLFL_GL_ARB_seamless_cubemap_per_texture;
extern bool GLFL_GL_ARB_separate_shader_objects;
extern bool GLFL_GL_ARB_shader_atomic_counters;
extern bool GLFL_GL_ARB_shader_bit_encoding;
extern bool GLFL_GL_ARB_shader_draw_parameters;
extern bool GLFL_GL_ARB_shader_group_vote;
extern bool GLFL_GL_ARB_shader_image_load_store;
extern bool GLFL_GL_ARB_shader_image_size;
extern bool GLFL_GL_ARB_shader_objects;
extern bool GLFL_GL_ARB_shader_precision;
extern bool GLFL_GL_ARB_shader_stencil_export;
extern bool GLFL_GL_ARB_shader_storage_buffer_object;
extern bool GLFL_GL_ARB_shader_subroutine;
extern bool GLFL_GL_ARB_shader_texture_image_samples;
extern bool GLFL_GL_ARB_shader_texture_lod;
extern bool GLFL_GL_ARB_shading_language_100;
extern bool GLFL_GL_ARB_shading_language_420pack;
extern bool GLFL_GL_ARB_shading_language_include;
extern bool GLFL_GL_ARB_shading_language_packing;
extern bool GLFL_GL_ARB_shadow;
extern bool GLFL_GL_ARB_shadow_ambient;
extern bool GLFL_GL_ARB_sparse_buffer;
extern bool GLFL_GL_ARB_sparse_texture;
extern bool GLFL_GL_ARB_stencil_texturing;
extern bool GLFL_GL_ARB_sync;
extern bool GLFL_GL_ARB_tessellation_shader;
extern bool GLFL_GL_ARB_texture_barrier;
extern bool GLFL_GL_ARB_texture_border_clamp;
extern bool GLFL_GL_ARB_texture_buffer_object;
extern bool GLFL_GL_ARB_texture_buffer_object_rgb32;
extern bool GLFL_GL_ARB_texture_buffer_range;
extern bool GLFL_GL_ARB_texture_compression;
extern bool GLFL_GL_ARB_texture_compression_bptc;
extern bool GLFL_GL_ARB_texture_compression_rgtc;
extern bool GLFL_GL_ARB_texture_cube_map;
extern bool GLFL_GL_ARB_texture_cube_map_array;
extern bool GLFL_GL_ARB_texture_env_add;
extern bool GLFL_GL_ARB_texture_env_combine;
extern bool GLFL_GL_ARB_texture_env_crossbar;
extern bool GLFL_GL_ARB_texture_env_dot3;
extern bool GLFL_GL_ARB_texture_float;
extern bool GLFL_GL_ARB_texture_gather;
extern bool GLFL_GL_ARB_texture_mirror_clamp_to_edge;
extern bool GLFL_GL_ARB_texture_mirrored_repeat;
extern bool GLFL_GL_ARB_texture_multisample;
extern bool GLFL_GL_ARB_texture_non_power_of_two;
extern bool GLFL_GL_ARB_texture_query_levels;
extern bool GLFL_GL_ARB_texture_query_lod;
extern bool GLFL_GL_ARB_texture_rectangle;
extern bool GLFL_GL_ARB_texture_rg;
extern bool GLFL_GL_ARB_texture_rgb10_a2ui;
extern bool GLFL_GL_ARB_texture_stencil8;
extern bool GLFL_GL_ARB_texture_storage;
extern bool GLFL_GL_ARB_texture_storage_multisample;
extern bool GLFL_GL_ARB_texture_swizzle;
extern bool GLFL_GL_ARB_texture_view;
extern bool GLFL_GL_ARB_timer_query;
extern bool GLFL_GL_ARB_transform_feedback2;
extern bool GLFL_GL_ARB_transform_feedback3;
extern bool GLFL_GL_ARB_transform_feedback_instanced;
extern bool GLFL_GL_ARB_transform_feedback_overflow_query;
extern bool GLFL_GL_ARB_transpose_matrix;
extern bool GLFL_GL_ARB_uniform_buffer_object;
extern bool GLFL_GL_ARB_vertex_array_bgra;
extern bool GLFL_GL_ARB_vertex_array_object;
extern bool GLFL_GL_ARB_vertex_attrib_64bit;
extern bool GLFL_GL_ARB_vertex_attrib_binding;
extern bool GLFL_GL_ARB_vertex_blend;
extern bool GLFL_GL_ARB_vertex_buffer_object;
extern bool GLFL_GL_ARB_vertex_program;
extern bool GLFL_GL_ARB_vertex_shader;
extern bool GLFL_GL_ARB_vertex_type_10f_11f_11f_rev;
extern bool GLFL_GL_ARB_vertex_type_2_10_10_10_rev;
extern bool GLFL_GL_ARB_viewport_array;
extern bool GLFL_GL_ARB_window_pos;
extern bool GLFL_GL_ARM_mali_program_binary;
extern bool GLFL_GL_ARM_mali_shader_binary;
extern bool GLFL_GL_ARM_rgba8;
extern bool GLFL_GL_ARM_shader_framebuffer_fetch;
extern bool GLFL_GL_ARM_shader_framebuffer_fetch_depth_stencil;
extern bool GLFL_GL_ATI_draw_buffers;
extern bool GLFL_GL_ATI_element_array;
extern bool GLFL_GL_ATI_envmap_bumpmap;
extern bool GLFL_GL_ATI_fragment_shader;
extern bool GLFL_GL_ATI_map_object_buffer;
extern bool GLFL_GL_ATI_meminfo;
extern bool GLFL_GL_ATI_pixel_format_float;
extern bool GLFL_GL_ATI_pn_triangles;
extern bool GLFL_GL_ATI_separate_stencil;
extern bool GLFL_GL_ATI_text_fragment_shader;
extern bool GLFL_GL_ATI_texture_env_combine3;
extern bool GLFL_GL_ATI_texture_float;
extern bool GLFL_GL_ATI_texture_mirror_once;
extern bool GLFL_GL_ATI_vertex_array_object;
extern bool GLFL_GL_ATI_vertex_attrib_array_object;
extern bool GLFL_GL_ATI_vertex_streams;
extern bool GLFL_GL_DMP_program_binary;
extern bool GLFL_GL_DMP_shader_binary;
extern bool GLFL_GL_EXT_422_pixels;
extern bool GLFL_GL_EXT_abgr;
extern bool GLFL_GL_EXT_base_instance;
extern bool GLFL_GL_EXT_bgra;
extern bool GLFL_GL_EXT_bindable_uniform;
extern bool GLFL_GL_EXT_blend_color;
extern bool GLFL_GL_EXT_blend_equation_separate;
extern bool GLFL_GL_EXT_blend_func_separate;
extern bool GLFL_GL_EXT_blend_logic_op;
extern bool GLFL_GL_EXT_blend_minmax;
extern bool GLFL_GL_EXT_blend_subtract;
extern bool GLFL_GL_EXT_buffer_storage;
extern bool GLFL_GL_EXT_clip_volume_hint;
extern bool GLFL_GL_EXT_cmyka;
extern bool GLFL_GL_EXT_color_buffer_half_float;
extern bool GLFL_GL_EXT_color_subtable;
extern bool GLFL_GL_EXT_compiled_vertex_array;
extern bool GLFL_GL_EXT_convolution;
extern bool GLFL_GL_EXT_coordinate_frame;
extern bool GLFL_GL_EXT_copy_image;
extern bool GLFL_GL_EXT_copy_texture;
extern bool GLFL_GL_EXT_cull_vertex;
extern bool GLFL_GL_EXT_debug_label;
extern bool GLFL_GL_EXT_debug_marker;
extern bool GLFL_GL_EXT_depth_bounds_test;
extern bool GLFL_GL_EXT_direct_state_access;
extern bool GLFL_GL_EXT_discard_framebuffer;
extern bool GLFL_GL_EXT_disjoint_timer_query;
extern bool GLFL_GL_EXT_draw_buffers;
extern bool GLFL_GL_EXT_draw_buffers2;
extern bool GLFL_GL_EXT_draw_buffers_indexed;
extern bool GLFL_GL_EXT_draw_elements_base_vertex;
extern bool GLFL_GL_EXT_draw_instanced;
extern bool GLFL_GL_EXT_draw_range_elements;
extern bool GLFL_GL_EXT_float_blend;
extern bool GLFL_GL_EXT_fog_coord;
extern bool GLFL_GL_EXT_framebuffer_blit;
extern bool GLFL_GL_EXT_framebuffer_multisample;
extern bool GLFL_GL_EXT_framebuffer_multisample_blit_scaled;
extern bool GLFL_GL_EXT_framebuffer_object;
extern bool GLFL_GL_EXT_framebuffer_sRGB;
extern bool GLFL_GL_EXT_geometry_point_size;
extern bool GLFL_GL_EXT_geometry_shader;
extern bool GLFL_GL_EXT_geometry_shader4;
extern bool GLFL_GL_EXT_gpu_program_parameters;
extern bool GLFL_GL_EXT_gpu_shader4;
extern bool GLFL_GL_EXT_gpu_shader5;
extern bool GLFL_GL_EXT_histogram;
extern bool GLFL_GL_EXT_index_array_formats;
extern bool GLFL_GL_EXT_index_func;
extern bool GLFL_GL_EXT_index_material;
extern bool GLFL_GL_EXT_index_texture;
extern bool GLFL_GL_EXT_instanced_arrays;
extern bool GLFL_GL_EXT_light_texture;
extern bool GLFL_GL_EXT_map_buffer_range;
extern bool GLFL_GL_EXT_misc_attribute;
extern bool GLFL_GL_EXT_multi_draw_arrays;
extern bool GLFL_GL_EXT_multi_draw_indirect;
extern bool GLFL_GL_EXT_multisample;
extern bool GLFL_GL_EXT_multisampled_render_to_texture;
extern bool GLFL_GL_EXT_multiview_draw_buffers;
extern bool GLFL_GL_EXT_occlusion_query_boolean;
extern bool GLFL_GL_EXT_packed_depth_stencil;
extern bool GLFL_GL_EXT_packed_float;
extern bool GLFL_GL_EXT_packed_pixels;
extern bool GLFL_GL_EXT_paletted_texture;
extern bool GLFL_GL_EXT_pixel_buffer_object;
extern bool GLFL_GL_EXT_pixel_transform;
extern bool GLFL_GL_EXT_pixel_transform_color_table;
extern bool GLFL_GL_EXT_point_parameters;
extern bool GLFL_GL_EXT_polygon_offset;
extern bool GLFL_GL_EXT_polygon_offset_clamp;
extern bool GLFL_GL_EXT_post_depth_coverage;
extern bool GLFL_GL_EXT_primitive_bounding_box;
extern bool GLFL_GL_EXT_provoking_vertex;
extern bool GLFL_GL_EXT_pvrtc_sRGB;
extern bool GLFL_GL_EXT_raster_multisample;
extern bool GLFL_GL_EXT_read_format_bgra;
extern bool GLFL_GL_EXT_render_snorm;
extern bool GLFL_GL_EXT_rescale_normal;
extern bool GLFL_GL_EXT_robustness;
extern bool GLFL_GL_EXT_sRGB;
extern bool GLFL_GL_EXT_sRGB_write_control;
extern bool GLFL_GL_EXT_secondary_color;
extern bool GLFL_GL_EXT_separate_shader_objects;
extern bool GLFL_GL_EXT_separate_specular_color;
extern bool GLFL_GL_EXT_shader_framebuffer_fetch;
extern bool GLFL_GL_EXT_shader_image_load_formatted;
extern bool GLFL_GL_EXT_shader_image_load_store;
extern bool GLFL_GL_EXT_shader_implicit_conversions;
extern bool GLFL_GL_EXT_shader_integer_mix;
extern bool GLFL_GL_EXT_shader_io_blocks;
extern bool GLFL_GL_EXT_shader_pixel_local_storage;
extern bool GLFL_GL_EXT_shader_texture_lod;
extern bool GLFL_GL_EXT_shadow_funcs;
extern bool GLFL_GL_EXT_shadow_samplers;
extern bool GLFL_GL_EXT_shared_texture_palette;
extern bool GLFL_GL_EXT_sparse_texture;
extern bool GLFL_GL_EXT_sparse_texture2;
extern bool GLFL_GL_EXT_stencil_clear_tag;
extern bool GLFL_GL_EXT_stencil_two_side;
extern bool GLFL_GL_EXT_stencil_wrap;
extern bool GLFL_GL_EXT_subtexture;
extern bool GLFL_GL_EXT_tessellation_point_size;
extern bool GLFL_GL_EXT_tessellation_shader;
extern bool GLFL_GL_EXT_texture;
extern bool GLFL_GL_EXT_texture3D;
extern bool GLFL_GL_EXT_texture_array;
extern bool GLFL_GL_EXT_texture_border_clamp;
extern bool GLFL_GL_EXT_texture_buffer;
extern bool GLFL_GL_EXT_texture_buffer_object;
extern bool GLFL_GL_EXT_texture_compression_dxt1;
extern bool GLFL_GL_EXT_texture_compression_latc;
extern bool GLFL_GL_EXT_texture_compression_rgtc;
extern bool GLFL_GL_EXT_texture_compression_s3tc;
extern bool GLFL_GL_EXT_texture_cube_map;
extern bool GLFL_GL_EXT_texture_cube_map_array;
extern bool GLFL_GL_EXT_texture_env_add;
extern bool GLFL_GL_EXT_texture_env_combine;
extern bool GLFL_GL_EXT_texture_env_dot3;
extern bool GLFL_GL_EXT_texture_filter_anisotropic;
extern bool GLFL_GL_EXT_texture_filter_minmax;
extern bool GLFL_GL_EXT_texture_format_BGRA8888;
extern bool GLFL_GL_EXT_texture_integer;
extern bool GLFL_GL_EXT_texture_lod_bias;
extern bool GLFL_GL_EXT_texture_mirror_clamp;
extern bool GLFL_GL_EXT_texture_norm16;
extern bool GLFL_GL_EXT_texture_object;
extern bool GLFL_GL_EXT_texture_perturb_normal;
extern bool GLFL_GL_EXT_texture_rg;
extern bool GLFL_GL_EXT_texture_sRGB;
extern bool GLFL_GL_EXT_texture_sRGB_decode;
extern bool GLFL_GL_EXT_texture_sRGB_R8;
extern bool GLFL_GL_EXT_texture_sRGB_RG8;
extern bool GLFL_GL_EXT_texture_shared_exponent;
extern bool GLFL_GL_EXT_texture_snorm;
extern bool GLFL_GL_EXT_texture_storage;
extern bool GLFL_GL_EXT_texture_swizzle;
extern bool GLFL_GL_EXT_texture_type_2_10_10_10_REV;
extern bool GLFL_GL_EXT_texture_view;
extern bool GLFL_GL_EXT_timer_query;
extern bool GLFL_GL_EXT_transform_feedback;
extern bool GLFL_GL_EXT_unpack_subimage;
extern bool GLFL_GL_EXT_vertex_array;
extern bool GLFL_GL_EXT_vertex_array_bgra;
extern bool GLFL_GL_EXT_vertex_attrib_64bit;
extern bool GLFL_GL_EXT_vertex_shader;
extern bool GLFL_GL_EXT_vertex_weighting;
extern bool GLFL_GL_EXT_YUV_target;
extern bool GLFL_GL_EXT_x11_sync_object;
extern bool GLFL_GL_FJ_shader_binary_GCCSO;
extern bool GLFL_GL_GREMEDY_frame_terminator;
extern bool GLFL_GL_GREMEDY_string_marker;
extern bool GLFL_GL_HP_convolution_border_modes;
extern bool GLFL_GL_HP_image_transform;
extern bool GLFL_GL_HP_occlusion_test;
extern bool GLFL_GL_HP_texture_lighting;
extern bool GLFL_GL_IBM_cull_vertex;
extern bool GLFL_GL_IBM_multimode_draw_arrays;
extern bool GLFL_GL_IBM_rasterpos_clip;
extern bool GLFL_GL_IBM_static_data;
extern bool GLFL_GL_IBM_texture_mirrored_repeat;
extern bool GLFL_GL_IBM_vertex_array_lists;
extern bool GLFL_GL_IMG_multisampled_render_to_texture;
extern bool GLFL_GL_IMG_program_binary;
extern bool GLFL_GL_IMG_read_format;
extern bool GLFL_GL_IMG_shader_binary;
extern bool GLFL_GL_IMG_texture_compression_pvrtc;
extern bool GLFL_GL_IMG_texture_compression_pvrtc2;
extern bool GLFL_GL_IMG_texture_env_enhanced_fixed_function;
extern bool GLFL_GL_IMG_user_clip_plane;
extern bool GLFL_GL_INGR_blend_func_separate;
extern bool GLFL_GL_INGR_color_clamp;
extern bool GLFL_GL_INGR_interlace_read;
extern bool GLFL_GL_INTEL_fragment_shader_ordering;
extern bool GLFL_GL_INTEL_map_texture;
extern bool GLFL_GL_INTEL_parallel_arrays;
extern bool GLFL_GL_INTEL_performance_query;
extern bool GLFL_GL_KHR_blend_equation_advanced;
extern bool GLFL_GL_KHR_blend_equation_advanced_coherent;
extern bool GLFL_GL_KHR_context_flush_control;
extern bool GLFL_GL_KHR_debug;
extern bool GLFL_GL_KHR_no_error;
extern bool GLFL_GL_KHR_robust_buffer_access_behavior;
extern bool GLFL_GL_KHR_robustness;
extern bool GLFL_GL_KHR_texture_compression_astc_hdr;
extern bool GLFL_GL_KHR_texture_compression_astc_ldr;
extern bool GLFL_GL_MESAX_texture_stack;
extern bool GLFL_GL_MESA_pack_invert;
extern bool GLFL_GL_MESA_resize_buffers;
extern bool GLFL_GL_MESA_window_pos;
extern bool GLFL_GL_MESA_ycbcr_texture;
extern bool GLFL_GL_NVX_conditional_render;
extern bool GLFL_GL_NVX_gpu_memory_info;
extern bool GLFL_GL_NV_bindless_multi_draw_indirect;
extern bool GLFL_GL_NV_bindless_multi_draw_indirect_count;
extern bool GLFL_GL_NV_bindless_texture;
extern bool GLFL_GL_NV_blend_equation_advanced;
extern bool GLFL_GL_NV_blend_equation_advanced_coherent;
extern bool GLFL_GL_NV_blend_square;
extern bool GLFL_GL_NV_command_list;
extern bool GLFL_GL_NV_compute_program5;
extern bool GLFL_GL_NV_conditional_render;
extern bool GLFL_GL_NV_conservative_raster;
extern bool GLFL_GL_NV_copy_buffer;
extern bool GLFL_GL_NV_copy_depth_to_color;
extern bool GLFL_GL_NV_copy_image;
extern bool GLFL_GL_NV_coverage_sample;
extern bool GLFL_GL_NV_deep_texture3D;
extern bool GLFL_GL_NV_depth_buffer_float;
extern bool GLFL_GL_NV_depth_clamp;
extern bool GLFL_GL_NV_depth_nonlinear;
extern bool GLFL_GL_NV_draw_buffers;
extern bool GLFL_GL_NV_draw_instanced;
extern bool GLFL_GL_NV_draw_texture;
extern bool GLFL_GL_NV_evaluators;
extern bool GLFL_GL_NV_explicit_attrib_location;
extern bool GLFL_GL_NV_explicit_multisample;
extern bool GLFL_GL_NV_fbo_color_attachments;
extern bool GLFL_GL_NV_fence;
extern bool GLFL_GL_NV_fill_rectangle;
extern bool GLFL_GL_NV_float_buffer;
extern bool GLFL_GL_NV_fog_distance;
extern bool GLFL_GL_NV_fragment_coverage_to_color;
extern bool GLFL_GL_NV_fragment_program;
extern bool GLFL_GL_NV_fragment_program2;
extern bool GLFL_GL_NV_fragment_program4;
extern bool GLFL_GL_NV_fragment_program_option;
extern bool GLFL_GL_NV_fragment_shader_interlock;
extern bool GLFL_GL_NV_framebuffer_blit;
extern bool GLFL_GL_NV_framebuffer_mixed_samples;
extern bool GLFL_GL_NV_framebuffer_multisample;
extern bool GLFL_GL_NV_framebuffer_multisample_coverage;
extern bool GLFL_GL_NV_generate_mipmap_sRGB;
extern bool GLFL_GL_NV_geometry_program4;
extern bool GLFL_GL_NV_geometry_shader4;
extern bool GLFL_GL_NV_geometry_shader_passthrough;
extern bool GLFL_GL_NV_gpu_program4;
extern bool GLFL_GL_NV_gpu_program5;
extern bool GLFL_GL_NV_gpu_program5_mem_extended;
extern bool GLFL_GL_NV_gpu_shader5;
extern bool GLFL_GL_NV_half_float;
extern bool GLFL_GL_NV_image_formats;
extern bool GLFL_GL_NV_instanced_arrays;
extern bool GLFL_GL_NV_internalformat_sample_query;
extern bool GLFL_GL_NV_light_max_exponent;
extern bool GLFL_GL_NV_multisample_coverage;
extern bool GLFL_GL_NV_multisample_filter_hint;
extern bool GLFL_GL_NV_non_square_matrices;
extern bool GLFL_GL_NV_occlusion_query;
extern bool GLFL_GL_NV_packed_depth_stencil;
extern bool GLFL_GL_NV_parameter_buffer_object;
extern bool GLFL_GL_NV_parameter_buffer_object2;
extern bool GLFL_GL_NV_path_rendering;
extern bool GLFL_GL_NV_pixel_data_range;
extern bool GLFL_GL_NV_point_sprite;
extern bool GLFL_GL_NV_polygon_mode;
extern bool GLFL_GL_NV_present_video;
extern bool GLFL_GL_NV_primitive_restart;
extern bool GLFL_GL_NV_read_buffer;
extern bool GLFL_GL_NV_read_buffer_front;
extern bool GLFL_GL_NV_read_depth;
extern bool GLFL_GL_NV_read_depth_stencil;
extern bool GLFL_GL_NV_read_stencil;
extern bool GLFL_GL_NV_register_combiners;
extern bool GLFL_GL_NV_path_rendering_shared_edge;
extern bool GLFL_GL_NV_register_combiners2;
extern bool GLFL_GL_NV_sRGB_formats;
extern bool GLFL_GL_NV_sample_locations;
extern bool GLFL_GL_NV_sample_mask_override_coverage;
extern bool GLFL_GL_NV_shader_atomic_counters;
extern bool GLFL_GL_NV_shader_atomic_float;
extern bool GLFL_GL_NV_shader_atomic_fp16_vector;
extern bool GLFL_GL_NV_shader_atomic_int64;
extern bool GLFL_GL_NV_shader_buffer_load;
extern bool GLFL_GL_NV_shader_buffer_store;
extern bool GLFL_GL_NV_shader_noperspective_interpolation;
extern bool GLFL_GL_NV_shader_storage_buffer_object;
extern bool GLFL_GL_NV_shader_thread_group;
extern bool GLFL_GL_NV_shader_thread_shuffle;
extern bool GLFL_GL_NV_shadow_samplers_array;
extern bool GLFL_GL_NV_shadow_samplers_cube;
extern bool GLFL_GL_NV_tessellation_program5;
extern bool GLFL_GL_NV_texgen_emboss;
extern bool GLFL_GL_NV_texgen_reflection;
extern bool GLFL_GL_NV_texture_barrier;
extern bool GLFL_GL_NV_texture_border_clamp;
extern bool GLFL_GL_NV_texture_compression_s3tc_update;
extern bool GLFL_GL_NV_texture_compression_vtc;
extern bool GLFL_GL_NV_texture_env_combine4;
extern bool GLFL_GL_NV_texture_expand_normal;
extern bool GLFL_GL_NV_texture_multisample;
extern bool GLFL_GL_NV_texture_npot_2D_mipmap;
extern bool GLFL_GL_NV_texture_rectangle;
extern bool GLFL_GL_NV_texture_shader;
extern bool GLFL_GL_NV_texture_shader2;
extern bool GLFL_GL_NV_texture_shader3;
extern bool GLFL_GL_NV_transform_feedback;
extern bool GLFL_GL_NV_transform_feedback2;
extern bool GLFL_GL_NV_uniform_buffer_unified_memory;
extern bool GLFL_GL_NV_vdpau_interop;
extern bool GLFL_GL_NV_vertex_array_range;
extern bool GLFL_GL_NV_vertex_array_range2;
extern bool GLFL_GL_NV_vertex_attrib_integer_64bit;
extern bool GLFL_GL_NV_vertex_buffer_unified_memory;
extern bool GLFL_GL_NV_vertex_program;
extern bool GLFL_GL_NV_vertex_program1_1;
extern bool GLFL_GL_NV_vertex_program2;
extern bool GLFL_GL_NV_vertex_program2_option;
extern bool GLFL_GL_NV_vertex_program3;
extern bool GLFL_GL_NV_vertex_program4;
extern bool GLFL_GL_NV_video_capture;
extern bool GLFL_GL_NV_viewport_array;
extern bool GLFL_GL_NV_viewport_array2;
extern bool GLFL_GL_OES_EGL_image;
extern bool GLFL_GL_OES_EGL_image_external;
extern bool GLFL_GL_OES_EGL_image_external_essl3;
extern bool GLFL_GL_OES_blend_equation_separate;
extern bool GLFL_GL_OES_blend_func_separate;
extern bool GLFL_GL_OES_blend_subtract;
extern bool GLFL_GL_OES_byte_coordinates;
extern bool GLFL_GL_OES_compressed_ETC1_RGB8_sub_texture;
extern bool GLFL_GL_OES_compressed_ETC1_RGB8_texture;
extern bool GLFL_GL_OES_compressed_paletted_texture;
extern bool GLFL_GL_OES_copy_image;
extern bool GLFL_GL_OES_depth24;
extern bool GLFL_GL_OES_depth32;
extern bool GLFL_GL_OES_depth_texture;
extern bool GLFL_GL_OES_draw_buffers_indexed;
extern bool GLFL_GL_OES_draw_elements_base_vertex;
extern bool GLFL_GL_OES_draw_texture;
extern bool GLFL_GL_OES_element_index_uint;
extern bool GLFL_GL_OES_extended_matrix_palette;
extern bool GLFL_GL_OES_fbo_render_mipmap;
extern bool GLFL_GL_OES_fixed_point;
extern bool GLFL_GL_OES_fragment_precision_high;
extern bool GLFL_GL_OES_framebuffer_object;
extern bool GLFL_GL_OES_geometry_shader;
extern bool GLFL_GL_OES_geometry_point_size;
extern bool GLFL_GL_OES_get_program_binary;
extern bool GLFL_GL_OES_gpu_shader5;
extern bool GLFL_GL_OES_mapbuffer;
extern bool GLFL_GL_OES_matrix_get;
extern bool GLFL_GL_OES_matrix_palette;
extern bool GLFL_GL_OES_packed_depth_stencil;
extern bool GLFL_GL_OES_point_size_array;
extern bool GLFL_GL_OES_point_sprite;
extern bool GLFL_GL_OES_primitive_bounding_box;
extern bool GLFL_GL_OES_query_matrix;
extern bool GLFL_GL_OES_read_format;
extern bool GLFL_GL_OES_required_internalformat;
extern bool GLFL_GL_OES_rgb8_rgba8;
extern bool GLFL_GL_OES_sample_shading;
extern bool GLFL_GL_OES_sample_variables;
extern bool GLFL_GL_OES_shader_image_atomic;
extern bool GLFL_GL_OES_shader_io_blocks;
extern bool GLFL_GL_OES_shader_multisample_interpolation;
extern bool GLFL_GL_OES_single_precision;
extern bool GLFL_GL_OES_standard_derivatives;
extern bool GLFL_GL_OES_stencil1;
extern bool GLFL_GL_OES_stencil4;
extern bool GLFL_GL_OES_stencil8;
extern bool GLFL_GL_OES_stencil_wrap;
extern bool GLFL_GL_OES_surfaceless_context;
extern bool GLFL_GL_OES_tessellation_shader;
extern bool GLFL_GL_OES_tessellation_point_size;
extern bool GLFL_GL_OES_texture_3D;
extern bool GLFL_GL_OES_texture_border_clamp;
extern bool GLFL_GL_OES_texture_buffer;
extern bool GLFL_GL_OES_texture_compression_astc;
extern bool GLFL_GL_OES_texture_cube_map;
extern bool GLFL_GL_OES_texture_cube_map_array;
extern bool GLFL_GL_OES_texture_env_crossbar;
extern bool GLFL_GL_OES_texture_float;
extern bool GLFL_GL_OES_texture_float_linear;
extern bool GLFL_GL_OES_texture_half_float;
extern bool GLFL_GL_OES_texture_half_float_linear;
extern bool GLFL_GL_OES_texture_mirrored_repeat;
extern bool GLFL_GL_OES_texture_npot;
extern bool GLFL_GL_OES_texture_stencil8;
extern bool GLFL_GL_OES_texture_storage_multisample_2d_array;
extern bool GLFL_GL_OES_texture_view;
extern bool GLFL_GL_OES_vertex_array_object;
extern bool GLFL_GL_OES_vertex_half_float;
extern bool GLFL_GL_OES_vertex_type_10_10_10_2;
extern bool GLFL_GL_OML_interlace;
extern bool GLFL_GL_OML_resample;
extern bool GLFL_GL_OML_subsample;
extern bool GLFL_GL_OVR_multiview;
extern bool GLFL_GL_OVR_multiview2;
extern bool GLFL_GL_PGI_misc_hints;
extern bool GLFL_GL_PGI_vertex_hints;
extern bool GLFL_GL_QCOM_alpha_test;
extern bool GLFL_GL_QCOM_binning_control;
extern bool GLFL_GL_QCOM_driver_control;
extern bool GLFL_GL_QCOM_extended_get;
extern bool GLFL_GL_QCOM_extended_get2;
extern bool GLFL_GL_QCOM_perfmon_global_mode;
extern bool GLFL_GL_QCOM_tiled_rendering;
extern bool GLFL_GL_QCOM_writeonly_rendering;
extern bool GLFL_GL_REND_screen_coordinates;
extern bool GLFL_GL_S3_s3tc;
extern bool GLFL_GL_SGIS_detail_texture;
extern bool GLFL_GL_SGIS_fog_function;
extern bool GLFL_GL_SGIS_generate_mipmap;
extern bool GLFL_GL_SGIS_multisample;
extern bool GLFL_GL_SGIS_pixel_texture;
extern bool GLFL_GL_SGIS_point_line_texgen;
extern bool GLFL_GL_SGIS_point_parameters;
extern bool GLFL_GL_SGIS_sharpen_texture;
extern bool GLFL_GL_SGIS_texture4D;
extern bool GLFL_GL_SGIS_texture_border_clamp;
extern bool GLFL_GL_SGIS_texture_color_mask;
extern bool GLFL_GL_SGIS_texture_edge_clamp;
extern bool GLFL_GL_SGIS_texture_filter4;
extern bool GLFL_GL_SGIS_texture_lod;
extern bool GLFL_GL_SGIS_texture_select;
extern bool GLFL_GL_SGIX_async;
extern bool GLFL_GL_SGIX_async_histogram;
extern bool GLFL_GL_SGIX_async_pixel;
extern bool GLFL_GL_SGIX_blend_alpha_minmax;
extern bool GLFL_GL_SGIX_calligraphic_fragment;
extern bool GLFL_GL_SGIX_clipmap;
extern bool GLFL_GL_SGIX_convolution_accuracy;
extern bool GLFL_GL_SGIX_depth_pass_instrument;
extern bool GLFL_GL_SGIX_depth_texture;
extern bool GLFL_GL_SGIX_flush_raster;
extern bool GLFL_GL_SGIX_fog_offset;
extern bool GLFL_GL_SGIX_fragment_lighting;
extern bool GLFL_GL_SGIX_framezoom;
extern bool GLFL_GL_SGIX_igloo_interface;
extern bool GLFL_GL_SGIX_instruments;
extern bool GLFL_GL_SGIX_interlace;
extern bool GLFL_GL_SGIX_ir_instrument1;
extern bool GLFL_GL_SGIX_list_priority;
extern bool GLFL_GL_SGIX_pixel_texture;
extern bool GLFL_GL_SGIX_pixel_tiles;
extern bool GLFL_GL_SGIX_polynomial_ffd;
extern bool GLFL_GL_SGIX_reference_plane;
extern bool GLFL_GL_SGIX_resample;
extern bool GLFL_GL_SGIX_scalebias_hint;
extern bool GLFL_GL_SGIX_shadow;
extern bool GLFL_GL_SGIX_shadow_ambient;
extern bool GLFL_GL_SGIX_sprite;
extern bool GLFL_GL_SGIX_subsample;
extern bool GLFL_GL_SGIX_tag_sample_buffer;
extern bool GLFL_GL_SGIX_texture_add_env;
extern bool GLFL_GL_SGIX_texture_coordinate_clamp;
extern bool GLFL_GL_SGIX_texture_lod_bias;
extern bool GLFL_GL_SGIX_texture_multi_buffer;
extern bool GLFL_GL_SGIX_texture_scale_bias;
extern bool GLFL_GL_SGIX_vertex_preclip;
extern bool GLFL_GL_SGIX_ycrcb;
extern bool GLFL_GL_SGIX_ycrcb_subsample;
extern bool GLFL_GL_SGIX_ycrcba;
extern bool GLFL_GL_SGI_color_matrix;
extern bool GLFL_GL_SGI_color_table;
extern bool GLFL_GL_SGI_texture_color_table;
extern bool GLFL_GL_SUNX_constant_data;
extern bool GLFL_GL_SUN_convolution_border_modes;
extern bool GLFL_GL_SUN_global_alpha;
extern bool GLFL_GL_SUN_mesh_array;
extern bool GLFL_GL_SUN_slice_accum;
extern bool GLFL_GL_SUN_triangle_list;
extern bool GLFL_GL_SUN_vertex;
extern bool GLFL_GL_VIV_shader_binary;
extern bool GLFL_GL_WIN_phong_shading;
extern bool GLFL_GL_WIN_specular_fog;

extern PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC glflglMultiDrawArraysIndirectBindlessCountNV;
#define glMultiDrawArraysIndirectBindlessCountNV glflglMultiDrawArraysIndirectBindlessCountNV
extern PFNGLCOPYTEXIMAGE1DPROC glflglCopyTexImage1D;
#define glCopyTexImage1D glflglCopyTexImage1D
extern PFNGLGETLISTPARAMETERIVSGIXPROC glflglGetListParameterivSGIX;
#define glGetListParameterivSGIX glflglGetListParameterivSGIX
extern PFNGLVERTEXARRAYELEMENTBUFFERPROC glflglVertexArrayElementBuffer;
#define glVertexArrayElementBuffer glflglVertexArrayElementBuffer
extern PFNGLHINTPGIPROC glflglHintPGI;
#define glHintPGI glflglHintPGI
extern PFNGLSTENCILMASKSEPARATEPROC glflglStencilMaskSeparate;
#define glStencilMaskSeparate glflglStencilMaskSeparate
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glflglGetFramebufferAttachmentParameterivEXT;
#define glGetFramebufferAttachmentParameterivEXT glflglGetFramebufferAttachmentParameterivEXT
extern PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC glflglTextureStorage3DMultisample;
#define glTextureStorage3DMultisample glflglTextureStorage3DMultisample
extern PFNGLGETINTEGERINDEXEDVEXTPROC glflglGetIntegerIndexedvEXT;
#define glGetIntegerIndexedvEXT glflglGetIntegerIndexedvEXT
extern PFNGLTEXTUREPARAMETERFVPROC glflglTextureParameterfv;
#define glTextureParameterfv glflglTextureParameterfv
extern PFNGLTEXRENDERBUFFERNVPROC glflglTexRenderbufferNV;
#define glTexRenderbufferNV glflglTexRenderbufferNV
extern PFNGLVERTEXATTRIB3HVNVPROC glflglVertexAttrib3hvNV;
#define glVertexAttrib3hvNV glflglVertexAttrib3hvNV
extern PFNGLINSTRUMENTSBUFFERSGIXPROC glflglInstrumentsBufferSGIX;
#define glInstrumentsBufferSGIX glflglInstrumentsBufferSGIX
extern PFNGLINDEXIPROC glflglIndexi;
#define glIndexi glflglIndexi
extern PFNGLMULTITEXCOORD2SARBPROC glflglMultiTexCoord2sARB;
#define glMultiTexCoord2sARB glflglMultiTexCoord2sARB
extern PFNGLPROGRAMENVPARAMETER4FARBPROC glflglProgramEnvParameter4fARB;
#define glProgramEnvParameter4fARB glflglProgramEnvParameter4fARB
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glflglCompressedTexSubImage3D;
#define glCompressedTexSubImage3D glflglCompressedTexSubImage3D
extern PFNGLEVALCOORD2DPROC glflglEvalCoord2d;
#define glEvalCoord2d glflglEvalCoord2d
extern PFNGLENABLEIEXTPROC glflglEnableiEXT;
#define glEnableiEXT glflglEnableiEXT
extern PFNGLEVALCOORD2FPROC glflglEvalCoord2f;
#define glEvalCoord2f glflglEvalCoord2f
extern PFNGLINDEXDPROC glflglIndexd;
#define glIndexd glflglIndexd
extern PFNGLSECONDARYCOLOR3HVNVPROC glflglSecondaryColor3hvNV;
#define glSecondaryColor3hvNV glflglSecondaryColor3hvNV
extern PFNGLINDEXFPROC glflglIndexf;
#define glIndexf glflglIndexf
extern PFNGLFRUSTUMXOESPROC glflglFrustumxOES;
#define glFrustumxOES glflglFrustumxOES
extern PFNGLTEXTURESTORAGE3DEXTPROC glflglTextureStorage3DEXT;
#define glTextureStorage3DEXT glflglTextureStorage3DEXT
extern PFNGLUNIFORM4UIEXTPROC glflglUniform4uiEXT;
#define glUniform4uiEXT glflglUniform4uiEXT
extern PFNGLINDEXSPROC glflglIndexs;
#define glIndexs glflglIndexs
extern PFNGLTEXGENIVOESPROC glflglTexGenivOES;
#define glTexGenivOES glflglTexGenivOES
extern PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC glflglVertexArrayBindVertexBufferEXT;
#define glVertexArrayBindVertexBufferEXT glflglVertexArrayBindVertexBufferEXT
extern PFNGLUNIFORM3UIEXTPROC glflglUniform3uiEXT;
#define glUniform3uiEXT glflglUniform3uiEXT
extern PFNGLVERTEXATTRIBI3UIVEXTPROC glflglVertexAttribI3uivEXT;
#define glVertexAttribI3uivEXT glflglVertexAttribI3uivEXT
extern PFNGLPROGRAMUNIFORM1IVEXTPROC glflglProgramUniform1ivEXT;
#define glProgramUniform1ivEXT glflglProgramUniform1ivEXT
extern PFNGLCOPYTEXIMAGE2DEXTPROC glflglCopyTexImage2DEXT;
#define glCopyTexImage2DEXT glflglCopyTexImage2DEXT
extern PFNGLGETNMAPFVPROC glflglGetnMapfv;
#define glGetnMapfv glflglGetnMapfv
extern PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC glflglTransformFeedbackBufferRange;
#define glTransformFeedbackBufferRange glflglTransformFeedbackBufferRange
extern PFNGLGETPROGRAMPIPELINEIVEXTPROC glflglGetProgramPipelineivEXT;
#define glGetProgramPipelineivEXT glflglGetProgramPipelineivEXT
extern PFNGLPATHGLYPHSNVPROC glflglPathGlyphsNV;
#define glPathGlyphsNV glflglPathGlyphsNV
extern PFNGLSECONDARYCOLOR3FVPROC glflglSecondaryColor3fv;
#define glSecondaryColor3fv glflglSecondaryColor3fv
extern PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC glflglGetCombinerInputParameterivNV;
#define glGetCombinerInputParameterivNV glflglGetCombinerInputParameterivNV
extern PFNGLENDPERFMONITORAMDPROC glflglEndPerfMonitorAMD;
#define glEndPerfMonitorAMD glflglEndPerfMonitorAMD
extern PFNGLTEXBUFFERARBPROC glflglTexBufferARB;
#define glTexBufferARB glflglTexBufferARB
extern PFNGLFOGFVPROC glflglFogfv;
#define glFogfv glflglFogfv
extern PFNGLVERTEXP4UIPROC glflglVertexP4ui;
#define glVertexP4ui glflglVertexP4ui
extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glflglDrawElementsInstancedBaseInstance;
#define glDrawElementsInstancedBaseInstance glflglDrawElementsInstancedBaseInstance
extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glflglMultTransposeMatrixdARB;
#define glMultTransposeMatrixdARB glflglMultTransposeMatrixdARB
extern PFNGLVERTEXATTRIBL4DEXTPROC glflglVertexAttribL4dEXT;
#define glVertexAttribL4dEXT glflglVertexAttribL4dEXT
extern PFNGLVERTEX4IVPROC glflglVertex4iv;
#define glVertex4iv glflglVertex4iv
extern PFNGLCOVERSTROKEPATHINSTANCEDNVPROC glflglCoverStrokePathInstancedNV;
#define glCoverStrokePathInstancedNV glflglCoverStrokePathInstancedNV
extern PFNGLDEFORMSGIXPROC glflglDeformSGIX;
#define glDeformSGIX glflglDeformSGIX
extern PFNGLUNIFORM2UI64NVPROC glflglUniform2ui64NV;
#define glUniform2ui64NV glflglUniform2ui64NV
extern PFNGLCOLORMASKIEXTPROC glflglColorMaskiEXT;
#define glColorMaskiEXT glflglColorMaskiEXT
extern PFNGLVERTEXATTRIBP4UIPROC glflglVertexAttribP4ui;
#define glVertexAttribP4ui glflglVertexAttribP4ui
extern PFNGLISBUFFERPROC glflglIsBuffer;
#define glIsBuffer glflglIsBuffer
extern PFNGLGETMULTISAMPLEFVPROC glflglGetMultisamplefv;
#define glGetMultisamplefv glflglGetMultisamplefv
extern PFNGLMULTMATRIXXPROC glflglMultMatrixx;
#define glMultMatrixx glflglMultMatrixx
extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC glflglCompressedMultiTexSubImage3DEXT;
#define glCompressedMultiTexSubImage3DEXT glflglCompressedMultiTexSubImage3DEXT
extern PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC glflglVDPAURegisterOutputSurfaceNV;
#define glVDPAURegisterOutputSurfaceNV glflglVDPAURegisterOutputSurfaceNV
extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glflglProgramUniformMatrix4fv;
#define glProgramUniformMatrix4fv glflglProgramUniformMatrix4fv
extern PFNGLPROGRAMUNIFORM4FEXTPROC glflglProgramUniform4fEXT;
#define glProgramUniform4fEXT glflglProgramUniform4fEXT
extern PFNGLCOVERSTROKEPATHNVPROC glflglCoverStrokePathNV;
#define glCoverStrokePathNV glflglCoverStrokePathNV
extern PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC glflglTextureImage2DMultisampleNV;
#define glTextureImage2DMultisampleNV glflglTextureImage2DMultisampleNV
extern PFNGLVERTEX3BOESPROC glflglVertex3bOES;
#define glVertex3bOES glflglVertex3bOES
extern PFNGLTESSELLATIONFACTORAMDPROC glflglTessellationFactorAMD;
#define glTessellationFactorAMD glflglTessellationFactorAMD
extern PFNGLDEBUGMESSAGECONTROLPROC glflglDebugMessageControl;
#define glDebugMessageControl glflglDebugMessageControl
extern PFNGLISOBJECTBUFFERATIPROC glflglIsObjectBufferATI;
#define glIsObjectBufferATI glflglIsObjectBufferATI
extern PFNGLPOPATTRIBPROC glflglPopAttrib;
#define glPopAttrib glflglPopAttrib
extern PFNGLPROGRAMUNIFORM4IEXTPROC glflglProgramUniform4iEXT;
#define glProgramUniform4iEXT glflglProgramUniform4iEXT
extern PFNGLCOLORMATERIALPROC glflglColorMaterial;
#define glColorMaterial glflglColorMaterial
extern PFNGLVERTEXATTRIB2SVARBPROC glflglVertexAttrib2svARB;
#define glVertexAttrib2svARB glflglVertexAttrib2svARB
extern PFNGLMINSAMPLESHADINGARBPROC glflglMinSampleShadingARB;
#define glMinSampleShadingARB glflglMinSampleShadingARB
extern PFNGLCOLOR3BPROC glflglColor3b;
#define glColor3b glflglColor3b
extern PFNGLSPRITEPARAMETERISGIXPROC glflglSpriteParameteriSGIX;
#define glSpriteParameteriSGIX glflglSpriteParameteriSGIX
extern PFNGLFRAGMENTMATERIALFSGIXPROC glflglFragmentMaterialfSGIX;
#define glFragmentMaterialfSGIX glflglFragmentMaterialfSGIX
extern PFNGLCOLOR3FPROC glflglColor3f;
#define glColor3f glflglColor3f
extern PFNGLVDPAUGETSURFACEIVNVPROC glflglVDPAUGetSurfaceivNV;
#define glVDPAUGetSurfaceivNV glflglVDPAUGetSurfaceivNV
extern PFNGLCOLOR3DPROC glflglColor3d;
#define glColor3d glflglColor3d
extern PFNGLGETNMAPIVPROC glflglGetnMapiv;
#define glGetnMapiv glflglGetnMapiv
extern PFNGLCOLOR3IPROC glflglColor3i;
#define glColor3i glflglColor3i
extern PFNGLVERTEXWEIGHTFEXTPROC glflglVertexWeightfEXT;
#define glVertexWeightfEXT glflglVertexWeightfEXT
extern PFNGLDEPTHRANGEINDEXEDFNVPROC glflglDepthRangeIndexedfNV;
#define glDepthRangeIndexedfNV glflglDepthRangeIndexedfNV
extern PFNGLGETINTERNALFORMATSAMPLEIVNVPROC glflglGetInternalformatSampleivNV;
#define glGetInternalformatSampleivNV glflglGetInternalformatSampleivNV
extern PFNGLVERTEXATTRIB4UBVPROC glflglVertexAttrib4ubv;
#define glVertexAttrib4ubv glflglVertexAttrib4ubv
extern PFNGLCOLOR3SPROC glflglColor3s;
#define glColor3s glflglColor3s
extern PFNGLVERTEXATTRIBS4HVNVPROC glflglVertexAttribs4hvNV;
#define glVertexAttribs4hvNV glflglVertexAttribs4hvNV
extern PFNGLVERTEXATTRIB4NUBVARBPROC glflglVertexAttrib4NubvARB;
#define glVertexAttrib4NubvARB glflglVertexAttrib4NubvARB
extern PFNGLMULTITEXCOORD3HVNVPROC glflglMultiTexCoord3hvNV;
#define glMultiTexCoord3hvNV glflglMultiTexCoord3hvNV
extern PFNGLMATRIXPUSHEXTPROC glflglMatrixPushEXT;
#define glMatrixPushEXT glflglMatrixPushEXT
extern PFNGLPROGRAMUNIFORM2FEXTPROC glflglProgramUniform2fEXT;
#define glProgramUniform2fEXT glflglProgramUniform2fEXT
extern PFNGLEVALMESH1PROC glflglEvalMesh1;
#define glEvalMesh1 glflglEvalMesh1
extern PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC glflglMultiDrawElementsIndirectBindlessNV;
#define glMultiDrawElementsIndirectBindlessNV glflglMultiDrawElementsIndirectBindlessNV
extern PFNGLMULTITEXCOORD1IVPROC glflglMultiTexCoord1iv;
#define glMultiTexCoord1iv glflglMultiTexCoord1iv
extern PFNGLMULTITEXCOORDP2UIPROC glflglMultiTexCoordP2ui;
#define glMultiTexCoordP2ui glflglMultiTexCoordP2ui
extern PFNGLCOLORPOINTERLISTIBMPROC glflglColorPointerListIBM;
#define glColorPointerListIBM glflglColorPointerListIBM
extern PFNGLOBJECTPTRLABELKHRPROC glflglObjectPtrLabelKHR;
#define glObjectPtrLabelKHR glflglObjectPtrLabelKHR
extern PFNGLVERTEXATTRIBL4DPROC glflglVertexAttribL4d;
#define glVertexAttribL4d glflglVertexAttribL4d
extern PFNGLGETFRAGMENTMATERIALFVSGIXPROC glflglGetFragmentMaterialfvSGIX;
#define glGetFragmentMaterialfvSGIX glflglGetFragmentMaterialfvSGIX
extern PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC glflglGetProgramLocalParameterIuivNV;
#define glGetProgramLocalParameterIuivNV glflglGetProgramLocalParameterIuivNV
extern PFNGLVERTEX2IVPROC glflglVertex2iv;
#define glVertex2iv glflglVertex2iv
extern PFNGLDRAWTEXXOESPROC glflglDrawTexxOES;
#define glDrawTexxOES glflglDrawTexxOES
extern PFNGLUNIFORMMATRIX3DVPROC glflglUniformMatrix3dv;
#define glUniformMatrix3dv glflglUniformMatrix3dv
extern PFNGLGETVERTEXATTRIBLDVEXTPROC glflglGetVertexAttribLdvEXT;
#define glGetVertexAttribLdvEXT glflglGetVertexAttribLdvEXT
extern PFNGLTEXCOORDP3UIVPROC glflglTexCoordP3uiv;
#define glTexCoordP3uiv glflglTexCoordP3uiv
extern PFNGLINVALIDATEBUFFERSUBDATAPROC glflglInvalidateBufferSubData;
#define glInvalidateBufferSubData glflglInvalidateBufferSubData
extern PFNGLRESUMETRANSFORMFEEDBACKPROC glflglResumeTransformFeedback;
#define glResumeTransformFeedback glflglResumeTransformFeedback
extern PFNGLINSERTEVENTMARKEREXTPROC glflglInsertEventMarkerEXT;
#define glInsertEventMarkerEXT glflglInsertEventMarkerEXT
extern PFNGLTESSELLATIONMODEAMDPROC glflglTessellationModeAMD;
#define glTessellationModeAMD glflglTessellationModeAMD
extern PFNGLCOPYIMAGESUBDATAEXTPROC glflglCopyImageSubDataEXT;
#define glCopyImageSubDataEXT glflglCopyImageSubDataEXT
extern PFNGLFINISHASYNCSGIXPROC glflglFinishAsyncSGIX;
#define glFinishAsyncSGIX glflglFinishAsyncSGIX
extern PFNGLFOGIPROC glflglFogi;
#define glFogi glflglFogi
extern PFNGLDEPTHRANGEARRAYFVNVPROC glflglDepthRangeArrayfvNV;
#define glDepthRangeArrayfvNV glflglDepthRangeArrayfvNV
extern PFNGLGETTEXPARAMETERXVOESPROC glflglGetTexParameterxvOES;
#define glGetTexParameterxvOES glflglGetTexParameterxvOES
extern PFNGLVERTEXPOINTERPROC glflglVertexPointer;
#define glVertexPointer glflglVertexPointer
extern PFNGLGETPERFMONITORCOUNTERDATAAMDPROC glflglGetPerfMonitorCounterDataAMD;
#define glGetPerfMonitorCounterDataAMD glflglGetPerfMonitorCounterDataAMD
extern PFNGLFOGFPROC glflglFogf;
#define glFogf glflglFogf
extern PFNGLMULTITEXCOORD1DPROC glflglMultiTexCoord1d;
#define glMultiTexCoord1d glflglMultiTexCoord1d
extern PFNGLMULTITEXCOORD1FPROC glflglMultiTexCoord1f;
#define glMultiTexCoord1f glflglMultiTexCoord1f
extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glflglGetMultiTexParameterivEXT;
#define glGetMultiTexParameterivEXT glflglGetMultiTexParameterivEXT
extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glflglProgramUniformMatrix3x4fvEXT;
#define glProgramUniformMatrix3x4fvEXT glflglProgramUniformMatrix3x4fvEXT
extern PFNGLVERTEXATTRIBI2IPROC glflglVertexAttribI2i;
#define glVertexAttribI2i glflglVertexAttribI2i
extern PFNGLMULTITEXCOORD1IPROC glflglMultiTexCoord1i;
#define glMultiTexCoord1i glflglMultiTexCoord1i
extern PFNGLLOADPROGRAMNVPROC glflglLoadProgramNV;
#define glLoadProgramNV glflglLoadProgramNV
extern PFNGLWRITEMASKEXTPROC glflglWriteMaskEXT;
#define glWriteMaskEXT glflglWriteMaskEXT
extern PFNGLGETGRAPHICSRESETSTATUSPROC glflglGetGraphicsResetStatus;
#define glGetGraphicsResetStatus glflglGetGraphicsResetStatus
extern PFNGLMULTITEXCOORD1SPROC glflglMultiTexCoord1s;
#define glMultiTexCoord1s glflglMultiTexCoord1s
extern PFNGLSTENCILOPPROC glflglStencilOp;
#define glStencilOp glflglStencilOp
extern PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC glflglNamedBufferPageCommitmentARB;
#define glNamedBufferPageCommitmentARB glflglNamedBufferPageCommitmentARB
extern PFNGLFRAMEBUFFERTEXTURE2DPROC glflglFramebufferTexture2D;
#define glFramebufferTexture2D glflglFramebufferTexture2D
extern PFNGLGETFRAGMENTLIGHTFVSGIXPROC glflglGetFragmentLightfvSGIX;
#define glGetFragmentLightfvSGIX glflglGetFragmentLightfvSGIX
extern PFNGLTEXPARAMETERIUIVOESPROC glflglTexParameterIuivOES;
#define glTexParameterIuivOES glflglTexParameterIuivOES
extern PFNGLTEXCOORD3SVPROC glflglTexCoord3sv;
#define glTexCoord3sv glflglTexCoord3sv
extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glflglNamedFramebufferRenderbufferEXT;
#define glNamedFramebufferRenderbufferEXT glflglNamedFramebufferRenderbufferEXT
extern PFNGLFRAGMENTLIGHTMODELFSGIXPROC glflglFragmentLightModelfSGIX;
#define glFragmentLightModelfSGIX glflglFragmentLightModelfSGIX
extern PFNGLINDEXPOINTEREXTPROC glflglIndexPointerEXT;
#define glIndexPointerEXT glflglIndexPointerEXT
extern PFNGLVERTEXARRAYATTRIBIFORMATPROC glflglVertexArrayAttribIFormat;
#define glVertexArrayAttribIFormat glflglVertexArrayAttribIFormat
extern PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glflglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN glflglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN
extern PFNGLREPLACEMENTCODEUBVSUNPROC glflglReplacementCodeubvSUN;
#define glReplacementCodeubvSUN glflglReplacementCodeubvSUN
extern PFNGLGENFRAMEBUFFERSPROC glflglGenFramebuffers;
#define glGenFramebuffers glflglGenFramebuffers
extern PFNGLDRAWTEXSOESPROC glflglDrawTexsOES;
#define glDrawTexsOES glflglDrawTexsOES
extern PFNGLGETDOUBLEINDEXEDVEXTPROC glflglGetDoubleIndexedvEXT;
#define glGetDoubleIndexedvEXT glflglGetDoubleIndexedvEXT
extern PFNGLTEXSUBIMAGE3DEXTPROC glflglTexSubImage3DEXT;
#define glTexSubImage3DEXT glflglTexSubImage3DEXT
extern PFNGLGETATTACHEDSHADERSPROC glflglGetAttachedShaders;
#define glGetAttachedShaders glflglGetAttachedShaders
extern PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC glflglGetPixelTexGenParameterfvSGIS;
#define glGetPixelTexGenParameterfvSGIS glflglGetPixelTexGenParameterfvSGIS
extern PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC glflglProgramLocalParameters4fvEXT;
#define glProgramLocalParameters4fvEXT glflglProgramLocalParameters4fvEXT
extern PFNGLNORMAL3XOESPROC glflglNormal3xOES;
#define glNormal3xOES glflglNormal3xOES
extern PFNGLGETDEBUGMESSAGELOGAMDPROC glflglGetDebugMessageLogAMD;
#define glGetDebugMessageLogAMD glflglGetDebugMessageLogAMD
extern PFNGLVERTEXSTREAM4SATIPROC glflglVertexStream4sATI;
#define glVertexStream4sATI glflglVertexStream4sATI
extern PFNGLDELETEVERTEXARRAYSPROC glflglDeleteVertexArrays;
#define glDeleteVertexArrays glflglDeleteVertexArrays
extern PFNGLGETNMAPDVARBPROC glflglGetnMapdvARB;
#define glGetnMapdvARB glflglGetnMapdvARB
extern PFNGLORTHOFOESPROC glflglOrthofOES;
#define glOrthofOES glflglOrthofOES
extern PFNGLCURRENTPALETTEMATRIXOESPROC glflglCurrentPaletteMatrixOES;
#define glCurrentPaletteMatrixOES glflglCurrentPaletteMatrixOES
extern PFNGLVIEWPORTARRAYVPROC glflglViewportArrayv;
#define glViewportArrayv glflglViewportArrayv
extern PFNGLDRAWELEMENTARRAYATIPROC glflglDrawElementArrayATI;
#define glDrawElementArrayATI glflglDrawElementArrayATI
extern PFNGLGETPATHCOLORGENFVNVPROC glflglGetPathColorGenfvNV;
#define glGetPathColorGenfvNV glflglGetPathColorGenfvNV
extern PFNGLWINDOWPOS3IMESAPROC glflglWindowPos3iMESA;
#define glWindowPos3iMESA glflglWindowPos3iMESA
extern PFNGLFEEDBACKBUFFERPROC glflglFeedbackBuffer;
#define glFeedbackBuffer glflglFeedbackBuffer
extern PFNGLVERTEX3DVPROC glflglVertex3dv;
#define glVertex3dv glflglVertex3dv
extern PFNGLCOLOR4UBVERTEX2FSUNPROC glflglColor4ubVertex2fSUN;
#define glColor4ubVertex2fSUN glflglColor4ubVertex2fSUN
extern PFNGLEXTGETTEXTURESQCOMPROC glflglExtGetTexturesQCOM;
#define glExtGetTexturesQCOM glflglExtGetTexturesQCOM
extern PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC glflglTexCoord2fColor3fVertex3fSUN;
#define glTexCoord2fColor3fVertex3fSUN glflglTexCoord2fColor3fVertex3fSUN
extern PFNGLCOLOR4FVPROC glflglColor4fv;
#define glColor4fv glflglColor4fv
extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glflglGetNamedBufferSubDataEXT;
#define glGetNamedBufferSubDataEXT glflglGetNamedBufferSubDataEXT
extern PFNGLCONVOLUTIONFILTER2DPROC glflglConvolutionFilter2D;
#define glConvolutionFilter2D glflglConvolutionFilter2D
extern PFNGLMEMORYBARRIERBYREGIONPROC glflglMemoryBarrierByRegion;
#define glMemoryBarrierByRegion glflglMemoryBarrierByRegion
extern PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC glflglTexCoord2fNormal3fVertex3fSUN;
#define glTexCoord2fNormal3fVertex3fSUN glflglTexCoord2fNormal3fVertex3fSUN
extern PFNGLMATRIXROTATEDEXTPROC glflglMatrixRotatedEXT;
#define glMatrixRotatedEXT glflglMatrixRotatedEXT
extern PFNGLTEXCOORD2SVPROC glflglTexCoord2sv;
#define glTexCoord2sv glflglTexCoord2sv
extern PFNGLISPROGRAMNVPROC glflglIsProgramNV;
#define glIsProgramNV glflglIsProgramNV
extern PFNGLUNIFORM2DVPROC glflglUniform2dv;
#define glUniform2dv glflglUniform2dv
extern PFNGLGETPIXELMAPUIVPROC glflglGetPixelMapuiv;
#define glGetPixelMapuiv glflglGetPixelMapuiv
extern PFNGLDEPTHBOUNDSEXTPROC glflglDepthBoundsEXT;
#define glDepthBoundsEXT glflglDepthBoundsEXT
extern PFNGLVERTEXATTRIB4HVNVPROC glflglVertexAttrib4hvNV;
#define glVertexAttrib4hvNV glflglVertexAttrib4hvNV
extern PFNGLCOLORFRAGMENTOP2ATIPROC glflglColorFragmentOp2ATI;
#define glColorFragmentOp2ATI glflglColorFragmentOp2ATI
extern PFNGLCOLORFRAGMENTOP1ATIPROC glflglColorFragmentOp1ATI;
#define glColorFragmentOp1ATI glflglColorFragmentOp1ATI
extern PFNGLGETPOINTERVPROC glflglGetPointerv;
#define glGetPointerv glflglGetPointerv
extern PFNGLVERTEXBINDINGDIVISORPROC glflglVertexBindingDivisor;
#define glVertexBindingDivisor glflglVertexBindingDivisor
extern PFNGLGETUNIFORMFVPROC glflglGetUniformfv;
#define glGetUniformfv glflglGetUniformfv
extern PFNGLGETUNIFORMUIVPROC glflglGetUniformuiv;
#define glGetUniformuiv glflglGetUniformuiv
extern PFNGLWINDOWPOS3IVMESAPROC glflglWindowPos3ivMESA;
#define glWindowPos3ivMESA glflglWindowPos3ivMESA
extern PFNGLFRUSTUMPROC glflglFrustum;
#define glFrustum glflglFrustum
extern PFNGLARRAYOBJECTATIPROC glflglArrayObjectATI;
#define glArrayObjectATI glflglArrayObjectATI
extern PFNGLVERTEXARRAYBINDINGDIVISORPROC glflglVertexArrayBindingDivisor;
#define glVertexArrayBindingDivisor glflglVertexArrayBindingDivisor
extern PFNGLPNTRIANGLESIATIPROC glflglPNTrianglesiATI;
#define glPNTrianglesiATI glflglPNTrianglesiATI
extern PFNGLCOMPILESHADERINCLUDEARBPROC glflglCompileShaderIncludeARB;
#define glCompileShaderIncludeARB glflglCompileShaderIncludeARB
extern PFNGLDRAWELEMENTSINSTANCEDPROC glflglDrawElementsInstanced;
#define glDrawElementsInstanced glflglDrawElementsInstanced
extern PFNGLVERTEXSTREAM4SVATIPROC glflglVertexStream4svATI;
#define glVertexStream4svATI glflglVertexStream4svATI
extern PFNGLMULTITEXCOORD4IARBPROC glflglMultiTexCoord4iARB;
#define glMultiTexCoord4iARB glflglMultiTexCoord4iARB
extern PFNGLVARIANTFVEXTPROC glflglVariantfvEXT;
#define glVariantfvEXT glflglVariantfvEXT
extern PFNGLMATRIXLOADFEXTPROC glflglMatrixLoadfEXT;
#define glMatrixLoadfEXT glflglMatrixLoadfEXT
extern PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC glflglLoadIdentityDeformationMapSGIX;
#define glLoadIdentityDeformationMapSGIX glflglLoadIdentityDeformationMapSGIX
extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glflglGetRenderbufferParameteriv;
#define glGetRenderbufferParameteriv glflglGetRenderbufferParameteriv
extern PFNGLPROGRAMUNIFORM3FEXTPROC glflglProgramUniform3fEXT;
#define glProgramUniform3fEXT glflglProgramUniform3fEXT
extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glflglNamedRenderbufferStorage;
#define glNamedRenderbufferStorage glflglNamedRenderbufferStorage
extern PFNGLREADINSTRUMENTSSGIXPROC glflglReadInstrumentsSGIX;
#define glReadInstrumentsSGIX glflglReadInstrumentsSGIX
extern PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC glflglProgramPathFragmentInputGenNV;
#define glProgramPathFragmentInputGenNV glflglProgramPathFragmentInputGenNV
extern PFNGLFOGCOORDPOINTERLISTIBMPROC glflglFogCoordPointerListIBM;
#define glFogCoordPointerListIBM glflglFogCoordPointerListIBM
extern PFNGLFENCESYNCPROC glflglFenceSync;
#define glFenceSync glflglFenceSync
extern PFNGLGETVERTEXATTRIBIIVEXTPROC glflglGetVertexAttribIivEXT;
#define glGetVertexAttribIivEXT glflglGetVertexAttribIivEXT
extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glflglFramebufferDrawBuffersEXT;
#define glFramebufferDrawBuffersEXT glflglFramebufferDrawBuffersEXT
extern PFNGLVERTEXATTRIBS4FVNVPROC glflglVertexAttribs4fvNV;
#define glVertexAttribs4fvNV glflglVertexAttribs4fvNV
extern PFNGLUNMAPBUFFEROESPROC glflglUnmapBufferOES;
#define glUnmapBufferOES glflglUnmapBufferOES
extern PFNGLVERTEXATTRIB3SVPROC glflglVertexAttrib3sv;
#define glVertexAttrib3sv glflglVertexAttrib3sv
extern PFNGLGETQUERYOBJECTI64VEXTPROC glflglGetQueryObjecti64vEXT;
#define glGetQueryObjecti64vEXT glflglGetQueryObjecti64vEXT
extern PFNGLPROGRAMUNIFORM4UIEXTPROC glflglProgramUniform4uiEXT;
#define glProgramUniform4uiEXT glflglProgramUniform4uiEXT
extern PFNGLVALIDATEPROGRAMPIPELINEPROC glflglValidateProgramPipeline;
#define glValidateProgramPipeline glflglValidateProgramPipeline
extern PFNGLFEEDBACKBUFFERXOESPROC glflglFeedbackBufferxOES;
#define glFeedbackBufferxOES glflglFeedbackBufferxOES
extern PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC glflglProgramNamedParameter4dvNV;
#define glProgramNamedParameter4dvNV glflglProgramNamedParameter4dvNV
extern PFNGLTEXPAGECOMMITMENTARBPROC glflglTexPageCommitmentARB;
#define glTexPageCommitmentARB glflglTexPageCommitmentARB
extern PFNGLGETINSTRUMENTSSGIXPROC glflglGetInstrumentsSGIX;
#define glGetInstrumentsSGIX glflglGetInstrumentsSGIX
extern PFNGLWINDOWPOS3DVARBPROC glflglWindowPos3dvARB;
#define glWindowPos3dvARB glflglWindowPos3dvARB
extern PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC glflglStencilStrokePathInstancedNV;
#define glStencilStrokePathInstancedNV glflglStencilStrokePathInstancedNV
extern PFNGLCOLOR3HVNVPROC glflglColor3hvNV;
#define glColor3hvNV glflglColor3hvNV
extern PFNGLPROGRAMUNIFORM2I64NVPROC glflglProgramUniform2i64NV;
#define glProgramUniform2i64NV glflglProgramUniform2i64NV
extern PFNGLVERTEX2XOESPROC glflglVertex2xOES;
#define glVertex2xOES glflglVertex2xOES
extern PFNGLGENSAMPLERSPROC glflglGenSamplers;
#define glGenSamplers glflglGenSamplers
extern PFNGLPROGRAMENVPARAMETERI4INVPROC glflglProgramEnvParameterI4iNV;
#define glProgramEnvParameterI4iNV glflglProgramEnvParameterI4iNV
extern PFNGLVERTEXATTRIBS2FVNVPROC glflglVertexAttribs2fvNV;
#define glVertexAttribs2fvNV glflglVertexAttribs2fvNV
extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glflglDrawTransformFeedbackInstanced;
#define glDrawTransformFeedbackInstanced glflglDrawTransformFeedbackInstanced
extern PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC glflglStencilThenCoverStrokePathNV;
#define glStencilThenCoverStrokePathNV glflglStencilThenCoverStrokePathNV
extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glflglDeleteVertexArraysAPPLE;
#define glDeleteVertexArraysAPPLE glflglDeleteVertexArraysAPPLE
extern PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC glflglGetNamedBufferParameterui64vNV;
#define glGetNamedBufferParameterui64vNV glflglGetNamedBufferParameterui64vNV
extern PFNGLQUERYMATRIXXOESPROC glflglQueryMatrixxOES;
#define glQueryMatrixxOES glflglQueryMatrixxOES
extern PFNGLTEXCOORD4IVPROC glflglTexCoord4iv;
#define glTexCoord4iv glflglTexCoord4iv
extern PFNGLDRAWTRANSFORMFEEDBACKPROC glflglDrawTransformFeedback;
#define glDrawTransformFeedback glflglDrawTransformFeedback
extern PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glflglTexCoord2fColor4fNormal3fVertex3fvSUN;
#define glTexCoord2fColor4fNormal3fVertex3fvSUN glflglTexCoord2fColor4fNormal3fVertex3fvSUN
extern PFNGLVDPAUREGISTERVIDEOSURFACENVPROC glflglVDPAURegisterVideoSurfaceNV;
#define glVDPAURegisterVideoSurfaceNV glflglVDPAURegisterVideoSurfaceNV
extern PFNGLGETTEXPARAMETERIUIVPROC glflglGetTexParameterIuiv;
#define glGetTexParameterIuiv glflglGetTexParameterIuiv
extern PFNGLVERTEXSTREAM2IATIPROC glflglVertexStream2iATI;
#define glVertexStream2iATI glflglVertexStream2iATI
extern PFNGLINDEXPOINTERPROC glflglIndexPointer;
#define glIndexPointer glflglIndexPointer
extern PFNGLVERTEXATTRIB4NBVPROC glflglVertexAttrib4Nbv;
#define glVertexAttrib4Nbv glflglVertexAttrib4Nbv
extern PFNGLLISTPARAMETERISGIXPROC glflglListParameteriSGIX;
#define glListParameteriSGIX glflglListParameteriSGIX
extern PFNGLBLENDCOLORXOESPROC glflglBlendColorxOES;
#define glBlendColorxOES glflglBlendColorxOES
extern PFNGLUNIFORMUI64VNVPROC glflglUniformui64vNV;
#define glUniformui64vNV glflglUniformui64vNV
extern PFNGLISSYNCPROC glflglIsSync;
#define glIsSync glflglIsSync
extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glflglGetTextureParameterivEXT;
#define glGetTextureParameterivEXT glflglGetTextureParameterivEXT
extern PFNGLFOGCOORDHVNVPROC glflglFogCoordhvNV;
#define glFogCoordhvNV glflglFogCoordhvNV
extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glflglFramebufferTextureLayerEXT;
#define glFramebufferTextureLayerEXT glflglFramebufferTextureLayerEXT
extern PFNGLGETOBJECTPTRLABELPROC glflglGetObjectPtrLabel;
#define glGetObjectPtrLabel glflglGetObjectPtrLabel
extern PFNGLTEXTUREPARAMETERIPROC glflglTextureParameteri;
#define glTextureParameteri glflglTextureParameteri
extern PFNGLTEXTUREPARAMETERFPROC glflglTextureParameterf;
#define glTextureParameterf glflglTextureParameterf
extern PFNGLUNIFORMMATRIX2X3DVPROC glflglUniformMatrix2x3dv;
#define glUniformMatrix2x3dv glflglUniformMatrix2x3dv
extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glflglFramebufferDrawBufferEXT;
#define glFramebufferDrawBufferEXT glflglFramebufferDrawBufferEXT
extern PFNGLCOPYCOLORSUBTABLEPROC glflglCopyColorSubTable;
#define glCopyColorSubTable glflglCopyColorSubTable
extern PFNGLSECONDARYCOLOR3SVPROC glflglSecondaryColor3sv;
#define glSecondaryColor3sv glflglSecondaryColor3sv
extern PFNGLPATHPARAMETERFNVPROC glflglPathParameterfNV;
#define glPathParameterfNV glflglPathParameterfNV
extern PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC glflglMatrixLoadTranspose3x3fNV;
#define glMatrixLoadTranspose3x3fNV glflglMatrixLoadTranspose3x3fNV
extern PFNGLWINDOWPOS2IVPROC glflglWindowPos2iv;
#define glWindowPos2iv glflglWindowPos2iv
extern PFNGLDRAWRANGEELEMENTSEXTPROC glflglDrawRangeElementsEXT;
#define glDrawRangeElementsEXT glflglDrawRangeElementsEXT
extern PFNGLLIGHTIVPROC glflglLightiv;
#define glLightiv glflglLightiv
extern PFNGLDELETEFRAMEBUFFERSOESPROC glflglDeleteFramebuffersOES;
#define glDeleteFramebuffersOES glflglDeleteFramebuffersOES
extern PFNGLCOLOR4XOESPROC glflglColor4xOES;
#define glColor4xOES glflglColor4xOES
extern PFNGLFOGCOORDDPROC glflglFogCoordd;
#define glFogCoordd glflglFogCoordd
extern PFNGLPROGRAMUNIFORM1UIPROC glflglProgramUniform1ui;
#define glProgramUniform1ui glflglProgramUniform1ui
extern PFNGLVERTEXATTRIBI4IVPROC glflglVertexAttribI4iv;
#define glVertexAttribI4iv glflglVertexAttribI4iv
extern PFNGLUNMAPBUFFERARBPROC glflglUnmapBufferARB;
#define glUnmapBufferARB glflglUnmapBufferARB
extern PFNGLCOPYTEXIMAGE2DPROC glflglCopyTexImage2D;
#define glCopyTexImage2D glflglCopyTexImage2D
extern PFNGLMATERIALXOESPROC glflglMaterialxOES;
#define glMaterialxOES glflglMaterialxOES
extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glflglProgramUniformMatrix2x4fvEXT;
#define glProgramUniformMatrix2x4fvEXT glflglProgramUniformMatrix2x4fvEXT
extern PFNGLTESTOBJECTAPPLEPROC glflglTestObjectAPPLE;
#define glTestObjectAPPLE glflglTestObjectAPPLE
extern PFNGLRENDERBUFFERSTORAGEEXTPROC glflglRenderbufferStorageEXT;
#define glRenderbufferStorageEXT glflglRenderbufferStorageEXT
extern PFNGLVERTEXATTRIBL1UI64ARBPROC glflglVertexAttribL1ui64ARB;
#define glVertexAttribL1ui64ARB glflglVertexAttribL1ui64ARB
extern PFNGLENDFRAGMENTSHADERATIPROC glflglEndFragmentShaderATI;
#define glEndFragmentShaderATI glflglEndFragmentShaderATI
extern PFNGLPATHPARAMETERIVNVPROC glflglPathParameterivNV;
#define glPathParameterivNV glflglPathParameterivNV
extern PFNGLUNIFORM4UIVPROC glflglUniform4uiv;
#define glUniform4uiv glflglUniform4uiv
extern PFNGLFRAMEZOOMSGIXPROC glflglFrameZoomSGIX;
#define glFrameZoomSGIX glflglFrameZoomSGIX
extern PFNGLGETINTEGERI_VEXTPROC glflglGetIntegeri_vEXT;
#define glGetIntegeri_vEXT glflglGetIntegeri_vEXT
extern PFNGLSECONDARYCOLOR3FEXTPROC glflglSecondaryColor3fEXT;
#define glSecondaryColor3fEXT glflglSecondaryColor3fEXT
extern PFNGLVERTEXATTRIBL1DVPROC glflglVertexAttribL1dv;
#define glVertexAttribL1dv glflglVertexAttribL1dv
extern PFNGLNORMALSTREAM3SVATIPROC glflglNormalStream3svATI;
#define glNormalStream3svATI glflglNormalStream3svATI
extern PFNGLPATHSTENCILFUNCNVPROC glflglPathStencilFuncNV;
#define glPathStencilFuncNV glflglPathStencilFuncNV
extern PFNGLSETINVARIANTEXTPROC glflglSetInvariantEXT;
#define glSetInvariantEXT glflglSetInvariantEXT
extern PFNGLGETTEXBUMPPARAMETERIVATIPROC glflglGetTexBumpParameterivATI;
#define glGetTexBumpParameterivATI glflglGetTexBumpParameterivATI
extern PFNGLBLENDEQUATIONSEPARATEEXTPROC glflglBlendEquationSeparateEXT;
#define glBlendEquationSeparateEXT glflglBlendEquationSeparateEXT
extern PFNGLENDOCCLUSIONQUERYNVPROC glflglEndOcclusionQueryNV;
#define glEndOcclusionQueryNV glflglEndOcclusionQueryNV
extern PFNGLSCISSORARRAYVPROC glflglScissorArrayv;
#define glScissorArrayv glflglScissorArrayv
extern PFNGLCALLLISTPROC glflglCallList;
#define glCallList glflglCallList
extern PFNGLCOLOR3FVERTEX3FVSUNPROC glflglColor3fVertex3fvSUN;
#define glColor3fVertex3fvSUN glflglColor3fVertex3fvSUN
extern PFNGLEXTGETRENDERBUFFERSQCOMPROC glflglExtGetRenderbuffersQCOM;
#define glExtGetRenderbuffersQCOM glflglExtGetRenderbuffersQCOM
extern PFNGLMAPTEXTURE2DINTELPROC glflglMapTexture2DINTEL;
#define glMapTexture2DINTEL glflglMapTexture2DINTEL
extern PFNGLPIXELTRANSFERXOESPROC glflglPixelTransferxOES;
#define glPixelTransferxOES glflglPixelTransferxOES
extern PFNGLTEXTUREVIEWOESPROC glflglTextureViewOES;
#define glTextureViewOES glflglTextureViewOES
extern PFNGLPOINTPARAMETERFVARBPROC glflglPointParameterfvARB;
#define glPointParameterfvARB glflglPointParameterfvARB
extern PFNGLTAGSAMPLEBUFFERSGIXPROC glflglTagSampleBufferSGIX;
#define glTagSampleBufferSGIX glflglTagSampleBufferSGIX
extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glflglProgramUniformMatrix4dvEXT;
#define glProgramUniformMatrix4dvEXT glflglProgramUniformMatrix4dvEXT
extern PFNGLGETNCOLORTABLEPROC glflglGetnColorTable;
#define glGetnColorTable glflglGetnColorTable
extern PFNGLWINDOWPOS3IVPROC glflglWindowPos3iv;
#define glWindowPos3iv glflglWindowPos3iv
extern PFNGLVERTEXATTRIBL2DVEXTPROC glflglVertexAttribL2dvEXT;
#define glVertexAttribL2dvEXT glflglVertexAttribL2dvEXT
extern PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC glflglGetCombinerStageParameterfvNV;
#define glGetCombinerStageParameterfvNV glflglGetCombinerStageParameterfvNV
extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glflglInvalidateSubFramebuffer;
#define glInvalidateSubFramebuffer glflglInvalidateSubFramebuffer
extern PFNGLMAPBUFFERPROC glflglMapBuffer;
#define glMapBuffer glflglMapBuffer
extern PFNGLSECONDARYCOLOR3DPROC glflglSecondaryColor3d;
#define glSecondaryColor3d glflglSecondaryColor3d
extern PFNGLSECONDARYCOLOR3FPROC glflglSecondaryColor3f;
#define glSecondaryColor3f glflglSecondaryColor3f
extern PFNGLVERTEXATTRIBLFORMATPROC glflglVertexAttribLFormat;
#define glVertexAttribLFormat glflglVertexAttribLFormat
extern PFNGLSECONDARYCOLOR3BPROC glflglSecondaryColor3b;
#define glSecondaryColor3b glflglSecondaryColor3b
extern PFNGLVERTEXSTREAM1FATIPROC glflglVertexStream1fATI;
#define glVertexStream1fATI glflglVertexStream1fATI
extern PFNGLCOVERAGEMODULATIONNVPROC glflglCoverageModulationNV;
#define glCoverageModulationNV glflglCoverageModulationNV
extern PFNGLSECONDARYCOLOR3IPROC glflglSecondaryColor3i;
#define glSecondaryColor3i glflglSecondaryColor3i
extern PFNGLDELETESYNCPROC glflglDeleteSync;
#define glDeleteSync glflglDeleteSync
extern PFNGLGETPROGRAMPARAMETERFVNVPROC glflglGetProgramParameterfvNV;
#define glGetProgramParameterfvNV glflglGetProgramParameterfvNV
extern PFNGLUNIFORMMATRIX4X2DVPROC glflglUniformMatrix4x2dv;
#define glUniformMatrix4x2dv glflglUniformMatrix4x2dv
extern PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glflglVertexArrayVertexAttribLOffsetEXT;
#define glVertexArrayVertexAttribLOffsetEXT glflglVertexArrayVertexAttribLOffsetEXT
extern PFNGLSECONDARYCOLOR3SPROC glflglSecondaryColor3s;
#define glSecondaryColor3s glflglSecondaryColor3s
extern PFNGLISIMAGEHANDLERESIDENTNVPROC glflglIsImageHandleResidentNV;
#define glIsImageHandleResidentNV glflglIsImageHandleResidentNV
extern PFNGLUNIFORM3IVPROC glflglUniform3iv;
#define glUniform3iv glflglUniform3iv
extern PFNGLVERTEXATTRIBL3I64VNVPROC glflglVertexAttribL3i64vNV;
#define glVertexAttribL3i64vNV glflglVertexAttribL3i64vNV
extern PFNGLPOLYGONMODEPROC glflglPolygonMode;
#define glPolygonMode glflglPolygonMode
extern PFNGLTEXGENIOESPROC glflglTexGeniOES;
#define glTexGeniOES glflglTexGeniOES
extern PFNGLPROGRAMUNIFORM4IVPROC glflglProgramUniform4iv;
#define glProgramUniform4iv glflglProgramUniform4iv
extern PFNGLVERTEXATTRIB1DVARBPROC glflglVertexAttrib1dvARB;
#define glVertexAttrib1dvARB glflglVertexAttrib1dvARB
extern PFNGLTEXTURESUBIMAGE2DEXTPROC glflglTextureSubImage2DEXT;
#define glTextureSubImage2DEXT glflglTextureSubImage2DEXT
extern PFNGLISVERTEXARRAYAPPLEPROC glflglIsVertexArrayAPPLE;
#define glIsVertexArrayAPPLE glflglIsVertexArrayAPPLE
extern PFNGLUSEPROGRAMPROC glflglUseProgram;
#define glUseProgram glflglUseProgram
extern PFNGLLINESTIPPLEPROC glflglLineStipple;
#define glLineStipple glflglLineStipple
extern PFNGLGETPROGRAMINFOLOGPROC glflglGetProgramInfoLog;
#define glGetProgramInfoLog glflglGetProgramInfoLog
extern PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC glflglProgramEnvParametersI4uivNV;
#define glProgramEnvParametersI4uivNV glflglProgramEnvParametersI4uivNV
extern PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glflglVertexArrayVertexAttribLFormatEXT;
#define glVertexArrayVertexAttribLFormatEXT glflglVertexArrayVertexAttribLFormatEXT
extern PFNGLUNIFORM3FVARBPROC glflglUniform3fvARB;
#define glUniform3fvARB glflglUniform3fvARB
extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glflglProgramUniformMatrix3x2fvEXT;
#define glProgramUniformMatrix3x2fvEXT glflglProgramUniformMatrix3x2fvEXT
extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glflglCopyTextureSubImage3DEXT;
#define glCopyTextureSubImage3DEXT glflglCopyTextureSubImage3DEXT
extern PFNGLMULTITEXIMAGE1DEXTPROC glflglMultiTexImage1DEXT;
#define glMultiTexImage1DEXT glflglMultiTexImage1DEXT
extern PFNGLDELETEOBJECTARBPROC glflglDeleteObjectARB;
#define glDeleteObjectARB glflglDeleteObjectARB
extern PFNGLTEXTURELIGHTEXTPROC glflglTextureLightEXT;
#define glTextureLightEXT glflglTextureLightEXT
extern PFNGLMULTITEXCOORD3DARBPROC glflglMultiTexCoord3dARB;
#define glMultiTexCoord3dARB glflglMultiTexCoord3dARB
extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glflglNamedFramebufferTextureEXT;
#define glNamedFramebufferTextureEXT glflglNamedFramebufferTextureEXT
extern PFNGLTEXTUREPARAMETERIEXTPROC glflglTextureParameteriEXT;
#define glTextureParameteriEXT glflglTextureParameteriEXT
extern PFNGLEVALCOORD2XVOESPROC glflglEvalCoord2xvOES;
#define glEvalCoord2xvOES glflglEvalCoord2xvOES
extern PFNGLBINDFRAGDATALOCATIONEXTPROC glflglBindFragDataLocationEXT;
#define glBindFragDataLocationEXT glflglBindFragDataLocationEXT
extern PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC glflglTexImage2DMultisampleCoverageNV;
#define glTexImage2DMultisampleCoverageNV glflglTexImage2DMultisampleCoverageNV
extern PFNGLGETATTRIBLOCATIONARBPROC glflglGetAttribLocationARB;
#define glGetAttribLocationARB glflglGetAttribLocationARB
extern PFNGLLIGHTXVPROC glflglLightxv;
#define glLightxv glflglLightxv
extern PFNGLGETFIXEDVPROC glflglGetFixedv;
#define glGetFixedv glflglGetFixedv
extern PFNGLDELETESHADERPROC glflglDeleteShader;
#define glDeleteShader glflglDeleteShader
extern PFNGLVERTEXATTRIB1FARBPROC glflglVertexAttrib1fARB;
#define glVertexAttrib1fARB glflglVertexAttrib1fARB
extern PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC glflglTexCoord2fColor4ubVertex3fSUN;
#define glTexCoord2fColor4ubVertex3fSUN glflglTexCoord2fColor4ubVertex3fSUN
extern PFNGLCOPYTEXTURESUBIMAGE1DPROC glflglCopyTextureSubImage1D;
#define glCopyTextureSubImage1D glflglCopyTextureSubImage1D
extern PFNGLGETMAPDVPROC glflglGetMapdv;
#define glGetMapdv glflglGetMapdv
extern PFNGLMAPPARAMETERFVNVPROC glflglMapParameterfvNV;
#define glMapParameterfvNV glflglMapParameterfvNV
extern PFNGLTEXTUREPARAMETERIUIVPROC glflglTextureParameterIuiv;
#define glTextureParameterIuiv glflglTextureParameterIuiv
extern PFNGLENABLEIOESPROC glflglEnableiOES;
#define glEnableiOES glflglEnableiOES
extern PFNGLGETMINMAXPARAMETERIVEXTPROC glflglGetMinmaxParameterivEXT;
#define glGetMinmaxParameterivEXT glflglGetMinmaxParameterivEXT
extern PFNGLGETVIDEOI64VNVPROC glflglGetVideoi64vNV;
#define glGetVideoi64vNV glflglGetVideoi64vNV
extern PFNGLWINDOWPOS3SARBPROC glflglWindowPos3sARB;
#define glWindowPos3sARB glflglWindowPos3sARB
extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glflglGetConvolutionParameterfv;
#define glGetConvolutionParameterfv glflglGetConvolutionParameterfv
extern PFNGLCOPYTEXSUBIMAGE3DPROC glflglCopyTexSubImage3D;
#define glCopyTexSubImage3D glflglCopyTexSubImage3D
extern PFNGLVERTEXATTRIBI3IPROC glflglVertexAttribI3i;
#define glVertexAttribI3i glflglVertexAttribI3i
extern PFNGLISENABLEDIEXTPROC glflglIsEnablediEXT;
#define glIsEnablediEXT glflglIsEnablediEXT
extern PFNGLTEXCOORD2XOESPROC glflglTexCoord2xOES;
#define glTexCoord2xOES glflglTexCoord2xOES
extern PFNGLVERTEXATTRIBFORMATPROC glflglVertexAttribFormat;
#define glVertexAttribFormat glflglVertexAttribFormat
extern PFNGLPOLYGONOFFSETXPROC glflglPolygonOffsetx;
#define glPolygonOffsetx glflglPolygonOffsetx
extern PFNGLPATHGLYPHRANGENVPROC glflglPathGlyphRangeNV;
#define glPathGlyphRangeNV glflglPathGlyphRangeNV
extern PFNGLVERTEXATTRIBI4USVPROC glflglVertexAttribI4usv;
#define glVertexAttribI4usv glflglVertexAttribI4usv
extern PFNGLTEXPARAMETERFPROC glflglTexParameterf;
#define glTexParameterf glflglTexParameterf
extern PFNGLVERTEXATTRIBBINDINGPROC glflglVertexAttribBinding;
#define glVertexAttribBinding glflglVertexAttribBinding
extern PFNGLGETHISTOGRAMPARAMETERIVPROC glflglGetHistogramParameteriv;
#define glGetHistogramParameteriv glflglGetHistogramParameteriv
extern PFNGLTEXPARAMETERIPROC glflglTexParameteri;
#define glTexParameteri glflglTexParameteri
extern PFNGLGETSHADERSOURCEPROC glflglGetShaderSource;
#define glGetShaderSource glflglGetShaderSource
extern PFNGLALPHAFUNCXOESPROC glflglAlphaFuncxOES;
#define glAlphaFuncxOES glflglAlphaFuncxOES
extern PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC glflglFramebufferSampleLocationsfvNV;
#define glFramebufferSampleLocationsfvNV glflglFramebufferSampleLocationsfvNV
extern PFNGLGETNEXTPERFQUERYIDINTELPROC glflglGetNextPerfQueryIdINTEL;
#define glGetNextPerfQueryIdINTEL glflglGetNextPerfQueryIdINTEL
extern PFNGLPOPNAMEPROC glflglPopName;
#define glPopName glflglPopName
extern PFNGLTEXTUREBUFFEREXTPROC glflglTextureBufferEXT;
#define glTextureBufferEXT glflglTextureBufferEXT
extern PFNGLTEXPARAMETERXPROC glflglTexParameterx;
#define glTexParameterx glflglTexParameterx
extern PFNGLGETPATHCOORDSNVPROC glflglGetPathCoordsNV;
#define glGetPathCoordsNV glflglGetPathCoordsNV
extern PFNGLGENPROGRAMPIPELINESPROC glflglGenProgramPipelines;
#define glGenProgramPipelines glflglGenProgramPipelines
extern PFNGLCOLOR4UBPROC glflglColor4ub;
#define glColor4ub glflglColor4ub
extern PFNGLBUFFERPARAMETERIAPPLEPROC glflglBufferParameteriAPPLE;
#define glBufferParameteriAPPLE glflglBufferParameteriAPPLE
extern PFNGLDRAWARRAYSINSTANCEDANGLEPROC glflglDrawArraysInstancedANGLE;
#define glDrawArraysInstancedANGLE glflglDrawArraysInstancedANGLE
extern PFNGLCOLOR4UIPROC glflglColor4ui;
#define glColor4ui glflglColor4ui
extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glflglGetNamedBufferParameteriv;
#define glGetNamedBufferParameteriv glflglGetNamedBufferParameteriv
extern PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC glflglTransformFeedbackVaryingsEXT;
#define glTransformFeedbackVaryingsEXT glflglTransformFeedbackVaryingsEXT
extern PFNGLCOLOR4USPROC glflglColor4us;
#define glColor4us glflglColor4us
extern PFNGLVERTEXATTRIBP1UIVPROC glflglVertexAttribP1uiv;
#define glVertexAttribP1uiv glflglVertexAttribP1uiv
extern PFNGLLINKPROGRAMPROC glflglLinkProgram;
#define glLinkProgram glflglLinkProgram
extern PFNGLTEXTUREBARRIERNVPROC glflglTextureBarrierNV;
#define glTextureBarrierNV glflglTextureBarrierNV
extern PFNGLTEXCOORD2DVPROC glflglTexCoord2dv;
#define glTexCoord2dv glflglTexCoord2dv
extern PFNGLGETOBJECTLABELPROC glflglGetObjectLabel;
#define glGetObjectLabel glflglGetObjectLabel
extern PFNGLVERTEXPOINTEREXTPROC glflglVertexPointerEXT;
#define glVertexPointerEXT glflglVertexPointerEXT
extern PFNGLDEBUGMESSAGECALLBACKARBPROC glflglDebugMessageCallbackARB;
#define glDebugMessageCallbackARB glflglDebugMessageCallbackARB
extern PFNGLGETSTRINGPROC glflglGetString;
#define glGetString glflglGetString
extern PFNGLGETPATHPARAMETERFVNVPROC glflglGetPathParameterfvNV;
#define glGetPathParameterfvNV glflglGetPathParameterfvNV
extern PFNGLEXTGETSHADERSQCOMPROC glflglExtGetShadersQCOM;
#define glExtGetShadersQCOM glflglExtGetShadersQCOM
extern PFNGLLIGHTXVOESPROC glflglLightxvOES;
#define glLightxvOES glflglLightxvOES
extern PFNGLENDQUERYPROC glflglEndQuery;
#define glEndQuery glflglEndQuery
extern PFNGLSECONDARYCOLOR3UIVPROC glflglSecondaryColor3uiv;
#define glSecondaryColor3uiv glflglSecondaryColor3uiv
extern PFNGLISQUERYEXTPROC glflglIsQueryEXT;
#define glIsQueryEXT glflglIsQueryEXT
extern PFNGLPRIORITIZETEXTURESXOESPROC glflglPrioritizeTexturesxOES;
#define glPrioritizeTexturesxOES glflglPrioritizeTexturesxOES
extern PFNGLEDGEFLAGPOINTERPROC glflglEdgeFlagPointer;
#define glEdgeFlagPointer glflglEdgeFlagPointer
extern PFNGLFRAMEBUFFERPARAMETERIPROC glflglFramebufferParameteri;
#define glFramebufferParameteri glflglFramebufferParameteri
extern PFNGLTEXCOORD3HNVPROC glflglTexCoord3hNV;
#define glTexCoord3hNV glflglTexCoord3hNV
extern PFNGLMULTIMODEDRAWELEMENTSIBMPROC glflglMultiModeDrawElementsIBM;
#define glMultiModeDrawElementsIBM glflglMultiModeDrawElementsIBM
extern PFNGLTEXENVXVPROC glflglTexEnvxv;
#define glTexEnvxv glflglTexEnvxv
extern PFNGLVERTEXATTRIBI2UIPROC glflglVertexAttribI2ui;
#define glVertexAttribI2ui glflglVertexAttribI2ui
extern PFNGLCLAMPCOLORARBPROC glflglClampColorARB;
#define glClampColorARB glflglClampColorARB
extern PFNGLCOLORPOINTERVINTELPROC glflglColorPointervINTEL;
#define glColorPointervINTEL glflglColorPointervINTEL
extern PFNGLDELETETEXTURESPROC glflglDeleteTextures;
#define glDeleteTextures glflglDeleteTextures
extern PFNGLGETMINMAXPARAMETERFVEXTPROC glflglGetMinmaxParameterfvEXT;
#define glGetMinmaxParameterfvEXT glflglGetMinmaxParameterfvEXT
extern PFNGLDRAWTEXIVOESPROC glflglDrawTexivOES;
#define glDrawTexivOES glflglDrawTexivOES
extern PFNGLWINDOWPOS3SMESAPROC glflglWindowPos3sMESA;
#define glWindowPos3sMESA glflglWindowPos3sMESA
extern PFNGLVERTEXATTRIB4FPROC glflglVertexAttrib4f;
#define glVertexAttrib4f glflglVertexAttrib4f
extern PFNGLVERTEXATTRIB4DPROC glflglVertexAttrib4d;
#define glVertexAttrib4d glflglVertexAttrib4d
extern PFNGLTEXCOORD2FVERTEX3FVSUNPROC glflglTexCoord2fVertex3fvSUN;
#define glTexCoord2fVertex3fvSUN glflglTexCoord2fVertex3fvSUN
extern PFNGLREPLACEMENTCODEUSSUNPROC glflglReplacementCodeusSUN;
#define glReplacementCodeusSUN glflglReplacementCodeusSUN
extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glflglGetNamedFramebufferParameteriv;
#define glGetNamedFramebufferParameteriv glflglGetNamedFramebufferParameteriv
extern PFNGLVERTEXSTREAM1FVATIPROC glflglVertexStream1fvATI;
#define glVertexStream1fvATI glflglVertexStream1fvATI
extern PFNGLCREATEVERTEXARRAYSPROC glflglCreateVertexArrays;
#define glCreateVertexArrays glflglCreateVertexArrays
extern PFNGLBEGINCONDITIONALRENDERPROC glflglBeginConditionalRender;
#define glBeginConditionalRender glflglBeginConditionalRender
extern PFNGLVERTEX4BOESPROC glflglVertex4bOES;
#define glVertex4bOES glflglVertex4bOES
extern PFNGLMULTITEXCOORD3FARBPROC glflglMultiTexCoord3fARB;
#define glMultiTexCoord3fARB glflglMultiTexCoord3fARB
extern PFNGLGETQUERYOBJECTUIVARBPROC glflglGetQueryObjectuivARB;
#define glGetQueryObjectuivARB glflglGetQueryObjectuivARB
extern PFNGLSCALEXOESPROC glflglScalexOES;
#define glScalexOES glflglScalexOES
extern PFNGLSAMPLERPARAMETERIPROC glflglSamplerParameteri;
#define glSamplerParameteri glflglSamplerParameteri
extern PFNGLSAMPLERPARAMETERFPROC glflglSamplerParameterf;
#define glSamplerParameterf glflglSamplerParameterf
extern PFNGLCOLORPOINTEREXTPROC glflglColorPointerEXT;
#define glColorPointerEXT glflglColorPointerEXT
extern PFNGLVIEWPORTARRAYVNVPROC glflglViewportArrayvNV;
#define glViewportArrayvNV glflglViewportArrayvNV
extern PFNGLEXTGETFRAMEBUFFERSQCOMPROC glflglExtGetFramebuffersQCOM;
#define glExtGetFramebuffersQCOM glflglExtGetFramebuffersQCOM
extern PFNGLSHADEROP1EXTPROC glflglShaderOp1EXT;
#define glShaderOp1EXT glflglShaderOp1EXT
extern PFNGLBEGINVIDEOCAPTURENVPROC glflglBeginVideoCaptureNV;
#define glBeginVideoCaptureNV glflglBeginVideoCaptureNV
extern PFNGLUNIFORM1FPROC glflglUniform1f;
#define glUniform1f glflglUniform1f
extern PFNGLUNIFORM1DPROC glflglUniform1d;
#define glUniform1d glflglUniform1d
extern PFNGLRENDERMODEPROC glflglRenderMode;
#define glRenderMode glflglRenderMode
extern PFNGLCLEARCOLORIIEXTPROC glflglClearColorIiEXT;
#define glClearColorIiEXT glflglClearColorIiEXT
extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glflglGetCompressedTexImage;
#define glGetCompressedTexImage glflglGetCompressedTexImage
extern PFNGLDETAILTEXFUNCSGISPROC glflglDetailTexFuncSGIS;
#define glDetailTexFuncSGIS glflglDetailTexFuncSGIS
extern PFNGLUNIFORM1IPROC glflglUniform1i;
#define glUniform1i glflglUniform1i
extern PFNGLGETTEXENVFVPROC glflglGetTexEnvfv;
#define glGetTexEnvfv glflglGetTexEnvfv
extern PFNGLCOLORTABLEPARAMETERIVSGIPROC glflglColorTableParameterivSGI;
#define glColorTableParameterivSGI glflglColorTableParameterivSGI
extern PFNGLCULLFACEPROC glflglCullFace;
#define glCullFace glflglCullFace
extern PFNGLDELETEFENCESAPPLEPROC glflglDeleteFencesAPPLE;
#define glDeleteFencesAPPLE glflglDeleteFencesAPPLE
extern PFNGLPROGRAMUNIFORM4IPROC glflglProgramUniform4i;
#define glProgramUniform4i glflglProgramUniform4i
extern PFNGLUNIFORMHANDLEUI64ARBPROC glflglUniformHandleui64ARB;
#define glUniformHandleui64ARB glflglUniformHandleui64ARB
extern PFNGLPROGRAMUNIFORM4FPROC glflglProgramUniform4f;
#define glProgramUniform4f glflglProgramUniform4f
extern PFNGLVIEWPORTINDEXEDFPROC glflglViewportIndexedf;
#define glViewportIndexedf glflglViewportIndexedf
extern PFNGLPROGRAMUNIFORM4DPROC glflglProgramUniform4d;
#define glProgramUniform4d glflglProgramUniform4d
extern PFNGLTEXCOORD1XOESPROC glflglTexCoord1xOES;
#define glTexCoord1xOES glflglTexCoord1xOES
extern PFNGLVERTEXSTREAM3IVATIPROC glflglVertexStream3ivATI;
#define glVertexStream3ivATI glflglVertexStream3ivATI
extern PFNGLVERTEXATTRIBI2UIVPROC glflglVertexAttribI2uiv;
#define glVertexAttribI2uiv glflglVertexAttribI2uiv
extern PFNGLENDQUERYARBPROC glflglEndQueryARB;
#define glEndQueryARB glflglEndQueryARB
extern PFNGLVERTEXATTRIB4SVARBPROC glflglVertexAttrib4svARB;
#define glVertexAttrib4svARB glflglVertexAttrib4svARB
extern PFNGLVERTEXATTRIB4UIVARBPROC glflglVertexAttrib4uivARB;
#define glVertexAttrib4uivARB glflglVertexAttrib4uivARB
extern PFNGLRESUMETRANSFORMFEEDBACKNVPROC glflglResumeTransformFeedbackNV;
#define glResumeTransformFeedbackNV glflglResumeTransformFeedbackNV
extern PFNGLATTACHSHADERPROC glflglAttachShader;
#define glAttachShader glflglAttachShader
extern PFNGLCOLOR4HNVPROC glflglColor4hNV;
#define glColor4hNV glflglColor4hNV
extern PFNGLGETFENCEIVNVPROC glflglGetFenceivNV;
#define glGetFenceivNV glflglGetFenceivNV
extern PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC glflglTexCoord2fColor4ubVertex3fvSUN;
#define glTexCoord2fColor4ubVertex3fvSUN glflglTexCoord2fColor4ubVertex3fvSUN
extern PFNGLQUERYCOUNTERPROC glflglQueryCounter;
#define glQueryCounter glflglQueryCounter
extern PFNGLFOGCOORDPOINTERPROC glflglFogCoordPointer;
#define glFogCoordPointer glflglFogCoordPointer
extern PFNGLGETFOGFUNCSGISPROC glflglGetFogFuncSGIS;
#define glGetFogFuncSGIS glflglGetFogFuncSGIS
extern PFNGLUNMAPNAMEDBUFFERPROC glflglUnmapNamedBuffer;
#define glUnmapNamedBuffer glflglUnmapNamedBuffer
extern PFNGLDISABLEIEXTPROC glflglDisableiEXT;
#define glDisableiEXT glflglDisableiEXT
extern PFNGLVERTEXATTRIB3FARBPROC glflglVertexAttrib3fARB;
#define glVertexAttrib3fARB glflglVertexAttrib3fARB
extern PFNGLGETTEXPARAMETERIIVOESPROC glflglGetTexParameterIivOES;
#define glGetTexParameterIivOES glflglGetTexParameterIivOES
extern PFNGLRASTERPOS2XOESPROC glflglRasterPos2xOES;
#define glRasterPos2xOES glflglRasterPos2xOES
extern PFNGLCOLOR4UBVERTEX2FVSUNPROC glflglColor4ubVertex2fvSUN;
#define glColor4ubVertex2fvSUN glflglColor4ubVertex2fvSUN
extern PFNGLSECONDARYCOLOR3DVPROC glflglSecondaryColor3dv;
#define glSecondaryColor3dv glflglSecondaryColor3dv
extern PFNGLVERTEXATTRIBI4SVPROC glflglVertexAttribI4sv;
#define glVertexAttribI4sv glflglVertexAttribI4sv
extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glflglDrawTransformFeedbackStreamInstanced;
#define glDrawTransformFeedbackStreamInstanced glflglDrawTransformFeedbackStreamInstanced
extern PFNGLGETBUFFERPARAMETERIVPROC glflglGetBufferParameteriv;
#define glGetBufferParameteriv glflglGetBufferParameteriv
extern PFNGLSPRITEPARAMETERFSGIXPROC glflglSpriteParameterfSGIX;
#define glSpriteParameterfSGIX glflglSpriteParameterfSGIX
extern PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC glflglBindVideoCaptureStreamTextureNV;
#define glBindVideoCaptureStreamTextureNV glflglBindVideoCaptureStreamTextureNV
extern PFNGLTEXPARAMETERIUIVPROC glflglTexParameterIuiv;
#define glTexParameterIuiv glflglTexParameterIuiv
extern PFNGLGETQUERYOBJECTUIVEXTPROC glflglGetQueryObjectuivEXT;
#define glGetQueryObjectuivEXT glflglGetQueryObjectuivEXT
extern PFNGLFLUSHPIXELDATARANGENVPROC glflglFlushPixelDataRangeNV;
#define glFlushPixelDataRangeNV glflglFlushPixelDataRangeNV
extern PFNGLWINDOWPOS3FVPROC glflglWindowPos3fv;
#define glWindowPos3fv glflglWindowPos3fv
extern PFNGLVERTEXATTRIBLFORMATNVPROC glflglVertexAttribLFormatNV;
#define glVertexAttribLFormatNV glflglVertexAttribLFormatNV
extern PFNGLLIGHTMODELFVPROC glflglLightModelfv;
#define glLightModelfv glflglLightModelfv
extern PFNGLGETCOLORTABLESGIPROC glflglGetColorTableSGI;
#define glGetColorTableSGI glflglGetColorTableSGI
extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glflglGetCompressedTexImageARB;
#define glGetCompressedTexImageARB glflglGetCompressedTexImageARB
extern PFNGLMATRIXMULT3X2FNVPROC glflglMatrixMult3x2fNV;
#define glMatrixMult3x2fNV glflglMatrixMult3x2fNV
extern PFNGLCONVOLUTIONPARAMETERIPROC glflglConvolutionParameteri;
#define glConvolutionParameteri glflglConvolutionParameteri
extern PFNGLVERTEXWEIGHTHNVPROC glflglVertexWeighthNV;
#define glVertexWeighthNV glflglVertexWeighthNV
extern PFNGLCONVOLUTIONPARAMETERFPROC glflglConvolutionParameterf;
#define glConvolutionParameterf glflglConvolutionParameterf
extern PFNGLVERTEXATTRIBI4UBVEXTPROC glflglVertexAttribI4ubvEXT;
#define glVertexAttribI4ubvEXT glflglVertexAttribI4ubvEXT
extern PFNGLVERTEXATTRIB1DNVPROC glflglVertexAttrib1dNV;
#define glVertexAttrib1dNV glflglVertexAttrib1dNV
extern PFNGLBLENDFUNCIOESPROC glflglBlendFunciOES;
#define glBlendFunciOES glflglBlendFunciOES
extern PFNGLGETNUNIFORMFVKHRPROC glflglGetnUniformfvKHR;
#define glGetnUniformfvKHR glflglGetnUniformfvKHR
extern PFNGLUNMAPOBJECTBUFFERATIPROC glflglUnmapObjectBufferATI;
#define glUnmapObjectBufferATI glflglUnmapObjectBufferATI
extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glflglNamedProgramLocalParameterI4uiEXT;
#define glNamedProgramLocalParameterI4uiEXT glflglNamedProgramLocalParameterI4uiEXT
extern PFNGLPROGRAMUNIFORM1IEXTPROC glflglProgramUniform1iEXT;
#define glProgramUniform1iEXT glflglProgramUniform1iEXT
extern PFNGLDELETEQUERIESARBPROC glflglDeleteQueriesARB;
#define glDeleteQueriesARB glflglDeleteQueriesARB
extern PFNGLCLEARNAMEDBUFFERDATAEXTPROC glflglClearNamedBufferDataEXT;
#define glClearNamedBufferDataEXT glflglClearNamedBufferDataEXT
extern PFNGLWINDOWPOS3SVARBPROC glflglWindowPos3svARB;
#define glWindowPos3svARB glflglWindowPos3svARB
extern PFNGLVERTEX4SPROC glflglVertex4s;
#define glVertex4s glflglVertex4s
extern PFNGLGETCONVOLUTIONPARAMETERXVOESPROC glflglGetConvolutionParameterxvOES;
#define glGetConvolutionParameterxvOES glflglGetConvolutionParameterxvOES
extern PFNGLROTATEXPROC glflglRotatex;
#define glRotatex glflglRotatex
extern PFNGLGENPATHSNVPROC glflglGenPathsNV;
#define glGenPathsNV glflglGenPathsNV
extern PFNGLSTRINGMARKERGREMEDYPROC glflglStringMarkerGREMEDY;
#define glStringMarkerGREMEDY glflglStringMarkerGREMEDY
extern PFNGLISTRANSFORMFEEDBACKPROC glflglIsTransformFeedback;
#define glIsTransformFeedback glflglIsTransformFeedback
extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glflglProgramUniformMatrix2x3dvEXT;
#define glProgramUniformMatrix2x3dvEXT glflglProgramUniformMatrix2x3dvEXT
extern PFNGLGETOBJECTLABELEXTPROC glflglGetObjectLabelEXT;
#define glGetObjectLabelEXT glflglGetObjectLabelEXT
extern PFNGLUNIFORMHANDLEUI64VNVPROC glflglUniformHandleui64vNV;
#define glUniformHandleui64vNV glflglUniformHandleui64vNV
extern PFNGLROTATEDPROC glflglRotated;
#define glRotated glflglRotated
extern PFNGLISPROGRAMPIPELINEPROC glflglIsProgramPipeline;
#define glIsProgramPipeline glflglIsProgramPipeline
extern PFNGLROTATEFPROC glflglRotatef;
#define glRotatef glflglRotatef
extern PFNGLVERTEX4IPROC glflglVertex4i;
#define glVertex4i glflglVertex4i
extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glflglGetNamedProgramStringEXT;
#define glGetNamedProgramStringEXT glflglGetNamedProgramStringEXT
extern PFNGLVERTEXATTRIB4SNVPROC glflglVertexAttrib4sNV;
#define glVertexAttrib4sNV glflglVertexAttrib4sNV
extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glflglProgramLocalParameter4dvARB;
#define glProgramLocalParameter4dvARB glflglProgramLocalParameter4dvARB
extern PFNGLFOGCOORDFORMATNVPROC glflglFogCoordFormatNV;
#define glFogCoordFormatNV glflglFogCoordFormatNV
extern PFNGLGETTEXENVXVPROC glflglGetTexEnvxv;
#define glGetTexEnvxv glflglGetTexEnvxv
extern PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC glflglMultiDrawElementsBaseVertexEXT;
#define glMultiDrawElementsBaseVertexEXT glflglMultiDrawElementsBaseVertexEXT
extern PFNGLUNIFORMMATRIX3FVPROC glflglUniformMatrix3fv;
#define glUniformMatrix3fv glflglUniformMatrix3fv
extern PFNGLGETNMAPFVARBPROC glflglGetnMapfvARB;
#define glGetnMapfvARB glflglGetnMapfvARB
extern PFNGLGETNUNIFORMFVPROC glflglGetnUniformfv;
#define glGetnUniformfv glflglGetnUniformfv
extern PFNGLVERTEXATTRIBL2DVPROC glflglVertexAttribL2dv;
#define glVertexAttribL2dv glflglVertexAttribL2dv
extern PFNGLVERTEXWEIGHTPOINTEREXTPROC glflglVertexWeightPointerEXT;
#define glVertexWeightPointerEXT glflglVertexWeightPointerEXT
extern PFNGLTANGENT3SEXTPROC glflglTangent3sEXT;
#define glTangent3sEXT glflglTangent3sEXT
extern PFNGLSECONDARYCOLORPOINTERPROC glflglSecondaryColorPointer;
#define glSecondaryColorPointer glflglSecondaryColorPointer
extern PFNGLALPHAFUNCPROC glflglAlphaFunc;
#define glAlphaFunc glflglAlphaFunc
extern PFNGLGETNAMEDSTRINGARBPROC glflglGetNamedStringARB;
#define glGetNamedStringARB glflglGetNamedStringARB
extern PFNGLBUFFERPAGECOMMITMENTARBPROC glflglBufferPageCommitmentARB;
#define glBufferPageCommitmentARB glflglBufferPageCommitmentARB
extern PFNGLVERTEXATTRIBL2DPROC glflglVertexAttribL2d;
#define glVertexAttribL2d glflglVertexAttribL2d
extern PFNGLSTENCILFUNCPROC glflglStencilFunc;
#define glStencilFunc glflglStencilFunc
extern PFNGLGETVERTEXATTRIBDVNVPROC glflglGetVertexAttribdvNV;
#define glGetVertexAttribdvNV glflglGetVertexAttribdvNV
extern PFNGLTEXCOORD3DVPROC glflglTexCoord3dv;
#define glTexCoord3dv glflglTexCoord3dv
extern PFNGLGETQUERYBUFFEROBJECTIVPROC glflglGetQueryBufferObjectiv;
#define glGetQueryBufferObjectiv glflglGetQueryBufferObjectiv
extern PFNGLTEXGENXOESPROC glflglTexGenxOES;
#define glTexGenxOES glflglTexGenxOES
extern PFNGLBLENDFUNCSEPARATEIOESPROC glflglBlendFuncSeparateiOES;
#define glBlendFuncSeparateiOES glflglBlendFuncSeparateiOES
extern PFNGLDRAWTEXSVOESPROC glflglDrawTexsvOES;
#define glDrawTexsvOES glflglDrawTexsvOES
extern PFNGLLIGHTENVISGIXPROC glflglLightEnviSGIX;
#define glLightEnviSGIX glflglLightEnviSGIX
extern PFNGLCOVERFILLPATHNVPROC glflglCoverFillPathNV;
#define glCoverFillPathNV glflglCoverFillPathNV
extern PFNGLGETPROGRAMPIPELINEIVPROC glflglGetProgramPipelineiv;
#define glGetProgramPipelineiv glflglGetProgramPipelineiv
extern PFNGLVERTEXSTREAM2IVATIPROC glflglVertexStream2ivATI;
#define glVertexStream2ivATI glflglVertexStream2ivATI
extern PFNGLFRAMEBUFFERTEXTURE2DOESPROC glflglFramebufferTexture2DOES;
#define glFramebufferTexture2DOES glflglFramebufferTexture2DOES
extern PFNGLTEXCOORD4BOESPROC glflglTexCoord4bOES;
#define glTexCoord4bOES glflglTexCoord4bOES
extern PFNGLGETCOLORTABLEEXTPROC glflglGetColorTableEXT;
#define glGetColorTableEXT glflglGetColorTableEXT
extern PFNGLGETSHADERINFOLOGPROC glflglGetShaderInfoLog;
#define glGetShaderInfoLog glflglGetShaderInfoLog
extern PFNGLGETOCCLUSIONQUERYUIVNVPROC glflglGetOcclusionQueryuivNV;
#define glGetOcclusionQueryuivNV glflglGetOcclusionQueryuivNV
extern PFNGLMULTITEXCOORD4BOESPROC glflglMultiTexCoord4bOES;
#define glMultiTexCoord4bOES glflglMultiTexCoord4bOES
extern PFNGLVERTEXATTRIBL1I64NVPROC glflglVertexAttribL1i64NV;
#define glVertexAttribL1i64NV glflglVertexAttribL1i64NV
extern PFNGLVDPAUINITNVPROC glflglVDPAUInitNV;
#define glVDPAUInitNV glflglVDPAUInitNV
extern PFNGLVERTEXATTRIB1HVNVPROC glflglVertexAttrib1hvNV;
#define glVertexAttrib1hvNV glflglVertexAttrib1hvNV
extern PFNGLVERTEXATTRIBI4IPROC glflglVertexAttribI4i;
#define glVertexAttribI4i glflglVertexAttribI4i
extern PFNGLRASTERPOS2IVPROC glflglRasterPos2iv;
#define glRasterPos2iv glflglRasterPos2iv
extern PFNGLGETINTEGERUI64I_VNVPROC glflglGetIntegerui64i_vNV;
#define glGetIntegerui64i_vNV glflglGetIntegerui64i_vNV
extern PFNGLIMAGETRANSFORMPARAMETERFVHPPROC glflglImageTransformParameterfvHP;
#define glImageTransformParameterfvHP glflglImageTransformParameterfvHP
extern PFNGLEDGEFLAGFORMATNVPROC glflglEdgeFlagFormatNV;
#define glEdgeFlagFormatNV glflglEdgeFlagFormatNV
extern PFNGLUNIFORMHANDLEUI64NVPROC glflglUniformHandleui64NV;
#define glUniformHandleui64NV glflglUniformHandleui64NV
extern PFNGLDEBUGMESSAGEINSERTAMDPROC glflglDebugMessageInsertAMD;
#define glDebugMessageInsertAMD glflglDebugMessageInsertAMD
extern PFNGLVERTEXATTRIBL3UI64VNVPROC glflglVertexAttribL3ui64vNV;
#define glVertexAttribL3ui64vNV glflglVertexAttribL3ui64vNV
extern PFNGLVERTEXATTRIBI4IVEXTPROC glflglVertexAttribI4ivEXT;
#define glVertexAttribI4ivEXT glflglVertexAttribI4ivEXT
extern PFNGLTEXIMAGE4DSGISPROC glflglTexImage4DSGIS;
#define glTexImage4DSGIS glflglTexImage4DSGIS
extern PFNGLBLENDEQUATIONSEPARATEPROC glflglBlendEquationSeparate;
#define glBlendEquationSeparate glflglBlendEquationSeparate
extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glflglDrawElementsInstancedARB;
#define glDrawElementsInstancedARB glflglDrawElementsInstancedARB
extern PFNGLGETSUBROUTINEINDEXPROC glflglGetSubroutineIndex;
#define glGetSubroutineIndex glflglGetSubroutineIndex
extern PFNGLVERTEXATTRIB2SVPROC glflglVertexAttrib2sv;
#define glVertexAttrib2sv glflglVertexAttrib2sv
extern PFNGLSAMPLEPATTERNSGISPROC glflglSamplePatternSGIS;
#define glSamplePatternSGIS glflglSamplePatternSGIS
extern PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC glflglEGLImageTargetRenderbufferStorageOES;
#define glEGLImageTargetRenderbufferStorageOES glflglEGLImageTargetRenderbufferStorageOES
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC glflglCompressedTexSubImage3DOES;
#define glCompressedTexSubImage3DOES glflglCompressedTexSubImage3DOES
extern PFNGLPUSHATTRIBPROC glflglPushAttrib;
#define glPushAttrib glflglPushAttrib
extern PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC glflglGetVertexAttribArrayObjectivATI;
#define glGetVertexAttribArrayObjectivATI glflglGetVertexAttribArrayObjectivATI
extern PFNGLVERTEX3HNVPROC glflglVertex3hNV;
#define glVertex3hNV glflglVertex3hNV
extern PFNGLGENERATEMIPMAPOESPROC glflglGenerateMipmapOES;
#define glGenerateMipmapOES glflglGenerateMipmapOES
extern PFNGLRASTERPOS3XVOESPROC glflglRasterPos3xvOES;
#define glRasterPos3xvOES glflglRasterPos3xvOES
extern PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC glflglCompressedTextureImage1DEXT;
#define glCompressedTextureImage1DEXT glflglCompressedTextureImage1DEXT
extern PFNGLVERTEXATTRIBL3DVPROC glflglVertexAttribL3dv;
#define glVertexAttribL3dv glflglVertexAttribL3dv
extern PFNGLMULTITEXCOORD3FVARBPROC glflglMultiTexCoord3fvARB;
#define glMultiTexCoord3fvARB glflglMultiTexCoord3fvARB
extern PFNGLMATERIALXVOESPROC glflglMaterialxvOES;
#define glMaterialxvOES glflglMaterialxvOES
extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glflglNamedProgramLocalParameter4fEXT;
#define glNamedProgramLocalParameter4fEXT glflglNamedProgramLocalParameter4fEXT
extern PFNGLVERTEXATTRIBL1DEXTPROC glflglVertexAttribL1dEXT;
#define glVertexAttribL1dEXT glflglVertexAttribL1dEXT
extern PFNGLGETNUNIFORMDVARBPROC glflglGetnUniformdvARB;
#define glGetnUniformdvARB glflglGetnUniformdvARB
extern PFNGLBLITFRAMEBUFFERNVPROC glflglBlitFramebufferNV;
#define glBlitFramebufferNV glflglBlitFramebufferNV
extern PFNGLSECONDARYCOLOR3BEXTPROC glflglSecondaryColor3bEXT;
#define glSecondaryColor3bEXT glflglSecondaryColor3bEXT
extern PFNGLBEGINPERFQUERYINTELPROC glflglBeginPerfQueryINTEL;
#define glBeginPerfQueryINTEL glflglBeginPerfQueryINTEL
extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glflglProgramUniform1uivEXT;
#define glProgramUniform1uivEXT glflglProgramUniform1uivEXT
extern PFNGLTEXTUREIMAGE3DEXTPROC glflglTextureImage3DEXT;
#define glTextureImage3DEXT glflglTextureImage3DEXT
extern PFNGLDELETEBUFFERSPROC glflglDeleteBuffers;
#define glDeleteBuffers glflglDeleteBuffers
extern PFNGLBINDPROGRAMPIPELINEPROC glflglBindProgramPipeline;
#define glBindProgramPipeline glflglBindProgramPipeline
extern PFNGLSCISSORPROC glflglScissor;
#define glScissor glflglScissor
extern PFNGLGETBOOLEANVPROC glflglGetBooleanv;
#define glGetBooleanv glflglGetBooleanv
extern PFNGLMATERIALFVPROC glflglMaterialfv;
#define glMaterialfv glflglMaterialfv
extern PFNGLWINDOWPOS4FVMESAPROC glflglWindowPos4fvMESA;
#define glWindowPos4fvMESA glflglWindowPos4fvMESA
extern PFNGLVERTEXATTRIBIPOINTEREXTPROC glflglVertexAttribIPointerEXT;
#define glVertexAttribIPointerEXT glflglVertexAttribIPointerEXT
extern PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC glflglProgramBufferParametersfvNV;
#define glProgramBufferParametersfvNV glflglProgramBufferParametersfvNV
extern PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC glflglFlushMappedBufferRangeEXT;
#define glFlushMappedBufferRangeEXT glflglFlushMappedBufferRangeEXT
extern PFNGLGETSAMPLERPARAMETERIUIVEXTPROC glflglGetSamplerParameterIuivEXT;
#define glGetSamplerParameterIuivEXT glflglGetSamplerParameterIuivEXT
extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glflglMultiDrawArraysIndirectAMD;
#define glMultiDrawArraysIndirectAMD glflglMultiDrawArraysIndirectAMD
extern PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC glflglTextureImage3DMultisampleNV;
#define glTextureImage3DMultisampleNV glflglTextureImage3DMultisampleNV
extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glflglProgramUniform4uivEXT;
#define glProgramUniform4uivEXT glflglProgramUniform4uivEXT
extern PFNGLFOGXPROC glflglFogx;
#define glFogx glflglFogx
extern PFNGLPOLLINSTRUMENTSSGIXPROC glflglPollInstrumentsSGIX;
#define glPollInstrumentsSGIX glflglPollInstrumentsSGIX
extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glflglGetTextureLevelParameteriv;
#define glGetTextureLevelParameteriv glflglGetTextureLevelParameteriv
extern PFNGLGETSTRINGIPROC glflglGetStringi;
#define glGetStringi glflglGetStringi
extern PFNGLWINDOWPOS3FPROC glflglWindowPos3f;
#define glWindowPos3f glflglWindowPos3f
extern PFNGLMAPCONTROLPOINTSNVPROC glflglMapControlPointsNV;
#define glMapControlPointsNV glflglMapControlPointsNV
extern PFNGLCOLOR4DVPROC glflglColor4dv;
#define glColor4dv glflglColor4dv
extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glflglGetVertexArrayIndexediv;
#define glGetVertexArrayIndexediv glflglGetVertexArrayIndexediv
extern PFNGLMULTITEXCOORD1HNVPROC glflglMultiTexCoord1hNV;
#define glMultiTexCoord1hNV glflglMultiTexCoord1hNV
extern PFNGLPOINTPARAMETERFVPROC glflglPointParameterfv;
#define glPointParameterfv glflglPointParameterfv
extern PFNGLUNIFORMMATRIX2FVARBPROC glflglUniformMatrix2fvARB;
#define glUniformMatrix2fvARB glflglUniformMatrix2fvARB
extern PFNGLUNIFORM2FVPROC glflglUniform2fv;
#define glUniform2fv glflglUniform2fv
extern PFNGLVERTEXPOINTERLISTIBMPROC glflglVertexPointerListIBM;
#define glVertexPointerListIBM glflglVertexPointerListIBM
extern PFNGLGETMULTITEXGENFVEXTPROC glflglGetMultiTexGenfvEXT;
#define glGetMultiTexGenfvEXT glflglGetMultiTexGenfvEXT
extern PFNGLGETMINMAXEXTPROC glflglGetMinmaxEXT;
#define glGetMinmaxEXT glflglGetMinmaxEXT
extern PFNGLMATRIXFRUSTUMEXTPROC glflglMatrixFrustumEXT;
#define glMatrixFrustumEXT glflglMatrixFrustumEXT
extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glflglDispatchComputeIndirect;
#define glDispatchComputeIndirect glflglDispatchComputeIndirect
extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glflglInvalidateNamedFramebufferSubData;
#define glInvalidateNamedFramebufferSubData glflglInvalidateNamedFramebufferSubData
extern PFNGLPROGRAMENVPARAMETER4DARBPROC glflglProgramEnvParameter4dARB;
#define glProgramEnvParameter4dARB glflglProgramEnvParameter4dARB
extern PFNGLPROGRAMUNIFORM1UIEXTPROC glflglProgramUniform1uiEXT;
#define glProgramUniform1uiEXT glflglProgramUniform1uiEXT
extern PFNGLBINDBUFFERRANGEPROC glflglBindBufferRange;
#define glBindBufferRange glflglBindBufferRange
extern PFNGLNORMAL3IVPROC glflglNormal3iv;
#define glNormal3iv glflglNormal3iv
extern PFNGLGETUNIFORMI64VNVPROC glflglGetUniformi64vNV;
#define glGetUniformi64vNV glflglGetUniformi64vNV
extern PFNGLGETUNIFORMDVPROC glflglGetUniformdv;
#define glGetUniformdv glflglGetUniformdv
extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glflglGetMultiTexLevelParameterfvEXT;
#define glGetMultiTexLevelParameterfvEXT glflglGetMultiTexLevelParameterfvEXT
extern PFNGLFINALCOMBINERINPUTNVPROC glflglFinalCombinerInputNV;
#define glFinalCombinerInputNV glflglFinalCombinerInputNV
extern PFNGLCULLPARAMETERDVEXTPROC glflglCullParameterdvEXT;
#define glCullParameterdvEXT glflglCullParameterdvEXT
extern PFNGLMULTITEXCOORD4SPROC glflglMultiTexCoord4s;
#define glMultiTexCoord4s glflglMultiTexCoord4s
extern PFNGLMAPVERTEXATTRIB1FAPPLEPROC glflglMapVertexAttrib1fAPPLE;
#define glMapVertexAttrib1fAPPLE glflglMapVertexAttrib1fAPPLE
extern PFNGLTANGENT3FVEXTPROC glflglTangent3fvEXT;
#define glTangent3fvEXT glflglTangent3fvEXT
extern PFNGLPROGRAMUNIFORM3FVEXTPROC glflglProgramUniform3fvEXT;
#define glProgramUniform3fvEXT glflglProgramUniform3fvEXT
extern PFNGLCOLOR3UIVPROC glflglColor3uiv;
#define glColor3uiv glflglColor3uiv
extern PFNGLLISTBASEPROC glflglListBase;
#define glListBase glflglListBase
extern PFNGLMULTITEXCOORD1IARBPROC glflglMultiTexCoord1iARB;
#define glMultiTexCoord1iARB glflglMultiTexCoord1iARB
extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glflglGetVertexArrayPointervEXT;
#define glGetVertexArrayPointervEXT glflglGetVertexArrayPointervEXT
extern PFNGLGLOBALALPHAFACTORUBSUNPROC glflglGlobalAlphaFactorubSUN;
#define glGlobalAlphaFactorubSUN glflglGlobalAlphaFactorubSUN
extern PFNGLVERTEXATTRIBL1UI64NVPROC glflglVertexAttribL1ui64NV;
#define glVertexAttribL1ui64NV glflglVertexAttribL1ui64NV
extern PFNGLPOINTPARAMETERFSGISPROC glflglPointParameterfSGIS;
#define glPointParameterfSGIS glflglPointParameterfSGIS
extern PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC glflglGetImageTransformParameterivHP;
#define glGetImageTransformParameterivHP glflglGetImageTransformParameterivHP
extern PFNGLCOLORSUBTABLEEXTPROC glflglColorSubTableEXT;
#define glColorSubTableEXT glflglColorSubTableEXT
extern PFNGLPIXELTEXGENPARAMETERFVSGISPROC glflglPixelTexGenParameterfvSGIS;
#define glPixelTexGenParameterfvSGIS glflglPixelTexGenParameterfvSGIS
extern PFNGLDRAWTEXXVOESPROC glflglDrawTexxvOES;
#define glDrawTexxvOES glflglDrawTexxvOES
extern PFNGLCLIENTWAITSYNCPROC glflglClientWaitSync;
#define glClientWaitSync glflglClientWaitSync
extern PFNGLEXTGETTEXSUBIMAGEQCOMPROC glflglExtGetTexSubImageQCOM;
#define glExtGetTexSubImageQCOM glflglExtGetTexSubImageQCOM
extern PFNGLQUERYOBJECTPARAMETERUIAMDPROC glflglQueryObjectParameteruiAMD;
#define glQueryObjectParameteruiAMD glflglQueryObjectParameteruiAMD
extern PFNGLVERTEXATTRIBS1FVNVPROC glflglVertexAttribs1fvNV;
#define glVertexAttribs1fvNV glflglVertexAttribs1fvNV
extern PFNGLVERTEXATTRIB4NUSVARBPROC glflglVertexAttrib4NusvARB;
#define glVertexAttrib4NusvARB glflglVertexAttrib4NusvARB
extern PFNGLVARIANTPOINTEREXTPROC glflglVariantPointerEXT;
#define glVariantPointerEXT glflglVariantPointerEXT
extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glflglNamedFramebufferParameteriEXT;
#define glNamedFramebufferParameteriEXT glflglNamedFramebufferParameteriEXT
extern PFNGLBLENDFUNCIARBPROC glflglBlendFunciARB;
#define glBlendFunciARB glflglBlendFunciARB
extern PFNGLINVALIDATETEXIMAGEPROC glflglInvalidateTexImage;
#define glInvalidateTexImage glflglInvalidateTexImage
extern PFNGLTEXTUREVIEWEXTPROC glflglTextureViewEXT;
#define glTextureViewEXT glflglTextureViewEXT
extern PFNGLREADNPIXELSPROC glflglReadnPixels;
#define glReadnPixels glflglReadnPixels
extern PFNGLPATHGLYPHINDEXARRAYNVPROC glflglPathGlyphIndexArrayNV;
#define glPathGlyphIndexArrayNV glflglPathGlyphIndexArrayNV
extern PFNGLCOPYIMAGESUBDATAPROC glflglCopyImageSubData;
#define glCopyImageSubData glflglCopyImageSubData
extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glflglGetUniformSubroutineuiv;
#define glGetUniformSubroutineuiv glflglGetUniformSubroutineuiv
extern PFNGLBINDVERTEXBUFFERPROC glflglBindVertexBuffer;
#define glBindVertexBuffer glflglBindVertexBuffer
extern PFNGLTEXCOORD2BOESPROC glflglTexCoord2bOES;
#define glTexCoord2bOES glflglTexCoord2bOES
extern PFNGLDEBUGMESSAGEINSERTPROC glflglDebugMessageInsert;
#define glDebugMessageInsert glflglDebugMessageInsert
extern PFNGLBEGINVERTEXSHADEREXTPROC glflglBeginVertexShaderEXT;
#define glBeginVertexShaderEXT glflglBeginVertexShaderEXT
extern PFNGLISVARIANTENABLEDEXTPROC glflglIsVariantEnabledEXT;
#define glIsVariantEnabledEXT glflglIsVariantEnabledEXT
extern PFNGLBINDMATERIALPARAMETEREXTPROC glflglBindMaterialParameterEXT;
#define glBindMaterialParameterEXT glflglBindMaterialParameterEXT
extern PFNGLISSAMPLERPROC glflglIsSampler;
#define glIsSampler glflglIsSampler
extern PFNGLMULTITEXGENIVEXTPROC glflglMultiTexGenivEXT;
#define glMultiTexGenivEXT glflglMultiTexGenivEXT
extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glflglNamedFramebufferTexture2DEXT;
#define glNamedFramebufferTexture2DEXT glflglNamedFramebufferTexture2DEXT
extern PFNGLCOPYTEXSUBIMAGE1DPROC glflglCopyTexSubImage1D;
#define glCopyTexSubImage1D glflglCopyTexSubImage1D
extern PFNGLTEXCOORD1IPROC glflglTexCoord1i;
#define glTexCoord1i glflglTexCoord1i
extern PFNGLCHECKFRAMEBUFFERSTATUSPROC glflglCheckFramebufferStatus;
#define glCheckFramebufferStatus glflglCheckFramebufferStatus
extern PFNGLDRAWELEMENTARRAYAPPLEPROC glflglDrawElementArrayAPPLE;
#define glDrawElementArrayAPPLE glflglDrawElementArrayAPPLE
extern PFNGLTEXCOORD1DPROC glflglTexCoord1d;
#define glTexCoord1d glflglTexCoord1d
extern PFNGLTEXCOORD1FPROC glflglTexCoord1f;
#define glTexCoord1f glflglTexCoord1f
extern PFNGLFRAGMENTLIGHTIVSGIXPROC glflglFragmentLightivSGIX;
#define glFragmentLightivSGIX glflglFragmentLightivSGIX
extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glflglNamedBufferStorageEXT;
#define glNamedBufferStorageEXT glflglNamedBufferStorageEXT
extern PFNGLBINDIMAGETEXTUREPROC glflglBindImageTexture;
#define glBindImageTexture glflglBindImageTexture
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC glflglDrawElementsInstancedBaseVertexEXT;
#define glDrawElementsInstancedBaseVertexEXT glflglDrawElementsInstancedBaseVertexEXT
extern PFNGLISPATHNVPROC glflglIsPathNV;
#define glIsPathNV glflglIsPathNV
extern PFNGLPROGRAMBINARYOESPROC glflglProgramBinaryOES;
#define glProgramBinaryOES glflglProgramBinaryOES
extern PFNGLDRAWRANGEELEMENTSPROC glflglDrawRangeElements;
#define glDrawRangeElements glflglDrawRangeElements
extern PFNGLTEXCOORD1SPROC glflglTexCoord1s;
#define glTexCoord1s glflglTexCoord1s
extern PFNGLSAMPLERPARAMETERIIVPROC glflglSamplerParameterIiv;
#define glSamplerParameterIiv glflglSamplerParameterIiv
extern PFNGLTEXIMAGE3DOESPROC glflglTexImage3DOES;
#define glTexImage3DOES glflglTexImage3DOES
extern PFNGLCOLOR3BVPROC glflglColor3bv;
#define glColor3bv glflglColor3bv
extern PFNGLSYNCTEXTUREINTELPROC glflglSyncTextureINTEL;
#define glSyncTextureINTEL glflglSyncTextureINTEL
extern PFNGLCREATESAMPLERSPROC glflglCreateSamplers;
#define glCreateSamplers glflglCreateSamplers
extern PFNGLCOMBINERPARAMETERFNVPROC glflglCombinerParameterfNV;
#define glCombinerParameterfNV glflglCombinerParameterfNV
extern PFNGLGETARRAYOBJECTIVATIPROC glflglGetArrayObjectivATI;
#define glGetArrayObjectivATI glflglGetArrayObjectivATI
extern PFNGLVERTEXSTREAM3FVATIPROC glflglVertexStream3fvATI;
#define glVertexStream3fvATI glflglVertexStream3fvATI
extern PFNGLMULTIDRAWARRAYSPROC glflglMultiDrawArrays;
#define glMultiDrawArrays glflglMultiDrawArrays
extern PFNGLDELETENAMEDSTRINGARBPROC glflglDeleteNamedStringARB;
#define glDeleteNamedStringARB glflglDeleteNamedStringARB
extern PFNGLVERTEXATTRIB4BVARBPROC glflglVertexAttrib4bvARB;
#define glVertexAttrib4bvARB glflglVertexAttrib4bvARB
extern PFNGLBINORMAL3IVEXTPROC glflglBinormal3ivEXT;
#define glBinormal3ivEXT glflglBinormal3ivEXT
extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glflglMultiDrawArraysIndirectCountARB;
#define glMultiDrawArraysIndirectCountARB glflglMultiDrawArraysIndirectCountARB
extern PFNGLUNIFORMMATRIX4X3FVNVPROC glflglUniformMatrix4x3fvNV;
#define glUniformMatrix4x3fvNV glflglUniformMatrix4x3fvNV
extern PFNGLUNIFORMBUFFEREXTPROC glflglUniformBufferEXT;
#define glUniformBufferEXT glflglUniformBufferEXT
extern PFNGLWINDOWPOS2IVMESAPROC glflglWindowPos2ivMESA;
#define glWindowPos2ivMESA glflglWindowPos2ivMESA
extern PFNGLTEXCOORDP4UIPROC glflglTexCoordP4ui;
#define glTexCoordP4ui glflglTexCoordP4ui
extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glflglMultiTexSubImage1DEXT;
#define glMultiTexSubImage1DEXT glflglMultiTexSubImage1DEXT
extern PFNGLVERTEXATTRIBI3UIVPROC glflglVertexAttribI3uiv;
#define glVertexAttribI3uiv glflglVertexAttribI3uiv
extern PFNGLBUFFERDATAARBPROC glflglBufferDataARB;
#define glBufferDataARB glflglBufferDataARB
extern PFNGLVERTEXATTRIBIFORMATPROC glflglVertexAttribIFormat;
#define glVertexAttribIFormat glflglVertexAttribIFormat
extern PFNGLCREATEFRAMEBUFFERSPROC glflglCreateFramebuffers;
#define glCreateFramebuffers glflglCreateFramebuffers
extern PFNGLVERTEXATTRIBL2I64VNVPROC glflglVertexAttribL2i64vNV;
#define glVertexAttribL2i64vNV glflglVertexAttribL2i64vNV
extern PFNGLNORMALSTREAM3DVATIPROC glflglNormalStream3dvATI;
#define glNormalStream3dvATI glflglNormalStream3dvATI
extern PFNGLCLEARACCUMPROC glflglClearAccum;
#define glClearAccum glflglClearAccum
extern PFNGLUNIFORM3I64VNVPROC glflglUniform3i64vNV;
#define glUniform3i64vNV glflglUniform3i64vNV
extern PFNGLPATHTEXGENNVPROC glflglPathTexGenNV;
#define glPathTexGenNV glflglPathTexGenNV
extern PFNGLUNIFORM2UIVEXTPROC glflglUniform2uivEXT;
#define glUniform2uivEXT glflglUniform2uivEXT
extern PFNGLUNIFORMMATRIX3X2FVNVPROC glflglUniformMatrix3x2fvNV;
#define glUniformMatrix3x2fvNV glflglUniformMatrix3x2fvNV
extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glflglMultiDrawElementsIndirect;
#define glMultiDrawElementsIndirect glflglMultiDrawElementsIndirect
extern PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC glflglStencilThenCoverStrokePathInstancedNV;
#define glStencilThenCoverStrokePathInstancedNV glflglStencilThenCoverStrokePathInstancedNV
extern PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC glflglGetTranslatedShaderSourceANGLE;
#define glGetTranslatedShaderSourceANGLE glflglGetTranslatedShaderSourceANGLE
extern PFNGLMAP2DPROC glflglMap2d;
#define glMap2d glflglMap2d
extern PFNGLMAP2FPROC glflglMap2f;
#define glMap2f glflglMap2f
extern PFNGLMAKEIMAGEHANDLERESIDENTNVPROC glflglMakeImageHandleResidentNV;
#define glMakeImageHandleResidentNV glflglMakeImageHandleResidentNV
extern PFNGLUNIFORMMATRIX2X4FVPROC glflglUniformMatrix2x4fv;
#define glUniformMatrix2x4fv glflglUniformMatrix2x4fv
extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glflglGetMultiTexParameterfvEXT;
#define glGetMultiTexParameterfvEXT glflglGetMultiTexParameterfvEXT
extern PFNGLDEPTHRANGEINDEXEDPROC glflglDepthRangeIndexed;
#define glDepthRangeIndexed glflglDepthRangeIndexed
extern PFNGLISENABLEDPROC glflglIsEnabled;
#define glIsEnabled glflglIsEnabled
extern PFNGLMATRIXSCALEFEXTPROC glflglMatrixScalefEXT;
#define glMatrixScalefEXT glflglMatrixScalefEXT
extern PFNGLGETERRORPROC glflglGetError;
#define glGetError glflglGetError
extern PFNGLGETTEXENVIVPROC glflglGetTexEnviv;
#define glGetTexEnviv glflglGetTexEnviv
extern PFNGLBINDTEXTUREUNITPARAMETEREXTPROC glflglBindTextureUnitParameterEXT;
#define glBindTextureUnitParameterEXT glflglBindTextureUnitParameterEXT
extern PFNGLDRAWCOMMANDSSTATESNVPROC glflglDrawCommandsStatesNV;
#define glDrawCommandsStatesNV glflglDrawCommandsStatesNV
extern PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC glflglReplacementCodeuiNormal3fVertex3fvSUN;
#define glReplacementCodeuiNormal3fVertex3fvSUN glflglReplacementCodeuiNormal3fVertex3fvSUN
extern PFNGLDELETEPERFQUERYINTELPROC glflglDeletePerfQueryINTEL;
#define glDeletePerfQueryINTEL glflglDeletePerfQueryINTEL
extern PFNGLGETUNIFORMIVARBPROC glflglGetUniformivARB;
#define glGetUniformivARB glflglGetUniformivARB
extern PFNGLGETACTIVEUNIFORMARBPROC glflglGetActiveUniformARB;
#define glGetActiveUniformARB glflglGetActiveUniformARB
extern PFNGLDELETEOCCLUSIONQUERIESNVPROC glflglDeleteOcclusionQueriesNV;
#define glDeleteOcclusionQueriesNV glflglDeleteOcclusionQueriesNV
extern PFNGLVERTEXATTRIBI3IVEXTPROC glflglVertexAttribI3ivEXT;
#define glVertexAttribI3ivEXT glflglVertexAttribI3ivEXT
extern PFNGLTEXSTORAGE2DEXTPROC glflglTexStorage2DEXT;
#define glTexStorage2DEXT glflglTexStorage2DEXT
extern PFNGLEVALCOORD1DPROC glflglEvalCoord1d;
#define glEvalCoord1d glflglEvalCoord1d
extern PFNGLGETTEXLEVELPARAMETERFVPROC glflglGetTexLevelParameterfv;
#define glGetTexLevelParameterfv glflglGetTexLevelParameterfv
extern PFNGLEVALCOORD1FPROC glflglEvalCoord1f;
#define glEvalCoord1f glflglEvalCoord1f
extern PFNGLPIXELMAPFVPROC glflglPixelMapfv;
#define glPixelMapfv glflglPixelMapfv
extern PFNGLTEXTURESTORAGE2DEXTPROC glflglTextureStorage2DEXT;
#define glTextureStorage2DEXT glflglTextureStorage2DEXT
extern PFNGLBUFFERSUBDATAARBPROC glflglBufferSubDataARB;
#define glBufferSubDataARB glflglBufferSubDataARB
extern PFNGLGETPIXELMAPUSVPROC glflglGetPixelMapusv;
#define glGetPixelMapusv glflglGetPixelMapusv
extern PFNGLGETNCOLORTABLEARBPROC glflglGetnColorTableARB;
#define glGetnColorTableARB glflglGetnColorTableARB
extern PFNGLGETDRIVERCONTROLSTRINGQCOMPROC glflglGetDriverControlStringQCOM;
#define glGetDriverControlStringQCOM glflglGetDriverControlStringQCOM
extern PFNGLACCUMPROC glflglAccum;
#define glAccum glflglAccum
extern PFNGLTEXCOORD2IVPROC glflglTexCoord2iv;
#define glTexCoord2iv glflglTexCoord2iv
extern PFNGLWEIGHTPOINTEROESPROC glflglWeightPointerOES;
#define glWeightPointerOES glflglWeightPointerOES
extern PFNGLVERTEXATTRIBI1UIEXTPROC glflglVertexAttribI1uiEXT;
#define glVertexAttribI1uiEXT glflglVertexAttribI1uiEXT
extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glflglLoadTransposeMatrixdARB;
#define glLoadTransposeMatrixdARB glflglLoadTransposeMatrixdARB
extern PFNGLPROGRAMUNIFORM2UIPROC glflglProgramUniform2ui;
#define glProgramUniform2ui glflglProgramUniform2ui
extern PFNGLPROGRAMUNIFORM4UIPROC glflglProgramUniform4ui;
#define glProgramUniform4ui glflglProgramUniform4ui
extern PFNGLLISTPARAMETERFSGIXPROC glflglListParameterfSGIX;
#define glListParameterfSGIX glflglListParameterfSGIX
extern PFNGLSTENCILMASKPROC glflglStencilMask;
#define glStencilMask glflglStencilMask
extern PFNGLRESETHISTOGRAMEXTPROC glflglResetHistogramEXT;
#define glResetHistogramEXT glflglResetHistogramEXT
extern PFNGLLIGHTXOESPROC glflglLightxOES;
#define glLightxOES glflglLightxOES
extern PFNGLNAMEDBUFFERDATAPROC glflglNamedBufferData;
#define glNamedBufferData glflglNamedBufferData
extern PFNGLVERTEXSTREAM3SATIPROC glflglVertexStream3sATI;
#define glVertexStream3sATI glflglVertexStream3sATI
extern PFNGLVERTEXATTRIB3FVARBPROC glflglVertexAttrib3fvARB;
#define glVertexAttrib3fvARB glflglVertexAttrib3fvARB
extern PFNGLCLEARNAMEDBUFFERSUBDATAPROC glflglClearNamedBufferSubData;
#define glClearNamedBufferSubData glflglClearNamedBufferSubData
extern PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC glflglProgramUniformHandleui64ARB;
#define glProgramUniformHandleui64ARB glflglProgramUniformHandleui64ARB
extern PFNGLUNIFORM3IARBPROC glflglUniform3iARB;
#define glUniform3iARB glflglUniform3iARB
extern PFNGLCREATEPROGRAMOBJECTARBPROC glflglCreateProgramObjectARB;
#define glCreateProgramObjectARB glflglCreateProgramObjectARB
extern PFNGLPROGRAMENVPARAMETERSI4IVNVPROC glflglProgramEnvParametersI4ivNV;
#define glProgramEnvParametersI4ivNV glflglProgramEnvParametersI4ivNV
extern PFNGLMULTITEXCOORD1DVARBPROC glflglMultiTexCoord1dvARB;
#define glMultiTexCoord1dvARB glflglMultiTexCoord1dvARB
extern PFNGLGETOBJECTPARAMETERFVARBPROC glflglGetObjectParameterfvARB;
#define glGetObjectParameterfvARB glflglGetObjectParameterfvARB
extern PFNGLRECTSVPROC glflglRectsv;
#define glRectsv glflglRectsv
extern PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC glflglListDrawCommandsStatesClientNV;
#define glListDrawCommandsStatesClientNV glflglListDrawCommandsStatesClientNV
extern PFNGLMULTITEXIMAGE2DEXTPROC glflglMultiTexImage2DEXT;
#define glMultiTexImage2DEXT glflglMultiTexImage2DEXT
extern PFNGLPROGRAMUNIFORM1I64NVPROC glflglProgramUniform1i64NV;
#define glProgramUniform1i64NV glflglProgramUniform1i64NV
extern PFNGLGETOBJECTBUFFERIVATIPROC glflglGetObjectBufferivATI;
#define glGetObjectBufferivATI glflglGetObjectBufferivATI
extern PFNGLMULTITEXCOORD1FVARBPROC glflglMultiTexCoord1fvARB;
#define glMultiTexCoord1fvARB glflglMultiTexCoord1fvARB
extern PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC glflglReplacementCodeuiColor4ubVertex3fvSUN;
#define glReplacementCodeuiColor4ubVertex3fvSUN glflglReplacementCodeuiColor4ubVertex3fvSUN
extern PFNGLBLENDFUNCSEPARATEINGRPROC glflglBlendFuncSeparateINGR;
#define glBlendFuncSeparateINGR glflglBlendFuncSeparateINGR
extern PFNGLGETVIDEOCAPTURESTREAMFVNVPROC glflglGetVideoCaptureStreamfvNV;
#define glGetVideoCaptureStreamfvNV glflglGetVideoCaptureStreamfvNV
extern PFNGLVERTEXATTRIB2FARBPROC glflglVertexAttrib2fARB;
#define glVertexAttrib2fARB glflglVertexAttrib2fARB
extern PFNGLGETTEXGENIVPROC glflglGetTexGeniv;
#define glGetTexGeniv glflglGetTexGeniv
extern PFNGLARRAYELEMENTPROC glflglArrayElement;
#define glArrayElement glflglArrayElement
extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glflglGetCompressedTextureSubImage;
#define glGetCompressedTextureSubImage glflglGetCompressedTextureSubImage
extern PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC glflglDrawRangeElementsBaseVertexEXT;
#define glDrawRangeElementsBaseVertexEXT glflglDrawRangeElementsBaseVertexEXT
extern PFNGLCOPYIMAGESUBDATANVPROC glflglCopyImageSubDataNV;
#define glCopyImageSubDataNV glflglCopyImageSubDataNV
extern PFNGLPIXELSTOREFPROC glflglPixelStoref;
#define glPixelStoref glflglPixelStoref
extern PFNGLVERTEXSTREAM1IATIPROC glflglVertexStream1iATI;
#define glVertexStream1iATI glflglVertexStream1iATI
extern PFNGLPATCHPARAMETERFVPROC glflglPatchParameterfv;
#define glPatchParameterfv glflglPatchParameterfv
extern PFNGLISFRAMEBUFFEREXTPROC glflglIsFramebufferEXT;
#define glIsFramebufferEXT glflglIsFramebufferEXT
extern PFNGLTEXTURESTORAGE2DPROC glflglTextureStorage2D;
#define glTextureStorage2D glflglTextureStorage2D
extern PFNGLTEXBUFFERRANGEPROC glflglTexBufferRange;
#define glTexBufferRange glflglTexBufferRange
extern PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC glflglGetPixelTexGenParameterivSGIS;
#define glGetPixelTexGenParameterivSGIS glflglGetPixelTexGenParameterivSGIS
extern PFNGLGETBOOLEANI_VPROC glflglGetBooleani_v;
#define glGetBooleani_v glflglGetBooleani_v
extern PFNGLCLIPCONTROLPROC glflglClipControl;
#define glClipControl glflglClipControl
extern PFNGLGETPROGRAMRESOURCEIVPROC glflglGetProgramResourceiv;
#define glGetProgramResourceiv glflglGetProgramResourceiv
extern PFNGLUNIFORM2I64NVPROC glflglUniform2i64NV;
#define glUniform2i64NV glflglUniform2i64NV
extern PFNGLVERTEXATTRIBI3UIPROC glflglVertexAttribI3ui;
#define glVertexAttribI3ui glflglVertexAttribI3ui
extern PFNGLBLENDEQUATIONSEPARATEOESPROC glflglBlendEquationSeparateOES;
#define glBlendEquationSeparateOES glflglBlendEquationSeparateOES
extern PFNGLCLEARCOLORXOESPROC glflglClearColorxOES;
#define glClearColorxOES glflglClearColorxOES
extern PFNGLVERTEXATTRIB4NIVARBPROC glflglVertexAttrib4NivARB;
#define glVertexAttrib4NivARB glflglVertexAttrib4NivARB
extern PFNGLGLOBALALPHAFACTORFSUNPROC glflglGlobalAlphaFactorfSUN;
#define glGlobalAlphaFactorfSUN glflglGlobalAlphaFactorfSUN
extern PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC glflglBlendEquationSeparateIndexedAMD;
#define glBlendEquationSeparateIndexedAMD glflglBlendEquationSeparateIndexedAMD
extern PFNGLGETPERFCOUNTERINFOINTELPROC glflglGetPerfCounterInfoINTEL;
#define glGetPerfCounterInfoINTEL glflglGetPerfCounterInfoINTEL
extern PFNGLPROGRAMLOCALPARAMETERI4UINVPROC glflglProgramLocalParameterI4uiNV;
#define glProgramLocalParameterI4uiNV glflglProgramLocalParameterI4uiNV
extern PFNGLPIXELZOOMXOESPROC glflglPixelZoomxOES;
#define glPixelZoomxOES glflglPixelZoomxOES
extern PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC glflglGetCombinerOutputParameterivNV;
#define glGetCombinerOutputParameterivNV glflglGetCombinerOutputParameterivNV
extern PFNGLRASTERPOS2XVOESPROC glflglRasterPos2xvOES;
#define glRasterPos2xvOES glflglRasterPos2xvOES
extern PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC glflglProgramLocalParametersI4ivNV;
#define glProgramLocalParametersI4ivNV glflglProgramLocalParametersI4ivNV
extern PFNGLVERTEXARRAYVERTEXBUFFERSPROC glflglVertexArrayVertexBuffers;
#define glVertexArrayVertexBuffers glflglVertexArrayVertexBuffers
extern PFNGLUNIFORM1UI64NVPROC glflglUniform1ui64NV;
#define glUniform1ui64NV glflglUniform1ui64NV
extern PFNGLRENDERBUFFERSTORAGEOESPROC glflglRenderbufferStorageOES;
#define glRenderbufferStorageOES glflglRenderbufferStorageOES
extern PFNGLPROGRAMPARAMETERIPROC glflglProgramParameteri;
#define glProgramParameteri glflglProgramParameteri
extern PFNGLPASSTHROUGHXOESPROC glflglPassThroughxOES;
#define glPassThroughxOES glflglPassThroughxOES
extern PFNGLVERTEXATTRIBDIVISORNVPROC glflglVertexAttribDivisorNV;
#define glVertexAttribDivisorNV glflglVertexAttribDivisorNV
extern PFNGLGETPROGRAMPARAMETERDVNVPROC glflglGetProgramParameterdvNV;
#define glGetProgramParameterdvNV glflglGetProgramParameterdvNV
extern PFNGLGETMAPFVPROC glflglGetMapfv;
#define glGetMapfv glflglGetMapfv
extern PFNGLVERTEXSTREAM2DVATIPROC glflglVertexStream2dvATI;
#define glVertexStream2dvATI glflglVertexStream2dvATI
extern PFNGLPATHSTENCILDEPTHOFFSETNVPROC glflglPathStencilDepthOffsetNV;
#define glPathStencilDepthOffsetNV glflglPathStencilDepthOffsetNV
extern PFNGLPATCHPARAMETERIOESPROC glflglPatchParameteriOES;
#define glPatchParameteriOES glflglPatchParameteriOES
extern PFNGLISSTATENVPROC glflglIsStateNV;
#define glIsStateNV glflglIsStateNV
extern PFNGLDEBUGMESSAGECALLBACKKHRPROC glflglDebugMessageCallbackKHR;
#define glDebugMessageCallbackKHR glflglDebugMessageCallbackKHR
extern PFNGLVERTEXATTRIBL2DEXTPROC glflglVertexAttribL2dEXT;
#define glVertexAttribL2dEXT glflglVertexAttribL2dEXT
extern PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC glflglGetImageTransformParameterfvHP;
#define glGetImageTransformParameterfvHP glflglGetImageTransformParameterfvHP
extern PFNGLRASTERPOS2FVPROC glflglRasterPos2fv;
#define glRasterPos2fv glflglRasterPos2fv
extern PFNGLVERTEX3XOESPROC glflglVertex3xOES;
#define glVertex3xOES glflglVertex3xOES
extern PFNGLFOGFUNCSGISPROC glflglFogFuncSGIS;
#define glFogFuncSGIS glflglFogFuncSGIS
extern PFNGLWEIGHTPOINTERARBPROC glflglWeightPointerARB;
#define glWeightPointerARB glflglWeightPointerARB
extern PFNGLFINISHFENCENVPROC glflglFinishFenceNV;
#define glFinishFenceNV glflglFinishFenceNV
extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glflglProgramUniformMatrix3x2dvEXT;
#define glProgramUniformMatrix3x2dvEXT glflglProgramUniformMatrix3x2dvEXT
extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glflglEnableVertexArrayAttribEXT;
#define glEnableVertexArrayAttribEXT glflglEnableVertexArrayAttribEXT
extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glflglProgramUniform2uivEXT;
#define glProgramUniform2uivEXT glflglProgramUniform2uivEXT
extern PFNGLLISTPARAMETERIVSGIXPROC glflglListParameterivSGIX;
#define glListParameterivSGIX glflglListParameterivSGIX
extern PFNGLPIXELMAPXPROC glflglPixelMapx;
#define glPixelMapx glflglPixelMapx
extern PFNGLVERTEXATTRIB3FVNVPROC glflglVertexAttrib3fvNV;
#define glVertexAttrib3fvNV glflglVertexAttrib3fvNV
extern PFNGLVERTEXATTRIBL1UI64VNVPROC glflglVertexAttribL1ui64vNV;
#define glVertexAttribL1ui64vNV glflglVertexAttribL1ui64vNV
extern PFNGLWINDOWPOS2FMESAPROC glflglWindowPos2fMESA;
#define glWindowPos2fMESA glflglWindowPos2fMESA
extern PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC glflglCopyConvolutionFilter1DEXT;
#define glCopyConvolutionFilter1DEXT glflglCopyConvolutionFilter1DEXT
extern PFNGLWINDOWPOS2SVPROC glflglWindowPos2sv;
#define glWindowPos2sv glflglWindowPos2sv
extern PFNGLBINDFRAMEBUFFEREXTPROC glflglBindFramebufferEXT;
#define glBindFramebufferEXT glflglBindFramebufferEXT
extern PFNGLISVERTEXARRAYOESPROC glflglIsVertexArrayOES;
#define glIsVertexArrayOES glflglIsVertexArrayOES
extern PFNGLCREATESHADERPROC glflglCreateShader;
#define glCreateShader glflglCreateShader
extern PFNGLGETCOLORTABLEPARAMETERFVEXTPROC glflglGetColorTableParameterfvEXT;
#define glGetColorTableParameterfvEXT glflglGetColorTableParameterfvEXT
extern PFNGLGENRENDERBUFFERSPROC glflglGenRenderbuffers;
#define glGenRenderbuffers glflglGenRenderbuffers
extern PFNGLCOPYTEXSUBIMAGE2DPROC glflglCopyTexSubImage2D;
#define glCopyTexSubImage2D glflglCopyTexSubImage2D
extern PFNGLVERTEXATTRIB4UBVARBPROC glflglVertexAttrib4ubvARB;
#define glVertexAttrib4ubvARB glflglVertexAttrib4ubvARB
extern PFNGLDRAWTEXTURENVPROC glflglDrawTextureNV;
#define glDrawTextureNV glflglDrawTextureNV
extern PFNGLVERTEXSTREAM2DATIPROC glflglVertexStream2dATI;
#define glVertexStream2dATI glflglVertexStream2dATI
extern PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC glflglGetCombinerInputParameterfvNV;
#define glGetCombinerInputParameterfvNV glflglGetCombinerInputParameterfvNV
extern PFNGLBLENDFUNCSEPARATEPROC glflglBlendFuncSeparate;
#define glBlendFuncSeparate glflglBlendFuncSeparate
extern PFNGLPOINTPARAMETERFARBPROC glflglPointParameterfARB;
#define glPointParameterfARB glflglPointParameterfARB
extern PFNGLTEXCOORD2FVPROC glflglTexCoord2fv;
#define glTexCoord2fv glflglTexCoord2fv
extern PFNGLREADNPIXELSEXTPROC glflglReadnPixelsEXT;
#define glReadnPixelsEXT glflglReadnPixelsEXT
extern PFNGLGETVARIANTFLOATVEXTPROC glflglGetVariantFloatvEXT;
#define glGetVariantFloatvEXT glflglGetVariantFloatvEXT
extern PFNGLVERTEXP2UIPROC glflglVertexP2ui;
#define glVertexP2ui glflglVertexP2ui
extern PFNGLWINDOWPOS2DMESAPROC glflglWindowPos2dMESA;
#define glWindowPos2dMESA glflglWindowPos2dMESA
extern PFNGLGETTEXGENXVOESPROC glflglGetTexGenxvOES;
#define glGetTexGenxvOES glflglGetTexGenxvOES
extern PFNGLTEXCOORD4FVPROC glflglTexCoord4fv;
#define glTexCoord4fv glflglTexCoord4fv
extern PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC glflglCompressedTexSubImage1DARB;
#define glCompressedTexSubImage1DARB glflglCompressedTexSubImage1DARB
extern PFNGLGETTEXTUREIMAGEEXTPROC glflglGetTextureImageEXT;
#define glGetTextureImageEXT glflglGetTextureImageEXT
extern PFNGLPOINTSIZEPROC glflglPointSize;
#define glPointSize glflglPointSize
extern PFNGLBINDTEXTUREUNITPROC glflglBindTextureUnit;
#define glBindTextureUnit glflglBindTextureUnit
extern PFNGLPROGRAMENVPARAMETERI4UINVPROC glflglProgramEnvParameterI4uiNV;
#define glProgramEnvParameterI4uiNV glflglProgramEnvParameterI4uiNV
extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glflglGetProgramPipelineInfoLog;
#define glGetProgramPipelineInfoLog glflglGetProgramPipelineInfoLog
extern PFNGLDEFORMATIONMAP3DSGIXPROC glflglDeformationMap3dSGIX;
#define glDeformationMap3dSGIX glflglDeformationMap3dSGIX
extern PFNGLVERTEXATTRIB4NUIVPROC glflglVertexAttrib4Nuiv;
#define glVertexAttrib4Nuiv glflglVertexAttrib4Nuiv
extern PFNGLRENDERBUFFERSTORAGEPROC glflglRenderbufferStorage;
#define glRenderbufferStorage glflglRenderbufferStorage
extern PFNGLWAITSYNCPROC glflglWaitSync;
#define glWaitSync glflglWaitSync
extern PFNGLUNIFORM3IPROC glflglUniform3i;
#define glUniform3i glflglUniform3i
extern PFNGLBLENDEQUATIONSEPARATEIPROC glflglBlendEquationSeparatei;
#define glBlendEquationSeparatei glflglBlendEquationSeparatei
extern PFNGLVERTEXATTRIB2HVNVPROC glflglVertexAttrib2hvNV;
#define glVertexAttrib2hvNV glflglVertexAttrib2hvNV
extern PFNGLTEXTUREPARAMETERIVEXTPROC glflglTextureParameterivEXT;
#define glTextureParameterivEXT glflglTextureParameterivEXT
extern PFNGLUNIFORM3DPROC glflglUniform3d;
#define glUniform3d glflglUniform3d
extern PFNGLUNIFORM3FPROC glflglUniform3f;
#define glUniform3f glflglUniform3f
extern PFNGLACTIVEPROGRAMEXTPROC glflglActiveProgramEXT;
#define glActiveProgramEXT glflglActiveProgramEXT
extern PFNGLPROGRAMUNIFORM3UIVPROC glflglProgramUniform3uiv;
#define glProgramUniform3uiv glflglProgramUniform3uiv
extern PFNGLTEXTUREPARAMETERFEXTPROC glflglTextureParameterfEXT;
#define glTextureParameterfEXT glflglTextureParameterfEXT
extern PFNGLFRAMEBUFFERRENDERBUFFEROESPROC glflglFramebufferRenderbufferOES;
#define glFramebufferRenderbufferOES glflglFramebufferRenderbufferOES
extern PFNGLVALIDATEPROGRAMPIPELINEEXTPROC glflglValidateProgramPipelineEXT;
#define glValidateProgramPipelineEXT glflglValidateProgramPipelineEXT
extern PFNGLSETFRAGMENTSHADERCONSTANTATIPROC glflglSetFragmentShaderConstantATI;
#define glSetFragmentShaderConstantATI glflglSetFragmentShaderConstantATI
extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glflglNamedFramebufferTextureLayerEXT;
#define glNamedFramebufferTextureLayerEXT glflglNamedFramebufferTextureLayerEXT
extern PFNGLVERTEXATTRIB4SARBPROC glflglVertexAttrib4sARB;
#define glVertexAttrib4sARB glflglVertexAttrib4sARB
extern PFNGLWEIGHTUSVARBPROC glflglWeightusvARB;
#define glWeightusvARB glflglWeightusvARB
extern PFNGLGETFRAGDATAINDEXPROC glflglGetFragDataIndex;
#define glGetFragDataIndex glflglGetFragDataIndex
extern PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC glflglReplacementCodeuiNormal3fVertex3fSUN;
#define glReplacementCodeuiNormal3fVertex3fSUN glflglReplacementCodeuiNormal3fVertex3fSUN
extern PFNGLMULTITEXCOORD2XOESPROC glflglMultiTexCoord2xOES;
#define glMultiTexCoord2xOES glflglMultiTexCoord2xOES
extern PFNGLCOLOR3SVPROC glflglColor3sv;
#define glColor3sv glflglColor3sv
extern PFNGLTEXCOORD2FVERTEX3FSUNPROC glflglTexCoord2fVertex3fSUN;
#define glTexCoord2fVertex3fSUN glflglTexCoord2fVertex3fSUN
extern PFNGLPOLYGONOFFSETEXTPROC glflglPolygonOffsetEXT;
#define glPolygonOffsetEXT glflglPolygonOffsetEXT
extern PFNGLWEIGHTPATHSNVPROC glflglWeightPathsNV;
#define glWeightPathsNV glflglWeightPathsNV
extern PFNGLCOMBINERSTAGEPARAMETERFVNVPROC glflglCombinerStageParameterfvNV;
#define glCombinerStageParameterfvNV glflglCombinerStageParameterfvNV
extern PFNGLPOINTPARAMETERFEXTPROC glflglPointParameterfEXT;
#define glPointParameterfEXT glflglPointParameterfEXT
extern PFNGLCOPYTEXIMAGE1DEXTPROC glflglCopyTexImage1DEXT;
#define glCopyTexImage1DEXT glflglCopyTexImage1DEXT
extern PFNGLVERTEX4SVPROC glflglVertex4sv;
#define glVertex4sv glflglVertex4sv
extern PFNGLMATRIXMULTFEXTPROC glflglMatrixMultfEXT;
#define glMatrixMultfEXT glflglMatrixMultfEXT
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC glflglCompressedTextureSubImage3DEXT;
#define glCompressedTextureSubImage3DEXT glflglCompressedTextureSubImage3DEXT
extern PFNGLGETTEXLEVELPARAMETERXVOESPROC glflglGetTexLevelParameterxvOES;
#define glGetTexLevelParameterxvOES glflglGetTexLevelParameterxvOES
extern PFNGLVERTEXATTRIBL3DVEXTPROC glflglVertexAttribL3dvEXT;
#define glVertexAttribL3dvEXT glflglVertexAttribL3dvEXT
extern PFNGLMULTITEXCOORDP4UIPROC glflglMultiTexCoordP4ui;
#define glMultiTexCoordP4ui glflglMultiTexCoordP4ui
extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glflglGetTextureLevelParameterivEXT;
#define glGetTextureLevelParameterivEXT glflglGetTextureLevelParameterivEXT
extern PFNGLALPHAFRAGMENTOP2ATIPROC glflglAlphaFragmentOp2ATI;
#define glAlphaFragmentOp2ATI glflglAlphaFragmentOp2ATI
extern PFNGLDELETEFRAMEBUFFERSPROC glflglDeleteFramebuffers;
#define glDeleteFramebuffers glflglDeleteFramebuffers
extern PFNGLDRAWARRAYSPROC glflglDrawArrays;
#define glDrawArrays glflglDrawArrays
extern PFNGLTEXCOORD4FPROC glflglTexCoord4f;
#define glTexCoord4f glflglTexCoord4f
extern PFNGLGETNTEXIMAGEARBPROC glflglGetnTexImageARB;
#define glGetnTexImageARB glflglGetnTexImageARB
extern PFNGLCLEARPROC glflglClear;
#define glClear glflglClear
extern PFNGLVERTEXARRAYPARAMETERIAPPLEPROC glflglVertexArrayParameteriAPPLE;
#define glVertexArrayParameteriAPPLE glflglVertexArrayParameteriAPPLE
extern PFNGLBLENDFUNCSEPARATEIARBPROC glflglBlendFuncSeparateiARB;
#define glBlendFuncSeparateiARB glflglBlendFuncSeparateiARB
extern PFNGLWINDOWPOS2IARBPROC glflglWindowPos2iARB;
#define glWindowPos2iARB glflglWindowPos2iARB
extern PFNGLFRAGMENTLIGHTMODELIVSGIXPROC glflglFragmentLightModelivSGIX;
#define glFragmentLightModelivSGIX glflglFragmentLightModelivSGIX
extern PFNGLFRUSTUMXPROC glflglFrustumx;
#define glFrustumx glflglFrustumx
extern PFNGLVERTEXATTRIBP2UIPROC glflglVertexAttribP2ui;
#define glVertexAttribP2ui glflglVertexAttribP2ui
extern PFNGLMULTITEXCOORDPOINTEREXTPROC glflglMultiTexCoordPointerEXT;
#define glMultiTexCoordPointerEXT glflglMultiTexCoordPointerEXT
extern PFNGLPROGRAMUNIFORM3IEXTPROC glflglProgramUniform3iEXT;
#define glProgramUniform3iEXT glflglProgramUniform3iEXT
extern PFNGLTRANSLATEFPROC glflglTranslatef;
#define glTranslatef glflglTranslatef
extern PFNGLVERTEXATTRIB4NUBPROC glflglVertexAttrib4Nub;
#define glVertexAttrib4Nub glflglVertexAttrib4Nub
extern PFNGLTRANSLATEDPROC glflglTranslated;
#define glTranslated glflglTranslated
extern PFNGLBINDBUFFERBASEPROC glflglBindBufferBase;
#define glBindBufferBase glflglBindBufferBase
extern PFNGLTEXCOORD4HNVPROC glflglTexCoord4hNV;
#define glTexCoord4hNV glflglTexCoord4hNV
extern PFNGLGETPATHCOLORGENIVNVPROC glflglGetPathColorGenivNV;
#define glGetPathColorGenivNV glflglGetPathColorGenivNV
extern PFNGLTEXIMAGE1DPROC glflglTexImage1D;
#define glTexImage1D glflglTexImage1D
extern PFNGLDELETEPERFMONITORSAMDPROC glflglDeletePerfMonitorsAMD;
#define glDeletePerfMonitorsAMD glflglDeletePerfMonitorsAMD
extern PFNGLISRENDERBUFFEREXTPROC glflglIsRenderbufferEXT;
#define glIsRenderbufferEXT glflglIsRenderbufferEXT
extern PFNGLDRAWCOMMANDSNVPROC glflglDrawCommandsNV;
#define glDrawCommandsNV glflglDrawCommandsNV
extern PFNGLUNIFORM3IVARBPROC glflglUniform3ivARB;
#define glUniform3ivARB glflglUniform3ivARB
extern PFNGLGETINVARIANTFLOATVEXTPROC glflglGetInvariantFloatvEXT;
#define glGetInvariantFloatvEXT glflglGetInvariantFloatvEXT
extern PFNGLSECONDARYCOLOR3BVPROC glflglSecondaryColor3bv;
#define glSecondaryColor3bv glflglSecondaryColor3bv
extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glflglMatrixMultTransposedEXT;
#define glMatrixMultTransposedEXT glflglMatrixMultTransposedEXT
extern PFNGLTRANSLATEXPROC glflglTranslatex;
#define glTranslatex glflglTranslatex
extern PFNGLREQUESTRESIDENTPROGRAMSNVPROC glflglRequestResidentProgramsNV;
#define glRequestResidentProgramsNV glflglRequestResidentProgramsNV
extern PFNGLALPHAFRAGMENTOP1ATIPROC glflglAlphaFragmentOp1ATI;
#define glAlphaFragmentOp1ATI glflglAlphaFragmentOp1ATI
extern PFNGLGETQUERYOBJECTI64VPROC glflglGetQueryObjecti64v;
#define glGetQueryObjecti64v glflglGetQueryObjecti64v
extern PFNGLMATRIXMULT3X3FNVPROC glflglMatrixMult3x3fNV;
#define glMatrixMult3x3fNV glflglMatrixMult3x3fNV
extern PFNGLUNIFORM4IARBPROC glflglUniform4iARB;
#define glUniform4iARB glflglUniform4iARB
extern PFNGLPATHSUBCOMMANDSNVPROC glflglPathSubCommandsNV;
#define glPathSubCommandsNV glflglPathSubCommandsNV
extern PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC glflglGetFinalCombinerInputParameterivNV;
#define glGetFinalCombinerInputParameterivNV glflglGetFinalCombinerInputParameterivNV
extern PFNGLISRENDERBUFFERPROC glflglIsRenderbuffer;
#define glIsRenderbuffer glflglIsRenderbuffer
extern PFNGLVERTEX3IVPROC glflglVertex3iv;
#define glVertex3iv glflglVertex3iv
extern PFNGLTEXGENFVPROC glflglTexGenfv;
#define glTexGenfv glflglTexGenfv
extern PFNGLFRUSTUMFOESPROC glflglFrustumfOES;
#define glFrustumfOES glflglFrustumfOES
extern PFNGLBINDVERTEXBUFFERSPROC glflglBindVertexBuffers;
#define glBindVertexBuffers glflglBindVertexBuffers
extern PFNGLMATERIALIPROC glflglMateriali;
#define glMateriali glflglMateriali
extern PFNGLISVERTEXARRAYPROC glflglIsVertexArray;
#define glIsVertexArray glflglIsVertexArray
extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glflglDisableVertexAttribArray;
#define glDisableVertexAttribArray glflglDisableVertexAttribArray
extern PFNGLWINDOWPOS3IVARBPROC glflglWindowPos3ivARB;
#define glWindowPos3ivARB glflglWindowPos3ivARB
extern PFNGLTEXCOORDFORMATNVPROC glflglTexCoordFormatNV;
#define glTexCoordFormatNV glflglTexCoordFormatNV
extern PFNGLBLITNAMEDFRAMEBUFFERPROC glflglBlitNamedFramebuffer;
#define glBlitNamedFramebuffer glflglBlitNamedFramebuffer
extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glflglMatrixLoadTransposefEXT;
#define glMatrixLoadTransposefEXT glflglMatrixLoadTransposefEXT
extern PFNGLMULTITEXGENFEXTPROC glflglMultiTexGenfEXT;
#define glMultiTexGenfEXT glflglMultiTexGenfEXT
extern PFNGLSHADERSTORAGEBLOCKBINDINGPROC glflglShaderStorageBlockBinding;
#define glShaderStorageBlockBinding glflglShaderStorageBlockBinding
extern PFNGLMATERIALFPROC glflglMaterialf;
#define glMaterialf glflglMaterialf
extern PFNGLMATERIALXPROC glflglMaterialx;
#define glMaterialx glflglMaterialx
extern PFNGLVERTEXATTRIBI4UBVPROC glflglVertexAttribI4ubv;
#define glVertexAttribI4ubv glflglVertexAttribI4ubv
extern PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glflglVertexArrayVertexAttribFormatEXT;
#define glVertexArrayVertexAttribFormatEXT glflglVertexArrayVertexAttribFormatEXT
extern PFNGLVERTEX2HNVPROC glflglVertex2hNV;
#define glVertex2hNV glflglVertex2hNV
extern PFNGLDELETEVERTEXSHADEREXTPROC glflglDeleteVertexShaderEXT;
#define glDeleteVertexShaderEXT glflglDeleteVertexShaderEXT
extern PFNGLTEXIMAGE3DEXTPROC glflglTexImage3DEXT;
#define glTexImage3DEXT glflglTexImage3DEXT
extern PFNGLDELETEVERTEXARRAYSOESPROC glflglDeleteVertexArraysOES;
#define glDeleteVertexArraysOES glflglDeleteVertexArraysOES
extern PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC glflglProgramLocalParameterI4ivNV;
#define glProgramLocalParameterI4ivNV glflglProgramLocalParameterI4ivNV
extern PFNGLGLOBALALPHAFACTORISUNPROC glflglGlobalAlphaFactoriSUN;
#define glGlobalAlphaFactoriSUN glflglGlobalAlphaFactoriSUN
extern PFNGLTEXTURESTORAGE1DPROC glflglTextureStorage1D;
#define glTextureStorage1D glflglTextureStorage1D
extern PFNGLPATHCOMMANDSNVPROC glflglPathCommandsNV;
#define glPathCommandsNV glflglPathCommandsNV
extern PFNGLBINORMAL3SEXTPROC glflglBinormal3sEXT;
#define glBinormal3sEXT glflglBinormal3sEXT
extern PFNGLGETPROGRAMINTERFACEIVPROC glflglGetProgramInterfaceiv;
#define glGetProgramInterfaceiv glflglGetProgramInterfaceiv
extern PFNGLMATRIXINDEXPOINTERARBPROC glflglMatrixIndexPointerARB;
#define glMatrixIndexPointerARB glflglMatrixIndexPointerARB
extern PFNGLTEXCOORDPOINTEREXTPROC glflglTexCoordPointerEXT;
#define glTexCoordPointerEXT glflglTexCoordPointerEXT
extern PFNGLMULTITEXGENIEXTPROC glflglMultiTexGeniEXT;
#define glMultiTexGeniEXT glflglMultiTexGeniEXT
extern PFNGLVERTEXATTRIB2FNVPROC glflglVertexAttrib2fNV;
#define glVertexAttrib2fNV glflglVertexAttrib2fNV
extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glflglNamedProgramStringEXT;
#define glNamedProgramStringEXT glflglNamedProgramStringEXT
extern PFNGLSCISSORINDEXEDNVPROC glflglScissorIndexedNV;
#define glScissorIndexedNV glflglScissorIndexedNV
extern PFNGLMAPNAMEDBUFFERPROC glflglMapNamedBuffer;
#define glMapNamedBuffer glflglMapNamedBuffer
extern PFNGLVERTEXATTRIB2FVNVPROC glflglVertexAttrib2fvNV;
#define glVertexAttrib2fvNV glflglVertexAttrib2fvNV
extern PFNGLGETMINMAXPARAMETERIVPROC glflglGetMinmaxParameteriv;
#define glGetMinmaxParameteriv glflglGetMinmaxParameteriv
extern PFNGLGETNUNIFORMDVPROC glflglGetnUniformdv;
#define glGetnUniformdv glflglGetnUniformdv
extern PFNGLGETTEXTURESUBIMAGEPROC glflglGetTextureSubImage;
#define glGetTextureSubImage glflglGetTextureSubImage
extern PFNGLBINORMAL3FEXTPROC glflglBinormal3fEXT;
#define glBinormal3fEXT glflglBinormal3fEXT
extern PFNGLNORMALSTREAM3IATIPROC glflglNormalStream3iATI;
#define glNormalStream3iATI glflglNormalStream3iATI
extern PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC glflglProgramBufferParametersIivNV;
#define glProgramBufferParametersIivNV glflglProgramBufferParametersIivNV
extern PFNGLPOLYGONOFFSETPROC glflglPolygonOffset;
#define glPolygonOffset glflglPolygonOffset
extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glflglGetVertexAttribPointervARB;
#define glGetVertexAttribPointervARB glflglGetVertexAttribPointervARB
extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glflglFlushMappedNamedBufferRangeEXT;
#define glFlushMappedNamedBufferRangeEXT glflglFlushMappedNamedBufferRangeEXT
extern PFNGLGETVERTEXATTRIBIIVPROC glflglGetVertexAttribIiv;
#define glGetVertexAttribIiv glflglGetVertexAttribIiv
extern PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC glflglGetProgramSubroutineParameteruivNV;
#define glGetProgramSubroutineParameteruivNV glflglGetProgramSubroutineParameteruivNV
extern PFNGLDELETEQUERIESEXTPROC glflglDeleteQueriesEXT;
#define glDeleteQueriesEXT glflglDeleteQueriesEXT
extern PFNGLUNIFORMUI64NVPROC glflglUniformui64NV;
#define glUniformui64NV glflglUniformui64NV
extern PFNGLSECONDARYCOLOR3UBVEXTPROC glflglSecondaryColor3ubvEXT;
#define glSecondaryColor3ubvEXT glflglSecondaryColor3ubvEXT
extern PFNGLPROGRAMPARAMETERS4FVNVPROC glflglProgramParameters4fvNV;
#define glProgramParameters4fvNV glflglProgramParameters4fvNV
extern PFNGLPATCHPARAMETERIPROC glflglPatchParameteri;
#define glPatchParameteri glflglPatchParameteri
extern PFNGLMAP1DPROC glflglMap1d;
#define glMap1d glflglMap1d
extern PFNGLGETTEXFILTERFUNCSGISPROC glflglGetTexFilterFuncSGIS;
#define glGetTexFilterFuncSGIS glflglGetTexFilterFuncSGIS
extern PFNGLMAP1FPROC glflglMap1f;
#define glMap1f glflglMap1f
extern PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glflglVertexArrayVertexBindingDivisorEXT;
#define glVertexArrayVertexBindingDivisorEXT glflglVertexArrayVertexBindingDivisorEXT
extern PFNGLMULTITEXCOORD3SVARBPROC glflglMultiTexCoord3svARB;
#define glMultiTexCoord3svARB glflglMultiTexCoord3svARB
extern PFNGLBINDPROGRAMNVPROC glflglBindProgramNV;
#define glBindProgramNV glflglBindProgramNV
extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glflglGetConvolutionParameteriv;
#define glGetConvolutionParameteriv glflglGetConvolutionParameteriv
extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glflglGetProgramLocalParameterfvARB;
#define glGetProgramLocalParameterfvARB glflglGetProgramLocalParameterfvARB
extern PFNGLGENFRAGMENTSHADERSATIPROC glflglGenFragmentShadersATI;
#define glGenFragmentShadersATI glflglGenFragmentShadersATI
extern PFNGLTEXBUMPPARAMETERIVATIPROC glflglTexBumpParameterivATI;
#define glTexBumpParameterivATI glflglTexBumpParameterivATI
extern PFNGLRASTERPOS3SVPROC glflglRasterPos3sv;
#define glRasterPos3sv glflglRasterPos3sv
extern PFNGLGENVERTEXARRAYSAPPLEPROC glflglGenVertexArraysAPPLE;
#define glGenVertexArraysAPPLE glflglGenVertexArraysAPPLE
extern PFNGLNORMAL3XVOESPROC glflglNormal3xvOES;
#define glNormal3xvOES glflglNormal3xvOES
extern PFNGLVERTEXATTRIB4SVPROC glflglVertexAttrib4sv;
#define glVertexAttrib4sv glflglVertexAttrib4sv
extern PFNGLPASSTEXCOORDATIPROC glflglPassTexCoordATI;
#define glPassTexCoordATI glflglPassTexCoordATI
extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glflglFramebufferTextureFaceARB;
#define glFramebufferTextureFaceARB glflglFramebufferTextureFaceARB
extern PFNGLCOPYTEXSUBIMAGE3DOESPROC glflglCopyTexSubImage3DOES;
#define glCopyTexSubImage3DOES glflglCopyTexSubImage3DOES
extern PFNGLLIGHTXPROC glflglLightx;
#define glLightx glflglLightx
extern PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC glflglVertexArrayFogCoordOffsetEXT;
#define glVertexArrayFogCoordOffsetEXT glflglVertexArrayFogCoordOffsetEXT
extern PFNGLTEXENVXVOESPROC glflglTexEnvxvOES;
#define glTexEnvxvOES glflglTexEnvxvOES
extern PFNGLSAMPLEMAPATIPROC glflglSampleMapATI;
#define glSampleMapATI glflglSampleMapATI
extern PFNGLGENOCCLUSIONQUERIESNVPROC glflglGenOcclusionQueriesNV;
#define glGenOcclusionQueriesNV glflglGenOcclusionQueriesNV
extern PFNGLLIGHTIPROC glflglLighti;
#define glLighti glflglLighti
extern PFNGLUNIFORMMATRIX3X4FVNVPROC glflglUniformMatrix3x4fvNV;
#define glUniformMatrix3x4fvNV glflglUniformMatrix3x4fvNV
extern PFNGLLIGHTFPROC glflglLightf;
#define glLightf glflglLightf
extern PFNGLCLIENTATTRIBDEFAULTEXTPROC glflglClientAttribDefaultEXT;
#define glClientAttribDefaultEXT glflglClientAttribDefaultEXT
extern PFNGLVERTEXATTRIBIFORMATNVPROC glflglVertexAttribIFormatNV;
#define glVertexAttribIFormatNV glflglVertexAttribIFormatNV
extern PFNGLSTENCILFUNCSEPARATEPROC glflglStencilFuncSeparate;
#define glStencilFuncSeparate glflglStencilFuncSeparate
extern PFNGLGETVERTEXATTRIBFVARBPROC glflglGetVertexAttribfvARB;
#define glGetVertexAttribfvARB glflglGetVertexAttribfvARB
extern PFNGLGETGRAPHICSRESETSTATUSKHRPROC glflglGetGraphicsResetStatusKHR;
#define glGetGraphicsResetStatusKHR glflglGetGraphicsResetStatusKHR
extern PFNGLVERTEXATTRIB2DNVPROC glflglVertexAttrib2dNV;
#define glVertexAttrib2dNV glflglVertexAttrib2dNV
extern PFNGLPROGRAMUNIFORM2IEXTPROC glflglProgramUniform2iEXT;
#define glProgramUniform2iEXT glflglProgramUniform2iEXT
extern PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC glflglClientActiveVertexStreamATI;
#define glClientActiveVertexStreamATI glflglClientActiveVertexStreamATI
extern PFNGLRASTERPOS3XOESPROC glflglRasterPos3xOES;
#define glRasterPos3xOES glflglRasterPos3xOES
extern PFNGLMAPVERTEXATTRIB2FAPPLEPROC glflglMapVertexAttrib2fAPPLE;
#define glMapVertexAttrib2fAPPLE glflglMapVertexAttrib2fAPPLE
extern PFNGLCLEARDEPTHXOESPROC glflglClearDepthxOES;
#define glClearDepthxOES glflglClearDepthxOES
extern PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glflglTexCoord2fNormal3fVertex3fvSUN;
#define glTexCoord2fNormal3fVertex3fvSUN glflglTexCoord2fNormal3fVertex3fvSUN
extern PFNGLGETSYNCIVAPPLEPROC glflglGetSyncivAPPLE;
#define glGetSyncivAPPLE glflglGetSyncivAPPLE
extern PFNGLGETFIRSTPERFQUERYIDINTELPROC glflglGetFirstPerfQueryIdINTEL;
#define glGetFirstPerfQueryIdINTEL glflglGetFirstPerfQueryIdINTEL
extern PFNGLUNMAPNAMEDBUFFEREXTPROC glflglUnmapNamedBufferEXT;
#define glUnmapNamedBufferEXT glflglUnmapNamedBufferEXT
extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glflglGetTransformFeedbacki_v;
#define glGetTransformFeedbacki_v glflglGetTransformFeedbacki_v
extern PFNGLUNIFORM4FVARBPROC glflglUniform4fvARB;
#define glUniform4fvARB glflglUniform4fvARB
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC glflglRenderbufferStorageMultisampleCoverageNV;
#define glRenderbufferStorageMultisampleCoverageNV glflglRenderbufferStorageMultisampleCoverageNV
extern PFNGLGETFLOATI_VEXTPROC glflglGetFloati_vEXT;
#define glGetFloati_vEXT glflglGetFloati_vEXT
extern PFNGLBINDATTRIBLOCATIONARBPROC glflglBindAttribLocationARB;
#define glBindAttribLocationARB glflglBindAttribLocationARB
extern PFNGLBUFFERADDRESSRANGENVPROC glflglBufferAddressRangeNV;
#define glBufferAddressRangeNV glflglBufferAddressRangeNV
extern PFNGLGENPROGRAMSARBPROC glflglGenProgramsARB;
#define glGenProgramsARB glflglGenProgramsARB
extern PFNGLMULTITEXENVIVEXTPROC glflglMultiTexEnvivEXT;
#define glMultiTexEnvivEXT glflglMultiTexEnvivEXT
extern PFNGLSECONDARYCOLOR3UIEXTPROC glflglSecondaryColor3uiEXT;
#define glSecondaryColor3uiEXT glflglSecondaryColor3uiEXT
extern PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC glflglCompressedTextureImage2DEXT;
#define glCompressedTextureImage2DEXT glflglCompressedTextureImage2DEXT
extern PFNGLUNIFORM2IPROC glflglUniform2i;
#define glUniform2i glflglUniform2i
extern PFNGLMAPGRID2DPROC glflglMapGrid2d;
#define glMapGrid2d glflglMapGrid2d
extern PFNGLMAPGRID2FPROC glflglMapGrid2f;
#define glMapGrid2f glflglMapGrid2f
extern PFNGLVERTEXATTRIBL1DPROC glflglVertexAttribL1d;
#define glVertexAttribL1d glflglVertexAttribL1d
extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glflglFramebufferTextureFaceEXT;
#define glFramebufferTextureFaceEXT glflglFramebufferTextureFaceEXT
extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glflglFramebufferTextureLayer;
#define glFramebufferTextureLayer glflglFramebufferTextureLayer
extern PFNGLMULTITEXCOORD4BVOESPROC glflglMultiTexCoord4bvOES;
#define glMultiTexCoord4bvOES glflglMultiTexCoord4bvOES
extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glflglGetVertexArrayPointeri_vEXT;
#define glGetVertexArrayPointeri_vEXT glflglGetVertexArrayPointeri_vEXT
extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glflglProgramUniformMatrix2x3fvEXT;
#define glProgramUniformMatrix2x3fvEXT glflglProgramUniformMatrix2x3fvEXT
extern PFNGLBINORMAL3BEXTPROC glflglBinormal3bEXT;
#define glBinormal3bEXT glflglBinormal3bEXT
extern PFNGLPROGRAMUNIFORM2FVPROC glflglProgramUniform2fv;
#define glProgramUniform2fv glflglProgramUniform2fv
extern PFNGLCOLOR3FVERTEX3FSUNPROC glflglColor3fVertex3fSUN;
#define glColor3fVertex3fSUN glflglColor3fVertex3fSUN
extern PFNGLNORMAL3FVERTEX3FVSUNPROC glflglNormal3fVertex3fvSUN;
#define glNormal3fVertex3fvSUN glflglNormal3fVertex3fvSUN
extern PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC glflglCopyMultiTexSubImage3DEXT;
#define glCopyMultiTexSubImage3DEXT glflglCopyMultiTexSubImage3DEXT
extern PFNGLPROGRAMLOCALPARAMETERI4INVPROC glflglProgramLocalParameterI4iNV;
#define glProgramLocalParameterI4iNV glflglProgramLocalParameterI4iNV
extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glflglProgramUniformMatrix2x4dv;
#define glProgramUniformMatrix2x4dv glflglProgramUniformMatrix2x4dv
extern PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC glflglPathMemoryGlyphIndexArrayNV;
#define glPathMemoryGlyphIndexArrayNV glflglPathMemoryGlyphIndexArrayNV
extern PFNGLDRAWARRAYSEXTPROC glflglDrawArraysEXT;
#define glDrawArraysEXT glflglDrawArraysEXT
extern PFNGLBLENDEQUATIONEXTPROC glflglBlendEquationEXT;
#define glBlendEquationEXT glflglBlendEquationEXT
extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glflglCopyTextureSubImage2DEXT;
#define glCopyTextureSubImage2DEXT glflglCopyTextureSubImage2DEXT
extern PFNGLTEXENVFPROC glflglTexEnvf;
#define glTexEnvf glflglTexEnvf
extern PFNGLVERTEXATTRIB2DVNVPROC glflglVertexAttrib2dvNV;
#define glVertexAttrib2dvNV glflglVertexAttrib2dvNV
extern PFNGLMULTITEXCOORD1XVOESPROC glflglMultiTexCoord1xvOES;
#define glMultiTexCoord1xvOES glflglMultiTexCoord1xvOES
extern PFNGLGENPERFMONITORSAMDPROC glflglGenPerfMonitorsAMD;
#define glGenPerfMonitorsAMD glflglGenPerfMonitorsAMD
extern PFNGLGETINTEGER64I_VPROC glflglGetInteger64i_v;
#define glGetInteger64i_v glflglGetInteger64i_v
extern PFNGLGETHISTOGRAMPARAMETERFVPROC glflglGetHistogramParameterfv;
#define glGetHistogramParameterfv glflglGetHistogramParameterfv
extern PFNGLVERTEXFORMATNVPROC glflglVertexFormatNV;
#define glVertexFormatNV glflglVertexFormatNV
extern PFNGLBLENDFUNCINDEXEDAMDPROC glflglBlendFuncIndexedAMD;
#define glBlendFuncIndexedAMD glflglBlendFuncIndexedAMD
extern PFNGLTEXENVIPROC glflglTexEnvi;
#define glTexEnvi glflglTexEnvi
extern PFNGLBLITFRAMEBUFFERPROC glflglBlitFramebuffer;
#define glBlitFramebuffer glflglBlitFramebuffer
extern PFNGLISENABLEDIPROC glflglIsEnabledi;
#define glIsEnabledi glflglIsEnabledi
extern PFNGLVERTEXATTRIBL2UI64VNVPROC glflglVertexAttribL2ui64vNV;
#define glVertexAttribL2ui64vNV glflglVertexAttribL2ui64vNV
extern PFNGLVERTEXATTRIBL4I64NVPROC glflglVertexAttribL4i64NV;
#define glVertexAttribL4i64NV glflglVertexAttribL4i64NV
extern PFNGLMATRIXTRANSLATEDEXTPROC glflglMatrixTranslatedEXT;
#define glMatrixTranslatedEXT glflglMatrixTranslatedEXT
extern PFNGLMAKETEXTUREHANDLERESIDENTARBPROC glflglMakeTextureHandleResidentARB;
#define glMakeTextureHandleResidentARB glflglMakeTextureHandleResidentARB
extern PFNGLTEXENVXPROC glflglTexEnvx;
#define glTexEnvx glflglTexEnvx
extern PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC glflglExtGetProgramBinarySourceQCOM;
#define glExtGetProgramBinarySourceQCOM glflglExtGetProgramBinarySourceQCOM
extern PFNGLVERTEX3XVOESPROC glflglVertex3xvOES;
#define glVertex3xvOES glflglVertex3xvOES
extern PFNGLBINORMAL3DVEXTPROC glflglBinormal3dvEXT;
#define glBinormal3dvEXT glflglBinormal3dvEXT
extern PFNGLIMPORTSYNCEXTPROC glflglImportSyncEXT;
#define glImportSyncEXT glflglImportSyncEXT
extern PFNGLVIEWPORTINDEXEDFNVPROC glflglViewportIndexedfNV;
#define glViewportIndexedfNV glflglViewportIndexedfNV
extern PFNGLGETMAPIVPROC glflglGetMapiv;
#define glGetMapiv glflglGetMapiv
extern PFNGLSAMPLERPARAMETERIIVEXTPROC glflglSamplerParameterIivEXT;
#define glSamplerParameterIivEXT glflglSamplerParameterIivEXT
extern PFNGLGETLISTPARAMETERFVSGIXPROC glflglGetListParameterfvSGIX;
#define glGetListParameterfvSGIX glflglGetListParameterfvSGIX
extern PFNGLMULTITEXCOORD4SVPROC glflglMultiTexCoord4sv;
#define glMultiTexCoord4sv glflglMultiTexCoord4sv
extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glflglProgramUniformMatrix3fv;
#define glProgramUniformMatrix3fv glflglProgramUniformMatrix3fv
extern PFNGLBINDVERTEXARRAYAPPLEPROC glflglBindVertexArrayAPPLE;
#define glBindVertexArrayAPPLE glflglBindVertexArrayAPPLE
extern PFNGLOBJECTPTRLABELPROC glflglObjectPtrLabel;
#define glObjectPtrLabel glflglObjectPtrLabel
extern PFNGLGETDEBUGMESSAGELOGPROC glflglGetDebugMessageLog;
#define glGetDebugMessageLog glflglGetDebugMessageLog
extern PFNGLTRACKMATRIXNVPROC glflglTrackMatrixNV;
#define glTrackMatrixNV glflglTrackMatrixNV
extern PFNGLBINDFRAGDATALOCATIONPROC glflglBindFragDataLocation;
#define glBindFragDataLocation glflglBindFragDataLocation
extern PFNGLTANGENT3IVEXTPROC glflglTangent3ivEXT;
#define glTangent3ivEXT glflglTangent3ivEXT
extern PFNGLSECONDARYCOLOR3UBVPROC glflglSecondaryColor3ubv;
#define glSecondaryColor3ubv glflglSecondaryColor3ubv
extern PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC glflglMakeTextureHandleNonResidentNV;
#define glMakeTextureHandleNonResidentNV glflglMakeTextureHandleNonResidentNV
extern PFNGLVERTEXATTRIBS4UBVNVPROC glflglVertexAttribs4ubvNV;
#define glVertexAttribs4ubvNV glflglVertexAttribs4ubvNV
extern PFNGLBINDBUFFERBASENVPROC glflglBindBufferBaseNV;
#define glBindBufferBaseNV glflglBindBufferBaseNV
extern PFNGLMULTITEXCOORD3IVPROC glflglMultiTexCoord3iv;
#define glMultiTexCoord3iv glflglMultiTexCoord3iv
extern PFNGLGETNPOLYGONSTIPPLEARBPROC glflglGetnPolygonStippleARB;
#define glGetnPolygonStippleARB glflglGetnPolygonStippleARB
extern PFNGLUNIFORM2I64VNVPROC glflglUniform2i64vNV;
#define glUniform2i64vNV glflglUniform2i64vNV
extern PFNGLLIGHTMODELFPROC glflglLightModelf;
#define glLightModelf glflglLightModelf
extern PFNGLISRENDERBUFFEROESPROC glflglIsRenderbufferOES;
#define glIsRenderbufferOES glflglIsRenderbufferOES
extern PFNGLTEXPARAMETERIIVOESPROC glflglTexParameterIivOES;
#define glTexParameterIivOES glflglTexParameterIivOES
extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glflglMultiTexSubImage2DEXT;
#define glMultiTexSubImage2DEXT glflglMultiTexSubImage2DEXT
extern PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC glflglReplacementCodeuiColor3fVertex3fSUN;
#define glReplacementCodeuiColor3fVertex3fSUN glflglReplacementCodeuiColor3fVertex3fSUN
extern PFNGLTANGENT3DVEXTPROC glflglTangent3dvEXT;
#define glTangent3dvEXT glflglTangent3dvEXT
extern PFNGLLIGHTMODELIPROC glflglLightModeli;
#define glLightModeli glflglLightModeli
extern PFNGLVERTEXWEIGHTHVNVPROC glflglVertexWeighthvNV;
#define glVertexWeighthvNV glflglVertexWeighthvNV
extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glflglFramebufferTextureLayerARB;
#define glFramebufferTextureLayerARB glflglFramebufferTextureLayerARB
extern PFNGLMULTITEXCOORDP1UIVPROC glflglMultiTexCoordP1uiv;
#define glMultiTexCoordP1uiv glflglMultiTexCoordP1uiv
extern PFNGLTRANSFORMPATHNVPROC glflglTransformPathNV;
#define glTransformPathNV glflglTransformPathNV
extern PFNGLPROGRAMNAMEDPARAMETER4DNVPROC glflglProgramNamedParameter4dNV;
#define glProgramNamedParameter4dNV glflglProgramNamedParameter4dNV
extern PFNGLBEGINQUERYPROC glflglBeginQuery;
#define glBeginQuery glflglBeginQuery
extern PFNGLPROGRAMUNIFORM1DEXTPROC glflglProgramUniform1dEXT;
#define glProgramUniform1dEXT glflglProgramUniform1dEXT
extern PFNGLCALLLISTSPROC glflglCallLists;
#define glCallLists glflglCallLists
extern PFNGLNORMAL3HVNVPROC glflglNormal3hvNV;
#define glNormal3hvNV glflglNormal3hvNV
extern PFNGLGETPOINTERVKHRPROC glflglGetPointervKHR;
#define glGetPointervKHR glflglGetPointervKHR
extern PFNGLLIGHTMODELXPROC glflglLightModelx;
#define glLightModelx glflglLightModelx
extern PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC glflglGetCombinerOutputParameterfvNV;
#define glGetCombinerOutputParameterfvNV glflglGetCombinerOutputParameterfvNV
extern PFNGLGETNUNIFORMFVARBPROC glflglGetnUniformfvARB;
#define glGetnUniformfvARB glflglGetnUniformfvARB
extern PFNGLTEXCOORD3IPROC glflglTexCoord3i;
#define glTexCoord3i glflglTexCoord3i
extern PFNGLBINDBUFFERPROC glflglBindBuffer;
#define glBindBuffer glflglBindBuffer
extern PFNGLCLIENTWAITSYNCAPPLEPROC glflglClientWaitSyncAPPLE;
#define glClientWaitSyncAPPLE glflglClientWaitSyncAPPLE
extern PFNGLPUSHDEBUGGROUPPROC glflglPushDebugGroup;
#define glPushDebugGroup glflglPushDebugGroup
extern PFNGLTEXCOORD3FPROC glflglTexCoord3f;
#define glTexCoord3f glflglTexCoord3f
extern PFNGLTEXCOORD3DPROC glflglTexCoord3d;
#define glTexCoord3d glflglTexCoord3d
extern PFNGLCREATESHADEROBJECTARBPROC glflglCreateShaderObjectARB;
#define glCreateShaderObjectARB glflglCreateShaderObjectARB
extern PFNGLGETSTAGEINDEXNVPROC glflglGetStageIndexNV;
#define glGetStageIndexNV glflglGetStageIndexNV
extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glflglGetActiveUniformBlockName;
#define glGetActiveUniformBlockName glflglGetActiveUniformBlockName
extern PFNGLGETCOLORTABLEPARAMETERFVPROC glflglGetColorTableParameterfv;
#define glGetColorTableParameterfv glflglGetColorTableParameterfv
extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glflglGetNamedBufferPointervEXT;
#define glGetNamedBufferPointervEXT glflglGetNamedBufferPointervEXT
extern PFNGLTEXCOORD3SPROC glflglTexCoord3s;
#define glTexCoord3s glflglTexCoord3s
extern PFNGLPOPDEBUGGROUPKHRPROC glflglPopDebugGroupKHR;
#define glPopDebugGroupKHR glflglPopDebugGroupKHR
extern PFNGLCOLOR4UBVERTEX3FVSUNPROC glflglColor4ubVertex3fvSUN;
#define glColor4ubVertex3fvSUN glflglColor4ubVertex3fvSUN
extern PFNGLGETCOMMANDHEADERNVPROC glflglGetCommandHeaderNV;
#define glGetCommandHeaderNV glflglGetCommandHeaderNV
extern PFNGLGETPERFMONITORCOUNTERINFOAMDPROC glflglGetPerfMonitorCounterInfoAMD;
#define glGetPerfMonitorCounterInfoAMD glflglGetPerfMonitorCounterInfoAMD
extern PFNGLVERTEXATTRIB1SVARBPROC glflglVertexAttrib1svARB;
#define glVertexAttrib1svARB glflglVertexAttrib1svARB
extern PFNGLNORMALSTREAM3IVATIPROC glflglNormalStream3ivATI;
#define glNormalStream3ivATI glflglNormalStream3ivATI
extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glflglMatrixMultTransposefEXT;
#define glMatrixMultTransposefEXT glflglMatrixMultTransposefEXT
extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glflglGetActiveUniformBlockiv;
#define glGetActiveUniformBlockiv glflglGetActiveUniformBlockiv
extern PFNGLARETEXTURESRESIDENTPROC glflglAreTexturesResident;
#define glAreTexturesResident glflglAreTexturesResident
extern PFNGLDRAWTEXFOESPROC glflglDrawTexfOES;
#define glDrawTexfOES glflglDrawTexfOES
extern PFNGLBLENDEQUATIONSEPARATEIOESPROC glflglBlendEquationSeparateiOES;
#define glBlendEquationSeparateiOES glflglBlendEquationSeparateiOES
extern PFNGLINDEXPOINTERLISTIBMPROC glflglIndexPointerListIBM;
#define glIndexPointerListIBM glflglIndexPointerListIBM
extern PFNGLVERTEXATTRIBI4IEXTPROC glflglVertexAttribI4iEXT;
#define glVertexAttribI4iEXT glflglVertexAttribI4iEXT
extern PFNGLBEGINTRANSFORMFEEDBACKNVPROC glflglBeginTransformFeedbackNV;
#define glBeginTransformFeedbackNV glflglBeginTransformFeedbackNV
extern PFNGLRASTERPOS4SVPROC glflglRasterPos4sv;
#define glRasterPos4sv glflglRasterPos4sv
extern PFNGLCOLOR4SPROC glflglColor4s;
#define glColor4s glflglColor4s
extern PFNGLCOLORFRAGMENTOP3ATIPROC glflglColorFragmentOp3ATI;
#define glColorFragmentOp3ATI glflglColorFragmentOp3ATI
extern PFNGLMAPGRID1XOESPROC glflglMapGrid1xOES;
#define glMapGrid1xOES glflglMapGrid1xOES
extern PFNGLRESIZEBUFFERSMESAPROC glflglResizeBuffersMESA;
#define glResizeBuffersMESA glflglResizeBuffersMESA
extern PFNGLGETMINMAXPARAMETERFVPROC glflglGetMinmaxParameterfv;
#define glGetMinmaxParameterfv glflglGetMinmaxParameterfv
extern PFNGLCOLOR4XPROC glflglColor4x;
#define glColor4x glflglColor4x
extern PFNGLCLIENTACTIVETEXTUREARBPROC glflglClientActiveTextureARB;
#define glClientActiveTextureARB glflglClientActiveTextureARB
extern PFNGLBINDVERTEXARRAYPROC glflglBindVertexArray;
#define glBindVertexArray glflglBindVertexArray
extern PFNGLCOLOR4BPROC glflglColor4b;
#define glColor4b glflglColor4b
extern PFNGLUNIFORMMATRIX4X2FVNVPROC glflglUniformMatrix4x2fvNV;
#define glUniformMatrix4x2fvNV glflglUniformMatrix4x2fvNV
extern PFNGLCOLOR4FPROC glflglColor4f;
#define glColor4f glflglColor4f
extern PFNGLCOLOR4DPROC glflglColor4d;
#define glColor4d glflglColor4d
extern PFNGLCOLOR4IPROC glflglColor4i;
#define glColor4i glflglColor4i
extern PFNGLPROGRAMUNIFORM1DVEXTPROC glflglProgramUniform1dvEXT;
#define glProgramUniform1dvEXT glflglProgramUniform1dvEXT
extern PFNGLNAMEDBUFFERSUBDATAPROC glflglNamedBufferSubData;
#define glNamedBufferSubData glflglNamedBufferSubData
extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glflglGetMultiTexParameterIivEXT;
#define glGetMultiTexParameterIivEXT glflglGetMultiTexParameterIivEXT
extern PFNGLVERTEX2DVPROC glflglVertex2dv;
#define glVertex2dv glflglVertex2dv
extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glflglDisableVertexArrayAttribEXT;
#define glDisableVertexArrayAttribEXT glflglDisableVertexArrayAttribEXT
extern PFNGLOBJECTUNPURGEABLEAPPLEPROC glflglObjectUnpurgeableAPPLE;
#define glObjectUnpurgeableAPPLE glflglObjectUnpurgeableAPPLE
extern PFNGLVERTEXATTRIBS2DVNVPROC glflglVertexAttribs2dvNV;
#define glVertexAttribs2dvNV glflglVertexAttribs2dvNV
extern PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC glflglReplacementCodeuiTexCoord2fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fVertex3fSUN glflglReplacementCodeuiTexCoord2fVertex3fSUN
extern PFNGLGETMAPPARAMETERFVNVPROC glflglGetMapParameterfvNV;
#define glGetMapParameterfvNV glflglGetMapParameterfvNV
extern PFNGLPROGRAMUNIFORM4IVEXTPROC glflglProgramUniform4ivEXT;
#define glProgramUniform4ivEXT glflglProgramUniform4ivEXT
extern PFNGLPROGRAMUNIFORM3UI64VNVPROC glflglProgramUniform3ui64vNV;
#define glProgramUniform3ui64vNV glflglProgramUniform3ui64vNV
extern PFNGLBINORMALPOINTEREXTPROC glflglBinormalPointerEXT;
#define glBinormalPointerEXT glflglBinormalPointerEXT
extern PFNGLTEXFILTERFUNCSGISPROC glflglTexFilterFuncSGIS;
#define glTexFilterFuncSGIS glflglTexFilterFuncSGIS
extern PFNGLSPRITEPARAMETERFVSGIXPROC glflglSpriteParameterfvSGIX;
#define glSpriteParameterfvSGIX glflglSpriteParameterfvSGIX
extern PFNGLCOPYMULTITEXIMAGE1DEXTPROC glflglCopyMultiTexImage1DEXT;
#define glCopyMultiTexImage1DEXT glflglCopyMultiTexImage1DEXT
extern PFNGLCOLORMASKINDEXEDEXTPROC glflglColorMaskIndexedEXT;
#define glColorMaskIndexedEXT glflglColorMaskIndexedEXT
extern PFNGLUNIFORMMATRIX2X4DVPROC glflglUniformMatrix2x4dv;
#define glUniformMatrix2x4dv glflglUniformMatrix2x4dv
extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glflglGetProgramResourceLocationIndex;
#define glGetProgramResourceLocationIndex glflglGetProgramResourceLocationIndex
extern PFNGLFENCESYNCAPPLEPROC glflglFenceSyncAPPLE;
#define glFenceSyncAPPLE glflglFenceSyncAPPLE
extern PFNGLCOLOR3HNVPROC glflglColor3hNV;
#define glColor3hNV glflglColor3hNV
extern PFNGLVIEWPORTPROC glflglViewport;
#define glViewport glflglViewport
extern PFNGLPROGRAMNAMEDPARAMETER4FNVPROC glflglProgramNamedParameter4fNV;
#define glProgramNamedParameter4fNV glflglProgramNamedParameter4fNV
extern PFNGLGETINVARIANTBOOLEANVEXTPROC glflglGetInvariantBooleanvEXT;
#define glGetInvariantBooleanvEXT glflglGetInvariantBooleanvEXT
extern PFNGLTEXSUBIMAGE3DOESPROC glflglTexSubImage3DOES;
#define glTexSubImage3DOES glflglTexSubImage3DOES
extern PFNGLBLENDFUNCIEXTPROC glflglBlendFunciEXT;
#define glBlendFunciEXT glflglBlendFunciEXT
extern PFNGLTEXSTORAGE2DMULTISAMPLEPROC glflglTexStorage2DMultisample;
#define glTexStorage2DMultisample glflglTexStorage2DMultisample
extern PFNGLPOINTPARAMETERXVPROC glflglPointParameterxv;
#define glPointParameterxv glflglPointParameterxv
extern PFNGLPIXELSTOREXPROC glflglPixelStorex;
#define glPixelStorex glflglPixelStorex
extern PFNGLVERTEXATTRIBL1DVEXTPROC glflglVertexAttribL1dvEXT;
#define glVertexAttribL1dvEXT glflglVertexAttribL1dvEXT
extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glflglGetActiveSubroutineUniformiv;
#define glGetActiveSubroutineUniformiv glflglGetActiveSubroutineUniformiv
extern PFNGLVERTEXATTRIBPOINTERARBPROC glflglVertexAttribPointerARB;
#define glVertexAttribPointerARB glflglVertexAttribPointerARB
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC glflglCompressedTexSubImage2DARB;
#define glCompressedTexSubImage2DARB glflglCompressedTexSubImage2DARB
extern PFNGLISPROGRAMPIPELINEEXTPROC glflglIsProgramPipelineEXT;
#define glIsProgramPipelineEXT glflglIsProgramPipelineEXT
extern PFNGLVERTEX2HVNVPROC glflglVertex2hvNV;
#define glVertex2hvNV glflglVertex2hvNV
extern PFNGLTEXBUFFERPROC glflglTexBuffer;
#define glTexBuffer glflglTexBuffer
extern PFNGLPIXELSTOREIPROC glflglPixelStorei;
#define glPixelStorei glflglPixelStorei
extern PFNGLVALIDATEPROGRAMPROC glflglValidateProgram;
#define glValidateProgram glflglValidateProgram
extern PFNGLACTIVESHADERPROGRAMPROC glflglActiveShaderProgram;
#define glActiveShaderProgram glflglActiveShaderProgram
extern PFNGLWINDOWPOS3DARBPROC glflglWindowPos3dARB;
#define glWindowPos3dARB glflglWindowPos3dARB
extern PFNGLEVALCOORD1DVPROC glflglEvalCoord1dv;
#define glEvalCoord1dv glflglEvalCoord1dv
extern PFNGLMULTITEXCOORDP2UIVPROC glflglMultiTexCoordP2uiv;
#define glMultiTexCoordP2uiv glflglMultiTexCoordP2uiv
extern PFNGLRECTIPROC glflglRecti;
#define glRecti glflglRecti
extern PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glflglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN glflglReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN
extern PFNGLTEXCOORD1BOESPROC glflglTexCoord1bOES;
#define glTexCoord1bOES glflglTexCoord1bOES
extern PFNGLVARIANTUBVEXTPROC glflglVariantubvEXT;
#define glVariantubvEXT glflglVariantubvEXT
extern PFNGLWINDOWPOS2DARBPROC glflglWindowPos2dARB;
#define glWindowPos2dARB glflglWindowPos2dARB
extern PFNGLPATHCOVERDEPTHFUNCNVPROC glflglPathCoverDepthFuncNV;
#define glPathCoverDepthFuncNV glflglPathCoverDepthFuncNV
extern PFNGLRECTFPROC glflglRectf;
#define glRectf glflglRectf
extern PFNGLRECTDPROC glflglRectd;
#define glRectd glflglRectd
extern PFNGLMAP1XOESPROC glflglMap1xOES;
#define glMap1xOES glflglMap1xOES
extern PFNGLTEXCOORD4FVERTEX4FVSUNPROC glflglTexCoord4fVertex4fvSUN;
#define glTexCoord4fVertex4fvSUN glflglTexCoord4fVertex4fvSUN
extern PFNGLACTIVEVARYINGNVPROC glflglActiveVaryingNV;
#define glActiveVaryingNV glflglActiveVaryingNV
extern PFNGLREFERENCEPLANESGIXPROC glflglReferencePlaneSGIX;
#define glReferencePlaneSGIX glflglReferencePlaneSGIX
extern PFNGLGETMULTITEXGENDVEXTPROC glflglGetMultiTexGendvEXT;
#define glGetMultiTexGendvEXT glflglGetMultiTexGendvEXT
extern PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC glflglClearNamedBufferSubDataEXT;
#define glClearNamedBufferSubDataEXT glflglClearNamedBufferSubDataEXT
extern PFNGLGETTEXTURESAMPLERHANDLEARBPROC glflglGetTextureSamplerHandleARB;
#define glGetTextureSamplerHandleARB glflglGetTextureSamplerHandleARB
extern PFNGLBINDTEXTUREPROC glflglBindTexture;
#define glBindTexture glflglBindTexture
extern PFNGLRECTSPROC glflglRects;
#define glRects glflglRects
extern PFNGLGETACTIVEATTRIBARBPROC glflglGetActiveAttribARB;
#define glGetActiveAttribARB glflglGetActiveAttribARB
extern PFNGLHISTOGRAMEXTPROC glflglHistogramEXT;
#define glHistogramEXT glflglHistogramEXT
extern PFNGLPIXELTRANSFORMPARAMETERIEXTPROC glflglPixelTransformParameteriEXT;
#define glPixelTransformParameteriEXT glflglPixelTransformParameteriEXT
extern PFNGLDETACHSHADERPROC glflglDetachShader;
#define glDetachShader glflglDetachShader
extern PFNGLFINISHTEXTURESUNXPROC glflglFinishTextureSUNX;
#define glFinishTextureSUNX glflglFinishTextureSUNX
extern PFNGLGETCOLORTABLEPARAMETERIVPROC glflglGetColorTableParameteriv;
#define glGetColorTableParameteriv glflglGetColorTableParameteriv
extern PFNGLVERTEXATTRIB4FARBPROC glflglVertexAttrib4fARB;
#define glVertexAttrib4fARB glflglVertexAttrib4fARB
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC glflglRenderbufferStorageMultisampleIMG;
#define glRenderbufferStorageMultisampleIMG glflglRenderbufferStorageMultisampleIMG
extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glflglGetProgramResourceLocation;
#define glGetProgramResourceLocation glflglGetProgramResourceLocation
extern PFNGLDRAWELEMENTSINSTANCEDNVPROC glflglDrawElementsInstancedNV;
#define glDrawElementsInstancedNV glflglDrawElementsInstancedNV
extern PFNGLVERTEXARRAYATTRIBLFORMATPROC glflglVertexArrayAttribLFormat;
#define glVertexArrayAttribLFormat glflglVertexArrayAttribLFormat
extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glflglNamedCopyBufferSubDataEXT;
#define glNamedCopyBufferSubDataEXT glflglNamedCopyBufferSubDataEXT
extern PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC glflglVertexArrayVertexAttribOffsetEXT;
#define glVertexArrayVertexAttribOffsetEXT glflglVertexArrayVertexAttribOffsetEXT
extern PFNGLINDEXFORMATNVPROC glflglIndexFormatNV;
#define glIndexFormatNV glflglIndexFormatNV
extern PFNGLDRAWTEXFVOESPROC glflglDrawTexfvOES;
#define glDrawTexfvOES glflglDrawTexfvOES
extern PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC glflglReplacementCodeuiVertex3fvSUN;
#define glReplacementCodeuiVertex3fvSUN glflglReplacementCodeuiVertex3fvSUN
extern PFNGLVIEWPORTINDEXEDFVPROC glflglViewportIndexedfv;
#define glViewportIndexedfv glflglViewportIndexedfv
extern PFNGLBINDBUFFERSBASEPROC glflglBindBuffersBase;
#define glBindBuffersBase glflglBindBuffersBase
extern PFNGLTEXBUMPPARAMETERFVATIPROC glflglTexBumpParameterfvATI;
#define glTexBumpParameterfvATI glflglTexBumpParameterfvATI
extern PFNGLMATRIXINDEXUIVARBPROC glflglMatrixIndexuivARB;
#define glMatrixIndexuivARB glflglMatrixIndexuivARB
extern PFNGLVERTEXATTRIB1HNVPROC glflglVertexAttrib1hNV;
#define glVertexAttrib1hNV glflglVertexAttrib1hNV
extern PFNGLWINDOWPOS3SVMESAPROC glflglWindowPos3svMESA;
#define glWindowPos3svMESA glflglWindowPos3svMESA
extern PFNGLSTENCILOPSEPARATEATIPROC glflglStencilOpSeparateATI;
#define glStencilOpSeparateATI glflglStencilOpSeparateATI
extern PFNGLDRAWELEMENTSBASEVERTEXPROC glflglDrawElementsBaseVertex;
#define glDrawElementsBaseVertex glflglDrawElementsBaseVertex
extern PFNGLBLENDEQUATIONSEPARATEIARBPROC glflglBlendEquationSeparateiARB;
#define glBlendEquationSeparateiARB glflglBlendEquationSeparateiARB
extern PFNGLVERTEXATTRIB1FNVPROC glflglVertexAttrib1fNV;
#define glVertexAttrib1fNV glflglVertexAttrib1fNV
extern PFNGLSAMPLECOVERAGEPROC glflglSampleCoverage;
#define glSampleCoverage glflglSampleCoverage
extern PFNGLCLEARBUFFERSUBDATAPROC glflglClearBufferSubData;
#define glClearBufferSubData glflglClearBufferSubData
extern PFNGLTEXSTORAGE1DPROC glflglTexStorage1D;
#define glTexStorage1D glflglTexStorage1D
extern PFNGLTEXSTORAGE1DEXTPROC glflglTexStorage1DEXT;
#define glTexStorage1DEXT glflglTexStorage1DEXT
extern PFNGLVERTEXATTRIBI3IEXTPROC glflglVertexAttribI3iEXT;
#define glVertexAttribI3iEXT glflglVertexAttribI3iEXT
extern PFNGLEXTGETBUFFERSQCOMPROC glflglExtGetBuffersQCOM;
#define glExtGetBuffersQCOM glflglExtGetBuffersQCOM
extern PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC glflglMakeTextureHandleNonResidentARB;
#define glMakeTextureHandleNonResidentARB glflglMakeTextureHandleNonResidentARB
extern PFNGLGETPIXELMAPXVPROC glflglGetPixelMapxv;
#define glGetPixelMapxv glflglGetPixelMapxv
extern PFNGLVERTEXSTREAM4DATIPROC glflglVertexStream4dATI;
#define glVertexStream4dATI glflglVertexStream4dATI
extern PFNGLVERTEXATTRIBS4DVNVPROC glflglVertexAttribs4dvNV;
#define glVertexAttribs4dvNV glflglVertexAttribs4dvNV
extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glflglProgramUniformMatrix2dvEXT;
#define glProgramUniformMatrix2dvEXT glflglProgramUniformMatrix2dvEXT
extern PFNGLVERTEXATTRIBS2HVNVPROC glflglVertexAttribs2hvNV;
#define glVertexAttribs2hvNV glflglVertexAttribs2hvNV
extern PFNGLGETUNIFORMIVPROC glflglGetUniformiv;
#define glGetUniformiv glflglGetUniformiv
extern PFNGLCLIPPLANEFOESPROC glflglClipPlanefOES;
#define glClipPlanefOES glflglClipPlanefOES
extern PFNGLGETDRIVERCONTROLSQCOMPROC glflglGetDriverControlsQCOM;
#define glGetDriverControlsQCOM glflglGetDriverControlsQCOM
extern PFNGLUNIFORM4UIPROC glflglUniform4ui;
#define glUniform4ui glflglUniform4ui
extern PFNGLBINDFRAMEBUFFERPROC glflglBindFramebuffer;
#define glBindFramebuffer glflglBindFramebuffer
extern PFNGLVALIDATEPROGRAMARBPROC glflglValidateProgramARB;
#define glValidateProgramARB glflglValidateProgramARB
extern PFNGLTEXGENFPROC glflglTexGenf;
#define glTexGenf glflglTexGenf
extern PFNGLTEXGENDPROC glflglTexGend;
#define glTexGend glflglTexGend
extern PFNGLTEXGENIPROC glflglTexGeni;
#define glTexGeni glflglTexGeni
extern PFNGLDELETEFRAMEBUFFERSEXTPROC glflglDeleteFramebuffersEXT;
#define glDeleteFramebuffersEXT glflglDeleteFramebuffersEXT
extern PFNGLRESETMINMAXEXTPROC glflglResetMinmaxEXT;
#define glResetMinmaxEXT glflglResetMinmaxEXT
extern PFNGLVERTEXATTRIB1FVNVPROC glflglVertexAttrib1fvNV;
#define glVertexAttrib1fvNV glflglVertexAttrib1fvNV
extern PFNGLISQUERYARBPROC glflglIsQueryARB;
#define glIsQueryARB glflglIsQueryARB
extern PFNGLENABLEVARIANTCLIENTSTATEEXTPROC glflglEnableVariantClientStateEXT;
#define glEnableVariantClientStateEXT glflglEnableVariantClientStateEXT
extern PFNGLSCISSORINDEXEDPROC glflglScissorIndexed;
#define glScissorIndexed glflglScissorIndexed
extern PFNGLGETINVARIANTINTEGERVEXTPROC glflglGetInvariantIntegervEXT;
#define glGetInvariantIntegervEXT glflglGetInvariantIntegervEXT
extern PFNGLQUERYCOUNTEREXTPROC glflglQueryCounterEXT;
#define glQueryCounterEXT glflglQueryCounterEXT
extern PFNGLCONVOLUTIONPARAMETERXVOESPROC glflglConvolutionParameterxvOES;
#define glConvolutionParameterxvOES glflglConvolutionParameterxvOES
extern PFNGLGENFRAMEBUFFERSEXTPROC glflglGenFramebuffersEXT;
#define glGenFramebuffersEXT glflglGenFramebuffersEXT
extern PFNGLVERTEXARRAYCOLOROFFSETEXTPROC glflglVertexArrayColorOffsetEXT;
#define glVertexArrayColorOffsetEXT glflglVertexArrayColorOffsetEXT
extern PFNGLMULTITEXCOORD3IVARBPROC glflglMultiTexCoord3ivARB;
#define glMultiTexCoord3ivARB glflglMultiTexCoord3ivARB
extern PFNGLBLENDEQUATIONSEPARATEIEXTPROC glflglBlendEquationSeparateiEXT;
#define glBlendEquationSeparateiEXT glflglBlendEquationSeparateiEXT
extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glflglGetMultiTexLevelParameterivEXT;
#define glGetMultiTexLevelParameterivEXT glflglGetMultiTexLevelParameterivEXT
extern PFNGLISTEXTUREHANDLERESIDENTARBPROC glflglIsTextureHandleResidentARB;
#define glIsTextureHandleResidentARB glflglIsTextureHandleResidentARB
extern PFNGLRASTERPOS2DVPROC glflglRasterPos2dv;
#define glRasterPos2dv glflglRasterPos2dv
extern PFNGLWINDOWPOS4IVMESAPROC glflglWindowPos4ivMESA;
#define glWindowPos4ivMESA glflglWindowPos4ivMESA
extern PFNGLGETVARIANTPOINTERVEXTPROC glflglGetVariantPointervEXT;
#define glGetVariantPointervEXT glflglGetVariantPointervEXT
extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glflglMapNamedBufferRangeEXT;
#define glMapNamedBufferRangeEXT glflglMapNamedBufferRangeEXT
extern PFNGLCREATESHADERPROGRAMVPROC glflglCreateShaderProgramv;
#define glCreateShaderProgramv glflglCreateShaderProgramv
extern PFNGLGETQUERYOBJECTIVPROC glflglGetQueryObjectiv;
#define glGetQueryObjectiv glflglGetQueryObjectiv
extern PFNGLPNTRIANGLESFATIPROC glflglPNTrianglesfATI;
#define glPNTrianglesfATI glflglPNTrianglesfATI
extern PFNGLGLOBALALPHAFACTORUSSUNPROC glflglGlobalAlphaFactorusSUN;
#define glGlobalAlphaFactorusSUN glflglGlobalAlphaFactorusSUN
extern PFNGLVERTEXATTRIB3DVNVPROC glflglVertexAttrib3dvNV;
#define glVertexAttrib3dvNV glflglVertexAttrib3dvNV
extern PFNGLMULTITEXCOORD3SARBPROC glflglMultiTexCoord3sARB;
#define glMultiTexCoord3sARB glflglMultiTexCoord3sARB
extern PFNGLGENERATEMIPMAPPROC glflglGenerateMipmap;
#define glGenerateMipmap glflglGenerateMipmap
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC glflglCompressedTextureSubImage2D;
#define glCompressedTextureSubImage2D glflglCompressedTextureSubImage2D
extern PFNGLSAMPLECOVERAGEXPROC glflglSampleCoveragex;
#define glSampleCoveragex glflglSampleCoveragex
extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glflglNamedRenderbufferStorageMultisampleEXT;
#define glNamedRenderbufferStorageMultisampleEXT glflglNamedRenderbufferStorageMultisampleEXT
extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glflglPolygonOffsetClampEXT;
#define glPolygonOffsetClampEXT glflglPolygonOffsetClampEXT
extern PFNGLTEXTURERANGEAPPLEPROC glflglTextureRangeAPPLE;
#define glTextureRangeAPPLE glflglTextureRangeAPPLE
extern PFNGLBLENDEQUATIONINDEXEDAMDPROC glflglBlendEquationIndexedAMD;
#define glBlendEquationIndexedAMD glflglBlendEquationIndexedAMD
extern PFNGLSAMPLERPARAMETERIIVOESPROC glflglSamplerParameterIivOES;
#define glSamplerParameterIivOES glflglSamplerParameterIivOES
extern PFNGLTEXCOORD2DPROC glflglTexCoord2d;
#define glTexCoord2d glflglTexCoord2d
extern PFNGLPOINTPARAMETERIPROC glflglPointParameteri;
#define glPointParameteri glflglPointParameteri
extern PFNGLTEXCOORD2FPROC glflglTexCoord2f;
#define glTexCoord2f glflglTexCoord2f
extern PFNGLCOLOR4IVPROC glflglColor4iv;
#define glColor4iv glflglColor4iv
extern PFNGLMAPNAMEDBUFFERRANGEPROC glflglMapNamedBufferRange;
#define glMapNamedBufferRange glflglMapNamedBufferRange
extern PFNGLUNMAPBUFFERPROC glflglUnmapBuffer;
#define glUnmapBuffer glflglUnmapBuffer
extern PFNGLSAMPLEMASKEXTPROC glflglSampleMaskEXT;
#define glSampleMaskEXT glflglSampleMaskEXT
extern PFNGLTEXCOORD2IPROC glflglTexCoord2i;
#define glTexCoord2i glflglTexCoord2i
extern PFNGLPOINTPARAMETERFPROC glflglPointParameterf;
#define glPointParameterf glflglPointParameterf
extern PFNGLVERTEXATTRIB1SARBPROC glflglVertexAttrib1sARB;
#define glVertexAttrib1sARB glflglVertexAttrib1sARB
extern PFNGLPOINTPARAMETERXPROC glflglPointParameterx;
#define glPointParameterx glflglPointParameterx
extern PFNGLPROGRAMPARAMETER4DVNVPROC glflglProgramParameter4dvNV;
#define glProgramParameter4dvNV glflglProgramParameter4dvNV
extern PFNGLTEXCOORD2SPROC glflglTexCoord2s;
#define glTexCoord2s glflglTexCoord2s
extern PFNGLTEXTUREPARAMETERIUIVEXTPROC glflglTextureParameterIuivEXT;
#define glTextureParameterIuivEXT glflglTextureParameterIuivEXT
extern PFNGLGETCOLORTABLEPARAMETERFVSGIPROC glflglGetColorTableParameterfvSGI;
#define glGetColorTableParameterfvSGI glflglGetColorTableParameterfvSGI
extern PFNGLTEXCOORD4DVPROC glflglTexCoord4dv;
#define glTexCoord4dv glflglTexCoord4dv
extern PFNGLDELETERENDERBUFFERSEXTPROC glflglDeleteRenderbuffersEXT;
#define glDeleteRenderbuffersEXT glflglDeleteRenderbuffersEXT
extern PFNGLVERTEXATTRIB1SVNVPROC glflglVertexAttrib1svNV;
#define glVertexAttrib1svNV glflglVertexAttrib1svNV
extern PFNGLVERTEXATTRIBP4UIVPROC glflglVertexAttribP4uiv;
#define glVertexAttribP4uiv glflglVertexAttribP4uiv
extern PFNGLPROGRAMUNIFORM2UI64VNVPROC glflglProgramUniform2ui64vNV;
#define glProgramUniform2ui64vNV glflglProgramUniform2ui64vNV
extern PFNGLNORMAL3DVPROC glflglNormal3dv;
#define glNormal3dv glflglNormal3dv
extern PFNGLRELEASESHADERCOMPILERPROC glflglReleaseShaderCompiler;
#define glReleaseShaderCompiler glflglReleaseShaderCompiler
extern PFNGLTEXCOORD3BVOESPROC glflglTexCoord3bvOES;
#define glTexCoord3bvOES glflglTexCoord3bvOES
extern PFNGLISVERTEXATTRIBENABLEDAPPLEPROC glflglIsVertexAttribEnabledAPPLE;
#define glIsVertexAttribEnabledAPPLE glflglIsVertexAttribEnabledAPPLE
extern PFNGLTEXCOORD1DVPROC glflglTexCoord1dv;
#define glTexCoord1dv glflglTexCoord1dv
extern PFNGLREADPIXELSPROC glflglReadPixels;
#define glReadPixels glflglReadPixels
extern PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC glflglMultiDrawArraysIndirectEXT;
#define glMultiDrawArraysIndirectEXT glflglMultiDrawArraysIndirectEXT
extern PFNGLVERTEXATTRIBI3IVPROC glflglVertexAttribI3iv;
#define glVertexAttribI3iv glflglVertexAttribI3iv
extern PFNGLSETFENCEAPPLEPROC glflglSetFenceAPPLE;
#define glSetFenceAPPLE glflglSetFenceAPPLE
extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glflglMultiTexSubImage3DEXT;
#define glMultiTexSubImage3DEXT glflglMultiTexSubImage3DEXT
extern PFNGLSTATECAPTURENVPROC glflglStateCaptureNV;
#define glStateCaptureNV glflglStateCaptureNV
extern PFNGLWEIGHTSVARBPROC glflglWeightsvARB;
#define glWeightsvARB glflglWeightsvARB
extern PFNGLSHADEMODELPROC glflglShadeModel;
#define glShadeModel glflglShadeModel
extern PFNGLMAPGRID1DPROC glflglMapGrid1d;
#define glMapGrid1d glflglMapGrid1d
extern PFNGLGETHISTOGRAMPARAMETERIVEXTPROC glflglGetHistogramParameterivEXT;
#define glGetHistogramParameterivEXT glflglGetHistogramParameterivEXT
extern PFNGLMAPGRID1FPROC glflglMapGrid1f;
#define glMapGrid1f glflglMapGrid1f
extern PFNGLVERTEXATTRIBI1IEXTPROC glflglVertexAttribI1iEXT;
#define glVertexAttribI1iEXT glflglVertexAttribI1iEXT
extern PFNGLGETDOUBLEI_VEXTPROC glflglGetDoublei_vEXT;
#define glGetDoublei_vEXT glflglGetDoublei_vEXT
extern PFNGLFOGCOORDFEXTPROC glflglFogCoordfEXT;
#define glFogCoordfEXT glflglFogCoordfEXT
extern PFNGLVERTEXATTRIB2DARBPROC glflglVertexAttrib2dARB;
#define glVertexAttrib2dARB glflglVertexAttrib2dARB
extern PFNGLMULTITEXCOORD4DARBPROC glflglMultiTexCoord4dARB;
#define glMultiTexCoord4dARB glflglMultiTexCoord4dARB
extern PFNGLREADNPIXELSARBPROC glflglReadnPixelsARB;
#define glReadnPixelsARB glflglReadnPixelsARB
extern PFNGLMULTITEXBUFFEREXTPROC glflglMultiTexBufferEXT;
#define glMultiTexBufferEXT glflglMultiTexBufferEXT
extern PFNGLGETSAMPLERPARAMETERIIVEXTPROC glflglGetSamplerParameterIivEXT;
#define glGetSamplerParameterIivEXT glflglGetSamplerParameterIivEXT
extern PFNGLWINDOWPOS4DVMESAPROC glflglWindowPos4dvMESA;
#define glWindowPos4dvMESA glflglWindowPos4dvMESA
extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glflglInvalidateNamedFramebufferData;
#define glInvalidateNamedFramebufferData glflglInvalidateNamedFramebufferData
extern PFNGLRECTIVPROC glflglRectiv;
#define glRectiv glflglRectiv
extern PFNGLCOLORP4UIPROC glflglColorP4ui;
#define glColorP4ui glflglColorP4ui
extern PFNGLMATRIXTRANSLATEFEXTPROC glflglMatrixTranslatefEXT;
#define glMatrixTranslatefEXT glflglMatrixTranslatefEXT
extern PFNGLUSEPROGRAMSTAGESPROC glflglUseProgramStages;
#define glUseProgramStages glflglUseProgramStages
extern PFNGLRASTERPOS3DVPROC glflglRasterPos3dv;
#define glRasterPos3dv glflglRasterPos3dv
extern PFNGLCOLOR3XOESPROC glflglColor3xOES;
#define glColor3xOES glflglColor3xOES
extern PFNGLTEXCOORD1HVNVPROC glflglTexCoord1hvNV;
#define glTexCoord1hvNV glflglTexCoord1hvNV
extern PFNGLPROGRAMUNIFORM2DEXTPROC glflglProgramUniform2dEXT;
#define glProgramUniform2dEXT glflglProgramUniform2dEXT
extern PFNGLREADBUFFERPROC glflglReadBuffer;
#define glReadBuffer glflglReadBuffer
extern PFNGLBLENDEQUATIONIARBPROC glflglBlendEquationiARB;
#define glBlendEquationiARB glflglBlendEquationiARB
extern PFNGLCOLOR4UBVPROC glflglColor4ubv;
#define glColor4ubv glflglColor4ubv
extern PFNGLGETMAPATTRIBPARAMETERFVNVPROC glflglGetMapAttribParameterfvNV;
#define glGetMapAttribParameterfvNV glflglGetMapAttribParameterfvNV
extern PFNGLGETBUFFERSUBDATAPROC glflglGetBufferSubData;
#define glGetBufferSubData glflglGetBufferSubData
extern PFNGLGETVERTEXATTRIBLDVPROC glflglGetVertexAttribLdv;
#define glGetVertexAttribLdv glflglGetVertexAttribLdv
extern PFNGLGETNUNIFORMUIVPROC glflglGetnUniformuiv;
#define glGetnUniformuiv glflglGetnUniformuiv
extern PFNGLGETUNIFORMUI64VNVPROC glflglGetUniformui64vNV;
#define glGetUniformui64vNV glflglGetUniformui64vNV
extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glflglNamedRenderbufferStorageEXT;
#define glNamedRenderbufferStorageEXT glflglNamedRenderbufferStorageEXT
extern PFNGLGETARRAYOBJECTFVATIPROC glflglGetArrayObjectfvATI;
#define glGetArrayObjectfvATI glflglGetArrayObjectfvATI
extern PFNGLVERTEXATTRIB3DNVPROC glflglVertexAttrib3dNV;
#define glVertexAttrib3dNV glflglVertexAttrib3dNV
extern PFNGLTEXTURESTORAGE1DEXTPROC glflglTextureStorage1DEXT;
#define glTextureStorage1DEXT glflglTextureStorage1DEXT
extern PFNGLPIXELTEXGENPARAMETERISGISPROC glflglPixelTexGenParameteriSGIS;
#define glPixelTexGenParameteriSGIS glflglPixelTexGenParameteriSGIS
extern PFNGLCOLORTABLEEXTPROC glflglColorTableEXT;
#define glColorTableEXT glflglColorTableEXT
extern PFNGLGENBUFFERSPROC glflglGenBuffers;
#define glGenBuffers glflglGenBuffers
extern PFNGLMULTITEXCOORD3XVOESPROC glflglMultiTexCoord3xvOES;
#define glMultiTexCoord3xvOES glflglMultiTexCoord3xvOES
extern PFNGLEXECUTEPROGRAMNVPROC glflglExecuteProgramNV;
#define glExecuteProgramNV glflglExecuteProgramNV
extern PFNGLVARIANTARRAYOBJECTATIPROC glflglVariantArrayObjectATI;
#define glVariantArrayObjectATI glflglVariantArrayObjectATI
extern PFNGLCOLOR3XVOESPROC glflglColor3xvOES;
#define glColor3xvOES glflglColor3xvOES
extern PFNGLTEXCOORDP1UIVPROC glflglTexCoordP1uiv;
#define glTexCoordP1uiv glflglTexCoordP1uiv
extern PFNGLGETNUNIFORMUIVKHRPROC glflglGetnUniformuivKHR;
#define glGetnUniformuivKHR glflglGetnUniformuivKHR
extern PFNGLDELETEPROGRAMSNVPROC glflglDeleteProgramsNV;
#define glDeleteProgramsNV glflglDeleteProgramsNV
extern PFNGLNORMALFORMATNVPROC glflglNormalFormatNV;
#define glNormalFormatNV glflglNormalFormatNV
extern PFNGLVERTEXATTRIB3FNVPROC glflglVertexAttrib3fNV;
#define glVertexAttrib3fNV glflglVertexAttrib3fNV
extern PFNGLCLEARNAMEDFRAMEBUFFERIVPROC glflglClearNamedFramebufferiv;
#define glClearNamedFramebufferiv glflglClearNamedFramebufferiv
extern PFNGLHISTOGRAMPROC glflglHistogram;
#define glHistogram glflglHistogram
extern PFNGLVERTEXSTREAM1IVATIPROC glflglVertexStream1ivATI;
#define glVertexStream1ivATI glflglVertexStream1ivATI
extern PFNGLISFRAMEBUFFERPROC glflglIsFramebuffer;
#define glIsFramebuffer glflglIsFramebuffer
extern PFNGLPROGRAMUNIFORM3DVEXTPROC glflglProgramUniform3dvEXT;
#define glProgramUniform3dvEXT glflglProgramUniform3dvEXT
extern PFNGLGETLIGHTXVOESPROC glflglGetLightxvOES;
#define glGetLightxvOES glflglGetLightxvOES
extern PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC glflglBindVideoCaptureStreamBufferNV;
#define glBindVideoCaptureStreamBufferNV glflglBindVideoCaptureStreamBufferNV
extern PFNGLGETVERTEXATTRIBFVNVPROC glflglGetVertexAttribfvNV;
#define glGetVertexAttribfvNV glflglGetVertexAttribfvNV
extern PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC glflglDrawRangeElementArrayAPPLE;
#define glDrawRangeElementArrayAPPLE glflglDrawRangeElementArrayAPPLE
extern PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC glflglGetTexParameterPointervAPPLE;
#define glGetTexParameterPointervAPPLE glflglGetTexParameterPointervAPPLE
extern PFNGLMATRIXPOPEXTPROC glflglMatrixPopEXT;
#define glMatrixPopEXT glflglMatrixPopEXT
extern PFNGLACTIVESHADERPROGRAMEXTPROC glflglActiveShaderProgramEXT;
#define glActiveShaderProgramEXT glflglActiveShaderProgramEXT
extern PFNGLVERTEXSTREAM1SATIPROC glflglVertexStream1sATI;
#define glVertexStream1sATI glflglVertexStream1sATI
extern PFNGLGETNPIXELMAPUIVARBPROC glflglGetnPixelMapuivARB;
#define glGetnPixelMapuivARB glflglGetnPixelMapuivARB
extern PFNGLMULTITEXENVIEXTPROC glflglMultiTexEnviEXT;
#define glMultiTexEnviEXT glflglMultiTexEnviEXT
extern PFNGLVERTEXATTRIBI2IEXTPROC glflglVertexAttribI2iEXT;
#define glVertexAttribI2iEXT glflglVertexAttribI2iEXT
extern PFNGLPROGRAMPARAMETER4FVNVPROC glflglProgramParameter4fvNV;
#define glProgramParameter4fvNV glflglProgramParameter4fvNV
extern PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC glflglNamedFramebufferSampleLocationsfvNV;
#define glNamedFramebufferSampleLocationsfvNV glflglNamedFramebufferSampleLocationsfvNV
extern PFNGLTEXCOORDP4UIVPROC glflglTexCoordP4uiv;
#define glTexCoordP4uiv glflglTexCoordP4uiv
extern PFNGLRECTXVOESPROC glflglRectxvOES;
#define glRectxvOES glflglRectxvOES
extern PFNGLGETVARIANTINTEGERVEXTPROC glflglGetVariantIntegervEXT;
#define glGetVariantIntegervEXT glflglGetVariantIntegervEXT
extern PFNGLDELETELISTSPROC glflglDeleteLists;
#define glDeleteLists glflglDeleteLists
extern PFNGLTEXGENDVPROC glflglTexGendv;
#define glTexGendv glflglTexGendv
extern PFNGLGETLIGHTXVPROC glflglGetLightxv;
#define glGetLightxv glflglGetLightxv
extern PFNGLVERTEXP2UIVPROC glflglVertexP2uiv;
#define glVertexP2uiv glflglVertexP2uiv
extern PFNGLGETPERFMONITORGROUPSAMDPROC glflglGetPerfMonitorGroupsAMD;
#define glGetPerfMonitorGroupsAMD glflglGetPerfMonitorGroupsAMD
extern PFNGLVERTEX4DVPROC glflglVertex4dv;
#define glVertex4dv glflglVertex4dv
extern PFNGLVERTEXATTRIBI2IVEXTPROC glflglVertexAttribI2ivEXT;
#define glVertexAttribI2ivEXT glflglVertexAttribI2ivEXT
extern PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC glflglReplacementCodeuiColor4fNormal3fVertex3fvSUN;
#define glReplacementCodeuiColor4fNormal3fVertex3fvSUN glflglReplacementCodeuiColor4fNormal3fVertex3fvSUN
extern PFNGLDELETESTATESNVPROC glflglDeleteStatesNV;
#define glDeleteStatesNV glflglDeleteStatesNV
extern PFNGLGETBUFFERPARAMETERI64VPROC glflglGetBufferParameteri64v;
#define glGetBufferParameteri64v glflglGetBufferParameteri64v
extern PFNGLPROGRAMUNIFORM4DVPROC glflglProgramUniform4dv;
#define glProgramUniform4dv glflglProgramUniform4dv
extern PFNGLBLENDEQUATIONIOESPROC glflglBlendEquationiOES;
#define glBlendEquationiOES glflglBlendEquationiOES
extern PFNGLEDGEFLAGPOINTEREXTPROC glflglEdgeFlagPointerEXT;
#define glEdgeFlagPointerEXT glflglEdgeFlagPointerEXT
extern PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC glflglVideoCaptureStreamParameterivNV;
#define glVideoCaptureStreamParameterivNV glflglVideoCaptureStreamParameterivNV
extern PFNGLVERTEXSTREAM4IATIPROC glflglVertexStream4iATI;
#define glVertexStream4iATI glflglVertexStream4iATI
extern PFNGLVDPAUFININVPROC glflglVDPAUFiniNV;
#define glVDPAUFiniNV glflglVDPAUFiniNV
extern PFNGLMAKEBUFFERNONRESIDENTNVPROC glflglMakeBufferNonResidentNV;
#define glMakeBufferNonResidentNV glflglMakeBufferNonResidentNV
extern PFNGLMULTITEXCOORD2FVARBPROC glflglMultiTexCoord2fvARB;
#define glMultiTexCoord2fvARB glflglMultiTexCoord2fvARB
extern PFNGLGETINTEGER64VAPPLEPROC glflglGetInteger64vAPPLE;
#define glGetInteger64vAPPLE glflglGetInteger64vAPPLE
extern PFNGLCLEARCOLORXPROC glflglClearColorx;
#define glClearColorx glflglClearColorx
extern PFNGLBINDFRAMEBUFFEROESPROC glflglBindFramebufferOES;
#define glBindFramebufferOES glflglBindFramebufferOES
extern PFNGLCOPYTEXSUBIMAGE3DEXTPROC glflglCopyTexSubImage3DEXT;
#define glCopyTexSubImage3DEXT glflglCopyTexSubImage3DEXT
extern PFNGLSECONDARYCOLORPOINTERLISTIBMPROC glflglSecondaryColorPointerListIBM;
#define glSecondaryColorPointerListIBM glflglSecondaryColorPointerListIBM
extern PFNGLMULTITEXCOORD1SARBPROC glflglMultiTexCoord1sARB;
#define glMultiTexCoord1sARB glflglMultiTexCoord1sARB
extern PFNGLGETDEBUGMESSAGELOGKHRPROC glflglGetDebugMessageLogKHR;
#define glGetDebugMessageLogKHR glflglGetDebugMessageLogKHR
extern PFNGLCONVOLUTIONPARAMETERFVPROC glflglConvolutionParameterfv;
#define glConvolutionParameterfv glflglConvolutionParameterfv
extern PFNGLMAKETEXTUREHANDLERESIDENTNVPROC glflglMakeTextureHandleResidentNV;
#define glMakeTextureHandleResidentNV glflglMakeTextureHandleResidentNV
extern PFNGLFOGXVPROC glflglFogxv;
#define glFogxv glflglFogxv
extern PFNGLMULTMATRIXXOESPROC glflglMultMatrixxOES;
#define glMultMatrixxOES glflglMultMatrixxOES
extern PFNGLTEXTURENORMALEXTPROC glflglTextureNormalEXT;
#define glTextureNormalEXT glflglTextureNormalEXT
extern PFNGLGETQUERYIVARBPROC glflglGetQueryivARB;
#define glGetQueryivARB glflglGetQueryivARB
extern PFNGLGETFLOATI_VNVPROC glflglGetFloati_vNV;
#define glGetFloati_vNV glflglGetFloati_vNV
extern PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC glflglCompressedMultiTexImage3DEXT;
#define glCompressedMultiTexImage3DEXT glflglCompressedMultiTexImage3DEXT
extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glflglNamedProgramLocalParameter4dEXT;
#define glNamedProgramLocalParameter4dEXT glflglNamedProgramLocalParameter4dEXT
extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glflglProgramUniformMatrix4x3fvEXT;
#define glProgramUniformMatrix4x3fvEXT glflglProgramUniformMatrix4x3fvEXT
extern PFNGLTEXCOORD1XVOESPROC glflglTexCoord1xvOES;
#define glTexCoord1xvOES glflglTexCoord1xvOES
extern PFNGLPROGRAMUNIFORM3DEXTPROC glflglProgramUniform3dEXT;
#define glProgramUniform3dEXT glflglProgramUniform3dEXT
extern PFNGLMULTITEXCOORD2HNVPROC glflglMultiTexCoord2hNV;
#define glMultiTexCoord2hNV glflglMultiTexCoord2hNV
extern PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC glflglTexStorage3DMultisampleOES;
#define glTexStorage3DMultisampleOES glflglTexStorage3DMultisampleOES
extern PFNGLGETCONVOLUTIONFILTEREXTPROC glflglGetConvolutionFilterEXT;
#define glGetConvolutionFilterEXT glflglGetConvolutionFilterEXT
extern PFNGLVERTEXATTRIB2HNVPROC glflglVertexAttrib2hNV;
#define glVertexAttrib2hNV glflglVertexAttrib2hNV
extern PFNGLCURRENTPALETTEMATRIXARBPROC glflglCurrentPaletteMatrixARB;
#define glCurrentPaletteMatrixARB glflglCurrentPaletteMatrixARB
extern PFNGLFOGCOORDPOINTEREXTPROC glflglFogCoordPointerEXT;
#define glFogCoordPointerEXT glflglFogCoordPointerEXT
extern PFNGLCREATERENDERBUFFERSPROC glflglCreateRenderbuffers;
#define glCreateRenderbuffers glflglCreateRenderbuffers
extern PFNGLVERTEXATTRIB4NUSVPROC glflglVertexAttrib4Nusv;
#define glVertexAttrib4Nusv glflglVertexAttrib4Nusv
extern PFNGLGETBUFFERPARAMETERUI64VNVPROC glflglGetBufferParameterui64vNV;
#define glGetBufferParameterui64vNV glflglGetBufferParameterui64vNV
extern PFNGLDEPTHFUNCPROC glflglDepthFunc;
#define glDepthFunc glflglDepthFunc
extern PFNGLVERTEXATTRIBI4BVEXTPROC glflglVertexAttribI4bvEXT;
#define glVertexAttribI4bvEXT glflglVertexAttribI4bvEXT
extern PFNGLGETTEXGENFVOESPROC glflglGetTexGenfvOES;
#define glGetTexGenfvOES glflglGetTexGenfvOES
extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glflglEnableClientStateIndexedEXT;
#define glEnableClientStateIndexedEXT glflglEnableClientStateIndexedEXT
extern PFNGLTRANSLATEXOESPROC glflglTranslatexOES;
#define glTranslatexOES glflglTranslatexOES
extern PFNGLBLENDFUNCIPROC glflglBlendFunci;
#define glBlendFunci glflglBlendFunci
extern PFNGLMATRIXLOADIDENTITYEXTPROC glflglMatrixLoadIdentityEXT;
#define glMatrixLoadIdentityEXT glflglMatrixLoadIdentityEXT
extern PFNGLTEXTURECOLORMASKSGISPROC glflglTextureColorMaskSGIS;
#define glTextureColorMaskSGIS glflglTextureColorMaskSGIS
extern PFNGLCREATESHADERPROGRAMEXTPROC glflglCreateShaderProgramEXT;
#define glCreateShaderProgramEXT glflglCreateShaderProgramEXT
extern PFNGLBUFFERSTORAGEPROC glflglBufferStorage;
#define glBufferStorage glflglBufferStorage
extern PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC glflglMakeNamedBufferNonResidentNV;
#define glMakeNamedBufferNonResidentNV glflglMakeNamedBufferNonResidentNV
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glflglRenderbufferStorageMultisampleEXT;
#define glRenderbufferStorageMultisampleEXT glflglRenderbufferStorageMultisampleEXT
extern PFNGLGETFLOATI_VPROC glflglGetFloati_v;
#define glGetFloati_v glflglGetFloati_v
extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glflglNamedProgramLocalParameterI4iEXT;
#define glNamedProgramLocalParameterI4iEXT glflglNamedProgramLocalParameterI4iEXT
extern PFNGLGETUNIFORMLOCATIONPROC glflglGetUniformLocation;
#define glGetUniformLocation glflglGetUniformLocation
extern PFNGLVERTEXSTREAM1SVATIPROC glflglVertexStream1svATI;
#define glVertexStream1svATI glflglVertexStream1svATI
extern PFNGLVERTEXSTREAM3FATIPROC glflglVertexStream3fATI;
#define glVertexStream3fATI glflglVertexStream3fATI
extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glflglNamedFramebufferDrawBuffers;
#define glNamedFramebufferDrawBuffers glflglNamedFramebufferDrawBuffers
extern PFNGLUNIFORM2UI64VNVPROC glflglUniform2ui64vNV;
#define glUniform2ui64vNV glflglUniform2ui64vNV
extern PFNGLTEXCOORDPOINTERVINTELPROC glflglTexCoordPointervINTEL;
#define glTexCoordPointervINTEL glflglTexCoordPointervINTEL
extern PFNGLUNIFORM4FVPROC glflglUniform4fv;
#define glUniform4fv glflglUniform4fv
extern PFNGLNORMALPOINTEREXTPROC glflglNormalPointerEXT;
#define glNormalPointerEXT glflglNormalPointerEXT
extern PFNGLVERTEXATTRIB4HNVPROC glflglVertexAttrib4hNV;
#define glVertexAttrib4hNV glflglVertexAttrib4hNV
extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC glflglDrawArraysInstancedBaseInstanceEXT;
#define glDrawArraysInstancedBaseInstanceEXT glflglDrawArraysInstancedBaseInstanceEXT
extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glflglNamedFramebufferTextureFaceEXT;
#define glNamedFramebufferTextureFaceEXT glflglNamedFramebufferTextureFaceEXT
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC glflglCompressedTextureSubImage3D;
#define glCompressedTextureSubImage3D glflglCompressedTextureSubImage3D
extern PFNGLBINDSAMPLERSPROC glflglBindSamplers;
#define glBindSamplers glflglBindSamplers
extern PFNGLASYNCMARKERSGIXPROC glflglAsyncMarkerSGIX;
#define glAsyncMarkerSGIX glflglAsyncMarkerSGIX
extern PFNGLTEXTURESTORAGESPARSEAMDPROC glflglTextureStorageSparseAMD;
#define glTextureStorageSparseAMD glflglTextureStorageSparseAMD
extern PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC glflglGetConvolutionParameterivEXT;
#define glGetConvolutionParameterivEXT glflglGetConvolutionParameterivEXT
extern PFNGLENDPERFQUERYINTELPROC glflglEndPerfQueryINTEL;
#define glEndPerfQueryINTEL glflglEndPerfQueryINTEL
extern PFNGLFRAGMENTLIGHTMODELISGIXPROC glflglFragmentLightModeliSGIX;
#define glFragmentLightModeliSGIX glflglFragmentLightModeliSGIX
extern PFNGLPRIORITIZETEXTURESEXTPROC glflglPrioritizeTexturesEXT;
#define glPrioritizeTexturesEXT glflglPrioritizeTexturesEXT
extern PFNGLENDCONDITIONALRENDERPROC glflglEndConditionalRender;
#define glEndConditionalRender glflglEndConditionalRender
extern PFNGLENABLECLIENTSTATEPROC glflglEnableClientState;
#define glEnableClientState glflglEnableClientState
extern PFNGLRESETHISTOGRAMPROC glflglResetHistogram;
#define glResetHistogram glflglResetHistogram
extern PFNGLGETOCCLUSIONQUERYIVNVPROC glflglGetOcclusionQueryivNV;
#define glGetOcclusionQueryivNV glflglGetOcclusionQueryivNV
extern PFNGLCLIPPLANEXIMGPROC glflglClipPlanexIMG;
#define glClipPlanexIMG glflglClipPlanexIMG
extern PFNGLUNIFORM1UIEXTPROC glflglUniform1uiEXT;
#define glUniform1uiEXT glflglUniform1uiEXT
extern PFNGLMULTITEXCOORD2SVPROC glflglMultiTexCoord2sv;
#define glMultiTexCoord2sv glflglMultiTexCoord2sv
extern PFNGLTEXSUBIMAGE2DEXTPROC glflglTexSubImage2DEXT;
#define glTexSubImage2DEXT glflglTexSubImage2DEXT
extern PFNGLPROGRAMUNIFORM2UIVPROC glflglProgramUniform2uiv;
#define glProgramUniform2uiv glflglProgramUniform2uiv
extern PFNGLMULTITEXCOORD2IARBPROC glflglMultiTexCoord2iARB;
#define glMultiTexCoord2iARB glflglMultiTexCoord2iARB
extern PFNGLGETQUERYOBJECTUIVPROC glflglGetQueryObjectuiv;
#define glGetQueryObjectuiv glflglGetQueryObjectuiv
extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glflglGenerateMultiTexMipmapEXT;
#define glGenerateMultiTexMipmapEXT glflglGenerateMultiTexMipmapEXT
extern PFNGLVERTEXATTRIB4IVPROC glflglVertexAttrib4iv;
#define glVertexAttrib4iv glflglVertexAttrib4iv
extern PFNGLWINDOWPOS3DVMESAPROC glflglWindowPos3dvMESA;
#define glWindowPos3dvMESA glflglWindowPos3dvMESA
extern PFNGLLABELOBJECTEXTPROC glflglLabelObjectEXT;
#define glLabelObjectEXT glflglLabelObjectEXT
extern PFNGLPROGRAMUNIFORM1UIVPROC glflglProgramUniform1uiv;
#define glProgramUniform1uiv glflglProgramUniform1uiv
extern PFNGLFRAMEBUFFERTEXTUREPROC glflglFramebufferTexture;
#define glFramebufferTexture glflglFramebufferTexture
extern PFNGLMULTITEXENVFEXTPROC glflglMultiTexEnvfEXT;
#define glMultiTexEnvfEXT glflglMultiTexEnvfEXT
extern PFNGLGETTEXGENDVPROC glflglGetTexGendv;
#define glGetTexGendv glflglGetTexGendv
extern PFNGLVERTEX4XOESPROC glflglVertex4xOES;
#define glVertex4xOES glflglVertex4xOES
extern PFNGLVERTEXATTRIBI2UIVEXTPROC glflglVertexAttribI2uivEXT;
#define glVertexAttribI2uivEXT glflglVertexAttribI2uivEXT
extern PFNGLGETNCONVOLUTIONFILTERARBPROC glflglGetnConvolutionFilterARB;
#define glGetnConvolutionFilterARB glflglGetnConvolutionFilterARB
extern PFNGLPOINTSIZEXPROC glflglPointSizex;
#define glPointSizex glflglPointSizex
extern PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC glflglGetPixelTransformParameterfvEXT;
#define glGetPixelTransformParameterfvEXT glflglGetPixelTransformParameterfvEXT
extern PFNGLINDEXXVOESPROC glflglIndexxvOES;
#define glIndexxvOES glflglIndexxvOES
extern PFNGLDEPTHMASKPROC glflglDepthMask;
#define glDepthMask glflglDepthMask
extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glflglProgramUniformMatrix2x4fv;
#define glProgramUniformMatrix2x4fv glflglProgramUniformMatrix2x4fv
extern PFNGLAREPROGRAMSRESIDENTNVPROC glflglAreProgramsResidentNV;
#define glAreProgramsResidentNV glflglAreProgramsResidentNV
extern PFNGLENDTILINGQCOMPROC glflglEndTilingQCOM;
#define glEndTilingQCOM glflglEndTilingQCOM
extern PFNGLCOLORTABLEPROC glflglColorTable;
#define glColorTable glflglColorTable
extern PFNGLSECONDARYCOLOR3BVEXTPROC glflglSecondaryColor3bvEXT;
#define glSecondaryColor3bvEXT glflglSecondaryColor3bvEXT
extern PFNGLVERTEXSTREAM1DVATIPROC glflglVertexStream1dvATI;
#define glVertexStream1dvATI glflglVertexStream1dvATI
extern PFNGLGETMULTITEXENVFVEXTPROC glflglGetMultiTexEnvfvEXT;
#define glGetMultiTexEnvfvEXT glflglGetMultiTexEnvfvEXT
extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glflglFlushMappedBufferRangeAPPLE;
#define glFlushMappedBufferRangeAPPLE glflglFlushMappedBufferRangeAPPLE
extern PFNGLVERTEXATTRIBS1DVNVPROC glflglVertexAttribs1dvNV;
#define glVertexAttribs1dvNV glflglVertexAttribs1dvNV
extern PFNGLVERTEXSTREAM2SATIPROC glflglVertexStream2sATI;
#define glVertexStream2sATI glflglVertexStream2sATI
extern PFNGLGETNSEPARABLEFILTERARBPROC glflglGetnSeparableFilterARB;
#define glGetnSeparableFilterARB glflglGetnSeparableFilterARB
extern PFNGLPROGRAMUNIFORM2DVPROC glflglProgramUniform2dv;
#define glProgramUniform2dv glflglProgramUniform2dv
extern PFNGLBINDVERTEXSHADEREXTPROC glflglBindVertexShaderEXT;
#define glBindVertexShaderEXT glflglBindVertexShaderEXT
extern PFNGLACTIVESTENCILFACEEXTPROC glflglActiveStencilFaceEXT;
#define glActiveStencilFaceEXT glflglActiveStencilFaceEXT
extern PFNGLNORMAL3FVERTEX3FSUNPROC glflglNormal3fVertex3fSUN;
#define glNormal3fVertex3fSUN glflglNormal3fVertex3fSUN
extern PFNGLTEXBUFFERRANGEOESPROC glflglTexBufferRangeOES;
#define glTexBufferRangeOES glflglTexBufferRangeOES
extern PFNGLPROGRAMUNIFORM4DEXTPROC glflglProgramUniform4dEXT;
#define glProgramUniform4dEXT glflglProgramUniform4dEXT
extern PFNGLPOINTSIZEXOESPROC glflglPointSizexOES;
#define glPointSizexOES glflglPointSizexOES
extern PFNGLRASTERPOS2SVPROC glflglRasterPos2sv;
#define glRasterPos2sv glflglRasterPos2sv
extern PFNGLUNIFORMMATRIX2FVPROC glflglUniformMatrix2fv;
#define glUniformMatrix2fv glflglUniformMatrix2fv
extern PFNGLTEXCOORD1SVPROC glflglTexCoord1sv;
#define glTexCoord1sv glflglTexCoord1sv
extern PFNGLBLENDPARAMETERINVPROC glflglBlendParameteriNV;
#define glBlendParameteriNV glflglBlendParameteriNV
extern PFNGLPOINTPARAMETERXOESPROC glflglPointParameterxOES;
#define glPointParameterxOES glflglPointParameterxOES
extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glflglNamedProgramLocalParameter4dvEXT;
#define glNamedProgramLocalParameter4dvEXT glflglNamedProgramLocalParameter4dvEXT
extern PFNGLMINSAMPLESHADINGOESPROC glflglMinSampleShadingOES;
#define glMinSampleShadingOES glflglMinSampleShadingOES
extern PFNGLALPHAFUNCXPROC glflglAlphaFuncx;
#define glAlphaFuncx glflglAlphaFuncx
extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glflglGetTextureParameterfvEXT;
#define glGetTextureParameterfvEXT glflglGetTextureParameterfvEXT
extern PFNGLGETPATHMETRICSNVPROC glflglGetPathMetricsNV;
#define glGetPathMetricsNV glflglGetPathMetricsNV
extern PFNGLGETPROGRAMIVPROC glflglGetProgramiv;
#define glGetProgramiv glflglGetProgramiv
extern PFNGLNEWLISTPROC glflglNewList;
#define glNewList glflglNewList
extern PFNGLMATRIXLOAD3X3FNVPROC glflglMatrixLoad3x3fNV;
#define glMatrixLoad3x3fNV glflglMatrixLoad3x3fNV
extern PFNGLMULTITEXCOORD2FARBPROC glflglMultiTexCoord2fARB;
#define glMultiTexCoord2fARB glflglMultiTexCoord2fARB
extern PFNGLWEIGHTDVARBPROC glflglWeightdvARB;
#define glWeightdvARB glflglWeightdvARB
extern PFNGLISTRANSFORMFEEDBACKNVPROC glflglIsTransformFeedbackNV;
#define glIsTransformFeedbackNV glflglIsTransformFeedbackNV
extern PFNGLVERTEXATTRIBDIVISORARBPROC glflglVertexAttribDivisorARB;
#define glVertexAttribDivisorARB glflglVertexAttribDivisorARB
extern PFNGLSECONDARYCOLORP3UIVPROC glflglSecondaryColorP3uiv;
#define glSecondaryColorP3uiv glflglSecondaryColorP3uiv
extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glflglGetnCompressedTexImageARB;
#define glGetnCompressedTexImageARB glflglGetnCompressedTexImageARB
extern PFNGLGETINTEGERVPROC glflglGetIntegerv;
#define glGetIntegerv glflglGetIntegerv
extern PFNGLMATRIXLOADDEXTPROC glflglMatrixLoaddEXT;
#define glMatrixLoaddEXT glflglMatrixLoaddEXT
extern PFNGLGETPATHLENGTHNVPROC glflglGetPathLengthNV;
#define glGetPathLengthNV glflglGetPathLengthNV
extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glflglProgramUniformMatrix3dv;
#define glProgramUniformMatrix3dv glflglProgramUniformMatrix3dv
extern PFNGLUNIFORM4I64NVPROC glflglUniform4i64NV;
#define glUniform4i64NV glflglUniform4i64NV
extern PFNGLPROGRAMUNIFORM4FVPROC glflglProgramUniform4fv;
#define glProgramUniform4fv glflglProgramUniform4fv
extern PFNGLISQUERYPROC glflglIsQuery;
#define glIsQuery glflglIsQuery
extern PFNGLMAPGRID2XOESPROC glflglMapGrid2xOES;
#define glMapGrid2xOES glflglMapGrid2xOES
extern PFNGLTEXIMAGE2DPROC glflglTexImage2D;
#define glTexImage2D glflglTexImage2D
extern PFNGLWINDOWPOS2FVARBPROC glflglWindowPos2fvARB;
#define glWindowPos2fvARB glflglWindowPos2fvARB
extern PFNGLENABLEINDEXEDEXTPROC glflglEnableIndexedEXT;
#define glEnableIndexedEXT glflglEnableIndexedEXT
extern PFNGLTEXCOORD1BVOESPROC glflglTexCoord1bvOES;
#define glTexCoord1bvOES glflglTexCoord1bvOES
extern PFNGLDRAWPIXELSPROC glflglDrawPixels;
#define glDrawPixels glflglDrawPixels
extern PFNGLMULTMATRIXDPROC glflglMultMatrixd;
#define glMultMatrixd glflglMultMatrixd
extern PFNGLMULTMATRIXFPROC glflglMultMatrixf;
#define glMultMatrixf glflglMultMatrixf
extern PFNGLREPLACEMENTCODEPOINTERSUNPROC glflglReplacementCodePointerSUN;
#define glReplacementCodePointerSUN glflglReplacementCodePointerSUN
extern PFNGLMULTITEXCOORD1FARBPROC glflglMultiTexCoord1fARB;
#define glMultiTexCoord1fARB glflglMultiTexCoord1fARB
extern PFNGLVERTEXATTRIB4NUBVPROC glflglVertexAttrib4Nubv;
#define glVertexAttrib4Nubv glflglVertexAttrib4Nubv
extern PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC glflglVertexArrayVertexAttribIOffsetEXT;
#define glVertexArrayVertexAttribIOffsetEXT glflglVertexArrayVertexAttribIOffsetEXT
extern PFNGLCOMPILESHADERARBPROC glflglCompileShaderARB;
#define glCompileShaderARB glflglCompileShaderARB
extern PFNGLWINDOWPOS3DMESAPROC glflglWindowPos3dMESA;
#define glWindowPos3dMESA glflglWindowPos3dMESA
extern PFNGLNORMALSTREAM3FVATIPROC glflglNormalStream3fvATI;
#define glNormalStream3fvATI glflglNormalStream3fvATI
extern PFNGLCOLOR4USVPROC glflglColor4usv;
#define glColor4usv glflglColor4usv
extern PFNGLPOLYGONSTIPPLEPROC glflglPolygonStipple;
#define glPolygonStipple glflglPolygonStipple
extern PFNGLINTERLEAVEDARRAYSPROC glflglInterleavedArrays;
#define glInterleavedArrays glflglInterleavedArrays
extern PFNGLTEXTURERENDERBUFFEREXTPROC glflglTextureRenderbufferEXT;
#define glTextureRenderbufferEXT glflglTextureRenderbufferEXT
extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glflglGetSubroutineUniformLocation;
#define glGetSubroutineUniformLocation glflglGetSubroutineUniformLocation
extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glflglGetFramebufferParameteriv;
#define glGetFramebufferParameteriv glflglGetFramebufferParameteriv
extern PFNGLPIXELMAPUSVPROC glflglPixelMapusv;
#define glPixelMapusv glflglPixelMapusv
extern PFNGLGETSAMPLERPARAMETERIVPROC glflglGetSamplerParameteriv;
#define glGetSamplerParameteriv glflglGetSamplerParameteriv
extern PFNGLVERTEXSTREAM2FVATIPROC glflglVertexStream2fvATI;
#define glVertexStream2fvATI glflglVertexStream2fvATI
extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glflglProgramUniformMatrix3dvEXT;
#define glProgramUniformMatrix3dvEXT glflglProgramUniformMatrix3dvEXT
extern PFNGLSEPARABLEFILTER2DPROC glflglSeparableFilter2D;
#define glSeparableFilter2D glflglSeparableFilter2D
extern PFNGLVERTEXATTRIBI1UIVPROC glflglVertexAttribI1uiv;
#define glVertexAttribI1uiv glflglVertexAttribI1uiv
extern PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC glflglGetProgramPipelineInfoLogEXT;
#define glGetProgramPipelineInfoLogEXT glflglGetProgramPipelineInfoLogEXT
extern PFNGLREPLACEMENTCODEUIVSUNPROC glflglReplacementCodeuivSUN;
#define glReplacementCodeuivSUN glflglReplacementCodeuivSUN
extern PFNGLVERTEXATTRIBI3UIEXTPROC glflglVertexAttribI3uiEXT;
#define glVertexAttribI3uiEXT glflglVertexAttribI3uiEXT
extern PFNGLCOLOR3FVPROC glflglColor3fv;
#define glColor3fv glflglColor3fv
extern PFNGLVERTEXSTREAM3DATIPROC glflglVertexStream3dATI;
#define glVertexStream3dATI glflglVertexStream3dATI
extern PFNGLVERTEXATTRIBL4DVEXTPROC glflglVertexAttribL4dvEXT;
#define glVertexAttribL4dvEXT glflglVertexAttribL4dvEXT
extern PFNGLGETACTIVEUNIFORMPROC glflglGetActiveUniform;
#define glGetActiveUniform glflglGetActiveUniform
extern PFNGLMAKENAMEDBUFFERRESIDENTNVPROC glflglMakeNamedBufferResidentNV;
#define glMakeNamedBufferResidentNV glflglMakeNamedBufferResidentNV
extern PFNGLPATHGLYPHINDEXRANGENVPROC glflglPathGlyphIndexRangeNV;
#define glPathGlyphIndexRangeNV glflglPathGlyphIndexRangeNV
extern PFNGLENABLEVERTEXATTRIBAPPLEPROC glflglEnableVertexAttribAPPLE;
#define glEnableVertexAttribAPPLE glflglEnableVertexAttribAPPLE
extern PFNGLPROGRAMENVPARAMETERI4IVNVPROC glflglProgramEnvParameterI4ivNV;
#define glProgramEnvParameterI4ivNV glflglProgramEnvParameterI4ivNV
extern PFNGLMULTITEXPARAMETERFEXTPROC glflglMultiTexParameterfEXT;
#define glMultiTexParameterfEXT glflglMultiTexParameterfEXT
extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glflglNamedFramebufferTextureLayer;
#define glNamedFramebufferTextureLayer glflglNamedFramebufferTextureLayer
extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glflglGetVertexArrayIntegervEXT;
#define glGetVertexArrayIntegervEXT glflglGetVertexArrayIntegervEXT
extern PFNGLISENABLEDINVPROC glflglIsEnablediNV;
#define glIsEnablediNV glflglIsEnablediNV
extern PFNGLVERTEXATTRIB3DARBPROC glflglVertexAttrib3dARB;
#define glVertexAttrib3dARB glflglVertexAttrib3dARB
extern PFNGLVDPAUISSURFACENVPROC glflglVDPAUIsSurfaceNV;
#define glVDPAUIsSurfaceNV glflglVDPAUIsSurfaceNV
extern PFNGLVERTEXATTRIBL3DPROC glflglVertexAttribL3d;
#define glVertexAttribL3d glflglVertexAttribL3d
extern PFNGLVERTEXATTRIBI1IVEXTPROC glflglVertexAttribI1ivEXT;
#define glVertexAttribI1ivEXT glflglVertexAttribI1ivEXT
extern PFNGLISASYNCMARKERSGIXPROC glflglIsAsyncMarkerSGIX;
#define glIsAsyncMarkerSGIX glflglIsAsyncMarkerSGIX
extern PFNGLFRAGMENTMATERIALFVSGIXPROC glflglFragmentMaterialfvSGIX;
#define glFragmentMaterialfvSGIX glflglFragmentMaterialfvSGIX
extern PFNGLCREATEPERFQUERYINTELPROC glflglCreatePerfQueryINTEL;
#define glCreatePerfQueryINTEL glflglCreatePerfQueryINTEL
extern PFNGLISCOMMANDLISTNVPROC glflglIsCommandListNV;
#define glIsCommandListNV glflglIsCommandListNV
extern PFNGLCONVOLUTIONPARAMETERIEXTPROC glflglConvolutionParameteriEXT;
#define glConvolutionParameteriEXT glflglConvolutionParameteriEXT
extern PFNGLTEXPARAMETERIUIVEXTPROC glflglTexParameterIuivEXT;
#define glTexParameterIuivEXT glflglTexParameterIuivEXT
extern PFNGLMINSAMPLESHADINGPROC glflglMinSampleShading;
#define glMinSampleShading glflglMinSampleShading
extern PFNGLUNIFORMMATRIX2X3FVNVPROC glflglUniformMatrix2x3fvNV;
#define glUniformMatrix2x3fvNV glflglUniformMatrix2x3fvNV
extern PFNGLVERTEX2FVPROC glflglVertex2fv;
#define glVertex2fv glflglVertex2fv
extern PFNGLVERTEXATTRIBL3DEXTPROC glflglVertexAttribL3dEXT;
#define glVertexAttribL3dEXT glflglVertexAttribL3dEXT
extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glflglFramebufferRenderbuffer;
#define glFramebufferRenderbuffer glflglFramebufferRenderbuffer
extern PFNGLGETUNIFORMLOCATIONARBPROC glflglGetUniformLocationARB;
#define glGetUniformLocationARB glflglGetUniformLocationARB
extern PFNGLPATHPARAMETERFVNVPROC glflglPathParameterfvNV;
#define glPathParameterfvNV glflglPathParameterfvNV
extern PFNGLVERTEXATTRIB3SNVPROC glflglVertexAttrib3sNV;
#define glVertexAttrib3sNV glflglVertexAttrib3sNV
extern PFNGLGETDOUBLEI_VPROC glflglGetDoublei_v;
#define glGetDoublei_v glflglGetDoublei_v
extern PFNGLVERTEXATTRIB1SVPROC glflglVertexAttrib1sv;
#define glVertexAttrib1sv glflglVertexAttrib1sv
extern PFNGLBINDSAMPLERPROC glflglBindSampler;
#define glBindSampler glflglBindSampler
extern PFNGLLINEWIDTHPROC glflglLineWidth;
#define glLineWidth glflglLineWidth
extern PFNGLVERTEXARRAYRANGEAPPLEPROC glflglVertexArrayRangeAPPLE;
#define glVertexArrayRangeAPPLE glflglVertexArrayRangeAPPLE
extern PFNGLBINDBUFFEROFFSETEXTPROC glflglBindBufferOffsetEXT;
#define glBindBufferOffsetEXT glflglBindBufferOffsetEXT
extern PFNGLWEIGHTFVARBPROC glflglWeightfvARB;
#define glWeightfvARB glflglWeightfvARB
extern PFNGLGETINTEGERI_VPROC glflglGetIntegeri_v;
#define glGetIntegeri_v glflglGetIntegeri_v
extern PFNGLDISABLEIOESPROC glflglDisableiOES;
#define glDisableiOES glflglDisableiOES
extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glflglGetTransformFeedbackVarying;
#define glGetTransformFeedbackVarying glflglGetTransformFeedbackVarying
extern PFNGLVDPAUMAPSURFACESNVPROC glflglVDPAUMapSurfacesNV;
#define glVDPAUMapSurfacesNV glflglVDPAUMapSurfacesNV
extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glflglProgramLocalParameter4fvARB;
#define glProgramLocalParameter4fvARB glflglProgramLocalParameter4fvARB
extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glflglGetTransformFeedbackVaryingNV;
#define glGetTransformFeedbackVaryingNV glflglGetTransformFeedbackVaryingNV
extern PFNGLDELETENAMESAMDPROC glflglDeleteNamesAMD;
#define glDeleteNamesAMD glflglDeleteNamesAMD
extern PFNGLDEPTHRANGEXPROC glflglDepthRangex;
#define glDepthRangex glflglDepthRangex
extern PFNGLFOGIVPROC glflglFogiv;
#define glFogiv glflglFogiv
extern PFNGLGETTEXTUREHANDLENVPROC glflglGetTextureHandleNV;
#define glGetTextureHandleNV glflglGetTextureHandleNV
extern PFNGLLIGHTMODELIVPROC glflglLightModeliv;
#define glLightModeliv glflglLightModeliv
extern PFNGLDEPTHRANGEFPROC glflglDepthRangef;
#define glDepthRangef glflglDepthRangef
extern PFNGLGETFRAGMENTMATERIALIVSGIXPROC glflglGetFragmentMaterialivSGIX;
#define glGetFragmentMaterialivSGIX glflglGetFragmentMaterialivSGIX
extern PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC glflglVideoCaptureStreamParameterfvNV;
#define glVideoCaptureStreamParameterfvNV glflglVideoCaptureStreamParameterfvNV
extern PFNGLDELETEPROGRAMSARBPROC glflglDeleteProgramsARB;
#define glDeleteProgramsARB glflglDeleteProgramsARB
extern PFNGLWINDOWPOS3FVARBPROC glflglWindowPos3fvARB;
#define glWindowPos3fvARB glflglWindowPos3fvARB
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC glflglCompressedTextureSubImage1DEXT;
#define glCompressedTextureSubImage1DEXT glflglCompressedTextureSubImage1DEXT
extern PFNGLGETTEXBUMPPARAMETERFVATIPROC glflglGetTexBumpParameterfvATI;
#define glGetTexBumpParameterfvATI glflglGetTexBumpParameterfvATI
extern PFNGLENABLEIPROC glflglEnablei;
#define glEnablei glflglEnablei
extern PFNGLFRAGMENTCOLORMATERIALSGIXPROC glflglFragmentColorMaterialSGIX;
#define glFragmentColorMaterialSGIX glflglFragmentColorMaterialSGIX
extern PFNGLREADBUFFERINDEXEDEXTPROC glflglReadBufferIndexedEXT;
#define glReadBufferIndexedEXT glflglReadBufferIndexedEXT
extern PFNGLBINDPROGRAMARBPROC glflglBindProgramARB;
#define glBindProgramARB glflglBindProgramARB
extern PFNGLEVALCOORD1FVPROC glflglEvalCoord1fv;
#define glEvalCoord1fv glflglEvalCoord1fv
extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glflglProgramUniformMatrix2dv;
#define glProgramUniformMatrix2dv glflglProgramUniformMatrix2dv
extern PFNGLMULTITEXCOORD2HVNVPROC glflglMultiTexCoord2hvNV;
#define glMultiTexCoord2hvNV glflglMultiTexCoord2hvNV
extern PFNGLSAMPLECOVERAGEARBPROC glflglSampleCoverageARB;
#define glSampleCoverageARB glflglSampleCoverageARB
extern PFNGLPIXELDATARANGENVPROC glflglPixelDataRangeNV;
#define glPixelDataRangeNV glflglPixelDataRangeNV
extern PFNGLVERTEXSTREAM3SVATIPROC glflglVertexStream3svATI;
#define glVertexStream3svATI glflglVertexStream3svATI
extern PFNGLGETBUFFERPOINTERVOESPROC glflglGetBufferPointervOES;
#define glGetBufferPointervOES glflglGetBufferPointervOES
extern PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glflglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN glflglReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN
extern PFNGLTEXCOORD3HVNVPROC glflglTexCoord3hvNV;
#define glTexCoord3hvNV glflglTexCoord3hvNV
extern PFNGLSAMPLEMASKIPROC glflglSampleMaski;
#define glSampleMaski glflglSampleMaski
extern PFNGLINDEXFUNCEXTPROC glflglIndexFuncEXT;
#define glIndexFuncEXT glflglIndexFuncEXT
extern PFNGLLINEWIDTHXPROC glflglLineWidthx;
#define glLineWidthx glflglLineWidthx
extern PFNGLPOINTPARAMETERINVPROC glflglPointParameteriNV;
#define glPointParameteriNV glflglPointParameteriNV
extern PFNGLUNIFORMMATRIX3X2FVPROC glflglUniformMatrix3x2fv;
#define glUniformMatrix3x2fv glflglUniformMatrix3x2fv
extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glflglGetFramebufferParameterivEXT;
#define glGetFramebufferParameterivEXT glflglGetFramebufferParameterivEXT
extern PFNGLGETTEXGENIVOESPROC glflglGetTexGenivOES;
#define glGetTexGenivOES glflglGetTexGenivOES
extern PFNGLGETINTERNALFORMATIVPROC glflglGetInternalformativ;
#define glGetInternalformativ glflglGetInternalformativ
extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glflglNamedFramebufferTexture3DEXT;
#define glNamedFramebufferTexture3DEXT glflglNamedFramebufferTexture3DEXT
extern PFNGLVERTEXATTRIB2DVPROC glflglVertexAttrib2dv;
#define glVertexAttrib2dv glflglVertexAttrib2dv
extern PFNGLUNIFORMMATRIX3X4FVPROC glflglUniformMatrix3x4fv;
#define glUniformMatrix3x4fv glflglUniformMatrix3x4fv
extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glflglProgramUniformMatrix3fvEXT;
#define glProgramUniformMatrix3fvEXT glflglProgramUniformMatrix3fvEXT
extern PFNGLENABLEVERTEXARRAYEXTPROC glflglEnableVertexArrayEXT;
#define glEnableVertexArrayEXT glflglEnableVertexArrayEXT
extern PFNGLCOLORTABLEPARAMETERFVSGIPROC glflglColorTableParameterfvSGI;
#define glColorTableParameterfvSGI glflglColorTableParameterfvSGI
extern PFNGLEDGEFLAGPROC glflglEdgeFlag;
#define glEdgeFlag glflglEdgeFlag
extern PFNGLFOGCOORDFPROC glflglFogCoordf;
#define glFogCoordf glflglFogCoordf
extern PFNGLVERTEX3DPROC glflglVertex3d;
#define glVertex3d glflglVertex3d
extern PFNGLVERTEX3FPROC glflglVertex3f;
#define glVertex3f glflglVertex3f
extern PFNGLVERTEX3IPROC glflglVertex3i;
#define glVertex3i glflglVertex3i
extern PFNGLGETCOLORTABLEPROC glflglGetColorTable;
#define glGetColorTable glflglGetColorTable
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC glflglRenderbufferStorageMultisampleNV;
#define glRenderbufferStorageMultisampleNV glflglRenderbufferStorageMultisampleNV
extern PFNGLMULTITEXCOORD4IVARBPROC glflglMultiTexCoord4ivARB;
#define glMultiTexCoord4ivARB glflglMultiTexCoord4ivARB
extern PFNGLVERTEX3SPROC glflglVertex3s;
#define glVertex3s glflglVertex3s
extern PFNGLTEXCOORDP2UIPROC glflglTexCoordP2ui;
#define glTexCoordP2ui glflglTexCoordP2ui
extern PFNGLPROGRAMUNIFORM2FVEXTPROC glflglProgramUniform2fvEXT;
#define glProgramUniform2fvEXT glflglProgramUniform2fvEXT
extern PFNGLCOLORMASKIPROC glflglColorMaski;
#define glColorMaski glflglColorMaski
extern PFNGLPRIMITIVERESTARTINDEXNVPROC glflglPrimitiveRestartIndexNV;
#define glPrimitiveRestartIndexNV glflglPrimitiveRestartIndexNV
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC glflglRenderbufferStorageMultisampleANGLE;
#define glRenderbufferStorageMultisampleANGLE glflglRenderbufferStorageMultisampleANGLE
extern PFNGLFRAGMENTLIGHTFVSGIXPROC glflglFragmentLightfvSGIX;
#define glFragmentLightfvSGIX glflglFragmentLightfvSGIX
extern PFNGLSTARTTILINGQCOMPROC glflglStartTilingQCOM;
#define glStartTilingQCOM glflglStartTilingQCOM
extern PFNGLTEXCOORDPOINTERLISTIBMPROC glflglTexCoordPointerListIBM;
#define glTexCoordPointerListIBM glflglTexCoordPointerListIBM
extern PFNGLRECTXOESPROC glflglRectxOES;
#define glRectxOES glflglRectxOES
extern PFNGLCOPYNAMEDBUFFERSUBDATAPROC glflglCopyNamedBufferSubData;
#define glCopyNamedBufferSubData glflglCopyNamedBufferSubData
extern PFNGLGENPROGRAMSNVPROC glflglGenProgramsNV;
#define glGenProgramsNV glflglGenProgramsNV
extern PFNGLFRAGMENTLIGHTFSGIXPROC glflglFragmentLightfSGIX;
#define glFragmentLightfSGIX glflglFragmentLightfSGIX
extern PFNGLTEXSTORAGE3DPROC glflglTexStorage3D;
#define glTexStorage3D glflglTexStorage3D
extern PFNGLTEXTUREPARAMETERIVPROC glflglTextureParameteriv;
#define glTextureParameteriv glflglTextureParameteriv
extern PFNGLNAMEDBUFFERDATAEXTPROC glflglNamedBufferDataEXT;
#define glNamedBufferDataEXT glflglNamedBufferDataEXT
extern PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC glflglResolveMultisampleFramebufferAPPLE;
#define glResolveMultisampleFramebufferAPPLE glflglResolveMultisampleFramebufferAPPLE
extern PFNGLIMAGETRANSFORMPARAMETERIVHPPROC glflglImageTransformParameterivHP;
#define glImageTransformParameterivHP glflglImageTransformParameterivHP
extern PFNGLSUBPIXELPRECISIONBIASNVPROC glflglSubpixelPrecisionBiasNV;
#define glSubpixelPrecisionBiasNV glflglSubpixelPrecisionBiasNV
extern PFNGLNORMALPOINTERPROC glflglNormalPointer;
#define glNormalPointer glflglNormalPointer
extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glflglNamedFramebufferTexture;
#define glNamedFramebufferTexture glflglNamedFramebufferTexture
extern PFNGLVERTEXATTRIB4NSVARBPROC glflglVertexAttrib4NsvARB;
#define glVertexAttrib4NsvARB glflglVertexAttrib4NsvARB
extern PFNGLPASSTHROUGHPROC glflglPassThrough;
#define glPassThrough glflglPassThrough
extern PFNGLDRAWMESHARRAYSSUNPROC glflglDrawMeshArraysSUN;
#define glDrawMeshArraysSUN glflglDrawMeshArraysSUN
extern PFNGLISIMAGEHANDLERESIDENTARBPROC glflglIsImageHandleResidentARB;
#define glIsImageHandleResidentARB glflglIsImageHandleResidentARB
extern PFNGLCONVOLUTIONPARAMETERFEXTPROC glflglConvolutionParameterfEXT;
#define glConvolutionParameterfEXT glflglConvolutionParameterfEXT
extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glflglProgramUniformMatrix4x3fv;
#define glProgramUniformMatrix4x3fv glflglProgramUniformMatrix4x3fv
extern PFNGLBEGINPROC glflglBegin;
#define glBegin glflglBegin
extern PFNGLEVALCOORD2DVPROC glflglEvalCoord2dv;
#define glEvalCoord2dv glflglEvalCoord2dv
extern PFNGLCOLOR3UBVPROC glflglColor3ubv;
#define glColor3ubv glflglColor3ubv
extern PFNGLFOGCOORDFVEXTPROC glflglFogCoordfvEXT;
#define glFogCoordfvEXT glflglFogCoordfvEXT
extern PFNGLVERTEXP3UIPROC glflglVertexP3ui;
#define glVertexP3ui glflglVertexP3ui
extern PFNGLBINDRENDERBUFFEROESPROC glflglBindRenderbufferOES;
#define glBindRenderbufferOES glflglBindRenderbufferOES
extern PFNGLLIGHTFVPROC glflglLightfv;
#define glLightfv glflglLightfv
extern PFNGLVERTEXATTRIBL3I64NVPROC glflglVertexAttribL3i64NV;
#define glVertexAttribL3i64NV glflglVertexAttribL3i64NV
extern PFNGLSTENCILCLEARTAGEXTPROC glflglStencilClearTagEXT;
#define glStencilClearTagEXT glflglStencilClearTagEXT
extern PFNGLDRAWELEMENTSBASEVERTEXEXTPROC glflglDrawElementsBaseVertexEXT;
#define glDrawElementsBaseVertexEXT glflglDrawElementsBaseVertexEXT
extern PFNGLGETACTIVEUNIFORMNAMEPROC glflglGetActiveUniformName;
#define glGetActiveUniformName glflglGetActiveUniformName
extern PFNGLMULTITEXGENDEXTPROC glflglMultiTexGendEXT;
#define glMultiTexGendEXT glflglMultiTexGendEXT
extern PFNGLUNIFORM4UI64VNVPROC glflglUniform4ui64vNV;
#define glUniform4ui64vNV glflglUniform4ui64vNV
extern PFNGLDEBUGMESSAGEENABLEAMDPROC glflglDebugMessageEnableAMD;
#define glDebugMessageEnableAMD glflglDebugMessageEnableAMD
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glflglGetFramebufferAttachmentParameteriv;
#define glGetFramebufferAttachmentParameteriv glflglGetFramebufferAttachmentParameteriv
extern PFNGLCOPYTEXSUBIMAGE2DEXTPROC glflglCopyTexSubImage2DEXT;
#define glCopyTexSubImage2DEXT glflglCopyTexSubImage2DEXT
extern PFNGLGENRENDERBUFFERSEXTPROC glflglGenRenderbuffersEXT;
#define glGenRenderbuffersEXT glflglGenRenderbuffersEXT
extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glflglNamedProgramLocalParameterI4ivEXT;
#define glNamedProgramLocalParameterI4ivEXT glflglNamedProgramLocalParameterI4ivEXT
extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glflglGetMultiTexParameterIuivEXT;
#define glGetMultiTexParameterIuivEXT glflglGetMultiTexParameterIuivEXT
extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glflglNamedFramebufferDrawBuffer;
#define glNamedFramebufferDrawBuffer glflglNamedFramebufferDrawBuffer
extern PFNGLTEXPARAMETERIVPROC glflglTexParameteriv;
#define glTexParameteriv glflglTexParameteriv
extern PFNGLUNIFORM4IVARBPROC glflglUniform4ivARB;
#define glUniform4ivARB glflglUniform4ivARB
extern PFNGLMATRIXORTHOEXTPROC glflglMatrixOrthoEXT;
#define glMatrixOrthoEXT glflglMatrixOrthoEXT
extern PFNGLVERTEXARRAYVERTEXBUFFERPROC glflglVertexArrayVertexBuffer;
#define glVertexArrayVertexBuffer glflglVertexArrayVertexBuffer
extern PFNGLGETTEXIMAGEPROC glflglGetTexImage;
#define glGetTexImage glflglGetTexImage
extern PFNGLPROGRAMUNIFORM4UI64VNVPROC glflglProgramUniform4ui64vNV;
#define glProgramUniform4ui64vNV glflglProgramUniform4ui64vNV
extern PFNGLGETNAMEDSTRINGIVARBPROC glflglGetNamedStringivARB;
#define glGetNamedStringivARB glflglGetNamedStringivARB
extern PFNGLVERTEXATTRIBL1I64VNVPROC glflglVertexAttribL1i64vNV;
#define glVertexAttribL1i64vNV glflglVertexAttribL1i64vNV
extern PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC glflglTransformFeedbackBufferBase;
#define glTransformFeedbackBufferBase glflglTransformFeedbackBufferBase
extern PFNGLINDEXSVPROC glflglIndexsv;
#define glIndexsv glflglIndexsv
extern PFNGLPOINTPARAMETERIVNVPROC glflglPointParameterivNV;
#define glPointParameterivNV glflglPointParameterivNV
extern PFNGLGETDETAILTEXFUNCSGISPROC glflglGetDetailTexFuncSGIS;
#define glGetDetailTexFuncSGIS glflglGetDetailTexFuncSGIS
extern PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC glflglReplacementCodeuiColor3fVertex3fvSUN;
#define glReplacementCodeuiColor3fVertex3fvSUN glflglReplacementCodeuiColor3fVertex3fvSUN
extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glflglProgramLocalParameter4fARB;
#define glProgramLocalParameter4fARB glflglProgramLocalParameter4fARB
extern PFNGLBITMAPPROC glflglBitmap;
#define glBitmap glflglBitmap
extern PFNGLCOLORSUBTABLEPROC glflglColorSubTable;
#define glColorSubTable glflglColorSubTable
extern PFNGLMULTITEXGENFVEXTPROC glflglMultiTexGenfvEXT;
#define glMultiTexGenfvEXT glflglMultiTexGenfvEXT
extern PFNGLGETNAMEDBUFFERSUBDATAPROC glflglGetNamedBufferSubData;
#define glGetNamedBufferSubData glflglGetNamedBufferSubData
extern PFNGLSTENCILFUNCSEPARATEATIPROC glflglStencilFuncSeparateATI;
#define glStencilFuncSeparateATI glflglStencilFuncSeparateATI
extern PFNGLPROGRAMUNIFORM2IVPROC glflglProgramUniform2iv;
#define glProgramUniform2iv glflglProgramUniform2iv
extern PFNGLGETQUERYIVPROC glflglGetQueryiv;
#define glGetQueryiv glflglGetQueryiv
extern PFNGLGETTRANSFORMFEEDBACKIVPROC glflglGetTransformFeedbackiv;
#define glGetTransformFeedbackiv glflglGetTransformFeedbackiv
extern PFNGLTEXCOORD4DPROC glflglTexCoord4d;
#define glTexCoord4d glflglTexCoord4d
extern PFNGLCREATEQUERIESPROC glflglCreateQueries;
#define glCreateQueries glflglCreateQueries
extern PFNGLGETSAMPLERPARAMETERFVPROC glflglGetSamplerParameterfv;
#define glGetSamplerParameterfv glflglGetSamplerParameterfv
extern PFNGLTEXCOORD4IPROC glflglTexCoord4i;
#define glTexCoord4i glflglTexCoord4i
extern PFNGLLOADTRANSPOSEMATRIXXOESPROC glflglLoadTransposeMatrixxOES;
#define glLoadTransposeMatrixxOES glflglLoadTransposeMatrixxOES
extern PFNGLPROGRAMUNIFORM3I64NVPROC glflglProgramUniform3i64NV;
#define glProgramUniform3i64NV glflglProgramUniform3i64NV
extern PFNGLGETTEXTUREHANDLEARBPROC glflglGetTextureHandleARB;
#define glGetTextureHandleARB glflglGetTextureHandleARB
extern PFNGLTEXCOORD4SPROC glflglTexCoord4s;
#define glTexCoord4s glflglTexCoord4s
extern PFNGLCOLORTABLEPARAMETERIVPROC glflglColorTableParameteriv;
#define glColorTableParameteriv glflglColorTableParameteriv
extern PFNGLGETUNIFORMINDICESPROC glflglGetUniformIndices;
#define glGetUniformIndices glflglGetUniformIndices
extern PFNGLFRUSTUMFPROC glflglFrustumf;
#define glFrustumf glflglFrustumf
extern PFNGLMULTITEXIMAGE3DEXTPROC glflglMultiTexImage3DEXT;
#define glMultiTexImage3DEXT glflglMultiTexImage3DEXT
extern PFNGLCOVERAGEMODULATIONTABLENVPROC glflglCoverageModulationTableNV;
#define glCoverageModulationTableNV glflglCoverageModulationTableNV
extern PFNGLPOINTPARAMETERIVPROC glflglPointParameteriv;
#define glPointParameteriv glflglPointParameteriv
extern PFNGLVIEWPORTINDEXEDFVNVPROC glflglViewportIndexedfvNV;
#define glViewportIndexedfvNV glflglViewportIndexedfvNV
extern PFNGLMULTITEXCOORD4SVARBPROC glflglMultiTexCoord4svARB;
#define glMultiTexCoord4svARB glflglMultiTexCoord4svARB
extern PFNGLNORMAL3FVPROC glflglNormal3fv;
#define glNormal3fv glflglNormal3fv
extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glflglProgramUniformMatrix3x4dvEXT;
#define glProgramUniformMatrix3x4dvEXT glflglProgramUniformMatrix3x4dvEXT
extern PFNGLTEXCOORD1FVPROC glflglTexCoord1fv;
#define glTexCoord1fv glflglTexCoord1fv
extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glflglProgramUniformMatrix4x3dvEXT;
#define glProgramUniformMatrix4x3dvEXT glflglProgramUniformMatrix4x3dvEXT
extern PFNGLGETACTIVEVARYINGNVPROC glflglGetActiveVaryingNV;
#define glGetActiveVaryingNV glflglGetActiveVaryingNV
extern PFNGLMAPBUFFEROESPROC glflglMapBufferOES;
#define glMapBufferOES glflglMapBufferOES
extern PFNGLMULTITEXCOORD1DVPROC glflglMultiTexCoord1dv;
#define glMultiTexCoord1dv glflglMultiTexCoord1dv
extern PFNGLTEXCOORD3FVPROC glflglTexCoord3fv;
#define glTexCoord3fv glflglTexCoord3fv
extern PFNGLSECONDARYCOLOR3USVPROC glflglSecondaryColor3usv;
#define glSecondaryColor3usv glflglSecondaryColor3usv
extern PFNGLPROGRAMUNIFORM1UI64VNVPROC glflglProgramUniform1ui64vNV;
#define glProgramUniform1ui64vNV glflglProgramUniform1ui64vNV
extern PFNGLTEXTUREMATERIALEXTPROC glflglTextureMaterialEXT;
#define glTextureMaterialEXT glflglTextureMaterialEXT
extern PFNGLMULTITEXCOORDP3UIVPROC glflglMultiTexCoordP3uiv;
#define glMultiTexCoordP3uiv glflglMultiTexCoordP3uiv
extern PFNGLVERTEXATTRIBP3UIPROC glflglVertexAttribP3ui;
#define glVertexAttribP3ui glflglVertexAttribP3ui
extern PFNGLINTERPOLATEPATHSNVPROC glflglInterpolatePathsNV;
#define glInterpolatePathsNV glflglInterpolatePathsNV
extern PFNGLTEXTUREBUFFERRANGEPROC glflglTextureBufferRange;
#define glTextureBufferRange glflglTextureBufferRange
extern PFNGLGETINTEGERUI64VNVPROC glflglGetIntegerui64vNV;
#define glGetIntegerui64vNV glflglGetIntegerui64vNV
extern PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC glflglGetPixelTransformParameterivEXT;
#define glGetPixelTransformParameterivEXT glflglGetPixelTransformParameterivEXT
extern PFNGLTEXCOORD4XVOESPROC glflglTexCoord4xvOES;
#define glTexCoord4xvOES glflglTexCoord4xvOES
extern PFNGLGETVARIANTBOOLEANVEXTPROC glflglGetVariantBooleanvEXT;
#define glGetVariantBooleanvEXT glflglGetVariantBooleanvEXT
extern PFNGLDEPTHRANGEPROC glflglDepthRange;
#define glDepthRange glflglDepthRange
extern PFNGLGETVERTEXATTRIBDVARBPROC glflglGetVertexAttribdvARB;
#define glGetVertexAttribdvARB glflglGetVertexAttribdvARB
extern PFNGLPROGRAMUNIFORM4I64VNVPROC glflglProgramUniform4i64vNV;
#define glProgramUniform4i64vNV glflglProgramUniform4i64vNV
extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glflglDrawArraysInstancedEXT;
#define glDrawArraysInstancedEXT glflglDrawArraysInstancedEXT
extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glflglDisableClientStateIndexedEXT;
#define glDisableClientStateIndexedEXT glflglDisableClientStateIndexedEXT
extern PFNGLDRAWBUFFERPROC glflglDrawBuffer;
#define glDrawBuffer glflglDrawBuffer
extern PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC glflglMultiDrawArraysIndirectBindlessNV;
#define glMultiDrawArraysIndirectBindlessNV glflglMultiDrawArraysIndirectBindlessNV
extern PFNGLGETNPIXELMAPUSVPROC glflglGetnPixelMapusv;
#define glGetnPixelMapusv glflglGetnPixelMapusv
extern PFNGLRASTERPOS3FVPROC glflglRasterPos3fv;
#define glRasterPos3fv glflglRasterPos3fv
extern PFNGLCLEARBUFFERUIVPROC glflglClearBufferuiv;
#define glClearBufferuiv glflglClearBufferuiv
extern PFNGLREADNPIXELSKHRPROC glflglReadnPixelsKHR;
#define glReadnPixelsKHR glflglReadnPixelsKHR
extern PFNGLGETINTERNALFORMATI64VPROC glflglGetInternalformati64v;
#define glGetInternalformati64v glflglGetInternalformati64v
extern PFNGLSHADERSOURCEARBPROC glflglShaderSourceARB;
#define glShaderSourceARB glflglShaderSourceARB
extern PFNGLSHADEROP3EXTPROC glflglShaderOp3EXT;
#define glShaderOp3EXT glflglShaderOp3EXT
extern PFNGLWINDOWPOS2DVMESAPROC glflglWindowPos2dvMESA;
#define glWindowPos2dvMESA glflglWindowPos2dvMESA
extern PFNGLCLEARINDEXPROC glflglClearIndex;
#define glClearIndex glflglClearIndex
extern PFNGLPROVOKINGVERTEXEXTPROC glflglProvokingVertexEXT;
#define glProvokingVertexEXT glflglProvokingVertexEXT
extern PFNGLVERTEXATTRIBIPOINTERPROC glflglVertexAttribIPointer;
#define glVertexAttribIPointer glflglVertexAttribIPointer
extern PFNGLNORMALSTREAM3BVATIPROC glflglNormalStream3bvATI;
#define glNormalStream3bvATI glflglNormalStream3bvATI
extern PFNGLFLUSHPROC glflglFlush;
#define glFlush glflglFlush
extern PFNGLGETCOLORTABLEPARAMETERIVEXTPROC glflglGetColorTableParameterivEXT;
#define glGetColorTableParameterivEXT glflglGetColorTableParameterivEXT
extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glflglGetVertexAttribIuivEXT;
#define glGetVertexAttribIuivEXT glflglGetVertexAttribIuivEXT
extern PFNGLPRESENTFRAMEDUALFILLNVPROC glflglPresentFrameDualFillNV;
#define glPresentFrameDualFillNV glflglPresentFrameDualFillNV
extern PFNGLGENVERTEXSHADERSEXTPROC glflglGenVertexShadersEXT;
#define glGenVertexShadersEXT glflglGenVertexShadersEXT
extern PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC glflglProgramUniformHandleui64vARB;
#define glProgramUniformHandleui64vARB glflglProgramUniformHandleui64vARB
extern PFNGLUNIFORMMATRIX2X4FVNVPROC glflglUniformMatrix2x4fvNV;
#define glUniformMatrix2x4fvNV glflglUniformMatrix2x4fvNV
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glflglDrawElementsInstancedBaseVertexBaseInstance;
#define glDrawElementsInstancedBaseVertexBaseInstance glflglDrawElementsInstancedBaseVertexBaseInstance
extern PFNGLGETTEXLEVELPARAMETERIVPROC glflglGetTexLevelParameteriv;
#define glGetTexLevelParameteriv glflglGetTexLevelParameteriv
extern PFNGLSTENCILFILLPATHNVPROC glflglStencilFillPathNV;
#define glStencilFillPathNV glflglStencilFillPathNV
extern PFNGLSECONDARYCOLOR3USVEXTPROC glflglSecondaryColor3usvEXT;
#define glSecondaryColor3usvEXT glflglSecondaryColor3usvEXT
extern PFNGLWINDOWPOS3IARBPROC glflglWindowPos3iARB;
#define glWindowPos3iARB glflglWindowPos3iARB
extern PFNGLMATRIXROTATEFEXTPROC glflglMatrixRotatefEXT;
#define glMatrixRotatefEXT glflglMatrixRotatefEXT
extern PFNGLWINDOWPOS3FVMESAPROC glflglWindowPos3fvMESA;
#define glWindowPos3fvMESA glflglWindowPos3fvMESA
extern PFNGLDEPTHRANGEXOESPROC glflglDepthRangexOES;
#define glDepthRangexOES glflglDepthRangexOES
extern PFNGLVERTEX4XVOESPROC glflglVertex4xvOES;
#define glVertex4xvOES glflglVertex4xvOES
extern PFNGLTEXSTORAGE3DMULTISAMPLEPROC glflglTexStorage3DMultisample;
#define glTexStorage3DMultisample glflglTexStorage3DMultisample
extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glflglGetNamedProgramLocalParameterfvEXT;
#define glGetNamedProgramLocalParameterfvEXT glflglGetNamedProgramLocalParameterfvEXT
extern PFNGLSTENCILOPVALUEAMDPROC glflglStencilOpValueAMD;
#define glStencilOpValueAMD glflglStencilOpValueAMD
extern PFNGLPROGRAMVERTEXLIMITNVPROC glflglProgramVertexLimitNV;
#define glProgramVertexLimitNV glflglProgramVertexLimitNV
extern PFNGLUNIFORM3I64NVPROC glflglUniform3i64NV;
#define glUniform3i64NV glflglUniform3i64NV
extern PFNGLPRIMITIVEBOUNDINGBOXEXTPROC glflglPrimitiveBoundingBoxEXT;
#define glPrimitiveBoundingBoxEXT glflglPrimitiveBoundingBoxEXT
extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glflglProgramUniform3uivEXT;
#define glProgramUniform3uivEXT glflglProgramUniform3uivEXT
extern PFNGLCLAMPCOLORPROC glflglClampColor;
#define glClampColor glflglClampColor
extern PFNGLCLEARSTENCILPROC glflglClearStencil;
#define glClearStencil glflglClearStencil
extern PFNGLVERTEXATTRIBS3SVNVPROC glflglVertexAttribs3svNV;
#define glVertexAttribs3svNV glflglVertexAttribs3svNV
extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glflglNamedBufferSubDataEXT;
#define glNamedBufferSubDataEXT glflglNamedBufferSubDataEXT
extern PFNGLMULTITEXCOORD3FVPROC glflglMultiTexCoord3fv;
#define glMultiTexCoord3fv glflglMultiTexCoord3fv
extern PFNGLVERTEXBLENDENVFATIPROC glflglVertexBlendEnvfATI;
#define glVertexBlendEnvfATI glflglVertexBlendEnvfATI
extern PFNGLISFENCEAPPLEPROC glflglIsFenceAPPLE;
#define glIsFenceAPPLE glflglIsFenceAPPLE
extern PFNGLCOMBINERINPUTNVPROC glflglCombinerInputNV;
#define glCombinerInputNV glflglCombinerInputNV
extern PFNGLWINDOWPOS4FMESAPROC glflglWindowPos4fMESA;
#define glWindowPos4fMESA glflglWindowPos4fMESA
extern PFNGLUNIFORM2FARBPROC glflglUniform2fARB;
#define glUniform2fARB glflglUniform2fARB
extern PFNGLLIGHTMODELXVPROC glflglLightModelxv;
#define glLightModelxv glflglLightModelxv
extern PFNGLFRAMEBUFFERTEXTUREOESPROC glflglFramebufferTextureOES;
#define glFramebufferTextureOES glflglFramebufferTextureOES
extern PFNGLREPLACEMENTCODEUSVSUNPROC glflglReplacementCodeusvSUN;
#define glReplacementCodeusvSUN glflglReplacementCodeusvSUN
extern PFNGLSTOPINSTRUMENTSSGIXPROC glflglStopInstrumentsSGIX;
#define glStopInstrumentsSGIX glflglStopInstrumentsSGIX
extern PFNGLMAPVERTEXATTRIB2DAPPLEPROC glflglMapVertexAttrib2dAPPLE;
#define glMapVertexAttrib2dAPPLE glflglMapVertexAttrib2dAPPLE
extern PFNGLBLENDEQUATIONIEXTPROC glflglBlendEquationiEXT;
#define glBlendEquationiEXT glflglBlendEquationiEXT
extern PFNGLISTEXTUREPROC glflglIsTexture;
#define glIsTexture glflglIsTexture
extern PFNGLVERTEX2FPROC glflglVertex2f;
#define glVertex2f glflglVertex2f
extern PFNGLCOPYTEXTUREIMAGE2DEXTPROC glflglCopyTextureImage2DEXT;
#define glCopyTextureImage2DEXT glflglCopyTextureImage2DEXT
extern PFNGLVERTEX2DPROC glflglVertex2d;
#define glVertex2d glflglVertex2d
extern PFNGLBEGINQUERYINDEXEDPROC glflglBeginQueryIndexed;
#define glBeginQueryIndexed glflglBeginQueryIndexed
extern PFNGLMULTITEXCOORD4FARBPROC glflglMultiTexCoord4fARB;
#define glMultiTexCoord4fARB glflglMultiTexCoord4fARB
extern PFNGLTANGENT3BVEXTPROC glflglTangent3bvEXT;
#define glTangent3bvEXT glflglTangent3bvEXT
extern PFNGLTEXIMAGE3DPROC glflglTexImage3D;
#define glTexImage3D glflglTexImage3D
extern PFNGLVERTEX2IPROC glflglVertex2i;
#define glVertex2i glflglVertex2i
extern PFNGLMATRIXINDEXUBVARBPROC glflglMatrixIndexubvARB;
#define glMatrixIndexubvARB glflglMatrixIndexubvARB
extern PFNGLVERTEX2SPROC glflglVertex2s;
#define glVertex2s glflglVertex2s
extern PFNGLGETVERTEXATTRIBLUI64VNVPROC glflglGetVertexAttribLui64vNV;
#define glGetVertexAttribLui64vNV glflglGetVertexAttribLui64vNV
extern PFNGLMAPBUFFERARBPROC glflglMapBufferARB;
#define glMapBufferARB glflglMapBufferARB
extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glflglFlushMappedBufferRange;
#define glFlushMappedBufferRange glflglFlushMappedBufferRange
extern PFNGLTEXSTORAGE2DPROC glflglTexStorage2D;
#define glTexStorage2D glflglTexStorage2D
extern PFNGLGETTEXENVXVOESPROC glflglGetTexEnvxvOES;
#define glGetTexEnvxvOES glflglGetTexEnvxvOES
extern PFNGLLINEWIDTHXOESPROC glflglLineWidthxOES;
#define glLineWidthxOES glflglLineWidthxOES
extern PFNGLPOLYGONMODENVPROC glflglPolygonModeNV;
#define glPolygonModeNV glflglPolygonModeNV
extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glflglProgramUniformMatrix2fvEXT;
#define glProgramUniformMatrix2fvEXT glflglProgramUniformMatrix2fvEXT
extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glflglGetTextureParameterIuivEXT;
#define glGetTextureParameterIuivEXT glflglGetTextureParameterIuivEXT
extern PFNGLGETMULTITEXENVIVEXTPROC glflglGetMultiTexEnvivEXT;
#define glGetMultiTexEnvivEXT glflglGetMultiTexEnvivEXT
extern PFNGLPIXELTEXGENPARAMETERIVSGISPROC glflglPixelTexGenParameterivSGIS;
#define glPixelTexGenParameterivSGIS glflglPixelTexGenParameterivSGIS
extern PFNGLGENQUERIESPROC glflglGenQueries;
#define glGenQueries glflglGenQueries
extern PFNGLGETPIXELMAPFVPROC glflglGetPixelMapfv;
#define glGetPixelMapfv glflglGetPixelMapfv
extern PFNGLBLENDCOLOREXTPROC glflglBlendColorEXT;
#define glBlendColorEXT glflglBlendColorEXT
extern PFNGLRESETMINMAXPROC glflglResetMinmax;
#define glResetMinmax glflglResetMinmax
extern PFNGLGETNUNIFORMIVARBPROC glflglGetnUniformivARB;
#define glGetnUniformivARB glflglGetnUniformivARB
extern PFNGLVERTEXBLENDARBPROC glflglVertexBlendARB;
#define glVertexBlendARB glflglVertexBlendARB
extern PFNGLGETVARYINGLOCATIONNVPROC glflglGetVaryingLocationNV;
#define glGetVaryingLocationNV glflglGetVaryingLocationNV
extern PFNGLGETMAPATTRIBPARAMETERIVNVPROC glflglGetMapAttribParameterivNV;
#define glGetMapAttribParameterivNV glflglGetMapAttribParameterivNV
extern PFNGLTEXSUBIMAGE3DPROC glflglTexSubImage3D;
#define glTexSubImage3D glflglTexSubImage3D
extern PFNGLDELETESAMPLERSPROC glflglDeleteSamplers;
#define glDeleteSamplers glflglDeleteSamplers
extern PFNGLGETLIGHTXOESPROC glflglGetLightxOES;
#define glGetLightxOES glflglGetLightxOES
extern PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC glflglGetVertexAttribArrayObjectfvATI;
#define glGetVertexAttribArrayObjectfvATI glflglGetVertexAttribArrayObjectfvATI
extern PFNGLVERTEXARRAYNORMALOFFSETEXTPROC glflglVertexArrayNormalOffsetEXT;
#define glVertexArrayNormalOffsetEXT glflglVertexArrayNormalOffsetEXT
extern PFNGLGETBUFFERPARAMETERIVARBPROC glflglGetBufferParameterivARB;
#define glGetBufferParameterivARB glflglGetBufferParameterivARB
extern PFNGLGETTEXTUREPARAMETERFVPROC glflglGetTextureParameterfv;
#define glGetTextureParameterfv glflglGetTextureParameterfv
extern PFNGLSECONDARYCOLORP3UIPROC glflglSecondaryColorP3ui;
#define glSecondaryColorP3ui glflglSecondaryColorP3ui
extern PFNGLVERTEXATTRIB4DNVPROC glflglVertexAttrib4dNV;
#define glVertexAttrib4dNV glflglVertexAttrib4dNV
extern PFNGLGETMULTISAMPLEFVNVPROC glflglGetMultisamplefvNV;
#define glGetMultisamplefvNV glflglGetMultisamplefvNV
extern PFNGLMAPOBJECTBUFFERATIPROC glflglMapObjectBufferATI;
#define glMapObjectBufferATI glflglMapObjectBufferATI
extern PFNGLGETPATHCOMMANDSNVPROC glflglGetPathCommandsNV;
#define glGetPathCommandsNV glflglGetPathCommandsNV
extern PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC glflglVertexArrayTexCoordOffsetEXT;
#define glVertexArrayTexCoordOffsetEXT glflglVertexArrayTexCoordOffsetEXT
extern PFNGLGETHISTOGRAMPROC glflglGetHistogram;
#define glGetHistogram glflglGetHistogram
extern PFNGLMATRIXMODEPROC glflglMatrixMode;
#define glMatrixMode glflglMatrixMode
extern PFNGLCOLORFORMATNVPROC glflglColorFormatNV;
#define glColorFormatNV glflglColorFormatNV
extern PFNGLPROGRAMUNIFORMUI64NVPROC glflglProgramUniformui64NV;
#define glProgramUniformui64NV glflglProgramUniformui64NV
extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glflglProgramUniformMatrix4x2fvEXT;
#define glProgramUniformMatrix4x2fvEXT glflglProgramUniformMatrix4x2fvEXT
extern PFNGLLOADMATRIXXOESPROC glflglLoadMatrixxOES;
#define glLoadMatrixxOES glflglLoadMatrixxOES
extern PFNGLVARIANTBVEXTPROC glflglVariantbvEXT;
#define glVariantbvEXT glflglVariantbvEXT
extern PFNGLRASTERPOS4IPROC glflglRasterPos4i;
#define glRasterPos4i glflglRasterPos4i
extern PFNGLVERTEXATTRIBL2I64NVPROC glflglVertexAttribL2i64NV;
#define glVertexAttribL2i64NV glflglVertexAttribL2i64NV
extern PFNGLBINDTEXTURESPROC glflglBindTextures;
#define glBindTextures glflglBindTextures
extern PFNGLMAPBUFFERRANGEEXTPROC glflglMapBufferRangeEXT;
#define glMapBufferRangeEXT glflglMapBufferRangeEXT
extern PFNGLTEXTURESUBIMAGE3DEXTPROC glflglTextureSubImage3DEXT;
#define glTextureSubImage3DEXT glflglTextureSubImage3DEXT
extern PFNGLCOMBINERPARAMETERINVPROC glflglCombinerParameteriNV;
#define glCombinerParameteriNV glflglCombinerParameteriNV
extern PFNGLPRIORITIZETEXTURESPROC glflglPrioritizeTextures;
#define glPrioritizeTextures glflglPrioritizeTextures
extern PFNGLGETCLIPPLANEXOESPROC glflglGetClipPlanexOES;
#define glGetClipPlanexOES glflglGetClipPlanexOES
extern PFNGLSECONDARYCOLOR3UIVEXTPROC glflglSecondaryColor3uivEXT;
#define glSecondaryColor3uivEXT glflglSecondaryColor3uivEXT
extern PFNGLGETPERFQUERYINFOINTELPROC glflglGetPerfQueryInfoINTEL;
#define glGetPerfQueryInfoINTEL glflglGetPerfQueryInfoINTEL
extern PFNGLGETDOUBLEVPROC glflglGetDoublev;
#define glGetDoublev glflglGetDoublev
extern PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC glflglLoadPaletteFromModelViewMatrixOES;
#define glLoadPaletteFromModelViewMatrixOES glflglLoadPaletteFromModelViewMatrixOES
extern PFNGLBINDBUFFERRANGEEXTPROC glflglBindBufferRangeEXT;
#define glBindBufferRangeEXT glflglBindBufferRangeEXT
extern PFNGLVERTEXATTRIB1DPROC glflglVertexAttrib1d;
#define glVertexAttrib1d glflglVertexAttrib1d
extern PFNGLGETPROGRAMSTRINGARBPROC glflglGetProgramStringARB;
#define glGetProgramStringARB glflglGetProgramStringARB
extern PFNGLGETPATHSPACINGNVPROC glflglGetPathSpacingNV;
#define glGetPathSpacingNV glflglGetPathSpacingNV
extern PFNGLUNIFORM4DVPROC glflglUniform4dv;
#define glUniform4dv glflglUniform4dv
extern PFNGLGLOBALALPHAFACTORDSUNPROC glflglGlobalAlphaFactordSUN;
#define glGlobalAlphaFactordSUN glflglGlobalAlphaFactordSUN
extern PFNGLPROGRAMUNIFORM3DVPROC glflglProgramUniform3dv;
#define glProgramUniform3dv glflglProgramUniform3dv
extern PFNGLGETSHADERSOURCEARBPROC glflglGetShaderSourceARB;
#define glGetShaderSourceARB glflglGetShaderSourceARB
extern PFNGLVERTEXATTRIB3DVARBPROC glflglVertexAttrib3dvARB;
#define glVertexAttrib3dvARB glflglVertexAttrib3dvARB
extern PFNGLINVALIDATEBUFFERDATAPROC glflglInvalidateBufferData;
#define glInvalidateBufferData glflglInvalidateBufferData
extern PFNGLGETSAMPLERPARAMETERIUIVOESPROC glflglGetSamplerParameterIuivOES;
#define glGetSamplerParameterIuivOES glflglGetSamplerParameterIuivOES
extern PFNGLMATRIXLOAD3X2FNVPROC glflglMatrixLoad3x2fNV;
#define glMatrixLoad3x2fNV glflglMatrixLoad3x2fNV
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC glflglCompressedTextureSubImage1D;
#define glCompressedTextureSubImage1D glflglCompressedTextureSubImage1D
extern PFNGLTEXCOORD3XVOESPROC glflglTexCoord3xvOES;
#define glTexCoord3xvOES glflglTexCoord3xvOES
extern PFNGLPOINTPARAMETERFVSGISPROC glflglPointParameterfvSGIS;
#define glPointParameterfvSGIS glflglPointParameterfvSGIS
extern PFNGLUNIFORM3FVPROC glflglUniform3fv;
#define glUniform3fv glflglUniform3fv
extern PFNGLTANGENT3IEXTPROC glflglTangent3iEXT;
#define glTangent3iEXT glflglTangent3iEXT
extern PFNGLCLEARTEXIMAGEPROC glflglClearTexImage;
#define glClearTexImage glflglClearTexImage
extern PFNGLBINORMAL3BVEXTPROC glflglBinormal3bvEXT;
#define glBinormal3bvEXT glflglBinormal3bvEXT
extern PFNGLGENTEXTURESEXTPROC glflglGenTexturesEXT;
#define glGenTexturesEXT glflglGenTexturesEXT
extern PFNGLGETNPIXELMAPUSVARBPROC glflglGetnPixelMapusvARB;
#define glGetnPixelMapusvARB glflglGetnPixelMapusvARB
extern PFNGLMULTITEXCOORDP1UIPROC glflglMultiTexCoordP1ui;
#define glMultiTexCoordP1ui glflglMultiTexCoordP1ui
extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glflglGetTransformFeedbacki64_v;
#define glGetTransformFeedbacki64_v glflglGetTransformFeedbacki64_v
extern PFNGLUNIFORMMATRIX4DVPROC glflglUniformMatrix4dv;
#define glUniformMatrix4dv glflglUniformMatrix4dv
extern PFNGLWINDOWPOS3FMESAPROC glflglWindowPos3fMESA;
#define glWindowPos3fMESA glflglWindowPos3fMESA
extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glflglGetTextureLevelParameterfvEXT;
#define glGetTextureLevelParameterfvEXT glflglGetTextureLevelParameterfvEXT
extern PFNGLGETHISTOGRAMPARAMETERXVOESPROC glflglGetHistogramParameterxvOES;
#define glGetHistogramParameterxvOES glflglGetHistogramParameterxvOES
extern PFNGLMULTIDRAWELEMENTSPROC glflglMultiDrawElements;
#define glMultiDrawElements glflglMultiDrawElements
extern PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC glflglMakeImageHandleNonResidentNV;
#define glMakeImageHandleNonResidentNV glflglMakeImageHandleNonResidentNV
extern PFNGLTEXSUBIMAGE1DEXTPROC glflglTexSubImage1DEXT;
#define glTexSubImage1DEXT glflglTexSubImage1DEXT
extern PFNGLNORMALSTREAM3DATIPROC glflglNormalStream3dATI;
#define glNormalStream3dATI glflglNormalStream3dATI
extern PFNGLVERTEXATTRIBL4I64VNVPROC glflglVertexAttribL4i64vNV;
#define glVertexAttribL4i64vNV glflglVertexAttribL4i64vNV
extern PFNGLCLEARNAMEDFRAMEBUFFERFVPROC glflglClearNamedFramebufferfv;
#define glClearNamedFramebufferfv glflglClearNamedFramebufferfv
extern PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glflglCopyTextureSubImage1DEXT;
#define glCopyTextureSubImage1DEXT glflglCopyTextureSubImage1DEXT
extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glflglNamedFramebufferReadBuffer;
#define glNamedFramebufferReadBuffer glflglNamedFramebufferReadBuffer
extern PFNGLVERTEXATTRIBI1UIVEXTPROC glflglVertexAttribI1uivEXT;
#define glVertexAttribI1uivEXT glflglVertexAttribI1uivEXT
extern PFNGLGETTEXGENFVPROC glflglGetTexGenfv;
#define glGetTexGenfv glflglGetTexGenfv
extern PFNGLBEGINQUERYARBPROC glflglBeginQueryARB;
#define glBeginQueryARB glflglBeginQueryARB
extern PFNGLUNIFORM1IARBPROC glflglUniform1iARB;
#define glUniform1iARB glflglUniform1iARB
extern PFNGLVERTEX4BVOESPROC glflglVertex4bvOES;
#define glVertex4bvOES glflglVertex4bvOES
extern PFNGLUNIFORM1FVARBPROC glflglUniform1fvARB;
#define glUniform1fvARB glflglUniform1fvARB
extern PFNGLTESTFENCENVPROC glflglTestFenceNV;
#define glTestFenceNV glflglTestFenceNV
extern PFNGLBINDTRANSFORMFEEDBACKPROC glflglBindTransformFeedback;
#define glBindTransformFeedback glflglBindTransformFeedback
extern PFNGLMULTITEXCOORD2IVPROC glflglMultiTexCoord2iv;
#define glMultiTexCoord2iv glflglMultiTexCoord2iv
extern PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC glflglCopyMultiTexSubImage1DEXT;
#define glCopyMultiTexSubImage1DEXT glflglCopyMultiTexSubImage1DEXT
extern PFNGLGETQUERYOBJECTIVEXTPROC glflglGetQueryObjectivEXT;
#define glGetQueryObjectivEXT glflglGetQueryObjectivEXT
extern PFNGLCLIPPLANEXOESPROC glflglClipPlanexOES;
#define glClipPlanexOES glflglClipPlanexOES
extern PFNGLUSEPROGRAMSTAGESEXTPROC glflglUseProgramStagesEXT;
#define glUseProgramStagesEXT glflglUseProgramStagesEXT
extern PFNGLTEXCOORD1HNVPROC glflglTexCoord1hNV;
#define glTexCoord1hNV glflglTexCoord1hNV
extern PFNGLGENFENCESNVPROC glflglGenFencesNV;
#define glGenFencesNV glflglGenFencesNV
extern PFNGLRASTERPOS3IVPROC glflglRasterPos3iv;
#define glRasterPos3iv glflglRasterPos3iv
extern PFNGLVERTEXATTRIBL2UI64NVPROC glflglVertexAttribL2ui64NV;
#define glVertexAttribL2ui64NV glflglVertexAttribL2ui64NV
extern PFNGLMULTITEXCOORD1HVNVPROC glflglMultiTexCoord1hvNV;
#define glMultiTexCoord1hvNV glflglMultiTexCoord1hvNV
extern PFNGLGETNCONVOLUTIONFILTERPROC glflglGetnConvolutionFilter;
#define glGetnConvolutionFilter glflglGetnConvolutionFilter
extern PFNGLELEMENTPOINTERAPPLEPROC glflglElementPointerAPPLE;
#define glElementPointerAPPLE glflglElementPointerAPPLE
extern PFNGLTEXCOORD4SVPROC glflglTexCoord4sv;
#define glTexCoord4sv glflglTexCoord4sv
extern PFNGLUNIFORM2UIVPROC glflglUniform2uiv;
#define glUniform2uiv glflglUniform2uiv
extern PFNGLVERTEXATTRIB3SARBPROC glflglVertexAttrib3sARB;
#define glVertexAttrib3sARB glflglVertexAttrib3sARB
extern PFNGLBEGINCONDITIONALRENDERNVXPROC glflglBeginConditionalRenderNVX;
#define glBeginConditionalRenderNVX glflglBeginConditionalRenderNVX
extern PFNGLFINISHPROC glflglFinish;
#define glFinish glflglFinish
extern PFNGLCOLORTABLEPARAMETERFVPROC glflglColorTableParameterfv;
#define glColorTableParameterfv glflglColorTableParameterfv
extern PFNGLFRAGMENTCOVERAGECOLORNVPROC glflglFragmentCoverageColorNV;
#define glFragmentCoverageColorNV glflglFragmentCoverageColorNV
extern PFNGLPROGRAMUNIFORM3IVEXTPROC glflglProgramUniform3ivEXT;
#define glProgramUniform3ivEXT glflglProgramUniform3ivEXT
extern PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC glflglVertexArrayVertexOffsetEXT;
#define glVertexArrayVertexOffsetEXT glflglVertexArrayVertexOffsetEXT
extern PFNGLFINISHOBJECTAPPLEPROC glflglFinishObjectAPPLE;
#define glFinishObjectAPPLE glflglFinishObjectAPPLE
extern PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC glflglReplacementCodeuiTexCoord2fVertex3fvSUN;
#define glReplacementCodeuiTexCoord2fVertex3fvSUN glflglReplacementCodeuiTexCoord2fVertex3fvSUN
extern PFNGLUNIFORM1UIVPROC glflglUniform1uiv;
#define glUniform1uiv glflglUniform1uiv
extern PFNGLUNIFORMMATRIX2DVPROC glflglUniformMatrix2dv;
#define glUniformMatrix2dv glflglUniformMatrix2dv
extern PFNGLINDEXDVPROC glflglIndexdv;
#define glIndexdv glflglIndexdv
extern PFNGLSECONDARYCOLOR3IVEXTPROC glflglSecondaryColor3ivEXT;
#define glSecondaryColor3ivEXT glflglSecondaryColor3ivEXT
extern PFNGLTEXCOORD3IVPROC glflglTexCoord3iv;
#define glTexCoord3iv glflglTexCoord3iv
extern PFNGLVERTEXSTREAM1DATIPROC glflglVertexStream1dATI;
#define glVertexStream1dATI glflglVertexStream1dATI
extern PFNGLDEFORMATIONMAP3FSGIXPROC glflglDeformationMap3fSGIX;
#define glDeformationMap3fSGIX glflglDeformationMap3fSGIX
extern PFNGLCLEARDEPTHPROC glflglClearDepth;
#define glClearDepth glflglClearDepth
extern PFNGLGENASYNCMARKERSSGIXPROC glflglGenAsyncMarkersSGIX;
#define glGenAsyncMarkersSGIX glflglGenAsyncMarkersSGIX
extern PFNGLDISABLEINDEXEDEXTPROC glflglDisableIndexedEXT;
#define glDisableIndexedEXT glflglDisableIndexedEXT
extern PFNGLCOPYTEXTURELEVELSAPPLEPROC glflglCopyTextureLevelsAPPLE;
#define glCopyTextureLevelsAPPLE glflglCopyTextureLevelsAPPLE
extern PFNGLVERTEXWEIGHTFVEXTPROC glflglVertexWeightfvEXT;
#define glVertexWeightfvEXT glflglVertexWeightfvEXT
extern PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC glflglGetProgramLocalParameterIivNV;
#define glGetProgramLocalParameterIivNV glflglGetProgramLocalParameterIivNV
extern PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC glflglTexCoord4fColor4fNormal3fVertex4fSUN;
#define glTexCoord4fColor4fNormal3fVertex4fSUN glflglTexCoord4fColor4fNormal3fVertex4fSUN
extern PFNGLCOMPRESSEDTEXIMAGE3DARBPROC glflglCompressedTexImage3DARB;
#define glCompressedTexImage3DARB glflglCompressedTexImage3DARB
extern PFNGLPROGRAMPARAMETER4FNVPROC glflglProgramParameter4fNV;
#define glProgramParameter4fNV glflglProgramParameter4fNV
extern PFNGLCONVOLUTIONPARAMETERXOESPROC glflglConvolutionParameterxOES;
#define glConvolutionParameterxOES glflglConvolutionParameterxOES
extern PFNGLINSERTCOMPONENTEXTPROC glflglInsertComponentEXT;
#define glInsertComponentEXT glflglInsertComponentEXT
extern PFNGLCREATETEXTURESPROC glflglCreateTextures;
#define glCreateTextures glflglCreateTextures
extern PFNGLSECONDARYCOLOR3IVPROC glflglSecondaryColor3iv;
#define glSecondaryColor3iv glflglSecondaryColor3iv
extern PFNGLCREATEBUFFERSPROC glflglCreateBuffers;
#define glCreateBuffers glflglCreateBuffers
extern PFNGLVERTEXATTRIB1SNVPROC glflglVertexAttrib1sNV;
#define glVertexAttrib1sNV glflglVertexAttrib1sNV
extern PFNGLMULTITEXCOORD2XVOESPROC glflglMultiTexCoord2xvOES;
#define glMultiTexCoord2xvOES glflglMultiTexCoord2xvOES
extern PFNGLTEXGENXVOESPROC glflglTexGenxvOES;
#define glTexGenxvOES glflglTexGenxvOES
extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glflglMultTransposeMatrixfARB;
#define glMultTransposeMatrixfARB glflglMultTransposeMatrixfARB
extern PFNGLGETNPIXELMAPFVARBPROC glflglGetnPixelMapfvARB;
#define glGetnPixelMapfvARB glflglGetnPixelMapfvARB
extern PFNGLMULTITEXPARAMETERIEXTPROC glflglMultiTexParameteriEXT;
#define glMultiTexParameteriEXT glflglMultiTexParameteriEXT
extern PFNGLNORMAL3SVPROC glflglNormal3sv;
#define glNormal3sv glflglNormal3sv
extern PFNGLFREEOBJECTBUFFERATIPROC glflglFreeObjectBufferATI;
#define glFreeObjectBufferATI glflglFreeObjectBufferATI
extern PFNGLTEXSTORAGE3DEXTPROC glflglTexStorage3DEXT;
#define glTexStorage3DEXT glflglTexStorage3DEXT
extern PFNGLDRAWBUFFERSNVPROC glflglDrawBuffersNV;
#define glDrawBuffersNV glflglDrawBuffersNV
extern PFNGLBLENDBARRIERNVPROC glflglBlendBarrierNV;
#define glBlendBarrierNV glflglBlendBarrierNV
extern PFNGLUNIFORM4I64VNVPROC glflglUniform4i64vNV;
#define glUniform4i64vNV glflglUniform4i64vNV
extern PFNGLGETNUNIFORMUIVARBPROC glflglGetnUniformuivARB;
#define glGetnUniformuivARB glflglGetnUniformuivARB
extern PFNGLEDGEFLAGVPROC glflglEdgeFlagv;
#define glEdgeFlagv glflglEdgeFlagv
extern PFNGLBLENDFUNCSEPARATEEXTPROC glflglBlendFuncSeparateEXT;
#define glBlendFuncSeparateEXT glflglBlendFuncSeparateEXT
extern PFNGLCONVOLUTIONPARAMETERIVEXTPROC glflglConvolutionParameterivEXT;
#define glConvolutionParameterivEXT glflglConvolutionParameterivEXT
extern PFNGLPIXELTEXGENSGIXPROC glflglPixelTexGenSGIX;
#define glPixelTexGenSGIX glflglPixelTexGenSGIX
extern PFNGLGETPATHTEXGENIVNVPROC glflglGetPathTexGenivNV;
#define glGetPathTexGenivNV glflglGetPathTexGenivNV
extern PFNGLUNIFORMMATRIX4X3DVPROC glflglUniformMatrix4x3dv;
#define glUniformMatrix4x3dv glflglUniformMatrix4x3dv
extern PFNGLVERTEXATTRIBDIVISORANGLEPROC glflglVertexAttribDivisorANGLE;
#define glVertexAttribDivisorANGLE glflglVertexAttribDivisorANGLE
extern PFNGLGETVIDEOCAPTURESTREAMIVNVPROC glflglGetVideoCaptureStreamivNV;
#define glGetVideoCaptureStreamivNV glflglGetVideoCaptureStreamivNV
extern PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC glflglMakeImageHandleNonResidentARB;
#define glMakeImageHandleNonResidentARB glflglMakeImageHandleNonResidentARB
extern PFNGLDRAWELEMENTSINSTANCEDANGLEPROC glflglDrawElementsInstancedANGLE;
#define glDrawElementsInstancedANGLE glflglDrawElementsInstancedANGLE
extern PFNGLSECONDARYCOLOR3DEXTPROC glflglSecondaryColor3dEXT;
#define glSecondaryColor3dEXT glflglSecondaryColor3dEXT
extern PFNGLDELETEQUERIESPROC glflglDeleteQueries;
#define glDeleteQueries glflglDeleteQueries
extern PFNGLNORMALP3UIVPROC glflglNormalP3uiv;
#define glNormalP3uiv glflglNormalP3uiv
extern PFNGLGETUNIFORMFVARBPROC glflglGetUniformfvARB;
#define glGetUniformfvARB glflglGetUniformfvARB
extern PFNGLINITNAMESPROC glflglInitNames;
#define glInitNames glflglInitNames
extern PFNGLBINORMAL3FVEXTPROC glflglBinormal3fvEXT;
#define glBinormal3fvEXT glflglBinormal3fvEXT
extern PFNGLCOLOR3DVPROC glflglColor3dv;
#define glColor3dv glflglColor3dv
extern PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC glflglVertexArrayVertexAttribDivisorEXT;
#define glVertexArrayVertexAttribDivisorEXT glflglVertexArrayVertexAttribDivisorEXT
extern PFNGLARRAYELEMENTEXTPROC glflglArrayElementEXT;
#define glArrayElementEXT glflglArrayElementEXT
extern PFNGLGETNMINMAXPROC glflglGetnMinmax;
#define glGetnMinmax glflglGetnMinmax
extern PFNGLINDEXXOESPROC glflglIndexxOES;
#define glIndexxOES glflglIndexxOES
extern PFNGLUNIFORM3UIVEXTPROC glflglUniform3uivEXT;
#define glUniform3uivEXT glflglUniform3uivEXT
extern PFNGLPOPGROUPMARKEREXTPROC glflglPopGroupMarkerEXT;
#define glPopGroupMarkerEXT glflglPopGroupMarkerEXT
extern PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC glflglClearNamedFramebufferuiv;
#define glClearNamedFramebufferuiv glflglClearNamedFramebufferuiv
extern PFNGLSETLOCALCONSTANTEXTPROC glflglSetLocalConstantEXT;
#define glSetLocalConstantEXT glflglSetLocalConstantEXT
extern PFNGLPROGRAMUNIFORM1UI64NVPROC glflglProgramUniform1ui64NV;
#define glProgramUniform1ui64NV glflglProgramUniform1ui64NV
extern PFNGLCOLOR4HVNVPROC glflglColor4hvNV;
#define glColor4hvNV glflglColor4hvNV
extern PFNGLGETVERTEXATTRIBFVPROC glflglGetVertexAttribfv;
#define glGetVertexAttribfv glflglGetVertexAttribfv
extern PFNGLDISPATCHCOMPUTEPROC glflglDispatchCompute;
#define glDispatchCompute glflglDispatchCompute
extern PFNGLBUFFERSTORAGEEXTPROC glflglBufferStorageEXT;
#define glBufferStorageEXT glflglBufferStorageEXT
extern PFNGLGETACTIVEATTRIBPROC glflglGetActiveAttrib;
#define glGetActiveAttrib glflglGetActiveAttrib
extern PFNGLPIXELTRANSFERIPROC glflglPixelTransferi;
#define glPixelTransferi glflglPixelTransferi
extern PFNGLTEXSUBIMAGE2DPROC glflglTexSubImage2D;
#define glTexSubImage2D glflglTexSubImage2D
extern PFNGLGETNMINMAXARBPROC glflglGetnMinmaxARB;
#define glGetnMinmaxARB glflglGetnMinmaxARB
extern PFNGLLOGICOPPROC glflglLogicOp;
#define glLogicOp glflglLogicOp
extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glflglProgramUniformMatrix3x4fv;
#define glProgramUniformMatrix3x4fv glflglProgramUniformMatrix3x4fv
extern PFNGLWINDOWPOS4IMESAPROC glflglWindowPos4iMESA;
#define glWindowPos4iMESA glflglWindowPos4iMESA
extern PFNGLPIXELTRANSFERFPROC glflglPixelTransferf;
#define glPixelTransferf glflglPixelTransferf
extern PFNGLGETTEXTUREPARAMETERIUIVPROC glflglGetTextureParameterIuiv;
#define glGetTextureParameterIuiv glflglGetTextureParameterIuiv
extern PFNGLMULTITEXCOORD1XOESPROC glflglMultiTexCoord1xOES;
#define glMultiTexCoord1xOES glflglMultiTexCoord1xOES
extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glflglProgramUniformMatrix4dv;
#define glProgramUniformMatrix4dv glflglProgramUniformMatrix4dv
extern PFNGLBINDVERTEXARRAYOESPROC glflglBindVertexArrayOES;
#define glBindVertexArrayOES glflglBindVertexArrayOES
extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glflglFramebufferTexture1DEXT;
#define glFramebufferTexture1DEXT glflglFramebufferTexture1DEXT
extern PFNGLIMAGETRANSFORMPARAMETERFHPPROC glflglImageTransformParameterfHP;
#define glImageTransformParameterfHP glflglImageTransformParameterfHP
extern PFNGLTEXTUREPARAMETERIIVPROC glflglTextureParameterIiv;
#define glTextureParameterIiv glflglTextureParameterIiv
extern PFNGLUNIFORMMATRIX3X4DVPROC glflglUniformMatrix3x4dv;
#define glUniformMatrix3x4dv glflglUniformMatrix3x4dv
extern PFNGLGETSEPARABLEFILTEREXTPROC glflglGetSeparableFilterEXT;
#define glGetSeparableFilterEXT glflglGetSeparableFilterEXT
extern PFNGLMULTITEXCOORD3IARBPROC glflglMultiTexCoord3iARB;
#define glMultiTexCoord3iARB glflglMultiTexCoord3iARB
extern PFNGLRASTERPOS4XVOESPROC glflglRasterPos4xvOES;
#define glRasterPos4xvOES glflglRasterPos4xvOES
extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glflglDrawTransformFeedbackStream;
#define glDrawTransformFeedbackStream glflglDrawTransformFeedbackStream
extern PFNGLSTENCILSTROKEPATHNVPROC glflglStencilStrokePathNV;
#define glStencilStrokePathNV glflglStencilStrokePathNV
extern PFNGLVERTEX3HVNVPROC glflglVertex3hvNV;
#define glVertex3hvNV glflglVertex3hvNV
extern PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC glflglVertexArrayMultiTexCoordOffsetEXT;
#define glVertexArrayMultiTexCoordOffsetEXT glflglVertexArrayMultiTexCoordOffsetEXT
extern PFNGLPROVOKINGVERTEXPROC glflglProvokingVertex;
#define glProvokingVertex glflglProvokingVertex
extern PFNGLACCUMXOESPROC glflglAccumxOES;
#define glAccumxOES glflglAccumxOES
extern PFNGLSHADERBINARYPROC glflglShaderBinary;
#define glShaderBinary glflglShaderBinary
extern PFNGLGETMULTITEXGENIVEXTPROC glflglGetMultiTexGenivEXT;
#define glGetMultiTexGenivEXT glflglGetMultiTexGenivEXT
extern PFNGLGETFLOATINDEXEDVEXTPROC glflglGetFloatIndexedvEXT;
#define glGetFloatIndexedvEXT glflglGetFloatIndexedvEXT
extern PFNGLCREATESTATESNVPROC glflglCreateStatesNV;
#define glCreateStatesNV glflglCreateStatesNV
extern PFNGLCLEARDEPTHDNVPROC glflglClearDepthdNV;
#define glClearDepthdNV glflglClearDepthdNV
extern PFNGLCLEARCOLORIUIEXTPROC glflglClearColorIuiEXT;
#define glClearColorIuiEXT glflglClearColorIuiEXT
extern PFNGLBINDMULTITEXTUREEXTPROC glflglBindMultiTextureEXT;
#define glBindMultiTextureEXT glflglBindMultiTextureEXT
extern PFNGLTEXGENIVPROC glflglTexGeniv;
#define glTexGeniv glflglTexGeniv
extern PFNGLDRAWELEMENTSPROC glflglDrawElements;
#define glDrawElements glflglDrawElements
extern PFNGLCONVOLUTIONFILTER1DEXTPROC glflglConvolutionFilter1DEXT;
#define glConvolutionFilter1DEXT glflglConvolutionFilter1DEXT
extern PFNGLDISABLEVERTEXARRAYEXTPROC glflglDisableVertexArrayEXT;
#define glDisableVertexArrayEXT glflglDisableVertexArrayEXT
extern PFNGLPROGRAMUNIFORM3UI64NVPROC glflglProgramUniform3ui64NV;
#define glProgramUniform3ui64NV glflglProgramUniform3ui64NV
extern PFNGLCLIENTACTIVETEXTUREPROC glflglClientActiveTexture;
#define glClientActiveTexture glflglClientActiveTexture
extern PFNGLDELETEASYNCMARKERSSGIXPROC glflglDeleteAsyncMarkersSGIX;
#define glDeleteAsyncMarkersSGIX glflglDeleteAsyncMarkersSGIX
extern PFNGLUNIFORM1IVPROC glflglUniform1iv;
#define glUniform1iv glflglUniform1iv
extern PFNGLVERTEXATTRIBARRAYOBJECTATIPROC glflglVertexAttribArrayObjectATI;
#define glVertexAttribArrayObjectATI glflglVertexAttribArrayObjectATI
extern PFNGLDRAWARRAYSINSTANCEDPROC glflglDrawArraysInstanced;
#define glDrawArraysInstanced glflglDrawArraysInstanced
extern PFNGLVERTEXATTRIB2SNVPROC glflglVertexAttrib2sNV;
#define glVertexAttrib2sNV glflglVertexAttrib2sNV
extern PFNGLTEXBUFFEREXTPROC glflglTexBufferEXT;
#define glTexBufferEXT glflglTexBufferEXT
extern PFNGLVERTEXSTREAM2FATIPROC glflglVertexStream2fATI;
#define glVertexStream2fATI glflglVertexStream2fATI
extern PFNGLMATRIXINDEXPOINTEROESPROC glflglMatrixIndexPointerOES;
#define glMatrixIndexPointerOES glflglMatrixIndexPointerOES
extern PFNGLDEBUGMESSAGECALLBACKAMDPROC glflglDebugMessageCallbackAMD;
#define glDebugMessageCallbackAMD glflglDebugMessageCallbackAMD
extern PFNGLDRAWTEXIOESPROC glflglDrawTexiOES;
#define glDrawTexiOES glflglDrawTexiOES
extern PFNGLMULTITEXCOORD2DARBPROC glflglMultiTexCoord2dARB;
#define glMultiTexCoord2dARB glflglMultiTexCoord2dARB
extern PFNGLVERTEXATTRIB4UIVPROC glflglVertexAttrib4uiv;
#define glVertexAttrib4uiv glflglVertexAttrib4uiv
extern PFNGLENDQUERYINDEXEDPROC glflglEndQueryIndexed;
#define glEndQueryIndexed glflglEndQueryIndexed
extern PFNGLDELETEBUFFERSARBPROC glflglDeleteBuffersARB;
#define glDeleteBuffersARB glflglDeleteBuffersARB
extern PFNGLNORMALSTREAM3SATIPROC glflglNormalStream3sATI;
#define glNormalStream3sATI glflglNormalStream3sATI
extern PFNGLPROGRAMPARAMETERIARBPROC glflglProgramParameteriARB;
#define glProgramParameteriARB glflglProgramParameteriARB
extern PFNGLTEXENVXOESPROC glflglTexEnvxOES;
#define glTexEnvxOES glflglTexEnvxOES
extern PFNGLPROGRAMUNIFORM1IVPROC glflglProgramUniform1iv;
#define glProgramUniform1iv glflglProgramUniform1iv
extern PFNGLDISABLEVERTEXATTRIBAPPLEPROC glflglDisableVertexAttribAPPLE;
#define glDisableVertexAttribAPPLE glflglDisableVertexAttribAPPLE
extern PFNGLVARIANTUIVEXTPROC glflglVariantuivEXT;
#define glVariantuivEXT glflglVariantuivEXT
extern PFNGLBINDRENDERBUFFERPROC glflglBindRenderbuffer;
#define glBindRenderbuffer glflglBindRenderbuffer
extern PFNGLMATERIALIVPROC glflglMaterialiv;
#define glMaterialiv glflglMaterialiv
extern PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC glflglProgramUniformHandleui64vNV;
#define glProgramUniformHandleui64vNV glflglProgramUniformHandleui64vNV
extern PFNGLVERTEXATTRIBS3HVNVPROC glflglVertexAttribs3hvNV;
#define glVertexAttribs3hvNV glflglVertexAttribs3hvNV
extern PFNGLISPROGRAMPROC glflglIsProgram;
#define glIsProgram glflglIsProgram
extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glflglMultiDrawElementsIndirectAMD;
#define glMultiDrawElementsIndirectAMD glflglMultiDrawElementsIndirectAMD
extern PFNGLMULTITEXCOORD4FVARBPROC glflglMultiTexCoord4fvARB;
#define glMultiTexCoord4fvARB glflglMultiTexCoord4fvARB
extern PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC glflglGetLocalConstantBooleanvEXT;
#define glGetLocalConstantBooleanvEXT glflglGetLocalConstantBooleanvEXT
extern PFNGLUNIFORMMATRIX3X2DVPROC glflglUniformMatrix3x2dv;
#define glUniformMatrix3x2dv glflglUniformMatrix3x2dv
extern PFNGLVERTEXATTRIB4FVPROC glflglVertexAttrib4fv;
#define glVertexAttrib4fv glflglVertexAttrib4fv
extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glflglProgramUniformMatrix2x3dv;
#define glProgramUniformMatrix2x3dv glflglProgramUniformMatrix2x3dv
extern PFNGLGETNPIXELMAPFVPROC glflglGetnPixelMapfv;
#define glGetnPixelMapfv glflglGetnPixelMapfv
extern PFNGLTEXCOORD3XOESPROC glflglTexCoord3xOES;
#define glTexCoord3xOES glflglTexCoord3xOES
extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glflglLoadTransposeMatrixfARB;
#define glLoadTransposeMatrixfARB glflglLoadTransposeMatrixfARB
extern PFNGLIMAGETRANSFORMPARAMETERIHPPROC glflglImageTransformParameteriHP;
#define glImageTransformParameteriHP glflglImageTransformParameteriHP
extern PFNGLMULTITEXCOORD4XOESPROC glflglMultiTexCoord4xOES;
#define glMultiTexCoord4xOES glflglMultiTexCoord4xOES
extern PFNGLGETMAPPARAMETERIVNVPROC glflglGetMapParameterivNV;
#define glGetMapParameterivNV glflglGetMapParameterivNV
extern PFNGLVERTEXATTRIB2FVPROC glflglVertexAttrib2fv;
#define glVertexAttrib2fv glflglVertexAttrib2fv
extern PFNGLUNIFORM3UI64NVPROC glflglUniform3ui64NV;
#define glUniform3ui64NV glflglUniform3ui64NV
extern PFNGLCOMBINERPARAMETERFVNVPROC glflglCombinerParameterfvNV;
#define glCombinerParameterfvNV glflglCombinerParameterfvNV
extern PFNGLGENVERTEXARRAYSPROC glflglGenVertexArrays;
#define glGenVertexArrays glflglGenVertexArrays
extern PFNGLMULTITEXCOORD3XOESPROC glflglMultiTexCoord3xOES;
#define glMultiTexCoord3xOES glflglMultiTexCoord3xOES
extern PFNGLBEGINCONDITIONALRENDERNVPROC glflglBeginConditionalRenderNV;
#define glBeginConditionalRenderNV glflglBeginConditionalRenderNV
extern PFNGLDISABLECLIENTSTATEPROC glflglDisableClientState;
#define glDisableClientState glflglDisableClientState
extern PFNGLPATHFOGGENNVPROC glflglPathFogGenNV;
#define glPathFogGenNV glflglPathFogGenNV
extern PFNGLSTENCILTHENCOVERFILLPATHNVPROC glflglStencilThenCoverFillPathNV;
#define glStencilThenCoverFillPathNV glflglStencilThenCoverFillPathNV
extern PFNGLVERTEXARRAYINDEXOFFSETEXTPROC glflglVertexArrayIndexOffsetEXT;
#define glVertexArrayIndexOffsetEXT glflglVertexArrayIndexOffsetEXT
extern PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC glflglProgramBufferParametersIuivNV;
#define glProgramBufferParametersIuivNV glflglProgramBufferParametersIuivNV
extern PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC glflglPixelTransformParameterivEXT;
#define glPixelTransformParameterivEXT glflglPixelTransformParameterivEXT
extern PFNGLDISABLECLIENTSTATEIEXTPROC glflglDisableClientStateiEXT;
#define glDisableClientStateiEXT glflglDisableClientStateiEXT
extern PFNGLGETCLIPPLANEXPROC glflglGetClipPlanex;
#define glGetClipPlanex glflglGetClipPlanex
extern PFNGLISSYNCAPPLEPROC glflglIsSyncAPPLE;
#define glIsSyncAPPLE glflglIsSyncAPPLE
extern PFNGLGETLOCALCONSTANTINTEGERVEXTPROC glflglGetLocalConstantIntegervEXT;
#define glGetLocalConstantIntegervEXT glflglGetLocalConstantIntegervEXT
extern PFNGLCOLOR4UIVPROC glflglColor4uiv;
#define glColor4uiv glflglColor4uiv
extern PFNGLPROGRAMUNIFORM3IPROC glflglProgramUniform3i;
#define glProgramUniform3i glflglProgramUniform3i
extern PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC glflglMultiDrawElementsIndirectBindlessCountNV;
#define glMultiDrawElementsIndirectBindlessCountNV glflglMultiDrawElementsIndirectBindlessCountNV
extern PFNGLGETBUFFERPOINTERVARBPROC glflglGetBufferPointervARB;
#define glGetBufferPointervARB glflglGetBufferPointervARB
extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glflglMultiTexParameterIuivEXT;
#define glMultiTexParameterIuivEXT glflglMultiTexParameterIuivEXT
extern PFNGLEVALMESH2PROC glflglEvalMesh2;
#define glEvalMesh2 glflglEvalMesh2
extern PFNGLGETCLIPPLANEFPROC glflglGetClipPlanef;
#define glGetClipPlanef glflglGetClipPlanef
extern PFNGLPROGRAMUNIFORM3FPROC glflglProgramUniform3f;
#define glProgramUniform3f glflglProgramUniform3f
extern PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC glflglStencilThenCoverFillPathInstancedNV;
#define glStencilThenCoverFillPathInstancedNV glflglStencilThenCoverFillPathInstancedNV
extern PFNGLPROGRAMUNIFORM3DPROC glflglProgramUniform3d;
#define glProgramUniform3d glflglProgramUniform3d
extern PFNGLMAPVERTEXATTRIB1DAPPLEPROC glflglMapVertexAttrib1dAPPLE;
#define glMapVertexAttrib1dAPPLE glflglMapVertexAttrib1dAPPLE
extern PFNGLEVALCOORD2FVPROC glflglEvalCoord2fv;
#define glEvalCoord2fv glflglEvalCoord2fv
extern PFNGLLOADTRANSPOSEMATRIXDPROC glflglLoadTransposeMatrixd;
#define glLoadTransposeMatrixd glflglLoadTransposeMatrixd
extern PFNGLLOADTRANSPOSEMATRIXFPROC glflglLoadTransposeMatrixf;
#define glLoadTransposeMatrixf glflglLoadTransposeMatrixf
extern PFNGLGETPOINTERVEXTPROC glflglGetPointervEXT;
#define glGetPointervEXT glflglGetPointervEXT
extern PFNGLENDCONDITIONALRENDERNVPROC glflglEndConditionalRenderNV;
#define glEndConditionalRenderNV glflglEndConditionalRenderNV
extern PFNGLMULTITEXCOORD2BVOESPROC glflglMultiTexCoord2bvOES;
#define glMultiTexCoord2bvOES glflglMultiTexCoord2bvOES
extern PFNGLROTATEXOESPROC glflglRotatexOES;
#define glRotatexOES glflglRotatexOES
extern PFNGLPROGRAMUNIFORM2UIEXTPROC glflglProgramUniform2uiEXT;
#define glProgramUniform2uiEXT glflglProgramUniform2uiEXT
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC glflglRenderbufferStorageMultisampleAPPLE;
#define glRenderbufferStorageMultisampleAPPLE glflglRenderbufferStorageMultisampleAPPLE
extern PFNGLVERTEXATTRIBI1UIPROC glflglVertexAttribI1ui;
#define glVertexAttribI1ui glflglVertexAttribI1ui
extern PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC glflglFramebufferTexture2DMultisampleIMG;
#define glFramebufferTexture2DMultisampleIMG glflglFramebufferTexture2DMultisampleIMG
extern PFNGLCOMPILECOMMANDLISTNVPROC glflglCompileCommandListNV;
#define glCompileCommandListNV glflglCompileCommandListNV
extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glflglGetRenderbufferParameterivEXT;
#define glGetRenderbufferParameterivEXT glflglGetRenderbufferParameterivEXT
extern PFNGLGETNPOLYGONSTIPPLEPROC glflglGetnPolygonStipple;
#define glGetnPolygonStipple glflglGetnPolygonStipple
extern PFNGLISBUFFERRESIDENTNVPROC glflglIsBufferResidentNV;
#define glIsBufferResidentNV glflglIsBufferResidentNV
extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glflglGetNamedRenderbufferParameterivEXT;
#define glGetNamedRenderbufferParameterivEXT glflglGetNamedRenderbufferParameterivEXT
extern PFNGLTEXCOORD2XVOESPROC glflglTexCoord2xvOES;
#define glTexCoord2xvOES glflglTexCoord2xvOES
extern PFNGLMULTITEXGENDVEXTPROC glflglMultiTexGendvEXT;
#define glMultiTexGendvEXT glflglMultiTexGendvEXT
extern PFNGLVERTEXARRAYRANGENVPROC glflglVertexArrayRangeNV;
#define glVertexArrayRangeNV glflglVertexArrayRangeNV
extern PFNGLISTEXTUREHANDLERESIDENTNVPROC glflglIsTextureHandleResidentNV;
#define glIsTextureHandleResidentNV glflglIsTextureHandleResidentNV
extern PFNGLPOINTPARAMETERXVOESPROC glflglPointParameterxvOES;
#define glPointParameterxvOES glflglPointParameterxvOES
extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glflglGetProgramEnvParameterdvARB;
#define glGetProgramEnvParameterdvARB glflglGetProgramEnvParameterdvARB
extern PFNGLISNAMEDSTRINGARBPROC glflglIsNamedStringARB;
#define glIsNamedStringARB glflglIsNamedStringARB
extern PFNGLSECONDARYCOLORFORMATNVPROC glflglSecondaryColorFormatNV;
#define glSecondaryColorFormatNV glflglSecondaryColorFormatNV
extern PFNGLVERTEXATTRIB4UBVNVPROC glflglVertexAttrib4ubvNV;
#define glVertexAttrib4ubvNV glflglVertexAttrib4ubvNV
extern PFNGLINVALIDATETEXSUBIMAGEPROC glflglInvalidateTexSubImage;
#define glInvalidateTexSubImage glflglInvalidateTexSubImage
extern PFNGLVDPAUUNREGISTERSURFACENVPROC glflglVDPAUUnregisterSurfaceNV;
#define glVDPAUUnregisterSurfaceNV glflglVDPAUUnregisterSurfaceNV
extern PFNGLGETPERFQUERYIDBYNAMEINTELPROC glflglGetPerfQueryIdByNameINTEL;
#define glGetPerfQueryIdByNameINTEL glflglGetPerfQueryIdByNameINTEL
extern PFNGLGETINTEGER64VPROC glflglGetInteger64v;
#define glGetInteger64v glflglGetInteger64v
extern PFNGLCLIPPLANEPROC glflglClipPlane;
#define glClipPlane glflglClipPlane
extern PFNGLCOLOR4UBVERTEX3FSUNPROC glflglColor4ubVertex3fSUN;
#define glColor4ubVertex3fSUN glflglColor4ubVertex3fSUN
extern PFNGLINDEXUBPROC glflglIndexub;
#define glIndexub glflglIndexub
extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glflglGetProgramEnvParameterfvARB;
#define glGetProgramEnvParameterfvARB glflglGetProgramEnvParameterfvARB
extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glflglGetNamedFramebufferAttachmentParameteriv;
#define glGetNamedFramebufferAttachmentParameteriv glflglGetNamedFramebufferAttachmentParameteriv
extern PFNGLVERTEXATTRIB4USVARBPROC glflglVertexAttrib4usvARB;
#define glVertexAttrib4usvARB glflglVertexAttrib4usvARB
extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glflglNamedFramebufferRenderbuffer;
#define glNamedFramebufferRenderbuffer glflglNamedFramebufferRenderbuffer
extern PFNGLGETHANDLEARBPROC glflglGetHandleARB;
#define glGetHandleARB glflglGetHandleARB
extern PFNGLWEIGHTBVARBPROC glflglWeightbvARB;
#define glWeightbvARB glflglWeightbvARB
extern PFNGLTESTFENCEAPPLEPROC glflglTestFenceAPPLE;
#define glTestFenceAPPLE glflglTestFenceAPPLE
extern PFNGLVERTEXATTRIB4NIVPROC glflglVertexAttrib4Niv;
#define glVertexAttrib4Niv glflglVertexAttrib4Niv
extern PFNGLCLEARBUFFERIVPROC glflglClearBufferiv;
#define glClearBufferiv glflglClearBufferiv
extern PFNGLCOLORP4UIVPROC glflglColorP4uiv;
#define glColorP4uiv glflglColorP4uiv
extern PFNGLVERTEXATTRIB4IVARBPROC glflglVertexAttrib4ivARB;
#define glVertexAttrib4ivARB glflglVertexAttrib4ivARB
extern PFNGLCALLCOMMANDLISTNVPROC glflglCallCommandListNV;
#define glCallCommandListNV glflglCallCommandListNV
extern PFNGLMAKEBUFFERRESIDENTNVPROC glflglMakeBufferResidentNV;
#define glMakeBufferResidentNV glflglMakeBufferResidentNV
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC glflglDrawElementsInstancedBaseVertexOES;
#define glDrawElementsInstancedBaseVertexOES glflglDrawElementsInstancedBaseVertexOES
extern PFNGLNAMEDSTRINGARBPROC glflglNamedStringARB;
#define glNamedStringARB glflglNamedStringARB
extern PFNGLVDPAUSURFACEACCESSNVPROC glflglVDPAUSurfaceAccessNV;
#define glVDPAUSurfaceAccessNV glflglVDPAUSurfaceAccessNV
extern PFNGLCLIPPLANEFIMGPROC glflglClipPlanefIMG;
#define glClipPlanefIMG glflglClipPlanefIMG
extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glflglGetActiveSubroutineUniformName;
#define glGetActiveSubroutineUniformName glflglGetActiveSubroutineUniformName
extern PFNGLGETNHISTOGRAMARBPROC glflglGetnHistogramARB;
#define glGetnHistogramARB glflglGetnHistogramARB
extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glflglGetTextureLevelParameterfv;
#define glGetTextureLevelParameterfv glflglGetTextureLevelParameterfv
extern PFNGLMULTITEXCOORD1FVPROC glflglMultiTexCoord1fv;
#define glMultiTexCoord1fv glflglMultiTexCoord1fv
extern PFNGLBITMAPXOESPROC glflglBitmapxOES;
#define glBitmapxOES glflglBitmapxOES
extern PFNGLGETSAMPLERPARAMETERIUIVPROC glflglGetSamplerParameterIuiv;
#define glGetSamplerParameterIuiv glflglGetSamplerParameterIuiv
extern PFNGLTEXCOORDP3UIPROC glflglTexCoordP3ui;
#define glTexCoordP3ui glflglTexCoordP3ui
extern PFNGLEXTGETPROGRAMSQCOMPROC glflglExtGetProgramsQCOM;
#define glExtGetProgramsQCOM glflglExtGetProgramsQCOM
extern PFNGLTEXTURESUBIMAGE1DPROC glflglTextureSubImage1D;
#define glTextureSubImage1D glflglTextureSubImage1D
extern PFNGLCLEARDEPTHXPROC glflglClearDepthx;
#define glClearDepthx glflglClearDepthx
extern PFNGLFOGXVOESPROC glflglFogxvOES;
#define glFogxvOES glflglFogxvOES
extern PFNGLWINDOWPOS3SPROC glflglWindowPos3s;
#define glWindowPos3s glflglWindowPos3s
extern PFNGLVERTEXATTRIBS2SVNVPROC glflglVertexAttribs2svNV;
#define glVertexAttribs2svNV glflglVertexAttribs2svNV
extern PFNGLCLEARDEPTHFPROC glflglClearDepthf;
#define glClearDepthf glflglClearDepthf
extern PFNGLWINDOWPOS3IPROC glflglWindowPos3i;
#define glWindowPos3i glflglWindowPos3i
extern PFNGLWINDOWPOS3DPROC glflglWindowPos3d;
#define glWindowPos3d glflglWindowPos3d
extern PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC glflglGetPerfMonitorCounterStringAMD;
#define glGetPerfMonitorCounterStringAMD glflglGetPerfMonitorCounterStringAMD
extern PFNGLISENABLEDINDEXEDEXTPROC glflglIsEnabledIndexedEXT;
#define glIsEnabledIndexedEXT glflglIsEnabledIndexedEXT
extern PFNGLGETNAMEDPROGRAMIVEXTPROC glflglGetNamedProgramivEXT;
#define glGetNamedProgramivEXT glflglGetNamedProgramivEXT
extern PFNGLISFENCENVPROC glflglIsFenceNV;
#define glIsFenceNV glflglIsFenceNV
extern PFNGLCOLOR3USPROC glflglColor3us;
#define glColor3us glflglColor3us
extern PFNGLBEGINPERFMONITORAMDPROC glflglBeginPerfMonitorAMD;
#define glBeginPerfMonitorAMD glflglBeginPerfMonitorAMD
extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glflglProgramUniformMatrix4x3dv;
#define glProgramUniformMatrix4x3dv glflglProgramUniformMatrix4x3dv
extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glflglGetNamedProgramLocalParameterIuivEXT;
#define glGetNamedProgramLocalParameterIuivEXT glflglGetNamedProgramLocalParameterIuivEXT
extern PFNGLEXTGETBUFFERPOINTERVQCOMPROC glflglExtGetBufferPointervQCOM;
#define glExtGetBufferPointervQCOM glflglExtGetBufferPointervQCOM
extern PFNGLMULTITEXCOORD4XPROC glflglMultiTexCoord4x;
#define glMultiTexCoord4x glflglMultiTexCoord4x
extern PFNGLMULTITEXCOORD4FPROC glflglMultiTexCoord4f;
#define glMultiTexCoord4f glflglMultiTexCoord4f
extern PFNGLCOLOR3UBPROC glflglColor3ub;
#define glColor3ub glflglColor3ub
extern PFNGLMULTITEXCOORD4DPROC glflglMultiTexCoord4d;
#define glMultiTexCoord4d glflglMultiTexCoord4d
extern PFNGLVERTEXATTRIBL3UI64NVPROC glflglVertexAttribL3ui64NV;
#define glVertexAttribL3ui64NV glflglVertexAttribL3ui64NV
extern PFNGLEGLIMAGETARGETTEXTURE2DOESPROC glflglEGLImageTargetTexture2DOES;
#define glEGLImageTargetTexture2DOES glflglEGLImageTargetTexture2DOES
extern PFNGLCOLOR3UIPROC glflglColor3ui;
#define glColor3ui glflglColor3ui
extern PFNGLPROGRAMUNIFORM4FVEXTPROC glflglProgramUniform4fvEXT;
#define glProgramUniform4fvEXT glflglProgramUniform4fvEXT
extern PFNGLVERTEXATTRIB2SARBPROC glflglVertexAttrib2sARB;
#define glVertexAttrib2sARB glflglVertexAttrib2sARB
extern PFNGLMULTITEXCOORD4IPROC glflglMultiTexCoord4i;
#define glMultiTexCoord4i glflglMultiTexCoord4i
extern PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC glflglCheckFramebufferStatusEXT;
#define glCheckFramebufferStatusEXT glflglCheckFramebufferStatusEXT
extern PFNGLGETNMAPIVARBPROC glflglGetnMapivARB;
#define glGetnMapivARB glflglGetnMapivARB
extern PFNGLMULTITEXCOORD1IVARBPROC glflglMultiTexCoord1ivARB;
#define glMultiTexCoord1ivARB glflglMultiTexCoord1ivARB
extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glflglDisableVertexAttribArrayARB;
#define glDisableVertexAttribArrayARB glflglDisableVertexAttribArrayARB
extern PFNGLGETPOLYGONSTIPPLEPROC glflglGetPolygonStipple;
#define glGetPolygonStipple glflglGetPolygonStipple
extern PFNGLVERTEXATTRIBI4UIPROC glflglVertexAttribI4ui;
#define glVertexAttribI4ui glflglVertexAttribI4ui
extern PFNGLGETPATHDASHARRAYNVPROC glflglGetPathDashArrayNV;
#define glGetPathDashArrayNV glflglGetPathDashArrayNV
extern PFNGLMULTITEXRENDERBUFFEREXTPROC glflglMultiTexRenderbufferEXT;
#define glMultiTexRenderbufferEXT glflglMultiTexRenderbufferEXT
extern PFNGLTEXCOORD4FVERTEX4FSUNPROC glflglTexCoord4fVertex4fSUN;
#define glTexCoord4fVertex4fSUN glflglTexCoord4fVertex4fSUN
extern PFNGLCOLORMASKPROC glflglColorMask;
#define glColorMask glflglColorMask
extern PFNGLVERTEX4HVNVPROC glflglVertex4hvNV;
#define glVertex4hvNV glflglVertex4hvNV
extern PFNGLGETNTEXIMAGEPROC glflglGetnTexImage;
#define glGetnTexImage glflglGetnTexImage
extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glflglProgramLocalParameter4dARB;
#define glProgramLocalParameter4dARB glflglProgramLocalParameter4dARB
extern PFNGLBLENDEQUATIONPROC glflglBlendEquation;
#define glBlendEquation glflglBlendEquation
extern PFNGLUNLOCKARRAYSEXTPROC glflglUnlockArraysEXT;
#define glUnlockArraysEXT glflglUnlockArraysEXT
extern PFNGLGETQUERYOBJECTUI64VEXTPROC glflglGetQueryObjectui64vEXT;
#define glGetQueryObjectui64vEXT glflglGetQueryObjectui64vEXT
extern PFNGLVERTEXATTRIBI4UIVEXTPROC glflglVertexAttribI4uivEXT;
#define glVertexAttribI4uivEXT glflglVertexAttribI4uivEXT
extern PFNGLMULTITEXCOORD3DVPROC glflglMultiTexCoord3dv;
#define glMultiTexCoord3dv glflglMultiTexCoord3dv
extern PFNGLCOLOR4SVPROC glflglColor4sv;
#define glColor4sv glflglColor4sv
extern PFNGLVERTEXSTREAM4IVATIPROC glflglVertexStream4ivATI;
#define glVertexStream4ivATI glflglVertexStream4ivATI
extern PFNGLPOPCLIENTATTRIBPROC glflglPopClientAttrib;
#define glPopClientAttrib glflglPopClientAttrib
extern PFNGLCLEARBUFFERDATAPROC glflglClearBufferData;
#define glClearBufferData glflglClearBufferData
extern PFNGLGETPROGRAMIVNVPROC glflglGetProgramivNV;
#define glGetProgramivNV glflglGetProgramivNV
extern PFNGLBEGINTRANSFORMFEEDBACKPROC glflglBeginTransformFeedback;
#define glBeginTransformFeedback glflglBeginTransformFeedback
extern PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC glflglTransformFeedbackAttribsNV;
#define glTransformFeedbackAttribsNV glflglTransformFeedbackAttribsNV
extern PFNGLCOLOR3IVPROC glflglColor3iv;
#define glColor3iv glflglColor3iv
extern PFNGLCOMPRESSEDTEXIMAGE1DPROC glflglCompressedTexImage1D;
#define glCompressedTexImage1D glflglCompressedTexImage1D
extern PFNGLDELETETRANSFORMFEEDBACKSPROC glflglDeleteTransformFeedbacks;
#define glDeleteTransformFeedbacks glflglDeleteTransformFeedbacks
extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glflglDrawRangeElementsBaseVertex;
#define glDrawRangeElementsBaseVertex glflglDrawRangeElementsBaseVertex
extern PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC glflglTextureStorage3DMultisampleEXT;
#define glTextureStorage3DMultisampleEXT glflglTextureStorage3DMultisampleEXT
extern PFNGLBINDATTRIBLOCATIONPROC glflglBindAttribLocation;
#define glBindAttribLocation glflglBindAttribLocation
extern PFNGLPROGRAMUNIFORMUI64VNVPROC glflglProgramUniformui64vNV;
#define glProgramUniformui64vNV glflglProgramUniformui64vNV
extern PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC glflglCompressedMultiTexImage1DEXT;
#define glCompressedMultiTexImage1DEXT glflglCompressedMultiTexImage1DEXT
extern PFNGLSAMPLERPARAMETERIUIVEXTPROC glflglSamplerParameterIuivEXT;
#define glSamplerParameterIuivEXT glflglSamplerParameterIuivEXT
extern PFNGLPROGRAMUNIFORM2IVEXTPROC glflglProgramUniform2ivEXT;
#define glProgramUniform2ivEXT glflglProgramUniform2ivEXT
extern PFNGLPUSHGROUPMARKEREXTPROC glflglPushGroupMarkerEXT;
#define glPushGroupMarkerEXT glflglPushGroupMarkerEXT
extern PFNGLVERTEXATTRIB1DVPROC glflglVertexAttrib1dv;
#define glVertexAttrib1dv glflglVertexAttrib1dv
extern PFNGLRESOLVEDEPTHVALUESNVPROC glflglResolveDepthValuesNV;
#define glResolveDepthValuesNV glflglResolveDepthValuesNV
extern PFNGLVERTEXATTRIBI4SVEXTPROC glflglVertexAttribI4svEXT;
#define glVertexAttribI4svEXT glflglVertexAttribI4svEXT
extern PFNGLMULTTRANSPOSEMATRIXXOESPROC glflglMultTransposeMatrixxOES;
#define glMultTransposeMatrixxOES glflglMultTransposeMatrixxOES
extern PFNGLBUFFERSUBDATAPROC glflglBufferSubData;
#define glBufferSubData glflglBufferSubData
extern PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC glflglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
#define glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN glflglReplacementCodeuiTexCoord2fNormal3fVertex3fSUN
extern PFNGLGETLIGHTIVPROC glflglGetLightiv;
#define glGetLightiv glflglGetLightiv
extern PFNGLGETQUERYIVEXTPROC glflglGetQueryivEXT;
#define glGetQueryivEXT glflglGetQueryivEXT
extern PFNGLBLENDFUNCSEPARATEIPROC glflglBlendFuncSeparatei;
#define glBlendFuncSeparatei glflglBlendFuncSeparatei
extern PFNGLSCISSORARRAYVNVPROC glflglScissorArrayvNV;
#define glScissorArrayvNV glflglScissorArrayvNV
extern PFNGLGETBOOLEANINDEXEDVEXTPROC glflglGetBooleanIndexedvEXT;
#define glGetBooleanIndexedvEXT glflglGetBooleanIndexedvEXT
extern PFNGLVERTEXP4UIVPROC glflglVertexP4uiv;
#define glVertexP4uiv glflglVertexP4uiv
extern PFNGLUNIFORM2UIPROC glflglUniform2ui;
#define glUniform2ui glflglUniform2ui
extern PFNGLWINDOWPOS2FVPROC glflglWindowPos2fv;
#define glWindowPos2fv glflglWindowPos2fv
extern PFNGLDISABLEIPROC glflglDisablei;
#define glDisablei glflglDisablei
extern PFNGLCOPYBUFFERSUBDATAPROC glflglCopyBufferSubData;
#define glCopyBufferSubData glflglCopyBufferSubData
extern PFNGLSELECTPERFMONITORCOUNTERSAMDPROC glflglSelectPerfMonitorCountersAMD;
#define glSelectPerfMonitorCountersAMD glflglSelectPerfMonitorCountersAMD
extern PFNGLGETVERTEXATTRIBLI64VNVPROC glflglGetVertexAttribLi64vNV;
#define glGetVertexAttribLi64vNV glflglGetVertexAttribLi64vNV
extern PFNGLMULTITEXCOORD2DVARBPROC glflglMultiTexCoord2dvARB;
#define glMultiTexCoord2dvARB glflglMultiTexCoord2dvARB
extern PFNGLWEIGHTUIVARBPROC glflglWeightuivARB;
#define glWeightuivARB glflglWeightuivARB
extern PFNGLGETVIDEOCAPTURESTREAMDVNVPROC glflglGetVideoCaptureStreamdvNV;
#define glGetVideoCaptureStreamdvNV glflglGetVideoCaptureStreamdvNV
extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glflglGetProgramLocalParameterdvARB;
#define glGetProgramLocalParameterdvARB glflglGetProgramLocalParameterdvARB
extern PFNGLVERTEXSTREAM4FVATIPROC glflglVertexStream4fvATI;
#define glVertexStream4fvATI glflglVertexStream4fvATI
extern PFNGLGETSYNCIVPROC glflglGetSynciv;
#define glGetSynciv glflglGetSynciv
extern PFNGLMAKEIMAGEHANDLERESIDENTARBPROC glflglMakeImageHandleResidentARB;
#define glMakeImageHandleResidentARB glflglMakeImageHandleResidentARB
extern PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC glflglGetProgramNamedParameterfvNV;
#define glGetProgramNamedParameterfvNV glflglGetProgramNamedParameterfvNV
extern PFNGLVERTEXATTRIB4SVNVPROC glflglVertexAttrib4svNV;
#define glVertexAttrib4svNV glflglVertexAttrib4svNV
extern PFNGLPROGRAMUNIFORM2IPROC glflglProgramUniform2i;
#define glProgramUniform2i glflglProgramUniform2i
extern PFNGLMATERIALXVPROC glflglMaterialxv;
#define glMaterialxv glflglMaterialxv
extern PFNGLPROGRAMUNIFORM2DPROC glflglProgramUniform2d;
#define glProgramUniform2d glflglProgramUniform2d
extern PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC glflglProgramLocalParametersI4uivNV;
#define glProgramLocalParametersI4uivNV glflglProgramLocalParametersI4uivNV
extern PFNGLPROGRAMUNIFORM2FPROC glflglProgramUniform2f;
#define glProgramUniform2f glflglProgramUniform2f
extern PFNGLGETPROGRAMBINARYPROC glflglGetProgramBinary;
#define glGetProgramBinary glflglGetProgramBinary
extern PFNGLGETPROGRAMIVARBPROC glflglGetProgramivARB;
#define glGetProgramivARB glflglGetProgramivARB
extern PFNGLBINORMAL3IEXTPROC glflglBinormal3iEXT;
#define glBinormal3iEXT glflglBinormal3iEXT
extern PFNGLEVALPOINT1PROC glflglEvalPoint1;
#define glEvalPoint1 glflglEvalPoint1
extern PFNGLEVALPOINT2PROC glflglEvalPoint2;
#define glEvalPoint2 glflglEvalPoint2
extern PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC glflglExtTexObjectStateOverrideiQCOM;
#define glExtTexObjectStateOverrideiQCOM glflglExtTexObjectStateOverrideiQCOM
extern PFNGLDISABLEDRIVERCONTROLQCOMPROC glflglDisableDriverControlQCOM;
#define glDisableDriverControlQCOM glflglDisableDriverControlQCOM
extern PFNGLPAUSETRANSFORMFEEDBACKPROC glflglPauseTransformFeedback;
#define glPauseTransformFeedback glflglPauseTransformFeedback
extern PFNGLWINDOWPOS2SMESAPROC glflglWindowPos2sMESA;
#define glWindowPos2sMESA glflglWindowPos2sMESA
extern PFNGLGLOBALALPHAFACTORBSUNPROC glflglGlobalAlphaFactorbSUN;
#define glGlobalAlphaFactorbSUN glflglGlobalAlphaFactorbSUN
extern PFNGLCREATETRANSFORMFEEDBACKSPROC glflglCreateTransformFeedbacks;
#define glCreateTransformFeedbacks glflglCreateTransformFeedbacks
extern PFNGLTEXTUREPAGECOMMITMENTEXTPROC glflglTexturePageCommitmentEXT;
#define glTexturePageCommitmentEXT glflglTexturePageCommitmentEXT
extern PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC glflglTransformFeedbackVaryingsNV;
#define glTransformFeedbackVaryingsNV glflglTransformFeedbackVaryingsNV
extern PFNGLTEXSUBIMAGE1DPROC glflglTexSubImage1D;
#define glTexSubImage1D glflglTexSubImage1D
extern PFNGLCONVOLUTIONPARAMETERFVEXTPROC glflglConvolutionParameterfvEXT;
#define glConvolutionParameterfvEXT glflglConvolutionParameterfvEXT
extern PFNGLBLITFRAMEBUFFEREXTPROC glflglBlitFramebufferEXT;
#define glBlitFramebufferEXT glflglBlitFramebufferEXT
extern PFNGLUNIFORMMATRIX4FVARBPROC glflglUniformMatrix4fvARB;
#define glUniformMatrix4fvARB glflglUniformMatrix4fvARB
extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glflglProgramEnvParameter4dvARB;
#define glProgramEnvParameter4dvARB glflglProgramEnvParameter4dvARB
extern PFNGLSECONDARYCOLOR3HNVPROC glflglSecondaryColor3hNV;
#define glSecondaryColor3hNV glflglSecondaryColor3hNV
extern PFNGLVERTEXATTRIBP3UIVPROC glflglVertexAttribP3uiv;
#define glVertexAttribP3uiv glflglVertexAttribP3uiv
extern PFNGLRASTERPOS4DVPROC glflglRasterPos4dv;
#define glRasterPos4dv glflglRasterPos4dv
extern PFNGLGETMATERIALXVOESPROC glflglGetMaterialxvOES;
#define glGetMaterialxvOES glflglGetMaterialxvOES
extern PFNGLISOCCLUSIONQUERYNVPROC glflglIsOcclusionQueryNV;
#define glIsOcclusionQueryNV glflglIsOcclusionQueryNV
extern PFNGLCOMPRESSEDTEXIMAGE2DARBPROC glflglCompressedTexImage2DARB;
#define glCompressedTexImage2DARB glflglCompressedTexImage2DARB
extern PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC glflglGetProgramEnvParameterIuivNV;
#define glGetProgramEnvParameterIuivNV glflglGetProgramEnvParameterIuivNV
extern PFNGLGETVERTEXARRAYIVPROC glflglGetVertexArrayiv;
#define glGetVertexArrayiv glflglGetVertexArrayiv
extern PFNGLVERTEXATTRIB4FVARBPROC glflglVertexAttrib4fvARB;
#define glVertexAttrib4fvARB glflglVertexAttrib4fvARB
extern PFNGLLOADNAMEPROC glflglLoadName;
#define glLoadName glflglLoadName
extern PFNGLLOADMATRIXXPROC glflglLoadMatrixx;
#define glLoadMatrixx glflglLoadMatrixx
extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glflglGetNamedProgramLocalParameterIivEXT;
#define glGetNamedProgramLocalParameterIivEXT glflglGetNamedProgramLocalParameterIivEXT
extern PFNGLPROGRAMUNIFORM3UIEXTPROC glflglProgramUniform3uiEXT;
#define glProgramUniform3uiEXT glflglProgramUniform3uiEXT
extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glflglProgramUniformMatrix4x2dvEXT;
#define glProgramUniformMatrix4x2dvEXT glflglProgramUniformMatrix4x2dvEXT
extern PFNGLLOADMATRIXFPROC glflglLoadMatrixf;
#define glLoadMatrixf glflglLoadMatrixf
extern PFNGLLOADMATRIXDPROC glflglLoadMatrixd;
#define glLoadMatrixd glflglLoadMatrixd
extern PFNGLTEXPARAMETERFVPROC glflglTexParameterfv;
#define glTexParameterfv glflglTexParameterfv
extern PFNGLVARIANTDVEXTPROC glflglVariantdvEXT;
#define glVariantdvEXT glflglVariantdvEXT
extern PFNGLCULLPARAMETERFVEXTPROC glflglCullParameterfvEXT;
#define glCullParameterfvEXT glflglCullParameterfvEXT
extern PFNGLUNIFORM3DVPROC glflglUniform3dv;
#define glUniform3dv glflglUniform3dv
extern PFNGLPROGRAMUNIFORM3FVPROC glflglProgramUniform3fv;
#define glProgramUniform3fv glflglProgramUniform3fv
extern PFNGLISBUFFERARBPROC glflglIsBufferARB;
#define glIsBufferARB glflglIsBufferARB
extern PFNGLMULTITEXCOORD1BOESPROC glflglMultiTexCoord1bOES;
#define glMultiTexCoord1bOES glflglMultiTexCoord1bOES
extern PFNGLFOGCOORDHNVPROC glflglFogCoordhNV;
#define glFogCoordhNV glflglFogCoordhNV
extern PFNGLVERTEXATTRIB4DVNVPROC glflglVertexAttrib4dvNV;
#define glVertexAttrib4dvNV glflglVertexAttrib4dvNV
extern PFNGLGENSYMBOLSEXTPROC glflglGenSymbolsEXT;
#define glGenSymbolsEXT glflglGenSymbolsEXT
extern PFNGLGETCONVOLUTIONFILTERPROC glflglGetConvolutionFilter;
#define glGetConvolutionFilter glflglGetConvolutionFilter
extern PFNGLPROGRAMUNIFORM1FVEXTPROC glflglProgramUniform1fvEXT;
#define glProgramUniform1fvEXT glflglProgramUniform1fvEXT
extern PFNGLVERTEXATTRIB1DVNVPROC glflglVertexAttrib1dvNV;
#define glVertexAttrib1dvNV glflglVertexAttrib1dvNV
extern PFNGLCOMPRESSEDTEXIMAGE1DARBPROC glflglCompressedTexImage1DARB;
#define glCompressedTexImage1DARB glflglCompressedTexImage1DARB
extern PFNGLTEXPARAMETERXVPROC glflglTexParameterxv;
#define glTexParameterxv glflglTexParameterxv
extern PFNGLWAITSYNCAPPLEPROC glflglWaitSyncAPPLE;
#define glWaitSyncAPPLE glflglWaitSyncAPPLE
extern PFNGLDRAWELEMENTSINDIRECTPROC glflglDrawElementsIndirect;
#define glDrawElementsIndirect glflglDrawElementsIndirect
extern PFNGLGETPROGRAMBINARYOESPROC glflglGetProgramBinaryOES;
#define glGetProgramBinaryOES glflglGetProgramBinaryOES
extern PFNGLGETPROGRAMENVPARAMETERIIVNVPROC glflglGetProgramEnvParameterIivNV;
#define glGetProgramEnvParameterIivNV glflglGetProgramEnvParameterIivNV
extern PFNGLGETMULTITEXIMAGEEXTPROC glflglGetMultiTexImageEXT;
#define glGetMultiTexImageEXT glflglGetMultiTexImageEXT
extern PFNGLGETQUERYOBJECTUI64VPROC glflglGetQueryObjectui64v;
#define glGetQueryObjectui64v glflglGetQueryObjectui64v
extern PFNGLVERTEXATTRIBL4UI64VNVPROC glflglVertexAttribL4ui64vNV;
#define glVertexAttribL4ui64vNV glflglVertexAttribL4ui64vNV
extern PFNGLGETVIDEOIVNVPROC glflglGetVideoivNV;
#define glGetVideoivNV glflglGetVideoivNV
extern PFNGLDELETERENDERBUFFERSOESPROC glflglDeleteRenderbuffersOES;
#define glDeleteRenderbuffersOES glflglDeleteRenderbuffersOES
extern PFNGLGETTEXTUREIMAGEPROC glflglGetTextureImage;
#define glGetTextureImage glflglGetTextureImage
extern PFNGLPROGRAMUNIFORM1FVPROC glflglProgramUniform1fv;
#define glProgramUniform1fv glflglProgramUniform1fv
extern PFNGLUNIFORMMATRIX4FVPROC glflglUniformMatrix4fv;
#define glUniformMatrix4fv glflglUniformMatrix4fv
extern PFNGLGETNUNIFORMIVEXTPROC glflglGetnUniformivEXT;
#define glGetnUniformivEXT glflglGetnUniformivEXT
extern PFNGLBEGINFRAGMENTSHADERATIPROC glflglBeginFragmentShaderATI;
#define glBeginFragmentShaderATI glflglBeginFragmentShaderATI
extern PFNGLCOLORMASKIOESPROC glflglColorMaskiOES;
#define glColorMaskiOES glflglColorMaskiOES
extern PFNGLISFRAMEBUFFEROESPROC glflglIsFramebufferOES;
#define glIsFramebufferOES glflglIsFramebufferOES
extern PFNGLMULTIDRAWARRAYSEXTPROC glflglMultiDrawArraysEXT;
#define glMultiDrawArraysEXT glflglMultiDrawArraysEXT
extern PFNGLGENNAMESAMDPROC glflglGenNamesAMD;
#define glGenNamesAMD glflglGenNamesAMD
extern PFNGLPATHPARAMETERINVPROC glflglPathParameteriNV;
#define glPathParameteriNV glflglPathParameteriNV
extern PFNGLCREATECOMMANDLISTSNVPROC glflglCreateCommandListsNV;
#define glCreateCommandListsNV glflglCreateCommandListsNV
extern PFNGLCOPYPATHNVPROC glflglCopyPathNV;
#define glCopyPathNV glflglCopyPathNV
extern PFNGLDELETEPROGRAMPIPELINESPROC glflglDeleteProgramPipelines;
#define glDeleteProgramPipelines glflglDeleteProgramPipelines
extern PFNGLCOPYCOLORSUBTABLEEXTPROC glflglCopyColorSubTableEXT;
#define glCopyColorSubTableEXT glflglCopyColorSubTableEXT
extern PFNGLMULTIDRAWELEMENTSBASEVERTEXOESPROC glflglMultiDrawElementsBaseVertexOES;
#define glMultiDrawElementsBaseVertexOES glflglMultiDrawElementsBaseVertexOES
extern PFNGLVARIANTSVEXTPROC glflglVariantsvEXT;
#define glVariantsvEXT glflglVariantsvEXT
extern PFNGLISNAMEAMDPROC glflglIsNameAMD;
#define glIsNameAMD glflglIsNameAMD
extern PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC glflglVertexArrayEdgeFlagOffsetEXT;
#define glVertexArrayEdgeFlagOffsetEXT glflglVertexArrayEdgeFlagOffsetEXT
extern PFNGLWINDOWPOS2SPROC glflglWindowPos2s;
#define glWindowPos2s glflglWindowPos2s
extern PFNGLSECONDARYCOLOR3IEXTPROC glflglSecondaryColor3iEXT;
#define glSecondaryColor3iEXT glflglSecondaryColor3iEXT
extern PFNGLTEXBUFFEROESPROC glflglTexBufferOES;
#define glTexBufferOES glflglTexBufferOES
extern PFNGLWINDOWPOS2IPROC glflglWindowPos2i;
#define glWindowPos2i glflglWindowPos2i
extern PFNGLWINDOWPOS2FPROC glflglWindowPos2f;
#define glWindowPos2f glflglWindowPos2f
extern PFNGLWINDOWPOS2DPROC glflglWindowPos2d;
#define glWindowPos2d glflglWindowPos2d
extern PFNGLUNIFORM4UIVEXTPROC glflglUniform4uivEXT;
#define glUniform4uivEXT glflglUniform4uivEXT
extern PFNGLORTHOXOESPROC glflglOrthoxOES;
#define glOrthoxOES glflglOrthoxOES
extern PFNGLUNIFORMSUBROUTINESUIVPROC glflglUniformSubroutinesuiv;
#define glUniformSubroutinesuiv glflglUniformSubroutinesuiv
extern PFNGLRECTDVPROC glflglRectdv;
#define glRectdv glflglRectdv
extern PFNGLPROGRAMUNIFORM1I64VNVPROC glflglProgramUniform1i64vNV;
#define glProgramUniform1i64vNV glflglProgramUniform1i64vNV
extern PFNGLVERTEXATTRIBI4UIEXTPROC glflglVertexAttribI4uiEXT;
#define glVertexAttribI4uiEXT glflglVertexAttribI4uiEXT
extern PFNGLSECONDARYCOLOR3UBEXTPROC glflglSecondaryColor3ubEXT;
#define glSecondaryColor3ubEXT glflglSecondaryColor3ubEXT
extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC glflglCompressedMultiTexSubImage1DEXT;
#define glCompressedMultiTexSubImage1DEXT glflglCompressedMultiTexSubImage1DEXT
extern PFNGLTANGENTPOINTEREXTPROC glflglTangentPointerEXT;
#define glTangentPointerEXT glflglTangentPointerEXT
extern PFNGLCOLORP3UIVPROC glflglColorP3uiv;
#define glColorP3uiv glflglColorP3uiv
extern PFNGLFOGCOORDFVPROC glflglFogCoordfv;
#define glFogCoordfv glflglFogCoordfv
extern PFNGLCOMPILESHADERPROC glflglCompileShader;
#define glCompileShader glflglCompileShader
extern PFNGLTEXCOORD2HNVPROC glflglTexCoord2hNV;
#define glTexCoord2hNV glflglTexCoord2hNV
extern PFNGLUNIFORM1UIVEXTPROC glflglUniform1uivEXT;
#define glUniform1uivEXT glflglUniform1uivEXT
extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glflglMatrixLoadTransposedEXT;
#define glMatrixLoadTransposedEXT glflglMatrixLoadTransposedEXT
extern PFNGLINDEXFVPROC glflglIndexfv;
#define glIndexfv glflglIndexfv
extern PFNGLGETUNIFORMUIVEXTPROC glflglGetUniformuivEXT;
#define glGetUniformuivEXT glflglGetUniformuivEXT
extern PFNGLBEGINTRANSFORMFEEDBACKEXTPROC glflglBeginTransformFeedbackEXT;
#define glBeginTransformFeedbackEXT glflglBeginTransformFeedbackEXT
extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glflglFramebufferTextureEXT;
#define glFramebufferTextureEXT glflglFramebufferTextureEXT
extern PFNGLTEXSTORAGESPARSEAMDPROC glflglTexStorageSparseAMD;
#define glTexStorageSparseAMD glflglTexStorageSparseAMD
extern PFNGLMULTITEXCOORDP3UIPROC glflglMultiTexCoordP3ui;
#define glMultiTexCoordP3ui glflglMultiTexCoordP3ui
extern PFNGLDEPTHRANGEFOESPROC glflglDepthRangefOES;
#define glDepthRangefOES glflglDepthRangefOES
extern PFNGLWINDOWPOS2SARBPROC glflglWindowPos2sARB;
#define glWindowPos2sARB glflglWindowPos2sARB
extern PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC glflglColor4fNormal3fVertex3fvSUN;
#define glColor4fNormal3fVertex3fvSUN glflglColor4fNormal3fVertex3fvSUN
extern PFNGLSEPARABLEFILTER2DEXTPROC glflglSeparableFilter2DEXT;
#define glSeparableFilter2DEXT glflglSeparableFilter2DEXT
extern PFNGLTEXPARAMETERXOESPROC glflglTexParameterxOES;
#define glTexParameterxOES glflglTexParameterxOES
extern PFNGLBLENDEQUATIONOESPROC glflglBlendEquationOES;
#define glBlendEquationOES glflglBlendEquationOES
extern PFNGLGENVERTEXARRAYSOESPROC glflglGenVertexArraysOES;
#define glGenVertexArraysOES glflglGenVertexArraysOES
extern PFNGLCLEARACCUMXOESPROC glflglClearAccumxOES;
#define glClearAccumxOES glflglClearAccumxOES
extern PFNGLINVALIDATEFRAMEBUFFERPROC glflglInvalidateFramebuffer;
#define glInvalidateFramebuffer glflglInvalidateFramebuffer
extern PFNGLWEIGHTUBVARBPROC glflglWeightubvARB;
#define glWeightubvARB glflglWeightubvARB
extern PFNGLCOMPRESSEDTEXIMAGE2DPROC glflglCompressedTexImage2D;
#define glCompressedTexImage2D glflglCompressedTexImage2D
extern PFNGLVERTEXATTRIB1FPROC glflglVertexAttrib1f;
#define glVertexAttrib1f glflglVertexAttrib1f
extern PFNGLVERTEX4FVPROC glflglVertex4fv;
#define glVertex4fv glflglVertex4fv
extern PFNGLCLEARNAMEDFRAMEBUFFERFIPROC glflglClearNamedFramebufferfi;
#define glClearNamedFramebufferfi glflglClearNamedFramebufferfi
extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glflglGetQueryBufferObjectuiv;
#define glGetQueryBufferObjectuiv glflglGetQueryBufferObjectuiv
extern PFNGLDRAWBUFFERSPROC glflglDrawBuffers;
#define glDrawBuffers glflglDrawBuffers
extern PFNGLENDVERTEXSHADEREXTPROC glflglEndVertexShaderEXT;
#define glEndVertexShaderEXT glflglEndVertexShaderEXT
extern PFNGLVERTEXATTRIB1SPROC glflglVertexAttrib1s;
#define glVertexAttrib1s glflglVertexAttrib1s
extern PFNGLMULTITEXCOORD4DVARBPROC glflglMultiTexCoord4dvARB;
#define glMultiTexCoord4dvARB glflglMultiTexCoord4dvARB
extern PFNGLMULTITEXCOORD1SVPROC glflglMultiTexCoord1sv;
#define glMultiTexCoord1sv glflglMultiTexCoord1sv
extern PFNGLUNIFORM1UI64VNVPROC glflglUniform1ui64vNV;
#define glUniform1ui64vNV glflglUniform1ui64vNV
extern PFNGLGETCLIPPLANEFOESPROC glflglGetClipPlanefOES;
#define glGetClipPlanefOES glflglGetClipPlanefOES
extern PFNGLRASTERPOS2SPROC glflglRasterPos2s;
#define glRasterPos2s glflglRasterPos2s
extern PFNGLWEIGHTIVARBPROC glflglWeightivARB;
#define glWeightivARB glflglWeightivARB
extern PFNGLPROGRAMPARAMETER4DNVPROC glflglProgramParameter4dNV;
#define glProgramParameter4dNV glflglProgramParameter4dNV
extern PFNGLMULTITEXCOORD4HVNVPROC glflglMultiTexCoord4hvNV;
#define glMultiTexCoord4hvNV glflglMultiTexCoord4hvNV
extern PFNGLNORMAL3HNVPROC glflglNormal3hNV;
#define glNormal3hNV glflglNormal3hNV
extern PFNGLGETSEPARABLEFILTERPROC glflglGetSeparableFilter;
#define glGetSeparableFilter glflglGetSeparableFilter
extern PFNGLDELETEPROGRAMPROC glflglDeleteProgram;
#define glDeleteProgram glflglDeleteProgram
extern PFNGLCOLOR4BVPROC glflglColor4bv;
#define glColor4bv glflglColor4bv
extern PFNGLRASTERPOS2FPROC glflglRasterPos2f;
#define glRasterPos2f glflglRasterPos2f
extern PFNGLRASTERPOS2DPROC glflglRasterPos2d;
#define glRasterPos2d glflglRasterPos2d
extern PFNGLLOADIDENTITYPROC glflglLoadIdentity;
#define glLoadIdentity glflglLoadIdentity
extern PFNGLRASTERPOS2IPROC glflglRasterPos2i;
#define glRasterPos2i glflglRasterPos2i
extern PFNGLRASTERPOS4IVPROC glflglRasterPos4iv;
#define glRasterPos4iv glflglRasterPos4iv
extern PFNGLUNIFORMMATRIX4X3FVPROC glflglUniformMatrix4x3fv;
#define glUniformMatrix4x3fv glflglUniformMatrix4x3fv
extern PFNGLCLEARBUFFERFVPROC glflglClearBufferfv;
#define glClearBufferfv glflglClearBufferfv
extern PFNGLENABLEINVPROC glflglEnableiNV;
#define glEnableiNV glflglEnableiNV
extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glflglPauseTransformFeedbackNV;
#define glPauseTransformFeedbackNV glflglPauseTransformFeedbackNV
extern PFNGLMULTITEXCOORD4HNVPROC glflglMultiTexCoord4hNV;
#define glMultiTexCoord4hNV glflglMultiTexCoord4hNV
extern PFNGLTEXTUREBARRIERPROC glflglTextureBarrier;
#define glTextureBarrier glflglTextureBarrier
extern PFNGLALPHAFRAGMENTOP3ATIPROC glflglAlphaFragmentOp3ATI;
#define glAlphaFragmentOp3ATI glflglAlphaFragmentOp3ATI
extern PFNGLTEXCOORD4XOESPROC glflglTexCoord4xOES;
#define glTexCoord4xOES glflglTexCoord4xOES
extern PFNGLMULTITEXPARAMETERIIVEXTPROC glflglMultiTexParameterIivEXT;
#define glMultiTexParameterIivEXT glflglMultiTexParameterIivEXT
extern PFNGLTEXCOORD2BVOESPROC glflglTexCoord2bvOES;
#define glTexCoord2bvOES glflglTexCoord2bvOES
extern PFNGLEVALCOORD2XOESPROC glflglEvalCoord2xOES;
#define glEvalCoord2xOES glflglEvalCoord2xOES
extern PFNGLGETSHARPENTEXFUNCSGISPROC glflglGetSharpenTexFuncSGIS;
#define glGetSharpenTexFuncSGIS glflglGetSharpenTexFuncSGIS
extern PFNGLDEBUGMESSAGEINSERTKHRPROC glflglDebugMessageInsertKHR;
#define glDebugMessageInsertKHR glflglDebugMessageInsertKHR
extern PFNGLIGLOOINTERFACESGIXPROC glflglIglooInterfaceSGIX;
#define glIglooInterfaceSGIX glflglIglooInterfaceSGIX
extern PFNGLWINDOWPOS2DVARBPROC glflglWindowPos2dvARB;
#define glWindowPos2dvARB glflglWindowPos2dvARB
extern PFNGLCLEARBUFFERFIPROC glflglClearBufferfi;
#define glClearBufferfi glflglClearBufferfi
extern PFNGLDRAWARRAYSINDIRECTPROC glflglDrawArraysIndirect;
#define glDrawArraysIndirect glflglDrawArraysIndirect
extern PFNGLTEXCOORD1IVPROC glflglTexCoord1iv;
#define glTexCoord1iv glflglTexCoord1iv
extern PFNGLENABLEVERTEXARRAYATTRIBPROC glflglEnableVertexArrayAttrib;
#define glEnableVertexArrayAttrib glflglEnableVertexArrayAttrib
extern PFNGLCOPYIMAGESUBDATAOESPROC glflglCopyImageSubDataOES;
#define glCopyImageSubDataOES glflglCopyImageSubDataOES
extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glflglProgramUniformMatrix3x2dv;
#define glProgramUniformMatrix3x2dv glflglProgramUniformMatrix3x2dv
extern PFNGLVERTEXSTREAM4FATIPROC glflglVertexStream4fATI;
#define glVertexStream4fATI glflglVertexStream4fATI
extern PFNGLGETSAMPLERPARAMETERIIVPROC glflglGetSamplerParameterIiv;
#define glGetSamplerParameterIiv glflglGetSamplerParameterIiv
extern PFNGLGETCOVERAGEMODULATIONTABLENVPROC glflglGetCoverageModulationTableNV;
#define glGetCoverageModulationTableNV glflglGetCoverageModulationTableNV
extern PFNGLDEPTHRANGEDNVPROC glflglDepthRangedNV;
#define glDepthRangedNV glflglDepthRangedNV
extern PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glflglMultiDrawRangeElementArrayAPPLE;
#define glMultiDrawRangeElementArrayAPPLE glflglMultiDrawRangeElementArrayAPPLE
extern PFNGLVERTEXATTRIBFORMATNVPROC glflglVertexAttribFormatNV;
#define glVertexAttribFormatNV glflglVertexAttribFormatNV
extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glflglGetQueryBufferObjecti64v;
#define glGetQueryBufferObjecti64v glflglGetQueryBufferObjecti64v
extern PFNGLGETVERTEXATTRIBDVPROC glflglGetVertexAttribdv;
#define glGetVertexAttribdv glflglGetVertexAttribdv
extern PFNGLARETEXTURESRESIDENTEXTPROC glflglAreTexturesResidentEXT;
#define glAreTexturesResidentEXT glflglAreTexturesResidentEXT
extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glflglProgramUniformMatrix3x4dv;
#define glProgramUniformMatrix3x4dv glflglProgramUniformMatrix3x4dv
extern PFNGLGETMATERIALXVPROC glflglGetMaterialxv;
#define glGetMaterialxv glflglGetMaterialxv
extern PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC glflglVideoCaptureStreamParameterdvNV;
#define glVideoCaptureStreamParameterdvNV glflglVideoCaptureStreamParameterdvNV
extern PFNGLMAPPARAMETERIVNVPROC glflglMapParameterivNV;
#define glMapParameterivNV glflglMapParameterivNV
extern PFNGLMULTITEXCOORD2SVARBPROC glflglMultiTexCoord2svARB;
#define glMultiTexCoord2svARB glflglMultiTexCoord2svARB
extern PFNGLSECONDARYCOLOR3SEXTPROC glflglSecondaryColor3sEXT;
#define glSecondaryColor3sEXT glflglSecondaryColor3sEXT
extern PFNGLGETTEXPARAMETERIIVEXTPROC glflglGetTexParameterIivEXT;
#define glGetTexParameterIivEXT glflglGetTexParameterIivEXT
extern PFNGLFRAMETERMINATORGREMEDYPROC glflglFrameTerminatorGREMEDY;
#define glFrameTerminatorGREMEDY glflglFrameTerminatorGREMEDY
extern PFNGLBLENDBARRIERKHRPROC glflglBlendBarrierKHR;
#define glBlendBarrierKHR glflglBlendBarrierKHR
extern PFNGLVERTEXATTRIB4NUBARBPROC glflglVertexAttrib4NubARB;
#define glVertexAttrib4NubARB glflglVertexAttrib4NubARB
extern PFNGLPRIMITIVERESTARTNVPROC glflglPrimitiveRestartNV;
#define glPrimitiveRestartNV glflglPrimitiveRestartNV
extern PFNGLVERTEXATTRIBL1UI64VARBPROC glflglVertexAttribL1ui64vARB;
#define glVertexAttribL1ui64vARB glflglVertexAttribL1ui64vARB
extern PFNGLUNIFORM1I64VNVPROC glflglUniform1i64vNV;
#define glUniform1i64vNV glflglUniform1i64vNV
extern PFNGLVERTEXATTRIBS4SVNVPROC glflglVertexAttribs4svNV;
#define glVertexAttribs4svNV glflglVertexAttribs4svNV
extern PFNGLUNIFORM1UIPROC glflglUniform1ui;
#define glUniform1ui glflglUniform1ui
extern PFNGLVERTEXATTRIB2FVARBPROC glflglVertexAttrib2fvARB;
#define glVertexAttrib2fvARB glflglVertexAttrib2fvARB
extern PFNGLBEGINQUERYEXTPROC glflglBeginQueryEXT;
#define glBeginQueryEXT glflglBeginQueryEXT
extern PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC glflglTextureImage3DMultisampleCoverageNV;
#define glTextureImage3DMultisampleCoverageNV glflglTextureImage3DMultisampleCoverageNV
extern PFNGLMEMORYBARRIERPROC glflglMemoryBarrier;
#define glMemoryBarrier glflglMemoryBarrier
extern PFNGLGETVARIANTARRAYOBJECTFVATIPROC glflglGetVariantArrayObjectfvATI;
#define glGetVariantArrayObjectfvATI glflglGetVariantArrayObjectfvATI
extern PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC glflglTexCoord4fColor4fNormal3fVertex4fvSUN;
#define glTexCoord4fColor4fNormal3fVertex4fvSUN glflglTexCoord4fColor4fNormal3fVertex4fvSUN
extern PFNGLISPROGRAMARBPROC glflglIsProgramARB;
#define glIsProgramARB glflglIsProgramARB
extern PFNGLBINDIMAGETEXTUREEXTPROC glflglBindImageTextureEXT;
#define glBindImageTextureEXT glflglBindImageTextureEXT
extern PFNGLSAMPLECOVERAGEXOESPROC glflglSampleCoveragexOES;
#define glSampleCoveragexOES glflglSampleCoveragexOES
extern PFNGLGETFRAGDATALOCATIONPROC glflglGetFragDataLocation;
#define glGetFragDataLocation glflglGetFragDataLocation
extern PFNGLMULTITEXCOORD1SVARBPROC glflglMultiTexCoord1svARB;
#define glMultiTexCoord1svARB glflglMultiTexCoord1svARB
extern PFNGLGETMAPXVOESPROC glflglGetMapxvOES;
#define glGetMapxvOES glflglGetMapxvOES
extern PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC glflglTextureStorage2DMultisampleEXT;
#define glTextureStorage2DMultisampleEXT glflglTextureStorage2DMultisampleEXT
extern PFNGLFRAMEBUFFERTEXTURE3DOESPROC glflglFramebufferTexture3DOES;
#define glFramebufferTexture3DOES glflglFramebufferTexture3DOES
extern PFNGLCOPYPIXELSPROC glflglCopyPixels;
#define glCopyPixels glflglCopyPixels
extern PFNGLGETMATERIALFVPROC glflglGetMaterialfv;
#define glGetMaterialfv glflglGetMaterialfv
extern PFNGLVERTEXATTRIB4NBVARBPROC glflglVertexAttrib4NbvARB;
#define glVertexAttrib4NbvARB glflglVertexAttrib4NbvARB
extern PFNGLPIXELMAPUIVPROC glflglPixelMapuiv;
#define glPixelMapuiv glflglPixelMapuiv
extern PFNGLUNIFORM2IARBPROC glflglUniform2iARB;
#define glUniform2iARB glflglUniform2iARB
extern PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC glflglReplacementCodeuiColor4fNormal3fVertex3fSUN;
#define glReplacementCodeuiColor4fNormal3fVertex3fSUN glflglReplacementCodeuiColor4fNormal3fVertex3fSUN
extern PFNGLENABLECLIENTSTATEIEXTPROC glflglEnableClientStateiEXT;
#define glEnableClientStateiEXT glflglEnableClientStateiEXT
extern PFNGLCLEARTEXSUBIMAGEPROC glflglClearTexSubImage;
#define glClearTexSubImage glflglClearTexSubImage
extern PFNGLEVALCOORD1XVOESPROC glflglEvalCoord1xvOES;
#define glEvalCoord1xvOES glflglEvalCoord1xvOES
extern PFNGLDETACHOBJECTARBPROC glflglDetachObjectARB;
#define glDetachObjectARB glflglDetachObjectARB
extern PFNGLGETTEXTUREPARAMETERIIVPROC glflglGetTextureParameterIiv;
#define glGetTextureParameterIiv glflglGetTextureParameterIiv
extern PFNGLVARIANTUSVEXTPROC glflglVariantusvEXT;
#define glVariantusvEXT glflglVariantusvEXT
extern PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC glflglCompressedTextureImage3DEXT;
#define glCompressedTextureImage3DEXT glflglCompressedTextureImage3DEXT
extern PFNGLMULTITEXCOORD1DARBPROC glflglMultiTexCoord1dARB;
#define glMultiTexCoord1dARB glflglMultiTexCoord1dARB
extern PFNGLSAMPLERPARAMETERIUIVOESPROC glflglSamplerParameterIuivOES;
#define glSamplerParameterIuivOES glflglSamplerParameterIuivOES
extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glflglGetVertexArrayIntegeri_vEXT;
#define glGetVertexArrayIntegeri_vEXT glflglGetVertexArrayIntegeri_vEXT
extern PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC glflglCheckNamedFramebufferStatusEXT;
#define glCheckNamedFramebufferStatusEXT glflglCheckNamedFramebufferStatusEXT
extern PFNGLORTHOXPROC glflglOrthox;
#define glOrthox glflglOrthox
extern PFNGLPIXELTEXGENPARAMETERFSGISPROC glflglPixelTexGenParameterfSGIS;
#define glPixelTexGenParameterfSGIS glflglPixelTexGenParameterfSGIS
extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glflglProgramUniformMatrix4x2dv;
#define glProgramUniformMatrix4x2dv glflglProgramUniformMatrix4x2dv
extern PFNGLUNIFORM3FARBPROC glflglUniform3fARB;
#define glUniform3fARB glflglUniform3fARB
extern PFNGLISSHADERPROC glflglIsShader;
#define glIsShader glflglIsShader
extern PFNGLORTHOFPROC glflglOrthof;
#define glOrthof glflglOrthof
extern PFNGLCONVOLUTIONPARAMETERIVPROC glflglConvolutionParameteriv;
#define glConvolutionParameteriv glflglConvolutionParameteriv
extern PFNGLVERTEXATTRIBDIVISOREXTPROC glflglVertexAttribDivisorEXT;
#define glVertexAttribDivisorEXT glflglVertexAttribDivisorEXT
extern PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC glflglCopyMultiTexSubImage2DEXT;
#define glCopyMultiTexSubImage2DEXT glflglCopyMultiTexSubImage2DEXT
extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glflglEnableVertexAttribArrayARB;
#define glEnableVertexAttribArrayARB glflglEnableVertexAttribArrayARB
extern PFNGLENABLEPROC glflglEnable;
#define glEnable glflglEnable
extern PFNGLGETACTIVEUNIFORMSIVPROC glflglGetActiveUniformsiv;
#define glGetActiveUniformsiv glflglGetActiveUniformsiv
extern PFNGLGETVERTEXATTRIBIVARBPROC glflglGetVertexAttribivARB;
#define glGetVertexAttribivARB glflglGetVertexAttribivARB
extern PFNGLTEXCOORD4HVNVPROC glflglTexCoord4hvNV;
#define glTexCoord4hvNV glflglTexCoord4hvNV
extern PFNGLBLENDEQUATIONIPROC glflglBlendEquationi;
#define glBlendEquationi glflglBlendEquationi
extern PFNGLGETATTRIBLOCATIONPROC glflglGetAttribLocation;
#define glGetAttribLocation glflglGetAttribLocation
extern PFNGLVERTEXATTRIB4DVPROC glflglVertexAttrib4dv;
#define glVertexAttrib4dv glflglVertexAttrib4dv
extern PFNGLGETTEXTUREPARAMETERIVPROC glflglGetTextureParameteriv;
#define glGetTextureParameteriv glflglGetTextureParameteriv
extern PFNGLUNIFORM3UI64VNVPROC glflglUniform3ui64vNV;
#define glUniform3ui64vNV glflglUniform3ui64vNV
extern PFNGLMATRIXINDEXUSVARBPROC glflglMatrixIndexusvARB;
#define glMatrixIndexusvARB glflglMatrixIndexusvARB
extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glflglNamedFramebufferParameteri;
#define glNamedFramebufferParameteri glflglNamedFramebufferParameteri
extern PFNGLGETVIDEOCAPTUREIVNVPROC glflglGetVideoCaptureivNV;
#define glGetVideoCaptureivNV glflglGetVideoCaptureivNV
extern PFNGLPROGRAMUNIFORM3UIPROC glflglProgramUniform3ui;
#define glProgramUniform3ui glflglProgramUniform3ui
extern PFNGLVERTEXATTRIB3SVARBPROC glflglVertexAttrib3svARB;
#define glVertexAttrib3svARB glflglVertexAttrib3svARB
extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glflglGetNamedBufferParameterivEXT;
#define glGetNamedBufferParameterivEXT glflglGetNamedBufferParameterivEXT
extern PFNGLGENPROGRAMPIPELINESEXTPROC glflglGenProgramPipelinesEXT;
#define glGenProgramPipelinesEXT glflglGenProgramPipelinesEXT
extern PFNGLMATRIXSCALEDEXTPROC glflglMatrixScaledEXT;
#define glMatrixScaledEXT glflglMatrixScaledEXT
extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glflglProgramUniformMatrix2x3fv;
#define glProgramUniformMatrix2x3fv glflglProgramUniformMatrix2x3fv
extern PFNGLGETFRAGMENTLIGHTIVSGIXPROC glflglGetFragmentLightivSGIX;
#define glGetFragmentLightivSGIX glflglGetFragmentLightivSGIX
extern PFNGLWINDOWPOS2SVARBPROC glflglWindowPos2svARB;
#define glWindowPos2svARB glflglWindowPos2svARB
extern PFNGLVERTEXATTRIB2SVNVPROC glflglVertexAttrib2svNV;
#define glVertexAttrib2svNV glflglVertexAttrib2svNV
extern PFNGLWINDOWPOS2IVARBPROC glflglWindowPos2ivARB;
#define glWindowPos2ivARB glflglWindowPos2ivARB
extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glflglGetVertexAttribPointervNV;
#define glGetVertexAttribPointervNV glflglGetVertexAttribPointervNV
extern PFNGLPUSHMATRIXPROC glflglPushMatrix;
#define glPushMatrix glflglPushMatrix
extern PFNGLEDGEFLAGPOINTERLISTIBMPROC glflglEdgeFlagPointerListIBM;
#define glEdgeFlagPointerListIBM glflglEdgeFlagPointerListIBM
extern PFNGLORTHOPROC glflglOrtho;
#define glOrtho glflglOrtho
extern PFNGLWINDOWPOS3SVPROC glflglWindowPos3sv;
#define glWindowPos3sv glflglWindowPos3sv
extern PFNGLPATHCOORDSNVPROC glflglPathCoordsNV;
#define glPathCoordsNV glflglPathCoordsNV
extern PFNGLPROGRAMUNIFORM1IPROC glflglProgramUniform1i;
#define glProgramUniform1i glflglProgramUniform1i
extern PFNGLPROGRAMUNIFORM1DPROC glflglProgramUniform1d;
#define glProgramUniform1d glflglProgramUniform1d
extern PFNGLPROGRAMUNIFORM1FPROC glflglProgramUniform1f;
#define glProgramUniform1f glflglProgramUniform1f
extern PFNGLPROGRAMPARAMETERIEXTPROC glflglProgramParameteriEXT;
#define glProgramParameteriEXT glflglProgramParameteriEXT
extern PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC glflglCompressedMultiTexImage2DEXT;
#define glCompressedMultiTexImage2DEXT glflglCompressedMultiTexImage2DEXT
extern PFNGLPROGRAMUNIFORM3IVPROC glflglProgramUniform3iv;
#define glProgramUniform3iv glflglProgramUniform3iv
extern PFNGLINDEXIVPROC glflglIndexiv;
#define glIndexiv glflglIndexiv
extern PFNGLMULTITEXCOORD4XVOESPROC glflglMultiTexCoord4xvOES;
#define glMultiTexCoord4xvOES glflglMultiTexCoord4xvOES
extern PFNGLGETVERTEXATTRIBPOINTERVPROC glflglGetVertexAttribPointerv;
#define glGetVertexAttribPointerv glflglGetVertexAttribPointerv
extern PFNGLPIXELZOOMPROC glflglPixelZoom;
#define glPixelZoom glflglPixelZoom
extern PFNGLVIDEOCAPTURENVPROC glflglVideoCaptureNV;
#define glVideoCaptureNV glflglVideoCaptureNV
extern PFNGLVERTEX3BVOESPROC glflglVertex3bvOES;
#define glVertex3bvOES glflglVertex3bvOES
extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glflglFramebufferReadBufferEXT;
#define glFramebufferReadBufferEXT glflglFramebufferReadBufferEXT
extern PFNGLEXTRACTCOMPONENTEXTPROC glflglExtractComponentEXT;
#define glExtractComponentEXT glflglExtractComponentEXT
extern PFNGLCOMBINERPARAMETERIVNVPROC glflglCombinerParameterivNV;
#define glCombinerParameterivNV glflglCombinerParameterivNV
extern PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC glflglTexCoord2fColor3fVertex3fvSUN;
#define glTexCoord2fColor3fVertex3fvSUN glflglTexCoord2fColor3fVertex3fvSUN
extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glflglNamedProgramLocalParameter4fvEXT;
#define glNamedProgramLocalParameter4fvEXT glflglNamedProgramLocalParameter4fvEXT
extern PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC glflglExtGetTexLevelParameterivQCOM;
#define glExtGetTexLevelParameterivQCOM glflglExtGetTexLevelParameterivQCOM
extern PFNGLMINMAXPROC glflglMinmax;
#define glMinmax glflglMinmax
extern PFNGLCOLORP3UIPROC glflglColorP3ui;
#define glColorP3ui glflglColorP3ui
extern PFNGLCOLOR3USVPROC glflglColor3usv;
#define glColor3usv glflglColor3usv
extern PFNGLGETTEXPARAMETERXVPROC glflglGetTexParameterxv;
#define glGetTexParameterxv glflglGetTexParameterxv
extern PFNGLUSEPROGRAMOBJECTARBPROC glflglUseProgramObjectARB;
#define glUseProgramObjectARB glflglUseProgramObjectARB
extern PFNGLVERTEXATTRIB4SPROC glflglVertexAttrib4s;
#define glVertexAttrib4s glflglVertexAttrib4s
extern PFNGLCOMPRESSEDTEXIMAGE3DOESPROC glflglCompressedTexImage3DOES;
#define glCompressedTexImage3DOES glflglCompressedTexImage3DOES
extern PFNGLVERTEXATTRIB4FVNVPROC glflglVertexAttrib4fvNV;
#define glVertexAttrib4fvNV glflglVertexAttrib4fvNV
extern PFNGLENDQUERYEXTPROC glflglEndQueryEXT;
#define glEndQueryEXT glflglEndQueryEXT
extern PFNGLFRAGMENTLIGHTISGIXPROC glflglFragmentLightiSGIX;
#define glFragmentLightiSGIX glflglFragmentLightiSGIX
extern PFNGLMULTITEXCOORD1BVOESPROC glflglMultiTexCoord1bvOES;
#define glMultiTexCoord1bvOES glflglMultiTexCoord1bvOES
extern PFNGLSECONDARYCOLORPOINTEREXTPROC glflglSecondaryColorPointerEXT;
#define glSecondaryColorPointerEXT glflglSecondaryColorPointerEXT
extern PFNGLMULTITEXCOORDP4UIVPROC glflglMultiTexCoordP4uiv;
#define glMultiTexCoordP4uiv glflglMultiTexCoordP4uiv
extern PFNGLGETBUFFERSUBDATAARBPROC glflglGetBufferSubDataARB;
#define glGetBufferSubDataARB glflglGetBufferSubDataARB
extern PFNGLGETPATHPARAMETERIVNVPROC glflglGetPathParameterivNV;
#define glGetPathParameterivNV glflglGetPathParameterivNV
extern PFNGLGENRENDERBUFFERSOESPROC glflglGenRenderbuffersOES;
#define glGenRenderbuffersOES glflglGenRenderbuffersOES
extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glflglDisableVertexArrayAttrib;
#define glDisableVertexArrayAttrib glflglDisableVertexArrayAttrib
extern PFNGLELEMENTPOINTERATIPROC glflglElementPointerATI;
#define glElementPointerATI glflglElementPointerATI
extern PFNGLGETATTACHEDOBJECTSARBPROC glflglGetAttachedObjectsARB;
#define glGetAttachedObjectsARB glflglGetAttachedObjectsARB
extern PFNGLUNIFORM4IVPROC glflglUniform4iv;
#define glUniform4iv glflglUniform4iv
extern PFNGLFOGXOESPROC glflglFogxOES;
#define glFogxOES glflglFogxOES
extern PFNGLSHARPENTEXFUNCSGISPROC glflglSharpenTexFuncSGIS;
#define glSharpenTexFuncSGIS glflglSharpenTexFuncSGIS
extern PFNGLGETPERFMONITORGROUPSTRINGAMDPROC glflglGetPerfMonitorGroupStringAMD;
#define glGetPerfMonitorGroupStringAMD glflglGetPerfMonitorGroupStringAMD
extern PFNGLDELETECOMMANDLISTSNVPROC glflglDeleteCommandListsNV;
#define glDeleteCommandListsNV glflglDeleteCommandListsNV
extern PFNGLVERTEX4HNVPROC glflglVertex4hNV;
#define glVertex4hNV glflglVertex4hNV
extern PFNGLSECONDARYCOLOR3DVEXTPROC glflglSecondaryColor3dvEXT;
#define glSecondaryColor3dvEXT glflglSecondaryColor3dvEXT
extern PFNGLGENTEXTURESPROC glflglGenTextures;
#define glGenTextures glflglGenTextures
extern PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC glflglTextureStorage2DMultisample;
#define glTextureStorage2DMultisample glflglTextureStorage2DMultisample
extern PFNGLPRIMITIVEBOUNDINGBOXOESPROC glflglPrimitiveBoundingBoxOES;
#define glPrimitiveBoundingBoxOES glflglPrimitiveBoundingBoxOES
extern PFNGLPATHSUBCOORDSNVPROC glflglPathSubCoordsNV;
#define glPathSubCoordsNV glflglPathSubCoordsNV
extern PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC glflglBlendFuncSeparateIndexedAMD;
#define glBlendFuncSeparateIndexedAMD glflglBlendFuncSeparateIndexedAMD
extern PFNGLPROGRAMSTRINGARBPROC glflglProgramStringARB;
#define glProgramStringARB glflglProgramStringARB
extern PFNGLSHADEROP2EXTPROC glflglShaderOp2EXT;
#define glShaderOp2EXT glflglShaderOp2EXT
extern PFNGLACTIVETEXTUREARBPROC glflglActiveTextureARB;
#define glActiveTextureARB glflglActiveTextureARB
extern PFNGLTEXPARAMETERIIVEXTPROC glflglTexParameterIivEXT;
#define glTexParameterIivEXT glflglTexParameterIivEXT
extern PFNGLGETPERFQUERYDATAINTELPROC glflglGetPerfQueryDataINTEL;
#define glGetPerfQueryDataINTEL glflglGetPerfQueryDataINTEL
extern PFNGLVERTEXATTRIB4DVARBPROC glflglVertexAttrib4dvARB;
#define glVertexAttrib4dvARB glflglVertexAttrib4dvARB
extern PFNGLTEXTURESUBIMAGE1DEXTPROC glflglTextureSubImage1DEXT;
#define glTextureSubImage1DEXT glflglTextureSubImage1DEXT
extern PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC glflglDispatchComputeGroupSizeARB;
#define glDispatchComputeGroupSizeARB glflglDispatchComputeGroupSizeARB
extern PFNGLVERTEXATTRIB2DVARBPROC glflglVertexAttrib2dvARB;
#define glVertexAttrib2dvARB glflglVertexAttrib2dvARB
extern PFNGLVERTEXATTRIBPOINTERPROC glflglVertexAttribPointer;
#define glVertexAttribPointer glflglVertexAttribPointer
extern PFNGLDEPTHBOUNDSDNVPROC glflglDepthBoundsdNV;
#define glDepthBoundsdNV glflglDepthBoundsdNV
extern PFNGLDELETETEXTURESEXTPROC glflglDeleteTexturesEXT;
#define glDeleteTexturesEXT glflglDeleteTexturesEXT
extern PFNGLGETVIDEOUIVNVPROC glflglGetVideouivNV;
#define glGetVideouivNV glflglGetVideouivNV
extern PFNGLGENQUERIESEXTPROC glflglGenQueriesEXT;
#define glGenQueriesEXT glflglGenQueriesEXT
extern PFNGLNORMAL3BVPROC glflglNormal3bv;
#define glNormal3bv glflglNormal3bv
extern PFNGLLIGHTMODELXVOESPROC glflglLightModelxvOES;
#define glLightModelxvOES glflglLightModelxvOES
extern PFNGLAPPLYTEXTUREEXTPROC glflglApplyTextureEXT;
#define glApplyTextureEXT glflglApplyTextureEXT
extern PFNGLGETIMAGEHANDLENVPROC glflglGetImageHandleNV;
#define glGetImageHandleNV glflglGetImageHandleNV
extern PFNGLGETMINMAXPROC glflglGetMinmax;
#define glGetMinmax glflglGetMinmax
extern PFNGLGETFIXEDVOESPROC glflglGetFixedvOES;
#define glGetFixedvOES glflglGetFixedvOES
extern PFNGLSAMPLEPATTERNEXTPROC glflglSamplePatternEXT;
#define glSamplePatternEXT glflglSamplePatternEXT
extern PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC glflglColor4fNormal3fVertex3fSUN;
#define glColor4fNormal3fVertex3fSUN glflglColor4fNormal3fVertex3fSUN
extern PFNGLFOGCOORDDVEXTPROC glflglFogCoorddvEXT;
#define glFogCoorddvEXT glflglFogCoorddvEXT
extern PFNGLCOPYTEXTUREIMAGE1DEXTPROC glflglCopyTextureImage1DEXT;
#define glCopyTextureImage1DEXT glflglCopyTextureImage1DEXT
extern PFNGLDELETEFENCESNVPROC glflglDeleteFencesNV;
#define glDeleteFencesNV glflglDeleteFencesNV
extern PFNGLVERTEX3SVPROC glflglVertex3sv;
#define glVertex3sv glflglVertex3sv
extern PFNGLFLUSHSTATICDATAIBMPROC glflglFlushStaticDataIBM;
#define glFlushStaticDataIBM glflglFlushStaticDataIBM
extern PFNGLPROGRAMUNIFORM4UI64NVPROC glflglProgramUniform4ui64NV;
#define glProgramUniform4ui64NV glflglProgramUniform4ui64NV
extern PFNGLRASTERPOS4XOESPROC glflglRasterPos4xOES;
#define glRasterPos4xOES glflglRasterPos4xOES
extern PFNGLVERTEXATTRIBP1UIPROC glflglVertexAttribP1ui;
#define glVertexAttribP1ui glflglVertexAttribP1ui
extern PFNGLPROGRAMUNIFORM4DVEXTPROC glflglProgramUniform4dvEXT;
#define glProgramUniform4dvEXT glflglProgramUniform4dvEXT
extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glflglEndTransformFeedbackEXT;
#define glEndTransformFeedbackEXT glflglEndTransformFeedbackEXT
extern PFNGLBINORMAL3DEXTPROC glflglBinormal3dEXT;
#define glBinormal3dEXT glflglBinormal3dEXT
extern PFNGLENDCONDITIONALRENDERNVXPROC glflglEndConditionalRenderNVX;
#define glEndConditionalRenderNVX glflglEndConditionalRenderNVX
extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glflglGetNamedRenderbufferParameteriv;
#define glGetNamedRenderbufferParameteriv glflglGetNamedRenderbufferParameteriv
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC glflglGetFramebufferAttachmentParameterivOES;
#define glGetFramebufferAttachmentParameterivOES glflglGetFramebufferAttachmentParameterivOES
extern PFNGLBINDBUFFERSRANGEPROC glflglBindBuffersRange;
#define glBindBuffersRange glflglBindBuffersRange
extern PFNGLDRAWCOMMANDSADDRESSNVPROC glflglDrawCommandsAddressNV;
#define glDrawCommandsAddressNV glflglDrawCommandsAddressNV
extern PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glflglBindFragDataLocationIndexed;
#define glBindFragDataLocationIndexed glflglBindFragDataLocationIndexed
extern PFNGLMULTITEXCOORD2DVPROC glflglMultiTexCoord2dv;
#define glMultiTexCoord2dv glflglMultiTexCoord2dv
extern PFNGLUNIFORM2IVPROC glflglUniform2iv;
#define glUniform2iv glflglUniform2iv
extern PFNGLPROGRAMUNIFORM2I64VNVPROC glflglProgramUniform2i64vNV;
#define glProgramUniform2i64vNV glflglProgramUniform2i64vNV
extern PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC glflglFlushVertexArrayRangeAPPLE;
#define glFlushVertexArrayRangeAPPLE glflglFlushVertexArrayRangeAPPLE
extern PFNGLMULTITEXCOORD3DVARBPROC glflglMultiTexCoord3dvARB;
#define glMultiTexCoord3dvARB glflglMultiTexCoord3dvARB
extern PFNGLMULTITEXCOORD2SPROC glflglMultiTexCoord2s;
#define glMultiTexCoord2s glflglMultiTexCoord2s
extern PFNGLDEBUGMESSAGEINSERTARBPROC glflglDebugMessageInsertARB;
#define glDebugMessageInsertARB glflglDebugMessageInsertARB
extern PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC glflglFramebufferTexture2DMultisampleEXT;
#define glFramebufferTexture2DMultisampleEXT glflglFramebufferTexture2DMultisampleEXT
extern PFNGLMULTITEXCOORD2IPROC glflglMultiTexCoord2i;
#define glMultiTexCoord2i glflglMultiTexCoord2i
extern PFNGLTEXTURESUBIMAGE3DPROC glflglTextureSubImage3D;
#define glTextureSubImage3D glflglTextureSubImage3D
extern PFNGLFRAMEBUFFERTEXTURE1DPROC glflglFramebufferTexture1D;
#define glFramebufferTexture1D glflglFramebufferTexture1D
extern PFNGLGETSHADERIVPROC glflglGetShaderiv;
#define glGetShaderiv glflglGetShaderiv
extern PFNGLMULTITEXCOORD2DPROC glflglMultiTexCoord2d;
#define glMultiTexCoord2d glflglMultiTexCoord2d
extern PFNGLMULTITEXCOORD2FPROC glflglMultiTexCoord2f;
#define glMultiTexCoord2f glflglMultiTexCoord2f
extern PFNGLALPHAFUNCQCOMPROC glflglAlphaFuncQCOM;
#define glAlphaFuncQCOM glflglAlphaFuncQCOM
extern PFNGLGETPOINTERI_VEXTPROC glflglGetPointeri_vEXT;
#define glGetPointeri_vEXT glflglGetPointeri_vEXT
extern PFNGLGETPERFMONITORCOUNTERSAMDPROC glflglGetPerfMonitorCountersAMD;
#define glGetPerfMonitorCountersAMD glflglGetPerfMonitorCountersAMD
extern PFNGLNAMEDBUFFERSTORAGEPROC glflglNamedBufferStorage;
#define glNamedBufferStorage glflglNamedBufferStorage
extern PFNGLGENQUERIESARBPROC glflglGenQueriesARB;
#define glGenQueriesARB glflglGenQueriesARB
extern PFNGLGETNUNIFORMFVEXTPROC glflglGetnUniformfvEXT;
#define glGetnUniformfvEXT glflglGetnUniformfvEXT
extern PFNGLPROGRAMUNIFORM2UI64NVPROC glflglProgramUniform2ui64NV;
#define glProgramUniform2ui64NV glflglProgramUniform2ui64NV
extern PFNGLMULTITEXCOORD3BOESPROC glflglMultiTexCoord3bOES;
#define glMultiTexCoord3bOES glflglMultiTexCoord3bOES
extern PFNGLENABLEDRIVERCONTROLQCOMPROC glflglEnableDriverControlQCOM;
#define glEnableDriverControlQCOM glflglEnableDriverControlQCOM
extern PFNGLUNIFORM1DVPROC glflglUniform1dv;
#define glUniform1dv glflglUniform1dv
extern PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC glflglDrawRangeElementsBaseVertexOES;
#define glDrawRangeElementsBaseVertexOES glflglDrawRangeElementsBaseVertexOES
extern PFNGLVERTEXATTRIB1FVPROC glflglVertexAttrib1fv;
#define glVertexAttrib1fv glflglVertexAttrib1fv
extern PFNGLPROGRAMENVPARAMETERI4UIVNVPROC glflglProgramEnvParameterI4uivNV;
#define glProgramEnvParameterI4uivNV glflglProgramEnvParameterI4uivNV
extern PFNGLVERTEX2SVPROC glflglVertex2sv;
#define glVertex2sv glflglVertex2sv
extern PFNGLWINDOWPOS4DMESAPROC glflglWindowPos4dMESA;
#define glWindowPos4dMESA glflglWindowPos4dMESA
extern PFNGLDEBUGMESSAGECONTROLARBPROC glflglDebugMessageControlARB;
#define glDebugMessageControlARB glflglDebugMessageControlARB
extern PFNGLISTEXTUREEXTPROC glflglIsTextureEXT;
#define glIsTextureEXT glflglIsTextureEXT
extern PFNGLFRAGMENTMATERIALIVSGIXPROC glflglFragmentMaterialivSGIX;
#define glFragmentMaterialivSGIX glflglFragmentMaterialivSGIX
extern PFNGLLINKPROGRAMARBPROC glflglLinkProgramARB;
#define glLinkProgramARB glflglLinkProgramARB
extern PFNGLFINISHFENCEAPPLEPROC glflglFinishFenceAPPLE;
#define glFinishFenceAPPLE glflglFinishFenceAPPLE
extern PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glflglVertexArrayVertexAttribBindingEXT;
#define glVertexArrayVertexAttribBindingEXT glflglVertexArrayVertexAttribBindingEXT
extern PFNGLMULTITEXCOORD4FVPROC glflglMultiTexCoord4fv;
#define glMultiTexCoord4fv glflglMultiTexCoord4fv
extern PFNGLRASTERPOS3IPROC glflglRasterPos3i;
#define glRasterPos3i glflglRasterPos3i
extern PFNGLRASTERPOS3DPROC glflglRasterPos3d;
#define glRasterPos3d glflglRasterPos3d
extern PFNGLPOLLASYNCSGIXPROC glflglPollAsyncSGIX;
#define glPollAsyncSGIX glflglPollAsyncSGIX
extern PFNGLRASTERPOS3FPROC glflglRasterPos3f;
#define glRasterPos3f glflglRasterPos3f
extern PFNGLCOMPRESSEDTEXIMAGE3DPROC glflglCompressedTexImage3D;
#define glCompressedTexImage3D glflglCompressedTexImage3D
extern PFNGLVARIANTIVEXTPROC glflglVariantivEXT;
#define glVariantivEXT glflglVariantivEXT
extern PFNGLUNMAPTEXTURE2DINTELPROC glflglUnmapTexture2DINTEL;
#define glUnmapTexture2DINTEL glflglUnmapTexture2DINTEL
extern PFNGLGETVERTEXATTRIBIVPROC glflglGetVertexAttribiv;
#define glGetVertexAttribiv glflglGetVertexAttribiv
extern PFNGLCOPYCOLORTABLESGIPROC glflglCopyColorTableSGI;
#define glCopyColorTableSGI glflglCopyColorTableSGI
extern PFNGLGETPOINTERINDEXEDVEXTPROC glflglGetPointerIndexedvEXT;
#define glGetPointerIndexedvEXT glflglGetPointerIndexedvEXT
extern PFNGLCOLOR4XVOESPROC glflglColor4xvOES;
#define glColor4xvOES glflglColor4xvOES
extern PFNGLVERTEXATTRIB3FVPROC glflglVertexAttrib3fv;
#define glVertexAttrib3fv glflglVertexAttrib3fv
extern PFNGLRASTERPOS3SPROC glflglRasterPos3s;
#define glRasterPos3s glflglRasterPos3s
extern PFNGLCONVOLUTIONFILTER1DPROC glflglConvolutionFilter1D;
#define glConvolutionFilter1D glflglConvolutionFilter1D
extern PFNGLGETNHISTOGRAMPROC glflglGetnHistogram;
#define glGetnHistogram glflglGetnHistogram
extern PFNGLCOMBINEROUTPUTNVPROC glflglCombinerOutputNV;
#define glCombinerOutputNV glflglCombinerOutputNV
extern PFNGLMULTITEXPARAMETERFVEXTPROC glflglMultiTexParameterfvEXT;
#define glMultiTexParameterfvEXT glflglMultiTexParameterfvEXT
extern PFNGLWINDOWPOS4SMESAPROC glflglWindowPos4sMESA;
#define glWindowPos4sMESA glflglWindowPos4sMESA
extern PFNGLMULTITEXCOORD2IVARBPROC glflglMultiTexCoord2ivARB;
#define glMultiTexCoord2ivARB glflglMultiTexCoord2ivARB
extern PFNGLISLISTPROC glflglIsList;
#define glIsList glflglIsList
extern PFNGLGETVERTEXATTRIBIVNVPROC glflglGetVertexAttribivNV;
#define glGetVertexAttribivNV glflglGetVertexAttribivNV
extern PFNGLGETINFOLOGARBPROC glflglGetInfoLogARB;
#define glGetInfoLogARB glflglGetInfoLogARB
extern PFNGLBINDPARAMETEREXTPROC glflglBindParameterEXT;
#define glBindParameterEXT glflglBindParameterEXT
extern PFNGLVERTEXATTRIBS3DVNVPROC glflglVertexAttribs3dvNV;
#define glVertexAttribs3dvNV glflglVertexAttribs3dvNV
extern PFNGLGLOBALALPHAFACTORSSUNPROC glflglGlobalAlphaFactorsSUN;
#define glGlobalAlphaFactorsSUN glflglGlobalAlphaFactorsSUN
extern PFNGLGETTRACKMATRIXIVNVPROC glflglGetTrackMatrixivNV;
#define glGetTrackMatrixivNV glflglGetTrackMatrixivNV
extern PFNGLTEXTUREPARAMETERFVEXTPROC glflglTextureParameterfvEXT;
#define glTextureParameterfvEXT glflglTextureParameterfvEXT
extern PFNGLISNAMEDBUFFERRESIDENTNVPROC glflglIsNamedBufferResidentNV;
#define glIsNamedBufferResidentNV glflglIsNamedBufferResidentNV
extern PFNGLMATRIXMULTDEXTPROC glflglMatrixMultdEXT;
#define glMatrixMultdEXT glflglMatrixMultdEXT
extern PFNGLTBUFFERMASK3DFXPROC glflglTbufferMask3DFX;
#define glTbufferMask3DFX glflglTbufferMask3DFX
extern PFNGLGENERATEMIPMAPEXTPROC glflglGenerateMipmapEXT;
#define glGenerateMipmapEXT glflglGenerateMipmapEXT
extern PFNGLOBJECTLABELKHRPROC glflglObjectLabelKHR;
#define glObjectLabelKHR glflglObjectLabelKHR
extern PFNGLVERTEXATTRIB1FVARBPROC glflglVertexAttrib1fvARB;
#define glVertexAttrib1fvARB glflglVertexAttrib1fvARB
extern PFNGLGENERATETEXTUREMIPMAPPROC glflglGenerateTextureMipmap;
#define glGenerateTextureMipmap glflglGenerateTextureMipmap
extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glflglNamedProgramLocalParameterI4uivEXT;
#define glNamedProgramLocalParameterI4uivEXT glflglNamedProgramLocalParameterI4uivEXT
extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glflglMultiDrawElementsBaseVertex;
#define glMultiDrawElementsBaseVertex glflglMultiDrawElementsBaseVertex
extern PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC glflglProgramSubroutineParametersuivNV;
#define glProgramSubroutineParametersuivNV glflglProgramSubroutineParametersuivNV
extern PFNGLCHECKFRAMEBUFFERSTATUSOESPROC glflglCheckFramebufferStatusOES;
#define glCheckFramebufferStatusOES glflglCheckFramebufferStatusOES
extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glflglProgramUniformMatrix2x4dvEXT;
#define glProgramUniformMatrix2x4dvEXT glflglProgramUniformMatrix2x4dvEXT
extern PFNGLSAMPLEMASKINDEXEDNVPROC glflglSampleMaskIndexedNV;
#define glSampleMaskIndexedNV glflglSampleMaskIndexedNV
extern PFNGLMEMORYBARRIEREXTPROC glflglMemoryBarrierEXT;
#define glMemoryBarrierEXT glflglMemoryBarrierEXT
extern PFNGLVERTEXATTRIB3SVNVPROC glflglVertexAttrib3svNV;
#define glVertexAttrib3svNV glflglVertexAttrib3svNV
extern PFNGLVERTEXSTREAM3IATIPROC glflglVertexStream3iATI;
#define glVertexStream3iATI glflglVertexStream3iATI
extern PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glflglCompressedTexSubImage1D;
#define glCompressedTexSubImage1D glflglCompressedTexSubImage1D
extern PFNGLSETFENCENVPROC glflglSetFenceNV;
#define glSetFenceNV glflglSetFenceNV
extern PFNGLATTACHOBJECTARBPROC glflglAttachObjectARB;
#define glAttachObjectARB glflglAttachObjectARB
extern PFNGLCOPYCONVOLUTIONFILTER1DPROC glflglCopyConvolutionFilter1D;
#define glCopyConvolutionFilter1D glflglCopyConvolutionFilter1D
extern PFNGLDELETEPATHSNVPROC glflglDeletePathsNV;
#define glDeletePathsNV glflglDeletePathsNV
extern PFNGLTEXPARAMETERXVOESPROC glflglTexParameterxvOES;
#define glTexParameterxvOES glflglTexParameterxvOES
extern PFNGLTEXTUREBUFFERPROC glflglTextureBuffer;
#define glTextureBuffer glflglTextureBuffer
extern PFNGLVERTEXATTRIB4NSVPROC glflglVertexAttrib4Nsv;
#define glVertexAttrib4Nsv glflglVertexAttrib4Nsv
extern PFNGLVERTEXATTRIBI4USVEXTPROC glflglVertexAttribI4usvEXT;
#define glVertexAttribI4usvEXT glflglVertexAttribI4usvEXT
extern PFNGLTEXTUREBUFFERRANGEEXTPROC glflglTextureBufferRangeEXT;
#define glTextureBufferRangeEXT glflglTextureBufferRangeEXT
extern PFNGLVERTEXP3UIVPROC glflglVertexP3uiv;
#define glVertexP3uiv glflglVertexP3uiv
extern PFNGLTRANSFORMFEEDBACKVARYINGSPROC glflglTransformFeedbackVaryings;
#define glTransformFeedbackVaryings glflglTransformFeedbackVaryings
extern PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC glflglFramebufferTextureMultiviewOVR;
#define glFramebufferTextureMultiviewOVR glflglFramebufferTextureMultiviewOVR
extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC glflglCompressedMultiTexSubImage2DEXT;
#define glCompressedMultiTexSubImage2DEXT glflglCompressedMultiTexSubImage2DEXT
extern PFNGLGETNMAPDVPROC glflglGetnMapdv;
#define glGetnMapdv glflglGetnMapdv
extern PFNGLDEBUGMESSAGECALLBACKPROC glflglDebugMessageCallback;
#define glDebugMessageCallback glflglDebugMessageCallback
extern PFNGLTANGENT3SVEXTPROC glflglTangent3svEXT;
#define glTangent3svEXT glflglTangent3svEXT
extern PFNGLVERTEXATTRIBPARAMETERIAMDPROC glflglVertexAttribParameteriAMD;
#define glVertexAttribParameteriAMD glflglVertexAttribParameteriAMD
extern PFNGLCREATESYNCFROMCLEVENTARBPROC glflglCreateSyncFromCLeventARB;
#define glCreateSyncFromCLeventARB glflglCreateSyncFromCLeventARB
extern PFNGLGETVERTEXATTRIBLUI64VARBPROC glflglGetVertexAttribLui64vARB;
#define glGetVertexAttribLui64vARB glflglGetVertexAttribLui64vARB
extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC glflglDrawElementsInstancedBaseInstanceEXT;
#define glDrawElementsInstancedBaseInstanceEXT glflglDrawElementsInstancedBaseInstanceEXT
extern PFNGLVERTEXATTRIBL4UI64NVPROC glflglVertexAttribL4ui64NV;
#define glVertexAttribL4ui64NV glflglVertexAttribL4ui64NV
extern PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC glflglReplacementCodeuiColor4ubVertex3fSUN;
#define glReplacementCodeuiColor4ubVertex3fSUN glflglReplacementCodeuiColor4ubVertex3fSUN
extern PFNGLVERTEXPOINTERVINTELPROC glflglVertexPointervINTEL;
#define glVertexPointervINTEL glflglVertexPointervINTEL
extern PFNGLCREATESHADERPROGRAMVEXTPROC glflglCreateShaderProgramvEXT;
#define glCreateShaderProgramvEXT glflglCreateShaderProgramvEXT
extern PFNGLRASTERPOS4FVPROC glflglRasterPos4fv;
#define glRasterPos4fv glflglRasterPos4fv
extern PFNGLVERTEX2BVOESPROC glflglVertex2bvOES;
#define glVertex2bvOES glflglVertex2bvOES
extern PFNGLSPRITEPARAMETERIVSGIXPROC glflglSpriteParameterivSGIX;
#define glSpriteParameterivSGIX glflglSpriteParameterivSGIX
extern PFNGLGETMAPCONTROLPOINTSNVPROC glflglGetMapControlPointsNV;
#define glGetMapControlPointsNV glflglGetMapControlPointsNV
extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glflglNamedProgramLocalParametersI4ivEXT;
#define glNamedProgramLocalParametersI4ivEXT glflglNamedProgramLocalParametersI4ivEXT
extern PFNGLBINDBUFFERRANGENVPROC glflglBindBufferRangeNV;
#define glBindBufferRangeNV glflglBindBufferRangeNV
extern PFNGLVERTEXSTREAM3DVATIPROC glflglVertexStream3dvATI;
#define glVertexStream3dvATI glflglVertexStream3dvATI
extern PFNGLNORMALPOINTERLISTIBMPROC glflglNormalPointerListIBM;
#define glNormalPointerListIBM glflglNormalPointerListIBM
extern PFNGLPROGRAMUNIFORM2DVEXTPROC glflglProgramUniform2dvEXT;
#define glProgramUniform2dvEXT glflglProgramUniform2dvEXT
extern PFNGLMULTIMODEDRAWARRAYSIBMPROC glflglMultiModeDrawArraysIBM;
#define glMultiModeDrawArraysIBM glflglMultiModeDrawArraysIBM
extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glflglGetNamedFramebufferAttachmentParameterivEXT;
#define glGetNamedFramebufferAttachmentParameterivEXT glflglGetNamedFramebufferAttachmentParameterivEXT
extern PFNGLGETFLOATVPROC glflglGetFloatv;
#define glGetFloatv glflglGetFloatv
extern PFNGLCOVERAGEOPERATIONNVPROC glflglCoverageOperationNV;
#define glCoverageOperationNV glflglCoverageOperationNV
extern PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glflglVertexArrayVertexAttribIFormatEXT;
#define glVertexArrayVertexAttribIFormatEXT glflglVertexArrayVertexAttribIFormatEXT
extern PFNGLHINTPROC glflglHint;
#define glHint glflglHint
extern PFNGLPOINTALONGPATHNVPROC glflglPointAlongPathNV;
#define glPointAlongPathNV glflglPointAlongPathNV
extern PFNGLVERTEXSTREAM2SVATIPROC glflglVertexStream2svATI;
#define glVertexStream2svATI glflglVertexStream2svATI
extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glflglMultiDrawArraysIndirect;
#define glMultiDrawArraysIndirect glflglMultiDrawArraysIndirect
extern PFNGLVERTEXATTRIBP2UIVPROC glflglVertexAttribP2uiv;
#define glVertexAttribP2uiv glflglVertexAttribP2uiv
extern PFNGLREPLACEMENTCODEUISUNPROC glflglReplacementCodeuiSUN;
#define glReplacementCodeuiSUN glflglReplacementCodeuiSUN
extern PFNGLFRAMEBUFFERTEXTUREARBPROC glflglFramebufferTextureARB;
#define glFramebufferTextureARB glflglFramebufferTextureARB
extern PFNGLDELETEPROGRAMPIPELINESEXTPROC glflglDeleteProgramPipelinesEXT;
#define glDeleteProgramPipelinesEXT glflglDeleteProgramPipelinesEXT
extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glflglPushClientAttribDefaultEXT;
#define glPushClientAttribDefaultEXT glflglPushClientAttribDefaultEXT
extern PFNGLSCALEFPROC glflglScalef;
#define glScalef glflglScalef
extern PFNGLSCALEDPROC glflglScaled;
#define glScaled glflglScaled
extern PFNGLSCALEXPROC glflglScalex;
#define glScalex glflglScalex
extern PFNGLGETPROGRAMRESOURCENAMEPROC glflglGetProgramResourceName;
#define glGetProgramResourceName glflglGetProgramResourceName
extern PFNGLCOPYCOLORTABLEPROC glflglCopyColorTable;
#define glCopyColorTable glflglCopyColorTable
extern PFNGLDEPTHRANGEARRAYVPROC glflglDepthRangeArrayv;
#define glDepthRangeArrayv glflglDepthRangeArrayv
extern PFNGLCOVERFILLPATHINSTANCEDNVPROC glflglCoverFillPathInstancedNV;
#define glCoverFillPathInstancedNV glflglCoverFillPathInstancedNV
extern PFNGLMULTITEXPARAMETERIVEXTPROC glflglMultiTexParameterivEXT;
#define glMultiTexParameterivEXT glflglMultiTexParameterivEXT
extern PFNGLDRAWBUFFERSINDEXEDEXTPROC glflglDrawBuffersIndexedEXT;
#define glDrawBuffersIndexedEXT glflglDrawBuffersIndexedEXT
extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glflglGetActiveAtomicCounterBufferiv;
#define glGetActiveAtomicCounterBufferiv glflglGetActiveAtomicCounterBufferiv
extern PFNGLSTENCILOPSEPARATEPROC glflglStencilOpSeparate;
#define glStencilOpSeparate glflglStencilOpSeparate
extern PFNGLVERTEXATTRIB4FNVPROC glflglVertexAttrib4fNV;
#define glVertexAttrib4fNV glflglVertexAttrib4fNV
extern PFNGLGETCOLORTABLEPARAMETERIVSGIPROC glflglGetColorTableParameterivSGI;
#define glGetColorTableParameterivSGI glflglGetColorTableParameterivSGI
extern PFNGLVERTEXARRAYATTRIBBINDINGPROC glflglVertexArrayAttribBinding;
#define glVertexArrayAttribBinding glflglVertexArrayAttribBinding
extern PFNGLPROGRAMPARAMETERS4DVNVPROC glflglProgramParameters4dvNV;
#define glProgramParameters4dvNV glflglProgramParameters4dvNV
extern PFNGLVERTEXATTRIBL4DVPROC glflglVertexAttribL4dv;
#define glVertexAttribL4dv glflglVertexAttribL4dv
extern PFNGLGETTEXPARAMETERIVPROC glflglGetTexParameteriv;
#define glGetTexParameteriv glflglGetTexParameteriv
extern PFNGLGETUNIFORMOFFSETEXTPROC glflglGetUniformOffsetEXT;
#define glGetUniformOffsetEXT glflglGetUniformOffsetEXT
extern PFNGLPROGRAMUNIFORM1DVPROC glflglProgramUniform1dv;
#define glProgramUniform1dv glflglProgramUniform1dv
extern PFNGLPROGRAMUNIFORM3I64VNVPROC glflglProgramUniform3i64vNV;
#define glProgramUniform3i64vNV glflglProgramUniform3i64vNV
extern PFNGLTANGENT3FEXTPROC glflglTangent3fEXT;
#define glTangent3fEXT glflglTangent3fEXT
extern PFNGLDRAWARRAYSINSTANCEDNVPROC glflglDrawArraysInstancedNV;
#define glDrawArraysInstancedNV glflglDrawArraysInstancedNV
extern PFNGLSCISSORINDEXEDVNVPROC glflglScissorIndexedvNV;
#define glScissorIndexedvNV glflglScissorIndexedvNV
extern PFNGLGETPATHMETRICRANGENVPROC glflglGetPathMetricRangeNV;
#define glGetPathMetricRangeNV glflglGetPathMetricRangeNV
extern PFNGLWINDOWPOS2IMESAPROC glflglWindowPos2iMESA;
#define glWindowPos2iMESA glflglWindowPos2iMESA
extern PFNGLVERTEX2XVOESPROC glflglVertex2xvOES;
#define glVertex2xvOES glflglVertex2xvOES
extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glflglGetnCompressedTexImage;
#define glGetnCompressedTexImage glflglGetnCompressedTexImage
extern PFNGLWINDOWPOS2DVPROC glflglWindowPos2dv;
#define glWindowPos2dv glflglWindowPos2dv
extern PFNGLGETRENDERBUFFERPARAMETERIVOESPROC glflglGetRenderbufferParameterivOES;
#define glGetRenderbufferParameterivOES glflglGetRenderbufferParameterivOES
extern PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC glflglReplacementCodeuiVertex3fSUN;
#define glReplacementCodeuiVertex3fSUN glflglReplacementCodeuiVertex3fSUN
extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glflglGetTransformFeedbackVaryingEXT;
#define glGetTransformFeedbackVaryingEXT glflglGetTransformFeedbackVaryingEXT
extern PFNGLWINDOWPOS3FARBPROC glflglWindowPos3fARB;
#define glWindowPos3fARB glflglWindowPos3fARB
extern PFNGLMAPNAMEDBUFFEREXTPROC glflglMapNamedBufferEXT;
#define glMapNamedBufferEXT glflglMapNamedBufferEXT
extern PFNGLDISABLEPROC glflglDisable;
#define glDisable glflglDisable
extern PFNGLDRAWELEMENTSBASEVERTEXOESPROC glflglDrawElementsBaseVertexOES;
#define glDrawElementsBaseVertexOES glflglDrawElementsBaseVertexOES
extern PFNGLISPOINTINFILLPATHNVPROC glflglIsPointInFillPathNV;
#define glIsPointInFillPathNV glflglIsPointInFillPathNV
extern PFNGLVERTEXATTRIBI2UIEXTPROC glflglVertexAttribI2uiEXT;
#define glVertexAttribI2uiEXT glflglVertexAttribI2uiEXT
extern PFNGLPROGRAMUNIFORM4UIVPROC glflglProgramUniform4uiv;
#define glProgramUniform4uiv glflglProgramUniform4uiv
extern PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC glflglGetConvolutionParameterfvEXT;
#define glGetConvolutionParameterfvEXT glflglGetConvolutionParameterfvEXT
extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glflglFramebufferRenderbufferEXT;
#define glFramebufferRenderbufferEXT glflglFramebufferRenderbufferEXT
extern PFNGLBINORMAL3SVEXTPROC glflglBinormal3svEXT;
#define glBinormal3svEXT glflglBinormal3svEXT
extern PFNGLBINDBUFFEROFFSETNVPROC glflglBindBufferOffsetNV;
#define glBindBufferOffsetNV glflglBindBufferOffsetNV
extern PFNGLGENFRAMEBUFFERSOESPROC glflglGenFramebuffersOES;
#define glGenFramebuffersOES glflglGenFramebuffersOES
extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glflglCopyTextureSubImage2D;
#define glCopyTextureSubImage2D glflglCopyTextureSubImage2D
extern PFNGLGETPROGRAMRESOURCEFVNVPROC glflglGetProgramResourcefvNV;
#define glGetProgramResourcefvNV glflglGetProgramResourcefvNV
extern PFNGLRECTFVPROC glflglRectfv;
#define glRectfv glflglRectfv
extern PFNGLGETLIGHTFVPROC glflglGetLightfv;
#define glGetLightfv glflglGetLightfv
extern PFNGLGETSAMPLERPARAMETERIIVOESPROC glflglGetSamplerParameterIivOES;
#define glGetSamplerParameterIivOES glflglGetSamplerParameterIivOES
extern PFNGLVERTEX2BOESPROC glflglVertex2bOES;
#define glVertex2bOES glflglVertex2bOES
extern PFNGLUNIFORM2IVARBPROC glflglUniform2ivARB;
#define glUniform2ivARB glflglUniform2ivARB
extern PFNGLMULTITEXCOORD3SPROC glflglMultiTexCoord3s;
#define glMultiTexCoord3s glflglMultiTexCoord3s
extern PFNGLGETHISTOGRAMPARAMETERFVEXTPROC glflglGetHistogramParameterfvEXT;
#define glGetHistogramParameterfvEXT glflglGetHistogramParameterfvEXT
extern PFNGLGETPROGRAMSTRINGNVPROC glflglGetProgramStringNV;
#define glGetProgramStringNV glflglGetProgramStringNV
extern PFNGLGETTEXTURESAMPLERHANDLENVPROC glflglGetTextureSamplerHandleNV;
#define glGetTextureSamplerHandleNV glflglGetTextureSamplerHandleNV
extern PFNGLTEXTURESUBIMAGE2DPROC glflglTextureSubImage2D;
#define glTextureSubImage2D glflglTextureSubImage2D
extern PFNGLGETGRAPHICSRESETSTATUSEXTPROC glflglGetGraphicsResetStatusEXT;
#define glGetGraphicsResetStatusEXT glflglGetGraphicsResetStatusEXT
extern PFNGLOBJECTPURGEABLEAPPLEPROC glflglObjectPurgeableAPPLE;
#define glObjectPurgeableAPPLE glflglObjectPurgeableAPPLE
extern PFNGLCOLORTABLESGIPROC glflglColorTableSGI;
#define glColorTableSGI glflglColorTableSGI
extern PFNGLMULTITEXCOORD3IPROC glflglMultiTexCoord3i;
#define glMultiTexCoord3i glflglMultiTexCoord3i
extern PFNGLMULTITEXCOORD3FPROC glflglMultiTexCoord3f;
#define glMultiTexCoord3f glflglMultiTexCoord3f
extern PFNGLMULTITEXCOORD3DPROC glflglMultiTexCoord3d;
#define glMultiTexCoord3d glflglMultiTexCoord3d
extern PFNGLISENABLEDIOESPROC glflglIsEnablediOES;
#define glIsEnablediOES glflglIsEnablediOES
extern PFNGLFOGCOORDDVPROC glflglFogCoorddv;
#define glFogCoorddv glflglFogCoorddv
extern PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC glflglCopyConvolutionFilter2DEXT;
#define glCopyConvolutionFilter2DEXT glflglCopyConvolutionFilter2DEXT
extern PFNGLWINDOWPOS2FVMESAPROC glflglWindowPos2fvMESA;
#define glWindowPos2fvMESA glflglWindowPos2fvMESA
extern PFNGLGETNUNIFORMIVKHRPROC glflglGetnUniformivKHR;
#define glGetnUniformivKHR glflglGetnUniformivKHR
extern PFNGLPOLYGONOFFSETXOESPROC glflglPolygonOffsetxOES;
#define glPolygonOffsetxOES glflglPolygonOffsetxOES
extern PFNGLVERTEXATTRIB4DARBPROC glflglVertexAttrib4dARB;
#define glVertexAttrib4dARB glflglVertexAttrib4dARB
extern PFNGLUNIFORMHANDLEUI64VARBPROC glflglUniformHandleui64vARB;
#define glUniformHandleui64vARB glflglUniformHandleui64vARB
extern PFNGLFRAGMENTLIGHTMODELFVSGIXPROC glflglFragmentLightModelfvSGIX;
#define glFragmentLightModelfvSGIX glflglFragmentLightModelfvSGIX
extern PFNGLSWIZZLEEXTPROC glflglSwizzleEXT;
#define glSwizzleEXT glflglSwizzleEXT
extern PFNGLBINDFRAGMENTSHADERATIPROC glflglBindFragmentShaderATI;
#define glBindFragmentShaderATI glflglBindFragmentShaderATI
extern PFNGLGETHISTOGRAMEXTPROC glflglGetHistogramEXT;
#define glGetHistogramEXT glflglGetHistogramEXT
extern PFNGLGENBUFFERSARBPROC glflglGenBuffersARB;
#define glGenBuffersARB glflglGenBuffersARB
extern PFNGLLISTPARAMETERFVSGIXPROC glflglListParameterfvSGIX;
#define glListParameterfvSGIX glflglListParameterfvSGIX
extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glflglNamedRenderbufferStorageMultisample;
#define glNamedRenderbufferStorageMultisample glflglNamedRenderbufferStorageMultisample
extern PFNGLTEXCOORD4BVOESPROC glflglTexCoord4bvOES;
#define glTexCoord4bvOES glflglTexCoord4bvOES
extern PFNGLCLEARNAMEDBUFFERDATAPROC glflglClearNamedBufferData;
#define glClearNamedBufferData glflglClearNamedBufferData
extern PFNGLLIGHTMODELXOESPROC glflglLightModelxOES;
#define glLightModelxOES glflglLightModelxOES
extern PFNGLVERTEXBLENDENVIATIPROC glflglVertexBlendEnviATI;
#define glVertexBlendEnviATI glflglVertexBlendEnviATI
extern PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC glflglMultiDrawElementArrayAPPLE;
#define glMultiDrawElementArrayAPPLE glflglMultiDrawElementArrayAPPLE
extern PFNGLSTENCILFILLPATHINSTANCEDNVPROC glflglStencilFillPathInstancedNV;
#define glStencilFillPathInstancedNV glflglStencilFillPathInstancedNV
extern PFNGLVDPAUUNMAPSURFACESNVPROC glflglVDPAUUnmapSurfacesNV;
#define glVDPAUUnmapSurfacesNV glflglVDPAUUnmapSurfacesNV
extern PFNGLPROGRAMUNIFORM4I64NVPROC glflglProgramUniform4i64NV;
#define glProgramUniform4i64NV glflglProgramUniform4i64NV
extern PFNGLVERTEXSTREAM4DVATIPROC glflglVertexStream4dvATI;
#define glVertexStream4dvATI glflglVertexStream4dvATI
extern PFNGLVERTEXATTRIB4NUIVARBPROC glflglVertexAttrib4NuivARB;
#define glVertexAttrib4NuivARB glflglVertexAttrib4NuivARB
extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glflglProgramUniformMatrix4fvEXT;
#define glProgramUniformMatrix4fvEXT glflglProgramUniformMatrix4fvEXT
extern PFNGLVERTEXATTRIB3HNVPROC glflglVertexAttrib3hNV;
#define glVertexAttrib3hNV glflglVertexAttrib3hNV
extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glflglFlushMappedNamedBufferRange;
#define glFlushMappedNamedBufferRange glflglFlushMappedNamedBufferRange
extern PFNGLPUSHNAMEPROC glflglPushName;
#define glPushName glflglPushName
extern PFNGLGETCLIPPLANEPROC glflglGetClipPlane;
#define glGetClipPlane glflglGetClipPlane
extern PFNGLVERTEXATTRIB3FPROC glflglVertexAttrib3f;
#define glVertexAttrib3f glflglVertexAttrib3f
extern PFNGLVERTEXATTRIB3DPROC glflglVertexAttrib3d;
#define glVertexAttrib3d glflglVertexAttrib3d
extern PFNGLBLENDCOLORPROC glflglBlendColor;
#define glBlendColor glflglBlendColor
extern PFNGLBINDTRANSFORMFEEDBACKNVPROC glflglBindTransformFeedbackNV;
#define glBindTransformFeedbackNV glflglBindTransformFeedbackNV
extern PFNGLSAMPLERPARAMETERIUIVPROC glflglSamplerParameterIuiv;
#define glSamplerParameterIuiv glflglSamplerParameterIuiv
extern PFNGLINDEXUBVPROC glflglIndexubv;
#define glIndexubv glflglIndexubv
extern PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC glflglNamedBufferPageCommitmentEXT;
#define glNamedBufferPageCommitmentEXT glflglNamedBufferPageCommitmentEXT
extern PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC glflglCheckNamedFramebufferStatus;
#define glCheckNamedFramebufferStatus glflglCheckNamedFramebufferStatus
extern PFNGLGETOBJECTBUFFERFVATIPROC glflglGetObjectBufferfvATI;
#define glGetObjectBufferfvATI glflglGetObjectBufferfvATI
extern PFNGLRASTERPOS4DPROC glflglRasterPos4d;
#define glRasterPos4d glflglRasterPos4d
extern PFNGLRASTERPOS4FPROC glflglRasterPos4f;
#define glRasterPos4f glflglRasterPos4f
extern PFNGLVERTEXATTRIB3SPROC glflglVertexAttrib3s;
#define glVertexAttrib3s glflglVertexAttrib3s
extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glflglDrawElementsInstancedEXT;
#define glDrawElementsInstancedEXT glflglDrawElementsInstancedEXT
extern PFNGLVERTEX3FVPROC glflglVertex3fv;
#define glVertex3fv glflglVertex3fv
extern PFNGLRASTERPOS4SPROC glflglRasterPos4s;
#define glRasterPos4s glflglRasterPos4s
extern PFNGLGETPROGRAMSTAGEIVPROC glflglGetProgramStageiv;
#define glGetProgramStageiv glflglGetProgramStageiv
extern PFNGLBLITFRAMEBUFFERANGLEPROC glflglBlitFramebufferANGLE;
#define glBlitFramebufferANGLE glflglBlitFramebufferANGLE
extern PFNGLGETMATERIALXOESPROC glflglGetMaterialxOES;
#define glGetMaterialxOES glflglGetMaterialxOES
extern PFNGLPOPMATRIXPROC glflglPopMatrix;
#define glPopMatrix glflglPopMatrix
extern PFNGLGETVIDEOUI64VNVPROC glflglGetVideoui64vNV;
#define glGetVideoui64vNV glflglGetVideoui64vNV
extern PFNGLTANGENT3BEXTPROC glflglTangent3bEXT;
#define glTangent3bEXT glflglTangent3bEXT
extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glflglGetGraphicsResetStatusARB;
#define glGetGraphicsResetStatusARB glflglGetGraphicsResetStatusARB
extern PFNGLUNIFORM4IPROC glflglUniform4i;
#define glUniform4i glflglUniform4i
extern PFNGLACTIVETEXTUREPROC glflglActiveTexture;
#define glActiveTexture glflglActiveTexture
extern PFNGLENABLEVERTEXATTRIBARRAYPROC glflglEnableVertexAttribArray;
#define glEnableVertexAttribArray glflglEnableVertexAttribArray
extern PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC glflglProgramUniformHandleui64NV;
#define glProgramUniformHandleui64NV glflglProgramUniformHandleui64NV
extern PFNGLTEXGENFVOESPROC glflglTexGenfvOES;
#define glTexGenfvOES glflglTexGenfvOES
extern PFNGLUNIFORM4DPROC glflglUniform4d;
#define glUniform4d glflglUniform4d
extern PFNGLUNIFORM4FPROC glflglUniform4f;
#define glUniform4f glflglUniform4f
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glflglRenderbufferStorageMultisample;
#define glRenderbufferStorageMultisample glflglRenderbufferStorageMultisample
extern PFNGLCREATEPROGRAMPIPELINESPROC glflglCreateProgramPipelines;
#define glCreateProgramPipelines glflglCreateProgramPipelines
extern PFNGLVERTEXATTRIBLPOINTERPROC glflglVertexAttribLPointer;
#define glVertexAttribLPointer glflglVertexAttribLPointer
extern PFNGLUNIFORM2UIEXTPROC glflglUniform2uiEXT;
#define glUniform2uiEXT glflglUniform2uiEXT
extern PFNGLMULTITEXCOORD3SVPROC glflglMultiTexCoord3sv;
#define glMultiTexCoord3sv glflglMultiTexCoord3sv
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glflglDrawElementsInstancedBaseVertex;
#define glDrawElementsInstancedBaseVertex glflglDrawElementsInstancedBaseVertex
extern PFNGLSAMPLEMASKSGISPROC glflglSampleMaskSGIS;
#define glSampleMaskSGIS glflglSampleMaskSGIS
extern PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC glflglPixelTransformParameterfvEXT;
#define glPixelTransformParameterfvEXT glflglPixelTransformParameterfvEXT
extern PFNGLBLENDFUNCSEPARATEIEXTPROC glflglBlendFuncSeparateiEXT;
#define glBlendFuncSeparateiEXT glflglBlendFuncSeparateiEXT
extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glflglDrawTransformFeedbackNV;
#define glDrawTransformFeedbackNV glflglDrawTransformFeedbackNV
extern PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC glflglTextureImage2DMultisampleCoverageNV;
#define glTextureImage2DMultisampleCoverageNV glflglTextureImage2DMultisampleCoverageNV
extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glflglNamedRenderbufferStorageMultisampleCoverageEXT;
#define glNamedRenderbufferStorageMultisampleCoverageEXT glflglNamedRenderbufferStorageMultisampleCoverageEXT
extern PFNGLGETACTIVESUBROUTINENAMEPROC glflglGetActiveSubroutineName;
#define glGetActiveSubroutineName glflglGetActiveSubroutineName
extern PFNGLMULTITEXCOORD4IVPROC glflglMultiTexCoord4iv;
#define glMultiTexCoord4iv glflglMultiTexCoord4iv
extern PFNGLTEXENVFVPROC glflglTexEnvfv;
#define glTexEnvfv glflglTexEnvfv
extern PFNGLTEXBUFFERRANGEEXTPROC glflglTexBufferRangeEXT;
#define glTexBufferRangeEXT glflglTexBufferRangeEXT
extern PFNGLPOPDEBUGGROUPPROC glflglPopDebugGroup;
#define glPopDebugGroup glflglPopDebugGroup
extern PFNGLUNIFORMBLOCKBINDINGPROC glflglUniformBlockBinding;
#define glUniformBlockBinding glflglUniformBlockBinding
extern PFNGLWINDOWPOS2SVMESAPROC glflglWindowPos2svMESA;
#define glWindowPos2svMESA glflglWindowPos2svMESA
extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glflglGenerateTextureMipmapEXT;
#define glGenerateTextureMipmapEXT glflglGenerateTextureMipmapEXT
extern PFNGLBINDLIGHTPARAMETEREXTPROC glflglBindLightParameterEXT;
#define glBindLightParameterEXT glflglBindLightParameterEXT
extern PFNGLTEXCOORD3BOESPROC glflglTexCoord3bOES;
#define glTexCoord3bOES glflglTexCoord3bOES
extern PFNGLTEXCOORDPOINTERPROC glflglTexCoordPointer;
#define glTexCoordPointer glflglTexCoordPointer
extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glflglProgramUniformMatrix3x2fv;
#define glProgramUniformMatrix3x2fv glflglProgramUniformMatrix3x2fv
extern PFNGLUNIFORM2FVARBPROC glflglUniform2fvARB;
#define glUniform2fvARB glflglUniform2fvARB
extern PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC glflglProgramLocalParameterI4uivNV;
#define glProgramLocalParameterI4uivNV glflglProgramLocalParameterI4uivNV
extern PFNGLFLUSHVERTEXARRAYRANGENVPROC glflglFlushVertexArrayRangeNV;
#define glFlushVertexArrayRangeNV glflglFlushVertexArrayRangeNV
extern PFNGLSECONDARYCOLOR3SVEXTPROC glflglSecondaryColor3svEXT;
#define glSecondaryColor3svEXT glflglSecondaryColor3svEXT
extern PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC glflglMultiDrawElementsIndirectEXT;
#define glMultiDrawElementsIndirectEXT glflglMultiDrawElementsIndirectEXT
extern PFNGLGETQUERYINDEXEDIVPROC glflglGetQueryIndexediv;
#define glGetQueryIndexediv glflglGetQueryIndexediv
extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glflglFramebufferTexture3DEXT;
#define glFramebufferTexture3DEXT glflglFramebufferTexture3DEXT
extern PFNGLOBJECTLABELPROC glflglObjectLabel;
#define glObjectLabel glflglObjectLabel
extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glflglDeleteTransformFeedbacksNV;
#define glDeleteTransformFeedbacksNV glflglDeleteTransformFeedbacksNV
extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glflglGetCompressedTextureImageEXT;
#define glGetCompressedTextureImageEXT glflglGetCompressedTextureImageEXT
extern PFNGLINDEXMATERIALEXTPROC glflglIndexMaterialEXT;
#define glIndexMaterialEXT glflglIndexMaterialEXT
extern PFNGLVERTEXATTRIBLPOINTEREXTPROC glflglVertexAttribLPointerEXT;
#define glVertexAttribLPointerEXT glflglVertexAttribLPointerEXT
extern PFNGLFOGCOORDDEXTPROC glflglFogCoorddEXT;
#define glFogCoorddEXT glflglFogCoorddEXT
extern PFNGLTEXCOORD2HVNVPROC glflglTexCoord2hvNV;
#define glTexCoord2hvNV glflglTexCoord2hvNV
extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glflglFramebufferTexture2DEXT;
#define glFramebufferTexture2DEXT glflglFramebufferTexture2DEXT
extern PFNGLTEXENVIVPROC glflglTexEnviv;
#define glTexEnviv glflglTexEnviv
extern PFNGLENDTRANSFORMFEEDBACKNVPROC glflglEndTransformFeedbackNV;
#define glEndTransformFeedbackNV glflglEndTransformFeedbackNV
extern PFNGLGLOBALALPHAFACTORUISUNPROC glflglGlobalAlphaFactoruiSUN;
#define glGlobalAlphaFactoruiSUN glflglGlobalAlphaFactoruiSUN
extern PFNGLSELECTBUFFERPROC glflglSelectBuffer;
#define glSelectBuffer glflglSelectBuffer
extern PFNGLDELETESYNCAPPLEPROC glflglDeleteSyncAPPLE;
#define glDeleteSyncAPPLE glflglDeleteSyncAPPLE
extern PFNGLFLUSHRASTERSGIXPROC glflglFlushRasterSGIX;
#define glFlushRasterSGIX glflglFlushRasterSGIX
extern PFNGLBLENDFUNCPROC glflglBlendFunc;
#define glBlendFunc glflglBlendFunc
extern PFNGLCREATEPROGRAMPROC glflglCreateProgram;
#define glCreateProgram glflglCreateProgram
extern PFNGLGETOBJECTLABELKHRPROC glflglGetObjectLabelKHR;
#define glGetObjectLabelKHR glflglGetObjectLabelKHR
extern PFNGLCOVERAGEMASKNVPROC glflglCoverageMaskNV;
#define glCoverageMaskNV glflglCoverageMaskNV
extern PFNGLDEBUGMESSAGECONTROLKHRPROC glflglDebugMessageControlKHR;
#define glDebugMessageControlKHR glflglDebugMessageControlKHR
extern PFNGLPRIMITIVERESTARTINDEXPROC glflglPrimitiveRestartIndex;
#define glPrimitiveRestartIndex glflglPrimitiveRestartIndex
extern PFNGLNORMALSTREAM3FATIPROC glflglNormalStream3fATI;
#define glNormalStream3fATI glflglNormalStream3fATI
extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glflglProgramUniformMatrix2fv;
#define glProgramUniformMatrix2fv glflglProgramUniformMatrix2fv
extern PFNGLGETTEXPARAMETERIUIVOESPROC glflglGetTexParameterIuivOES;
#define glGetTexParameterIuivOES glflglGetTexParameterIuivOES
extern PFNGLVERTEXATTRIBS1HVNVPROC glflglVertexAttribs1hvNV;
#define glVertexAttribs1hvNV glflglVertexAttribs1hvNV
extern PFNGLWINDOWPOS4SVMESAPROC glflglWindowPos4svMESA;
#define glWindowPos4svMESA glflglWindowPos4svMESA
extern PFNGLDELETEFRAGMENTSHADERATIPROC glflglDeleteFragmentShaderATI;
#define glDeleteFragmentShaderATI glflglDeleteFragmentShaderATI
extern PFNGLBINDIMAGETEXTURESPROC glflglBindImageTextures;
#define glBindImageTextures glflglBindImageTextures
extern PFNGLMAP2XOESPROC glflglMap2xOES;
#define glMap2xOES glflglMap2xOES
extern PFNGLENDPROC glflglEnd;
#define glEnd glflglEnd
extern PFNGLSAMPLERPARAMETERIVPROC glflglSamplerParameteriv;
#define glSamplerParameteriv glflglSamplerParameteriv
extern PFNGLUNIFORM1I64NVPROC glflglUniform1i64NV;
#define glUniform1i64NV glflglUniform1i64NV
extern PFNGLPATHSTRINGNVPROC glflglPathStringNV;
#define glPathStringNV glflglPathStringNV
extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glflglGetNamedFramebufferParameterivEXT;
#define glGetNamedFramebufferParameterivEXT glflglGetNamedFramebufferParameterivEXT
extern PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC glflglGetProgramNamedParameterdvNV;
#define glGetProgramNamedParameterdvNV glflglGetProgramNamedParameterdvNV
extern PFNGLPATHDASHARRAYNVPROC glflglPathDashArrayNV;
#define glPathDashArrayNV glflglPathDashArrayNV
extern PFNGLUNIFORM3UIVPROC glflglUniform3uiv;
#define glUniform3uiv glflglUniform3uiv
extern PFNGLMULTTRANSPOSEMATRIXFPROC glflglMultTransposeMatrixf;
#define glMultTransposeMatrixf glflglMultTransposeMatrixf
extern PFNGLMULTTRANSPOSEMATRIXDPROC glflglMultTransposeMatrixd;
#define glMultTransposeMatrixd glflglMultTransposeMatrixd
extern PFNGLCLEARCOLORPROC glflglClearColor;
#define glClearColor glflglClearColor
extern PFNGLGETIMAGEHANDLEARBPROC glflglGetImageHandleARB;
#define glGetImageHandleARB glflglGetImageHandleARB
extern PFNGLTANGENT3DEXTPROC glflglTangent3dEXT;
#define glTangent3dEXT glflglTangent3dEXT
extern PFNGLGETQUERYOBJECTIVARBPROC glflglGetQueryObjectivARB;
#define glGetQueryObjectivARB glflglGetQueryObjectivARB
extern PFNGLGETLOCALCONSTANTFLOATVEXTPROC glflglGetLocalConstantFloatvEXT;
#define glGetLocalConstantFloatvEXT glflglGetLocalConstantFloatvEXT
extern PFNGLPUSHCLIENTATTRIBPROC glflglPushClientAttrib;
#define glPushClientAttrib glflglPushClientAttrib
extern PFNGLUSESHADERPROGRAMEXTPROC glflglUseShaderProgramEXT;
#define glUseShaderProgramEXT glflglUseShaderProgramEXT
extern PFNGLBINDRENDERBUFFEREXTPROC glflglBindRenderbufferEXT;
#define glBindRenderbufferEXT glflglBindRenderbufferEXT
extern PFNGLGETNUNIFORMIVPROC glflglGetnUniformiv;
#define glGetnUniformiv glflglGetnUniformiv
extern PFNGLCLEARDEPTHFOESPROC glflglClearDepthfOES;
#define glClearDepthfOES glflglClearDepthfOES
extern PFNGLUNIFORM3UIPROC glflglUniform3ui;
#define glUniform3ui glflglUniform3ui
extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glflglGetNamedProgramLocalParameterdvEXT;
#define glGetNamedProgramLocalParameterdvEXT glflglGetNamedProgramLocalParameterdvEXT
extern PFNGLSECONDARYCOLOR3USPROC glflglSecondaryColor3us;
#define glSecondaryColor3us glflglSecondaryColor3us
extern PFNGLVERTEXATTRIBI4UIVPROC glflglVertexAttribI4uiv;
#define glVertexAttribI4uiv glflglVertexAttribI4uiv
extern PFNGLVERTEXATTRIB4BVPROC glflglVertexAttrib4bv;
#define glVertexAttrib4bv glflglVertexAttrib4bv
extern PFNGLGETPROGRAMRESOURCEINDEXPROC glflglGetProgramResourceIndex;
#define glGetProgramResourceIndex glflglGetProgramResourceIndex
extern PFNGLSECONDARYCOLOR3UBPROC glflglSecondaryColor3ub;
#define glSecondaryColor3ub glflglSecondaryColor3ub
extern PFNGLCONVOLUTIONFILTER2DEXTPROC glflglConvolutionFilter2DEXT;
#define glConvolutionFilter2DEXT glflglConvolutionFilter2DEXT
extern PFNGLGETVARIANTARRAYOBJECTIVATIPROC glflglGetVariantArrayObjectivATI;
#define glGetVariantArrayObjectivATI glflglGetVariantArrayObjectivATI
extern PFNGLSECONDARYCOLOR3UIPROC glflglSecondaryColor3ui;
#define glSecondaryColor3ui glflglSecondaryColor3ui
extern PFNGLVERTEXATTRIB1DARBPROC glflglVertexAttrib1dARB;
#define glVertexAttrib1dARB glflglVertexAttrib1dARB
extern PFNGLGETNAMEDBUFFERPOINTERVPROC glflglGetNamedBufferPointerv;
#define glGetNamedBufferPointerv glflglGetNamedBufferPointerv
extern PFNGLLOCKARRAYSEXTPROC glflglLockArraysEXT;
#define glLockArraysEXT glflglLockArraysEXT
extern PFNGLVERTEXATTRIBPOINTERNVPROC glflglVertexAttribPointerNV;
#define glVertexAttribPointerNV glflglVertexAttribPointerNV
extern PFNGLBINDBUFFERBASEEXTPROC glflglBindBufferBaseEXT;
#define glBindBufferBaseEXT glflglBindBufferBaseEXT
extern PFNGLPROGRAMUNIFORM1FEXTPROC glflglProgramUniform1fEXT;
#define glProgramUniform1fEXT glflglProgramUniform1fEXT
extern PFNGLFRAGMENTMATERIALISGIXPROC glflglFragmentMaterialiSGIX;
#define glFragmentMaterialiSGIX glflglFragmentMaterialiSGIX
extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glflglGetQueryBufferObjectui64v;
#define glGetQueryBufferObjectui64v glflglGetQueryBufferObjectui64v
extern PFNGLSETMULTISAMPLEFVAMDPROC glflglSetMultisamplefvAMD;
#define glSetMultisamplefvAMD glflglSetMultisamplefvAMD
extern PFNGLPATHCOLORGENNVPROC glflglPathColorGenNV;
#define glPathColorGenNV glflglPathColorGenNV
extern PFNGLUNIFORM1IVARBPROC glflglUniform1ivARB;
#define glUniform1ivARB glflglUniform1ivARB
extern PFNGLUNIFORMMATRIX2X3FVPROC glflglUniformMatrix2x3fv;
#define glUniformMatrix2x3fv glflglUniformMatrix2x3fv
extern PFNGLGENTRANSFORMFEEDBACKSPROC glflglGenTransformFeedbacks;
#define glGenTransformFeedbacks glflglGenTransformFeedbacks
extern PFNGLGETVERTEXATTRIBIUIVPROC glflglGetVertexAttribIuiv;
#define glGetVertexAttribIuiv glflglGetVertexAttribIuiv
extern PFNGLPIXELTRANSFORMPARAMETERFEXTPROC glflglPixelTransformParameterfEXT;
#define glPixelTransformParameterfEXT glflglPixelTransformParameterfEXT
extern PFNGLGETTEXPARAMETERIUIVEXTPROC glflglGetTexParameterIuivEXT;
#define glGetTexParameterIuivEXT glflglGetTexParameterIuivEXT
extern PFNGLGETOBJECTPARAMETERIVARBPROC glflglGetObjectParameterivARB;
#define glGetObjectParameterivARB glflglGetObjectParameterivARB
extern PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC glflglVertexArraySecondaryColorOffsetEXT;
#define glVertexArraySecondaryColorOffsetEXT glflglVertexArraySecondaryColorOffsetEXT
extern PFNGLWINDOWPOS2FARBPROC glflglWindowPos2fARB;
#define glWindowPos2fARB glflglWindowPos2fARB
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glflglCompressedTexSubImage2D;
#define glCompressedTexSubImage2D glflglCompressedTexSubImage2D
extern PFNGLDISCARDFRAMEBUFFEREXTPROC glflglDiscardFramebufferEXT;
#define glDiscardFramebufferEXT glflglDiscardFramebufferEXT
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC glflglCompressedTexSubImage3DARB;
#define glCompressedTexSubImage3DARB glflglCompressedTexSubImage3DARB
extern PFNGLPROGRAMBINARYPROC glflglProgramBinary;
#define glProgramBinary glflglProgramBinary
extern PFNGLPRESENTFRAMEKEYEDNVPROC glflglPresentFrameKeyedNV;
#define glPresentFrameKeyedNV glflglPresentFrameKeyedNV
extern PFNGLVERTEXATTRIBI4BVPROC glflglVertexAttribI4bv;
#define glVertexAttribI4bv glflglVertexAttribI4bv
extern PFNGLGETTEXPARAMETERFVPROC glflglGetTexParameterfv;
#define glGetTexParameterfv glflglGetTexParameterfv
extern PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glflglTransformFeedbackStreamAttribsNV;
#define glTransformFeedbackStreamAttribsNV glflglTransformFeedbackStreamAttribsNV
extern PFNGLSECONDARYCOLOR3USEXTPROC glflglSecondaryColor3usEXT;
#define glSecondaryColor3usEXT glflglSecondaryColor3usEXT
extern PFNGLCOPYBUFFERSUBDATANVPROC glflglCopyBufferSubDataNV;
#define glCopyBufferSubDataNV glflglCopyBufferSubDataNV
extern PFNGLPOINTSIZEPOINTEROESPROC glflglPointSizePointerOES;
#define glPointSizePointerOES glflglPointSizePointerOES
extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glflglProgramEnvParameter4fvARB;
#define glProgramEnvParameter4fvARB glflglProgramEnvParameter4fvARB
extern PFNGLGETOBJECTPTRLABELKHRPROC glflglGetObjectPtrLabelKHR;
#define glGetObjectPtrLabelKHR glflglGetObjectPtrLabelKHR
extern PFNGLMULTITEXCOORD4SARBPROC glflglMultiTexCoord4sARB;
#define glMultiTexCoord4sARB glflglMultiTexCoord4sARB
extern PFNGLPATCHPARAMETERIEXTPROC glflglPatchParameteriEXT;
#define glPatchParameteriEXT glflglPatchParameteriEXT
extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glflglGetVertexArrayIndexed64iv;
#define glGetVertexArrayIndexed64iv glflglGetVertexArrayIndexed64iv
extern PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC glflglMatrixMultTranspose3x3fNV;
#define glMatrixMultTranspose3x3fNV glflglMatrixMultTranspose3x3fNV
extern PFNGLTEXPARAMETERIIVPROC glflglTexParameterIiv;
#define glTexParameterIiv glflglTexParameterIiv
extern PFNGLBLENDFUNCSEPARATEOESPROC glflglBlendFuncSeparateOES;
#define glBlendFuncSeparateOES glflglBlendFuncSeparateOES
extern PFNGLVERTEXARRAYATTRIBFORMATPROC glflglVertexArrayAttribFormat;
#define glVertexArrayAttribFormat glflglVertexArrayAttribFormat
extern PFNGLENDTRANSFORMFEEDBACKPROC glflglEndTransformFeedback;
#define glEndTransformFeedback glflglEndTransformFeedback
extern PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC glflglDrawCommandsStatesAddressNV;
#define glDrawCommandsStatesAddressNV glflglDrawCommandsStatesAddressNV
extern PFNGLUNIFORM4UI64NVPROC glflglUniform4ui64NV;
#define glUniform4ui64NV glflglUniform4ui64NV
extern PFNGLVERTEXATTRIB4USVPROC glflglVertexAttrib4usv;
#define glVertexAttrib4usv glflglVertexAttrib4usv
extern PFNGLTEXIMAGE2DMULTISAMPLEPROC glflglTexImage2DMultisample;
#define glTexImage2DMultisample glflglTexImage2DMultisample
extern PFNGLBINDTEXTUREEXTPROC glflglBindTextureEXT;
#define glBindTextureEXT glflglBindTextureEXT
extern PFNGLVERTEXATTRIBI1IVPROC glflglVertexAttribI1iv;
#define glVertexAttribI1iv glflglVertexAttribI1iv
extern PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC glflglGetFinalCombinerInputParameterfvNV;
#define glGetFinalCombinerInputParameterfvNV glflglGetFinalCombinerInputParameterfvNV
extern PFNGLMULTITEXCOORD3BVOESPROC glflglMultiTexCoord3bvOES;
#define glMultiTexCoord3bvOES glflglMultiTexCoord3bvOES
extern PFNGLVERTEXATTRIBDIVISORPROC glflglVertexAttribDivisor;
#define glVertexAttribDivisor glflglVertexAttribDivisor
extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glflglGetCompressedTextureImage;
#define glGetCompressedTextureImage glflglGetCompressedTextureImage
extern PFNGLBINDTEXGENPARAMETEREXTPROC glflglBindTexGenParameterEXT;
#define glBindTexGenParameterEXT glflglBindTexGenParameterEXT
extern PFNGLNORMALSTREAM3BATIPROC glflglNormalStream3bATI;
#define glNormalStream3bATI glflglNormalStream3bATI
extern PFNGLVERTEXATTRIBS1SVNVPROC glflglVertexAttribs1svNV;
#define glVertexAttribs1svNV glflglVertexAttribs1svNV
extern PFNGLTEXTUREIMAGE2DEXTPROC glflglTextureImage2DEXT;
#define glTextureImage2DEXT glflglTextureImage2DEXT
extern PFNGLTEXTURESTORAGE3DPROC glflglTextureStorage3D;
#define glTextureStorage3D glflglTextureStorage3D
extern PFNGLSECONDARYCOLOR3FVEXTPROC glflglSecondaryColor3fvEXT;
#define glSecondaryColor3fvEXT glflglSecondaryColor3fvEXT
extern PFNGLUNIFORMMATRIX4X2FVPROC glflglUniformMatrix4x2fv;
#define glUniformMatrix4x2fv glflglUniformMatrix4x2fv
extern PFNGLSTARTINSTRUMENTSSGIXPROC glflglStartInstrumentsSGIX;
#define glStartInstrumentsSGIX glflglStartInstrumentsSGIX
extern PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC glflglProgramNamedParameter4fvNV;
#define glProgramNamedParameter4fvNV glflglProgramNamedParameter4fvNV
extern PFNGLENDVIDEOCAPTURENVPROC glflglEndVideoCaptureNV;
#define glEndVideoCaptureNV glflglEndVideoCaptureNV
extern PFNGLGENLISTSPROC glflglGenLists;
#define glGenLists glflglGenLists
extern PFNGLUNIFORM1FARBPROC glflglUniform1fARB;
#define glUniform1fARB glflglUniform1fARB
extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glflglNamedFramebufferTexture1DEXT;
#define glNamedFramebufferTexture1DEXT glflglNamedFramebufferTexture1DEXT
extern PFNGLMAPBUFFERRANGEPROC glflglMapBufferRange;
#define glMapBufferRange glflglMapBufferRange
extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glflglMultiDrawElementsIndirectCountARB;
#define glMultiDrawElementsIndirectCountARB glflglMultiDrawElementsIndirectCountARB
extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glflglProgramUniformMatrix4x2fv;
#define glProgramUniformMatrix4x2fv glflglProgramUniformMatrix4x2fv
extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glflglGetTextureParameterIivEXT;
#define glGetTextureParameterIivEXT glflglGetTextureParameterIivEXT
extern PFNGLMULTITEXCOORD3HNVPROC glflglMultiTexCoord3hNV;
#define glMultiTexCoord3hNV glflglMultiTexCoord3hNV
extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glflglNamedProgramLocalParametersI4uivEXT;
#define glNamedProgramLocalParametersI4uivEXT glflglNamedProgramLocalParametersI4uivEXT
extern PFNGLENDLISTPROC glflglEndList;
#define glEndList glflglEndList
extern PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glflglTexCoord2fColor4fNormal3fVertex3fSUN;
#define glTexCoord2fColor4fNormal3fVertex3fSUN glflglTexCoord2fColor4fNormal3fVertex3fSUN
extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glflglGenTransformFeedbacksNV;
#define glGenTransformFeedbacksNV glflglGenTransformFeedbacksNV
extern PFNGLVERTEXATTRIBI2IVPROC glflglVertexAttribI2iv;
#define glVertexAttribI2iv glflglVertexAttribI2iv
extern PFNGLCOPYMULTITEXIMAGE2DEXTPROC glflglCopyMultiTexImage2DEXT;
#define glCopyMultiTexImage2DEXT glflglCopyMultiTexImage2DEXT
extern PFNGLVERTEXATTRIB4UBNVPROC glflglVertexAttrib4ubNV;
#define glVertexAttrib4ubNV glflglVertexAttrib4ubNV
extern PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC glflglTexImage3DMultisampleCoverageNV;
#define glTexImage3DMultisampleCoverageNV glflglTexImage3DMultisampleCoverageNV
extern PFNGLGETSHADERPRECISIONFORMATPROC glflglGetShaderPrecisionFormat;
#define glGetShaderPrecisionFormat glflglGetShaderPrecisionFormat
extern PFNGLTEXSUBIMAGE4DSGISPROC glflglTexSubImage4DSGIS;
#define glTexSubImage4DSGIS glflglTexSubImage4DSGIS
extern PFNGLRASTERSAMPLESEXTPROC glflglRasterSamplesEXT;
#define glRasterSamplesEXT glflglRasterSamplesEXT
extern PFNGLTEXTUREVIEWPROC glflglTextureView;
#define glTextureView glflglTextureView
extern PFNGLEVALMAPSNVPROC glflglEvalMapsNV;
#define glEvalMapsNV glflglEvalMapsNV
extern PFNGLGETFRAGDATALOCATIONEXTPROC glflglGetFragDataLocationEXT;
#define glGetFragDataLocationEXT glflglGetFragDataLocationEXT
extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glflglGetCompressedMultiTexImageEXT;
#define glGetCompressedMultiTexImageEXT glflglGetCompressedMultiTexImageEXT
extern PFNGLINDEXMASKPROC glflglIndexMask;
#define glIndexMask glflglIndexMask
extern PFNGLDRAWBUFFERSARBPROC glflglDrawBuffersARB;
#define glDrawBuffersARB glflglDrawBuffersARB
extern PFNGLSHADERSOURCEPROC glflglShaderSource;
#define glShaderSource glflglShaderSource
extern PFNGLGETNSEPARABLEFILTERPROC glflglGetnSeparableFilter;
#define glGetnSeparableFilter glflglGetnSeparableFilter
extern PFNGLDELETERENDERBUFFERSPROC glflglDeleteRenderbuffers;
#define glDeleteRenderbuffers glflglDeleteRenderbuffers
extern PFNGLDISABLEINVPROC glflglDisableiNV;
#define glDisableiNV glflglDisableiNV
extern PFNGLTEXCOORDP2UIVPROC glflglTexCoordP2uiv;
#define glTexCoordP2uiv glflglTexCoordP2uiv
extern PFNGLREADBUFFERNVPROC glflglReadBufferNV;
#define glReadBufferNV glflglReadBufferNV
extern PFNGLUNIFORM2FPROC glflglUniform2f;
#define glUniform2f glflglUniform2f
extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glflglGetNamedBufferParameteri64v;
#define glGetNamedBufferParameteri64v glflglGetNamedBufferParameteri64v
extern PFNGLCOMMANDLISTSEGMENTSNVPROC glflglCommandListSegmentsNV;
#define glCommandListSegmentsNV glflglCommandListSegmentsNV
extern PFNGLTEXTUREPARAMETERIIVEXTPROC glflglTextureParameterIivEXT;
#define glTextureParameterIivEXT glflglTextureParameterIivEXT
extern PFNGLUNIFORM2DPROC glflglUniform2d;
#define glUniform2d glflglUniform2d
extern PFNGLVERTEX4DPROC glflglVertex4d;
#define glVertex4d glflglVertex4d
extern PFNGLNEWOBJECTBUFFERATIPROC glflglNewObjectBufferATI;
#define glNewObjectBufferATI glflglNewObjectBufferATI
extern PFNGLBUFFERDATAPROC glflglBufferData;
#define glBufferData glflglBufferData
extern PFNGLTEXTUREIMAGE1DEXTPROC glflglTextureImage1DEXT;
#define glTextureImage1DEXT glflglTextureImage1DEXT
extern PFNGLGETTEXPARAMETERIIVPROC glflglGetTexParameterIiv;
#define glGetTexParameterIiv glflglGetTexParameterIiv
extern PFNGLCOPYTEXSUBIMAGE1DEXTPROC glflglCopyTexSubImage1DEXT;
#define glCopyTexSubImage1DEXT glflglCopyTexSubImage1DEXT
extern PFNGLVERTEX4FPROC glflglVertex4f;
#define glVertex4f glflglVertex4f
extern PFNGLUNIFORMMATRIX3FVARBPROC glflglUniformMatrix3fvARB;
#define glUniformMatrix3fvARB glflglUniformMatrix3fvARB
extern PFNGLTEXCOORDP1UIPROC glflglTexCoordP1ui;
#define glTexCoordP1ui glflglTexCoordP1ui
extern PFNGLPOINTPARAMETERFVEXTPROC glflglPointParameterfvEXT;
#define glPointParameterfvEXT glflglPointParameterfvEXT
extern PFNGLUNIFORM4FARBPROC glflglUniform4fARB;
#define glUniform4fARB glflglUniform4fARB
extern PFNGLVERTEXATTRIBS3FVNVPROC glflglVertexAttribs3fvNV;
#define glVertexAttribs3fvNV glflglVertexAttribs3fvNV
extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glflglCopyTextureSubImage3D;
#define glCopyTextureSubImage3D glflglCopyTextureSubImage3D
extern PFNGLMULTITEXCOORD2FVPROC glflglMultiTexCoord2fv;
#define glMultiTexCoord2fv glflglMultiTexCoord2fv
extern PFNGLMULTITEXENVFVEXTPROC glflglMultiTexEnvfvEXT;
#define glMultiTexEnvfvEXT glflglMultiTexEnvfvEXT
extern PFNGLNORMALP3UIPROC glflglNormalP3ui;
#define glNormalP3ui glflglNormalP3ui
extern PFNGLDRAWRANGEELEMENTARRAYATIPROC glflglDrawRangeElementArrayATI;
#define glDrawRangeElementArrayATI glflglDrawRangeElementArrayATI
extern PFNGLVERTEXATTRIBI1IPROC glflglVertexAttribI1i;
#define glVertexAttribI1i glflglVertexAttribI1i
extern PFNGLDRAWARRAYSINSTANCEDARBPROC glflglDrawArraysInstancedARB;
#define glDrawArraysInstancedARB glflglDrawArraysInstancedARB
extern PFNGLCOLORPOINTERPROC glflglColorPointer;
#define glColorPointer glflglColorPointer
extern PFNGLGETDEBUGMESSAGELOGARBPROC glflglGetDebugMessageLogARB;
#define glGetDebugMessageLogARB glflglGetDebugMessageLogARB
extern PFNGLGETPATHTEXGENFVNVPROC glflglGetPathTexGenfvNV;
#define glGetPathTexGenfvNV glflglGetPathTexGenfvNV
extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glflglNamedProgramLocalParameters4fvEXT;
#define glNamedProgramLocalParameters4fvEXT glflglNamedProgramLocalParameters4fvEXT
extern PFNGLGETBUFFERPOINTERVPROC glflglGetBufferPointerv;
#define glGetBufferPointerv glflglGetBufferPointerv
extern PFNGLFRAMEBUFFERTEXTURE3DPROC glflglFramebufferTexture3D;
#define glFramebufferTexture3D glflglFramebufferTexture3D
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC glflglCompressedTextureSubImage2DEXT;
#define glCompressedTextureSubImage2DEXT glflglCompressedTextureSubImage2DEXT
extern PFNGLREPLACEMENTCODEUBSUNPROC glflglReplacementCodeubSUN;
#define glReplacementCodeubSUN glflglReplacementCodeubSUN
extern PFNGLWINDOWPOS3DVPROC glflglWindowPos3dv;
#define glWindowPos3dv glflglWindowPos3dv
extern PFNGLDRAWBUFFERSEXTPROC glflglDrawBuffersEXT;
#define glDrawBuffersEXT glflglDrawBuffersEXT
extern PFNGLCOPYCONVOLUTIONFILTER2DPROC glflglCopyConvolutionFilter2D;
#define glCopyConvolutionFilter2D glflglCopyConvolutionFilter2D
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC glflglDrawElementsInstancedBaseVertexBaseInstanceEXT;
#define glDrawElementsInstancedBaseVertexBaseInstanceEXT glflglDrawElementsInstancedBaseVertexBaseInstanceEXT
extern PFNGLSAMPLERPARAMETERFVPROC glflglSamplerParameterfv;
#define glSamplerParameterfv glflglSamplerParameterfv
extern PFNGLBINDBUFFERARBPROC glflglBindBufferARB;
#define glBindBufferARB glflglBindBufferARB
extern PFNGLDRAWBUFFERSATIPROC glflglDrawBuffersATI;
#define glDrawBuffersATI glflglDrawBuffersATI
extern PFNGLGETMATERIALIVPROC glflglGetMaterialiv;
#define glGetMaterialiv glflglGetMaterialiv
extern PFNGLUNIFORM1FVPROC glflglUniform1fv;
#define glUniform1fv glflglUniform1fv
extern PFNGLBEGINOCCLUSIONQUERYNVPROC glflglBeginOcclusionQueryNV;
#define glBeginOcclusionQueryNV glflglBeginOcclusionQueryNV
extern PFNGLGENFENCESAPPLEPROC glflglGenFencesAPPLE;
#define glGenFencesAPPLE glflglGenFencesAPPLE
extern PFNGLSCISSORINDEXEDVPROC glflglScissorIndexedv;
#define glScissorIndexedv glflglScissorIndexedv
extern PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC glflglDisableVariantClientStateEXT;
#define glDisableVariantClientStateEXT glflglDisableVariantClientStateEXT
extern PFNGLMINMAXEXTPROC glflglMinmaxEXT;
#define glMinmaxEXT glflglMinmaxEXT
extern PFNGLNORMAL3XPROC glflglNormal3x;
#define glNormal3x glflglNormal3x
extern PFNGLNORMALPOINTERVINTELPROC glflglNormalPointervINTEL;
#define glNormalPointervINTEL glflglNormalPointervINTEL
extern PFNGLNORMAL3SPROC glflglNormal3s;
#define glNormal3s glflglNormal3s
extern PFNGLGETNPIXELMAPUIVPROC glflglGetnPixelMapuiv;
#define glGetnPixelMapuiv glflglGetnPixelMapuiv
extern PFNGLEXTISPROGRAMBINARYQCOMPROC glflglExtIsProgramBinaryQCOM;
#define glExtIsProgramBinaryQCOM glflglExtIsProgramBinaryQCOM
extern PFNGLTEXGENFOESPROC glflglTexGenfOES;
#define glTexGenfOES glflglTexGenfOES
extern PFNGLGETOBJECTPARAMETERIVAPPLEPROC glflglGetObjectParameterivAPPLE;
#define glGetObjectParameterivAPPLE glflglGetObjectParameterivAPPLE
extern PFNGLNORMAL3IPROC glflglNormal3i;
#define glNormal3i glflglNormal3i
extern PFNGLNORMAL3FPROC glflglNormal3f;
#define glNormal3f glflglNormal3f
extern PFNGLNORMAL3DPROC glflglNormal3d;
#define glNormal3d glflglNormal3d
extern PFNGLUPDATEOBJECTBUFFERATIPROC glflglUpdateObjectBufferATI;
#define glUpdateObjectBufferATI glflglUpdateObjectBufferATI
extern PFNGLNORMAL3BPROC glflglNormal3b;
#define glNormal3b glflglNormal3b
extern PFNGLGETUNIFORMBUFFERSIZEEXTPROC glflglGetUniformBufferSizeEXT;
#define glGetUniformBufferSizeEXT glflglGetUniformBufferSizeEXT
extern PFNGLMULTITEXCOORD4DVPROC glflglMultiTexCoord4dv;
#define glMultiTexCoord4dv glflglMultiTexCoord4dv
extern PFNGLBINDPROGRAMPIPELINEEXTPROC glflglBindProgramPipelineEXT;
#define glBindProgramPipelineEXT glflglBindProgramPipelineEXT
extern PFNGLCLIPPLANEXPROC glflglClipPlanex;
#define glClipPlanex glflglClipPlanex
extern PFNGLVERTEXATTRIB2DPROC glflglVertexAttrib2d;
#define glVertexAttrib2d glflglVertexAttrib2d
extern PFNGLVERTEXATTRIB2FPROC glflglVertexAttrib2f;
#define glVertexAttrib2f glflglVertexAttrib2f
extern PFNGLMULTIDRAWELEMENTSEXTPROC glflglMultiDrawElementsEXT;
#define glMultiDrawElementsEXT glflglMultiDrawElementsEXT
extern PFNGLVERTEXATTRIB3DVPROC glflglVertexAttrib3dv;
#define glVertexAttrib3dv glflglVertexAttrib3dv
extern PFNGLPUSHDEBUGGROUPKHRPROC glflglPushDebugGroupKHR;
#define glPushDebugGroupKHR glflglPushDebugGroupKHR
extern PFNGLCLIPPLANEFPROC glflglClipPlanef;
#define glClipPlanef glflglClipPlanef
extern PFNGLMULTITEXCOORD2BOESPROC glflglMultiTexCoord2bOES;
#define glMultiTexCoord2bOES glflglMultiTexCoord2bOES
extern PFNGLVERTEXATTRIB2SPROC glflglVertexAttrib2s;
#define glVertexAttrib2s glflglVertexAttrib2s
extern PFNGLTEXIMAGE3DMULTISAMPLEPROC glflglTexImage3DMultisample;
#define glTexImage3DMultisample glflglTexImage3DMultisample
extern PFNGLGETUNIFORMBLOCKINDEXPROC glflglGetUniformBlockIndex;
#define glGetUniformBlockIndex glflglGetUniformBlockIndex
extern PFNGLFRONTFACEPROC glflglFrontFace;
#define glFrontFace glflglFrontFace
extern PFNGLEVALCOORD1XOESPROC glflglEvalCoord1xOES;
#define glEvalCoord1xOES glflglEvalCoord1xOES
extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glflglDrawArraysInstancedBaseInstance;
#define glDrawArraysInstancedBaseInstance glflglDrawArraysInstancedBaseInstance
extern PFNGLISPOINTINSTROKEPATHNVPROC glflglIsPointInStrokePathNV;
#define glIsPointInStrokePathNV glflglIsPointInStrokePathNV
extern PFNGLPROGRAMENVPARAMETERS4FVEXTPROC glflglProgramEnvParameters4fvEXT;
#define glProgramEnvParameters4fvEXT glflglProgramEnvParameters4fvEXT
bool glflIsExtensionSupported(const char *name);
int glflInit();
#endif